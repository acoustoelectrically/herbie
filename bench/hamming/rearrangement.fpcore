; -*- mode: scheme -*-

(FPCore (x)
 :name "2sqrt (example 3.1)"
 :pre (and (> x 1) (< x 1e+100))
 :herbie-target
 (/ 1 (+ (sqrt (+ x 1.0)) (sqrt x)))

 (- (sqrt (+ x 1)) (sqrt x)))

(FPCore (x)
 :name "2isqrt (example 3.6)"
 :pre (and (> x 1) (< x 1e+100))
 :herbie-target
 (/ 1 (+ (* (+ x 1) (sqrt x)) (* x (sqrt (+ x 1)))))

 (- (/ 1 (sqrt x)) (/ 1 (sqrt (+ x 1)))))

(FPCore (x)
 :name "2frac (problem 3.3.1)"

 (- (/ 1 (+ x 1)) (/ 1 x)))

(FPCore (x)
 :name "3frac (problem 3.3.3)"
 :herbie-target
 (/ 2 (* x (- (* x x) 1)))

 (+ (- (/ 1 (+ x 1)) (/ 2 x)) (/ 1 (- x 1))))

(FPCore (x)
 :name "2cbrt (problem 3.3.4)"
 :pre (and (<= -1e5 x) (<= x 1e5))
 :herbie-target
 (- (cbrt (+ x 1)) (cbrt x))

 (- (cbrt (+ x 1)) (cbrt x)))

(FPCore (N)
 :name "2log (problem 3.3.6)"
 :pre (and (> N 1) (< N 1e+40))
 :herbie-target
 (if (>= N 1e+3)
    (+ (/ 1 N) (/ -1 (* 2 (pow N 2))) (/ 1 (* 3 (pow N 3))) (/ -1 (* 4 (pow N 4))))
    (log (+ 1 (/ 1 N))))
 
 (- (log (+ N 1)) (log N)))

(FPCore (x)
 :name "exp2 (problem 3.3.7)"
 ;:herbie-expected 1.5 ; Fails in single-precision due to regimes threshold
 :pre (<= (fabs x) 710)
 ; Bounded x on the extremes  by +/- 710 to avoid sampling infinite outputs
 ; Target comes from Hamming's textbook, page 46
 :herbie-target
 (* 4 (pow (sinh (/ x 2)) 2))

 (+ (- (exp x) 2) (exp (- x))))
