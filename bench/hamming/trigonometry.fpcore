; -*- mode: scheme -*-

; All the below function are subsets of the rearrangement functions but as per its name, it specifically deals with
; trigonometric functions. It specifically deals with those functions that involve a subtraction of two functions
; that at a very large value cause cancellation and need to be rewritten to ensure floating point accuracy based on
; their nature of expression (more in specific detail below).

; Almost all expressions follow this precondition : -10000 <= x <= 10000 and 1e-16 * (abs x) < eps < (abs x)
; Our reasoning for this stems from Hamming's explanation that eps is small with respect to x, hence for 
; getting the highest accuracy we are bounding it's lowest value to be 1e-16 times (abs x). We don't
; query anything below because we don't want (x+eps) ~ x. And we also want relevant values of x that would be usable
; for most trigonometric queries


; 2sin involves the difference of two sine functions. According to the sum-to-product trigonometric identity,
; the target for this benchmark can apply the identity (- (sin x) (sin y)) = (* 2 (cos (/ (+ x y) 2)) (sin (/ (- x y) 2)))
(FPCore (x eps)
  :name "2sin (example 3.3)"
  :pre (and (<= -10000 x) (<= x 10000) (< (* 1e-16 (fabs x)) eps) (< eps (* (fabs x))))
  :herbie-target
  (* 2 (cos (+ x (/ eps 2))) (sin (/ eps 2)))
 
  (- (sin (+ x eps)) (sin x)))


(FPCore (x eps)
 :name "2cos (problem 3.3.5)"
 :pre (and (<= -10000 x) (<= x 10000) (< (* 1e-16 (fabs x)) eps) (< eps (* (fabs x))))
 :herbie-target
 (* -2 (sin (+ x (/ eps 2))) (sin (/ eps 2)))

 (- (cos (+ x eps)) (cos x)))


(FPCore (x eps)
 :name "2tan (problem 3.3.2)"
 :pre (and (<= -10000 x) (<= x 10000) (< (* 1e-16 (fabs x)) eps) (< eps (* (fabs x))))
 :herbie-target
 (/ (sin eps) (* (cos x) (cos (+ x eps))))

 (- (tan (+ x eps)) (tan x)))


(FPCore (x)
 :name "tanhf (example 3.4)"
 :pre (and (<= (- INFINITY) x) (<= x INFINITY))
 :herbie-target
 (tan (/ x 2))

 (/ (- 1 (cos x)) (sin x)))


(FPCore (N)
 :name "2atan (example 3.5)"
 :pre (and (> N 1) (< N 1e+100))
 :herbie-target
 (atan (/ 1 (+ 1 (* N (+ N 1)))))

 (- (atan (+ N 1)) (atan N)))


(FPCore (x)
 :name "sintan (problem 3.4.5)"
 :pre (and (<= -1e5 x) (<= x 1e5))
 :herbie-target
 (if (<= (fabs x) 1)
   (+ -0.5 (/ (* 9 (pow x 2)) 40) (/ (* -27 (pow x 4)) 2800) (/ (* 27 (pow x 6)) 112000))
   (/ (- x (sin x)) (- x (tan x))))
 
 (/ (- x (sin x)) (- x (tan x))))
