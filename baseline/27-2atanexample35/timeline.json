[{"memory":[[14864,14864]],"time":0.032958984375,"type":"start"},{"compiler":[[15,11]],"memory":[[554464,554464]],"method":["search"],"sampling":[[12,{"invalid":0.0,"precondition":0.9189104034689253,"unknown":3.959452955618883e-5,"valid":0.08105000200151859}],[11,{"invalid":0.0,"precondition":0.9189104034689253,"unknown":7.918905911237766e-5,"valid":0.08101040747196239}],[10,{"invalid":0.0,"precondition":0.9189104034689253,"unknown":0.00015837811822475538,"valid":0.08093121841285002}],[9,{"invalid":0.0,"precondition":0.9189104034689253,"unknown":0.0003167562364495108,"valid":0.08077284029462527}],[8,{"invalid":0.0,"precondition":0.9189104034689253,"unknown":0.0006335124728990216,"valid":0.08045608405817575}],[7,{"invalid":0.0,"precondition":0.9189104034689253,"unknown":0.0012670249457980432,"valid":0.07982257158527672}],[6,{"invalid":0.0,"precondition":0.9189104034689253,"unknown":0.0025340498915960865,"valid":0.07855554663947868}],[5,{"invalid":0.0,"precondition":0.9189104034689253,"unknown":0.005068099783192173,"valid":0.0760214967478826}],[4,{"invalid":0.0,"precondition":0.9189104034689253,"unknown":0.010136199566384346,"valid":0.07095339696469043}],[3,{"invalid":0.0,"precondition":0.9189104034689253,"unknown":0.020272399132768692,"valid":0.06081719739830608}],[2,{"invalid":0.0,"precondition":0.9189104034689253,"unknown":0.040544798265537384,"valid":0.040544798265537384}],[1,{"invalid":0.0,"precondition":0.9189104034689253,"unknown":0.08108959653107477,"valid":0.0}],[0,{"invalid":0.0,"precondition":0.9189104034689253,"unknown":0.08108959653107477,"valid":0.0}]],"time":1.8740234375,"type":"analyze"},{"bogosity":[{"invalid":0.0,"precondition":0.9189104034689253,"valid":0.08108959653107478}],"memory":[[19457808,362841520]],"mixsample":[[1.1767578125,"ival-atan",1600],[249.519287109375,"adjust",800],[63.560302734375,"ival-add",0],[0.10205078125,"ival-sub",800],[166.8662109375,"ival-atan",0],[4.3330078125,"ival-assert",0],[41.345947265625,"ival-add",400],[96.19873046875,"ival-sub",0],[15.01220703125,"ival-and",0],[0.098388671875,"ival-sub",400],[123.091796875,"const",0],[27.56689453125,"ival->",0],[343.12255859375,"ival-atan",400],[9.11181640625,"exact",0],[10.79443359375,"adjust",2000],[22.8515625,"ival-<",0]],"outcomes":[[1317.765625,1,"valid",7490],[85.232421875,2,"valid",364],[44.19775390625,0,"valid",402]],"time":1831.64306640625,"type":"sample"},{"compiler":[[7,6],[20,8],[20,8]],"confusion":[[254,0,0,2]],"explanations":[["-.f64","(-.f64 (atan.f64 (+.f64 N #s(literal 1 binary64))) (atan.f64 N))","cancellation",254,0,[],[[]]]],"fperrors":[["(-.f64 (atan.f64 (+.f64 N #s(literal 1 binary64))) (atan.f64 N))",254,0,false,0,false],["N",0,0,false,0,false],["(+.f64 N #s(literal 1 binary64))",0,0,false,0,false],["#s(literal 1 binary64)",0,0,false,0,false],["(atan.f64 N)",0,0,false,0,false],["(atan.f64 (+.f64 N #s(literal 1 binary64)))",0,0,false,0,false]],"freqs":[[1,254],[0,2]],"maybe-confusion":[[254,0,0,0,0,2]],"memory":[[-5313248,44532064]],"mixsample":[[0.154052734375,"ival-atan",1600],[15.370361328125,"adjust",800],[3.962646484375,"ival-add",0],[0.01611328125,"ival-sub",800],[11.333984375,"ival-atan",0],[0.27392578125,"ival-assert",0],[5.625732421875,"ival-sub",0],[1.949951171875,"ival-add",400],[0.526611328125,"ival-true",0],[0.010009765625,"ival-sub",400],[21.988037109375,"ival-atan",400],[0.35888671875,"exact",0],[0.81884765625,"adjust",2000]],"outcomes":[[76.626708984375,1,"valid",460],[6.63916015625,2,"valid",26],[2.4296875,0,"valid",26]],"time":140.590087890625,"total-confusion":[[1,0,0,0,0,0]],"type":"explain"},{"compiler":[[7,6]],"egraph":[[0,182,7,0.000973945],[10,182,7,0.001433198],[9,174,7,0.001511997],[8,158,7,0.001028224],[7,109,7,0.000755667],[6,80,7,0.000730167],[5,48,7,0.000421113],[4,33,7,0.000227713],[3,25,7,0.000184495],[2,19,7,0.000133872],[1,15,7,0.000120496],[0,10,7,0.00015109],[0,6,7,0.000103685],[7,215,16,0.000957615],[6,204,16,0.001232948],[5,180,16,0.001053014],[4,122,16,0.00095287],[3,74,16,0.000688567],[2,41,16,0.000468291],[1,18,17,0.000189492],[0,8,19,0.000173494]],"inputs":[["(-.f64 (atan.f64 (+.f64 N #s(literal 1 binary64))) (atan.f64 N))"]],"memory":[[-3012496,5604976]],"method":["egg-herbie"],"outputs":[["(-.f64 (atan.f64 (+.f64 N #s(literal 1 binary64))) (atan.f64 N))","(-.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) (atan.f64 N))"]],"stop":[["iter limit",1],["saturated",1],["iter limit",1],["saturated",1]],"symmetry":[[]],"time":36.348876953125,"type":"preprocess"},{"compiler":[[0,1]],"memory":[[40816,40816]],"time":0.1201171875,"type":"eval"},{"alts":[["(-.f64 (atan.f64 (+.f64 N #s(literal 1 binary64))) (atan.f64 N))","next",58.43772680490561,"binary64"]],"compiler":[[7,6]],"memory":[[314448,314448]],"time":0.935791015625,"type":"prune"},{"egraph":[[0,182,18,0.000684053],[10,182,18,0.00083641],[9,174,18,0.001020167],[8,158,18,0.001020203],[7,109,18,0.000788082],[6,80,18,0.00080672],[5,48,18,0.000413161],[4,33,18,0.000222988],[3,25,18,0.00017626],[2,19,18,0.000131023],[1,15,18,0.000119765],[0,10,18,0.000145782],[0,6,18,0.000135127]],"inputs":[["(-.f64 (atan.f64 (+.f64 N #s(literal 1 binary64))) (atan.f64 N))","(atan.f64 (+.f64 N #s(literal 1 binary64)))","(+.f64 N #s(literal 1 binary64))","N","#s(literal 1 binary64)","(atan.f64 N)"]],"locations":[["(atan.f64 N)","cost-diff",0],["(+.f64 N #s(literal 1 binary64))","cost-diff",0],["(atan.f64 (+.f64 N #s(literal 1 binary64)))","cost-diff",0],["(-.f64 (atan.f64 (+.f64 N #s(literal 1 binary64))) (atan.f64 N))","cost-diff",0]],"memory":[[828016,828016]],"method":["egg-herbie"],"outputs":[["(-.f64 (atan.f64 (+.f64 N #s(literal 1 binary64))) (atan.f64 N))","(-.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) (atan.f64 N))","(atan.f64 (+.f64 N #s(literal 1 binary64)))","(atan.f64 (+.f64 #s(literal 1 binary64) N))","(+.f64 N #s(literal 1 binary64))","(+.f64 #s(literal 1 binary64) N)","N","#s(literal 1 binary64)","(atan.f64 N)"]],"stop":[["iter limit",1],["saturated",1],["iter limit",1]],"time":13.18701171875,"type":"simplify"},{"compiler":[[20,8]],"locations":[["(+.f64 N #s(literal 1 binary64))","accuracy",0.0],["(atan.f64 (+.f64 N #s(literal 1 binary64)))","accuracy",0.0],["(atan.f64 N)","accuracy",0.0],["(-.f64 (atan.f64 (+.f64 N #s(literal 1 binary64))) (atan.f64 N))","accuracy",58.43772680490561]],"memory":[[3053808,11076016]],"mixsample":[[0.054931640625,"ival-atan",1600],[8.815673828125,"adjust",800],[2.32177734375,"ival-add",0],[0.005126953125,"ival-sub",800],[6.103759765625,"ival-atan",0],[0.138916015625,"ival-assert",0],[3.3310546875,"ival-sub",0],[1.191650390625,"ival-add",400],[0.2626953125,"ival-true",0],[0.006103515625,"ival-sub",400],[12.01416015625,"ival-atan",400],[0.201416015625,"exact",0],[0.37109375,"adjust",2000]],"outcomes":[[47.172119140625,1,"valid",230],[3.093994140625,2,"valid",13],[1.336181640625,0,"valid",13]],"time":61.31298828125,"type":"localize"},{"count":[[4,9]],"inputs":[["(-.f64 (atan.f64 (+.f64 N #s(literal 1 binary64))) (atan.f64 N))","(atan.f64 (+.f64 N #s(literal 1 binary64)))","(+.f64 N #s(literal 1 binary64))","(atan.f64 N)"]],"memory":[[524256,524256]],"outputs":[["(- (atan (+ 1 N)) (atan N))","(atan (+ 1 N))","1","(+ 1 N)","(atan N)","N","(* N (+ 1 (/ 1 N)))","(- (atan (- 1 (* -1 N))) (atan N))","(atan (- 1 (* -1 N)))"]],"series":[[0.356201171875,"((- (atan (+ N 1)) (atan N)) (atan (+ N 1)) (+ N 1) (atan N))","N","-inf"],[0.344970703125,"((- (atan (+ N 1)) (atan N)) (atan (+ N 1)) (+ N 1) (atan N))","N","inf"],[0.278076171875,"((- (atan (+ N 1)) (atan N)) (atan (+ N 1)) (+ N 1) (atan N))","N","0"]],"time":1.208984375,"type":"series"},{"count":[[9,8]],"egraph":[[0,540,32,0.001519266],[10,540,32,0.002407258],[9,532,32,0.004060761],[8,516,32,0.003220948],[7,457,32,0.003755558],[6,417,32,0.004124225],[5,369,32,0.002609845],[4,189,32,0.002297809],[3,89,32,0.000798592],[2,44,32,0.000492443],[1,34,32,0.00025086],[0,14,32,0.000231366]],"inputs":[["(- (atan (+ 1 N)) (atan N))","(atan (+ 1 N))","1","(+ 1 N)","(atan N)","N","(* N (+ 1 (/ 1 N)))","(- (atan (- 1 (* -1 N))) (atan N))","(atan (- 1 (* -1 N)))"]],"memory":[[1225920,1225920]],"method":["egg-herbie"],"outputs":[["(- (atan (+ 1 N)) (atan N))","(-.f64 (atan.f64 (-.f64 N #s(literal -1 binary64))) (atan.f64 N))","(atan (+ 1 N))","(atan.f64 (-.f64 N #s(literal -1 binary64)))","1","#s(literal 1 binary64)","(+ 1 N)","(-.f64 N #s(literal -1 binary64))","(atan N)","(atan.f64 N)","N","(* N (+ 1 (/ 1 N)))","(-.f64 N #s(literal -1 binary64))","(- (atan (- 1 (* -1 N))) (atan N))","(-.f64 (atan.f64 (-.f64 N #s(literal -1 binary64))) (atan.f64 N))","(atan (- 1 (* -1 N)))","(atan.f64 (-.f64 N #s(literal -1 binary64)))"]],"stop":[["iter limit",1],["saturated",1]],"time":33.13916015625,"type":"simplify"},{"count":[[4,239]],"egraph":[[0,8376,16,0.080519777],[3,2885,16,0.039167134],[2,284,16,0.011798137],[1,44,16,0.00107381],[0,10,16,0.000615403],[0,6,16,9.824e-5]],"inputs":[["(-.f64 (atan.f64 (+.f64 N #s(literal 1 binary64))) (atan.f64 N))","(atan.f64 (+.f64 N #s(literal 1 binary64)))","(+.f64 N #s(literal 1 binary64))","(atan.f64 N)"]],"memory":[[5567600,50535312]],"outputs":[["(atan2.f64 #s(literal 1 binary64) (fma.f64 (+.f64 #s(literal 1 binary64) N) N #s(literal 1 binary64)))","(*.f64 (pow.f64 (/.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 6 binary64)) (pow.f64 (atan.f64 N) #s(literal 6 binary64)))) #s(literal -1 binary64)) (pow.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64)) (pow.f64 (atan.f64 N) #s(literal 3 binary64))) #s(literal -1 binary64)))","(*.f64 (pow.f64 (/.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 9 binary64)) (pow.f64 (atan.f64 N) #s(literal 9 binary64)))) #s(literal -1 binary64)) (pow.f64 (+.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 6 binary64)) (+.f64 (pow.f64 (*.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) #s(literal 3 binary64)) (pow.f64 (atan.f64 N) #s(literal 6 binary64)))) #s(literal -1 binary64)))","(*.f64 (pow.f64 (/.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 4 binary64)) (pow.f64 (atan.f64 N) #s(literal 4 binary64)))) #s(literal -1 binary64)) (pow.f64 (fma.f64 (atan.f64 N) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) #s(literal -1 binary64)))","(*.f64 (pow.f64 (/.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 6 binary64)) (pow.f64 (atan.f64 N) #s(literal 6 binary64)))) #s(literal -1 binary64)) (pow.f64 (+.f64 (+.f64 (pow.f64 (*.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) #s(literal 2 binary64)) (pow.f64 (atan.f64 N) #s(literal 4 binary64))) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 4 binary64))) #s(literal -1 binary64)))","(*.f64 (/.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64)) (pow.f64 (atan.f64 N) #s(literal 3 binary64))) (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 4 binary64)) (pow.f64 (*.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N)) #s(literal 2 binary64)))) (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)) (*.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N))))","(*.f64 (/.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64)) (pow.f64 (atan.f64 N) #s(literal 3 binary64))) (+.f64 (pow.f64 (*.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N)) #s(literal 3 binary64)) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 6 binary64)))) (fma.f64 (*.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N)) (-.f64 (*.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N)) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 4 binary64))))","(*.f64 (/.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)) (pow.f64 (atan.f64 N) #s(literal 2 binary64))) (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)) (pow.f64 (atan.f64 N) #s(literal 2 binary64)))) (-.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) (atan.f64 N)))","(*.f64 (/.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)) (pow.f64 (atan.f64 N) #s(literal 2 binary64))) (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64)) (pow.f64 (atan.f64 N) #s(literal 3 binary64)))) (fma.f64 (atan.f64 N) (-.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))))","(*.f64 (pow.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) #s(literal -1 binary64)) (pow.f64 (pow.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)) (pow.f64 (atan.f64 N) #s(literal 2 binary64))) #s(literal -1 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) #s(literal -1 binary64)) (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)) (pow.f64 (atan.f64 N) #s(literal 2 binary64))))","(*.f64 (pow.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) #s(literal -1 binary64)) (pow.f64 (pow.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64)) (pow.f64 (atan.f64 N) #s(literal 3 binary64))) #s(literal -1 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) #s(literal -1 binary64)) (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64)) (pow.f64 (atan.f64 N) #s(literal 3 binary64))))","(*.f64 (neg.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)) (pow.f64 (atan.f64 N) #s(literal 2 binary64)))) (pow.f64 (neg.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N)))) #s(literal -1 binary64)))","(*.f64 (neg.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64)) (pow.f64 (atan.f64 N) #s(literal 3 binary64)))) (pow.f64 (neg.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)))) #s(literal -1 binary64)))","(*.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (/.f64 (-.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) (atan.f64 N)) (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N)))))","(*.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (*.f64 (-.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) (atan.f64 N)) (pow.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) #s(literal -1 binary64))))","(*.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)) (pow.f64 (atan.f64 N) #s(literal 2 binary64))) (pow.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) #s(literal -1 binary64)))","(*.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) (/.f64 (-.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) (atan.f64 N)) (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)))))","(*.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) (*.f64 (-.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) (atan.f64 N)) (pow.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) #s(literal -1 binary64))))","(*.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64)) (pow.f64 (atan.f64 N) #s(literal 3 binary64))) (pow.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) #s(literal -1 binary64)))","(*.f64 #s(literal 1 binary64) (-.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) (atan.f64 N)))","(pow.f64 (/.f64 (pow.f64 (-.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) (atan.f64 N)) #s(literal -1 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64))","(pow.f64 (pow.f64 (-.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) (atan.f64 N)) #s(literal -1 binary64)) #s(literal -1 binary64))","(/.f64 (neg.f64 (*.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64)) (pow.f64 (atan.f64 N) #s(literal 3 binary64))) #s(literal 1 binary64))) (neg.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)))))","(/.f64 (neg.f64 (*.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 4 binary64)) (pow.f64 (atan.f64 N) #s(literal 4 binary64))) (pow.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) #s(literal -1 binary64)))) (neg.f64 (fma.f64 (atan.f64 N) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)))))","(/.f64 (neg.f64 (*.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 6 binary64)) (pow.f64 (atan.f64 N) #s(literal 6 binary64))) (pow.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) #s(literal -1 binary64)))) (neg.f64 (+.f64 (+.f64 (pow.f64 (*.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) #s(literal 2 binary64)) (pow.f64 (atan.f64 N) #s(literal 4 binary64))) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 4 binary64)))))","(/.f64 (neg.f64 (*.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 6 binary64)) (pow.f64 (atan.f64 N) #s(literal 6 binary64))) (pow.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) #s(literal -1 binary64)))) (neg.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64)) (pow.f64 (atan.f64 N) #s(literal 3 binary64)))))","(/.f64 (neg.f64 (*.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 9 binary64)) (pow.f64 (atan.f64 N) #s(literal 9 binary64))) (pow.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) #s(literal -1 binary64)))) (neg.f64 (+.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 6 binary64)) (+.f64 (pow.f64 (*.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) #s(literal 3 binary64)) (pow.f64 (atan.f64 N) #s(literal 6 binary64))))))","(/.f64 (neg.f64 (-.f64 (pow.f64 (/.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)) (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N)))) #s(literal 2 binary64)) (pow.f64 (/.f64 (pow.f64 (atan.f64 N) #s(literal 2 binary64)) (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N)))) #s(literal 2 binary64)))) (neg.f64 (+.f64 (/.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)) (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N)))) (/.f64 (pow.f64 (atan.f64 N) #s(literal 2 binary64)) (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N)))))))","(/.f64 (neg.f64 (-.f64 (pow.f64 (/.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64)) (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)))) #s(literal 2 binary64)) (pow.f64 (/.f64 (pow.f64 (atan.f64 N) #s(literal 3 binary64)) (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)))) #s(literal 2 binary64)))) (neg.f64 (+.f64 (/.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64)) (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)))) (/.f64 (pow.f64 (atan.f64 N) #s(literal 3 binary64)) (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)))))))","(/.f64 (neg.f64 (-.f64 (pow.f64 (/.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)) (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N)))) #s(literal 3 binary64)) (pow.f64 (/.f64 (pow.f64 (atan.f64 N) #s(literal 2 binary64)) (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N)))) #s(literal 3 binary64)))) (neg.f64 (+.f64 (pow.f64 (/.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)) (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N)))) #s(literal 2 binary64)) (+.f64 (pow.f64 (/.f64 (pow.f64 (atan.f64 N) #s(literal 2 binary64)) (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N)))) #s(literal 2 binary64)) (*.f64 (/.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)) (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N)))) (/.f64 (pow.f64 (atan.f64 N) #s(literal 2 binary64)) (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N)))))))))","(/.f64 (neg.f64 (-.f64 (pow.f64 (/.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64)) (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)))) #s(literal 3 binary64)) (pow.f64 (/.f64 (pow.f64 (atan.f64 N) #s(literal 3 binary64)) (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)))) #s(literal 3 binary64)))) (neg.f64 (+.f64 (pow.f64 (/.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64)) (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)))) #s(literal 2 binary64)) (+.f64 (pow.f64 (/.f64 (pow.f64 (atan.f64 N) #s(literal 3 binary64)) (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)))) #s(literal 2 binary64)) (*.f64 (/.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64)) (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)))) (/.f64 (pow.f64 (atan.f64 N) #s(literal 3 binary64)) (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)))))))))","(/.f64 (neg.f64 (neg.f64 (neg.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)) (pow.f64 (atan.f64 N) #s(literal 2 binary64)))))) (neg.f64 (neg.f64 (neg.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N)))))))","(/.f64 (neg.f64 (neg.f64 (neg.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64)) (pow.f64 (atan.f64 N) #s(literal 3 binary64)))))) (neg.f64 (neg.f64 (neg.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)))))))","(/.f64 (neg.f64 (*.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 4 binary64)) (pow.f64 (atan.f64 N) #s(literal 4 binary64))) #s(literal 1 binary64))) (neg.f64 (*.f64 (fma.f64 (atan.f64 N) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))))))","(/.f64 (neg.f64 (*.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 6 binary64)) (pow.f64 (atan.f64 N) #s(literal 6 binary64))) #s(literal 1 binary64))) (neg.f64 (*.f64 (+.f64 (+.f64 (pow.f64 (*.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) #s(literal 2 binary64)) (pow.f64 (atan.f64 N) #s(literal 4 binary64))) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 4 binary64))) (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))))))","(/.f64 (neg.f64 (*.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 6 binary64)) (pow.f64 (atan.f64 N) #s(literal 6 binary64))) #s(literal 1 binary64))) (neg.f64 (*.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64)) (pow.f64 (atan.f64 N) #s(literal 3 binary64))) (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))))))","(/.f64 (neg.f64 (*.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 9 binary64)) (pow.f64 (atan.f64 N) #s(literal 9 binary64))) #s(literal 1 binary64))) (neg.f64 (*.f64 (+.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 6 binary64)) (+.f64 (pow.f64 (*.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) #s(literal 3 binary64)) (pow.f64 (atan.f64 N) #s(literal 6 binary64)))) (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))))))","(/.f64 (neg.f64 (*.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)) (pow.f64 (atan.f64 N) #s(literal 2 binary64))) #s(literal 1 binary64))) (neg.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N)))))","(/.f64 (neg.f64 (-.f64 (*.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)) (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N)))) (*.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (pow.f64 (atan.f64 N) #s(literal 2 binary64))))) (neg.f64 (pow.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) #s(literal 2 binary64))))","(/.f64 (neg.f64 (-.f64 (*.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64)) (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)))) (*.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) (pow.f64 (atan.f64 N) #s(literal 3 binary64))))) (neg.f64 (pow.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) #s(literal 2 binary64))))","(/.f64 (neg.f64 (-.f64 (pow.f64 (atan.f64 N) #s(literal 2 binary64)) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)))) (neg.f64 (-.f64 (neg.f64 (atan.f64 N)) (atan.f64 (+.f64 #s(literal 1 binary64) N)))))","(/.f64 (-.f64 (*.f64 (neg.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) (neg.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))))) (*.f64 (neg.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N)))) (neg.f64 (pow.f64 (atan.f64 N) #s(literal 2 binary64))))) (*.f64 (neg.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N)))) (neg.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))))))","(/.f64 (-.f64 (*.f64 (neg.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N)))) (*.f64 (neg.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N)))) (pow.f64 (atan.f64 N) #s(literal 2 binary64)))) (*.f64 (neg.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N)))) (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N)))))","(/.f64 (-.f64 (*.f64 (neg.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) (/.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (pow.f64 (atan.f64 N) #s(literal 2 binary64)))) (*.f64 (neg.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N)))) #s(literal 1 binary64))) (*.f64 (neg.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N)))) (/.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (pow.f64 (atan.f64 N) #s(literal 2 binary64)))))","(/.f64 (-.f64 (*.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)) (neg.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))))) (*.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (neg.f64 (pow.f64 (atan.f64 N) #s(literal 2 binary64))))) (*.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (neg.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))))))","(/.f64 (-.f64 (*.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)) (/.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (pow.f64 (atan.f64 N) #s(literal 2 binary64)))) (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N)))) (*.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (/.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (pow.f64 (atan.f64 N) #s(literal 2 binary64)))))","(/.f64 (-.f64 (*.f64 #s(literal 1 binary64) (neg.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))))) (*.f64 (/.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) (neg.f64 (pow.f64 (atan.f64 N) #s(literal 2 binary64))))) (*.f64 (/.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) (neg.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))))))","(/.f64 (-.f64 (*.f64 #s(literal 1 binary64) (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N)))) (*.f64 (/.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) (pow.f64 (atan.f64 N) #s(literal 2 binary64)))) (*.f64 (/.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N)))))","(/.f64 (-.f64 (*.f64 #s(literal 1 binary64) (/.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (pow.f64 (atan.f64 N) #s(literal 2 binary64)))) (*.f64 (/.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) #s(literal 1 binary64))) (*.f64 (/.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) (/.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (pow.f64 (atan.f64 N) #s(literal 2 binary64)))))","(/.f64 (-.f64 (*.f64 (neg.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64))) (neg.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))))) (*.f64 (neg.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)))) (pow.f64 (atan.f64 N) #s(literal 3 binary64)))) (*.f64 (neg.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)))) (neg.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))))))","(/.f64 (-.f64 (*.f64 (neg.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64))) (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)))) (*.f64 (neg.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)))) (pow.f64 (atan.f64 N) #s(literal 3 binary64)))) (*.f64 (neg.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)))) (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)))))","(/.f64 (-.f64 (*.f64 (neg.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64))) (/.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) (pow.f64 (atan.f64 N) #s(literal 3 binary64)))) (*.f64 (neg.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)))) #s(literal 1 binary64))) (*.f64 (neg.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)))) (/.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) (pow.f64 (atan.f64 N) #s(literal 3 binary64)))))","(/.f64 (-.f64 (*.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64)) (neg.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))))) (*.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) (pow.f64 (atan.f64 N) #s(literal 3 binary64)))) (*.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) (neg.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))))))","(/.f64 (-.f64 (*.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64)) (/.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) (pow.f64 (atan.f64 N) #s(literal 3 binary64)))) (*.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) #s(literal 1 binary64))) (*.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) (/.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) (pow.f64 (atan.f64 N) #s(literal 3 binary64)))))","(/.f64 (-.f64 (*.f64 #s(literal 1 binary64) (neg.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))))) (*.f64 (/.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64))) (pow.f64 (atan.f64 N) #s(literal 3 binary64)))) (*.f64 (/.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64))) (neg.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))))))","(/.f64 (-.f64 (*.f64 #s(literal 1 binary64) (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)))) (*.f64 (/.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64))) (pow.f64 (atan.f64 N) #s(literal 3 binary64)))) (*.f64 (/.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64))) (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)))))","(/.f64 (-.f64 (*.f64 #s(literal 1 binary64) (/.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) (pow.f64 (atan.f64 N) #s(literal 3 binary64)))) (*.f64 (/.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64))) #s(literal 1 binary64))) (*.f64 (/.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64))) (/.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) (pow.f64 (atan.f64 N) #s(literal 3 binary64)))))","(/.f64 (-.f64 (neg.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) (neg.f64 (pow.f64 (atan.f64 N) #s(literal 2 binary64)))) (neg.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N)))))","(/.f64 (-.f64 (neg.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64))) (pow.f64 (atan.f64 N) #s(literal 3 binary64))) (neg.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)))))","(/.f64 (*.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 4 binary64)) (pow.f64 (atan.f64 N) #s(literal 4 binary64))) (pow.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) #s(literal -1 binary64))) (fma.f64 (atan.f64 N) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))))","(/.f64 (*.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 6 binary64)) (pow.f64 (atan.f64 N) #s(literal 6 binary64))) (pow.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) #s(literal -1 binary64))) (+.f64 (+.f64 (pow.f64 (*.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) #s(literal 2 binary64)) (pow.f64 (atan.f64 N) #s(literal 4 binary64))) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 4 binary64))))","(/.f64 (*.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 6 binary64)) (pow.f64 (atan.f64 N) #s(literal 6 binary64))) (pow.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) #s(literal -1 binary64))) (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64)) (pow.f64 (atan.f64 N) #s(literal 3 binary64))))","(/.f64 (*.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 9 binary64)) (pow.f64 (atan.f64 N) #s(literal 9 binary64))) (pow.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) #s(literal -1 binary64))) (+.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 6 binary64)) (+.f64 (pow.f64 (*.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) #s(literal 3 binary64)) (pow.f64 (atan.f64 N) #s(literal 6 binary64)))))","(/.f64 (-.f64 (pow.f64 (/.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)) (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N)))) #s(literal 2 binary64)) (pow.f64 (/.f64 (pow.f64 (atan.f64 N) #s(literal 2 binary64)) (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N)))) #s(literal 2 binary64))) (+.f64 (/.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)) (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N)))) (/.f64 (pow.f64 (atan.f64 N) #s(literal 2 binary64)) (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))))))","(/.f64 (-.f64 (pow.f64 (/.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64)) (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)))) #s(literal 2 binary64)) (pow.f64 (/.f64 (pow.f64 (atan.f64 N) #s(literal 3 binary64)) (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)))) #s(literal 2 binary64))) (+.f64 (/.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64)) (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)))) (/.f64 (pow.f64 (atan.f64 N) #s(literal 3 binary64)) (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))))))","(/.f64 (-.f64 (pow.f64 (atan.f64 N) #s(literal 2 binary64)) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) (-.f64 (neg.f64 (atan.f64 N)) (atan.f64 (+.f64 #s(literal 1 binary64) N))))","(/.f64 (-.f64 (pow.f64 (/.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)) (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N)))) #s(literal 3 binary64)) (pow.f64 (/.f64 (pow.f64 (atan.f64 N) #s(literal 2 binary64)) (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N)))) #s(literal 3 binary64))) (+.f64 (pow.f64 (/.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)) (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N)))) #s(literal 2 binary64)) (+.f64 (pow.f64 (/.f64 (pow.f64 (atan.f64 N) #s(literal 2 binary64)) (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N)))) #s(literal 2 binary64)) (*.f64 (/.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)) (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N)))) (/.f64 (pow.f64 (atan.f64 N) #s(literal 2 binary64)) (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))))))))","(/.f64 (-.f64 (pow.f64 (/.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64)) (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)))) #s(literal 3 binary64)) (pow.f64 (/.f64 (pow.f64 (atan.f64 N) #s(literal 3 binary64)) (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)))) #s(literal 3 binary64))) (+.f64 (pow.f64 (/.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64)) (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)))) #s(literal 2 binary64)) (+.f64 (pow.f64 (/.f64 (pow.f64 (atan.f64 N) #s(literal 3 binary64)) (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)))) #s(literal 2 binary64)) (*.f64 (/.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64)) (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)))) (/.f64 (pow.f64 (atan.f64 N) #s(literal 3 binary64)) (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))))))))","(/.f64 (neg.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 4 binary64)) (pow.f64 (atan.f64 N) #s(literal 4 binary64)))) (neg.f64 (*.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (fma.f64 (atan.f64 N) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))))))","(/.f64 (neg.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 6 binary64)) (pow.f64 (atan.f64 N) #s(literal 6 binary64)))) (neg.f64 (*.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (+.f64 (+.f64 (pow.f64 (*.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) #s(literal 2 binary64)) (pow.f64 (atan.f64 N) #s(literal 4 binary64))) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 4 binary64))))))","(/.f64 (neg.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 6 binary64)) (pow.f64 (atan.f64 N) #s(literal 6 binary64)))) (neg.f64 (*.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64)) (pow.f64 (atan.f64 N) #s(literal 3 binary64))))))","(/.f64 (neg.f64 (neg.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)) (pow.f64 (atan.f64 N) #s(literal 2 binary64))))) (neg.f64 (neg.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))))))","(/.f64 (neg.f64 (neg.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64)) (pow.f64 (atan.f64 N) #s(literal 3 binary64))))) (neg.f64 (neg.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))))))","(/.f64 (neg.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 9 binary64)) (pow.f64 (atan.f64 N) #s(literal 9 binary64)))) (neg.f64 (*.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) (+.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 6 binary64)) (+.f64 (pow.f64 (*.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) #s(literal 3 binary64)) (pow.f64 (atan.f64 N) #s(literal 6 binary64)))))))","(/.f64 (*.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 4 binary64)) (pow.f64 (atan.f64 N) #s(literal 4 binary64))) #s(literal 1 binary64)) (*.f64 (fma.f64 (atan.f64 N) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N)))))","(/.f64 (*.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 6 binary64)) (pow.f64 (atan.f64 N) #s(literal 6 binary64))) #s(literal 1 binary64)) (*.f64 (+.f64 (+.f64 (pow.f64 (*.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) #s(literal 2 binary64)) (pow.f64 (atan.f64 N) #s(literal 4 binary64))) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 4 binary64))) (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N)))))","(/.f64 (*.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 6 binary64)) (pow.f64 (atan.f64 N) #s(literal 6 binary64))) #s(literal 1 binary64)) (*.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64)) (pow.f64 (atan.f64 N) #s(literal 3 binary64))) (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)))))","(/.f64 (*.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 9 binary64)) (pow.f64 (atan.f64 N) #s(literal 9 binary64))) #s(literal 1 binary64)) (*.f64 (+.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 6 binary64)) (+.f64 (pow.f64 (*.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) #s(literal 3 binary64)) (pow.f64 (atan.f64 N) #s(literal 6 binary64)))) (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)))))","(/.f64 (*.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64)) (pow.f64 (atan.f64 N) #s(literal 3 binary64))) #s(literal 1 binary64)) (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))))","(/.f64 (*.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)) (pow.f64 (atan.f64 N) #s(literal 2 binary64))) #s(literal 1 binary64)) (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))))","(/.f64 (-.f64 (*.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)) (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N)))) (*.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (pow.f64 (atan.f64 N) #s(literal 2 binary64)))) (pow.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) #s(literal 2 binary64)))","(/.f64 (-.f64 (*.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64)) (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)))) (*.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) (pow.f64 (atan.f64 N) #s(literal 3 binary64)))) (pow.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) #s(literal 2 binary64)))","(/.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 4 binary64)) (pow.f64 (atan.f64 N) #s(literal 4 binary64))) (*.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (fma.f64 (atan.f64 N) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)))))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (pow.f64 (-.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) (atan.f64 N)) #s(literal -1 binary64)) #s(literal 1 binary64))))","(/.f64 #s(literal -1 binary64) (neg.f64 (pow.f64 (-.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) (atan.f64 N)) #s(literal -1 binary64))))","(/.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 6 binary64)) (pow.f64 (atan.f64 N) #s(literal 6 binary64))) (*.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (+.f64 (+.f64 (pow.f64 (*.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) #s(literal 2 binary64)) (pow.f64 (atan.f64 N) #s(literal 4 binary64))) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 4 binary64)))))","(/.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 6 binary64)) (pow.f64 (atan.f64 N) #s(literal 6 binary64))) (*.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64)) (pow.f64 (atan.f64 N) #s(literal 3 binary64)))))","(/.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 9 binary64)) (pow.f64 (atan.f64 N) #s(literal 9 binary64))) (*.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) (+.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 6 binary64)) (+.f64 (pow.f64 (*.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) #s(literal 3 binary64)) (pow.f64 (atan.f64 N) #s(literal 6 binary64))))))","(/.f64 (neg.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)) (pow.f64 (atan.f64 N) #s(literal 2 binary64)))) (neg.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N)))))","(/.f64 (neg.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64)) (pow.f64 (atan.f64 N) #s(literal 3 binary64)))) (neg.f64 (fma.f64 (atan.f64 N) (atan.f64 N) (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)) (*.f64 (neg.f64 (atan.f64 N)) (atan.f64 (+.f64 #s(literal 1 binary64) N)))))))","(/.f64 (neg.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64)) (pow.f64 (atan.f64 N) #s(literal 3 binary64)))) (neg.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)))))","(/.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)) (pow.f64 (atan.f64 N) #s(literal 2 binary64))) (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))))","(/.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64)) (pow.f64 (atan.f64 N) #s(literal 3 binary64))) (fma.f64 (atan.f64 N) (atan.f64 N) (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)) (*.f64 (neg.f64 (atan.f64 N)) (atan.f64 (+.f64 #s(literal 1 binary64) N))))))","(/.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64)) (pow.f64 (atan.f64 N) #s(literal 3 binary64))) (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))))","(/.f64 #s(literal 1 binary64) (neg.f64 (neg.f64 (pow.f64 (-.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) (atan.f64 N)) #s(literal -1 binary64)))))","(/.f64 #s(literal 1 binary64) (/.f64 (pow.f64 (-.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) (atan.f64 N)) #s(literal -1 binary64)) #s(literal 1 binary64)))","(/.f64 #s(literal 1 binary64) (pow.f64 (-.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) (atan.f64 N)) #s(literal -1 binary64)))","(neg.f64 (/.f64 (neg.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)) (pow.f64 (atan.f64 N) #s(literal 2 binary64)))) (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N)))))","(neg.f64 (/.f64 (neg.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64)) (pow.f64 (atan.f64 N) #s(literal 3 binary64)))) (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)))))","(neg.f64 (/.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)) (pow.f64 (atan.f64 N) #s(literal 2 binary64))) (neg.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))))))","(neg.f64 (/.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64)) (pow.f64 (atan.f64 N) #s(literal 3 binary64))) (neg.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))))))","(fma.f64 (/.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64)) (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 4 binary64)) (pow.f64 (*.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N)) #s(literal 2 binary64)))) (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)) (*.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N))) (neg.f64 (/.f64 (pow.f64 (atan.f64 N) #s(literal 3 binary64)) (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))))))","(fma.f64 (/.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64)) (+.f64 (pow.f64 (*.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N)) #s(literal 3 binary64)) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 6 binary64)))) (fma.f64 (*.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N)) (-.f64 (*.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N)) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 4 binary64))) (neg.f64 (/.f64 (pow.f64 (atan.f64 N) #s(literal 3 binary64)) (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))))))","(fma.f64 (/.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)) (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64)) (pow.f64 (atan.f64 N) #s(literal 3 binary64)))) (fma.f64 (atan.f64 N) (-.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) (neg.f64 (/.f64 (pow.f64 (atan.f64 N) #s(literal 2 binary64)) (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))))))","(fma.f64 (/.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)) (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)) (pow.f64 (atan.f64 N) #s(literal 2 binary64)))) (-.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) (atan.f64 N)) (neg.f64 (/.f64 (pow.f64 (atan.f64 N) #s(literal 2 binary64)) (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))))))","(fma.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3/2 binary64)) (/.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3/2 binary64)) (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)))) (neg.f64 (/.f64 (pow.f64 (atan.f64 N) #s(literal 3 binary64)) (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))))))","(fma.f64 #s(literal -1 binary64) (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N)))","(fma.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)) (/.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)))) (neg.f64 (/.f64 (pow.f64 (atan.f64 N) #s(literal 3 binary64)) (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))))))","(fma.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)) (pow.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) #s(literal -1 binary64)) (neg.f64 (/.f64 (pow.f64 (atan.f64 N) #s(literal 2 binary64)) (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))))))","(fma.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64)) (pow.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) #s(literal -1 binary64)) (neg.f64 (/.f64 (pow.f64 (atan.f64 N) #s(literal 3 binary64)) (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))))))","(fma.f64 (atan.f64 N) #s(literal -1 binary64) (atan.f64 (+.f64 #s(literal 1 binary64) N)))","(fma.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) (/.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)) (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)))) (neg.f64 (/.f64 (pow.f64 (atan.f64 N) #s(literal 3 binary64)) (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))))))","(fma.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) (/.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N)))) (neg.f64 (/.f64 (pow.f64 (atan.f64 N) #s(literal 2 binary64)) (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))))))","(-.f64 (+.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 0 binary64)) (atan.f64 N))","(-.f64 (/.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)) (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N)))) (/.f64 (pow.f64 (atan.f64 N) #s(literal 2 binary64)) (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N)))))","(-.f64 (/.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64)) (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)))) (/.f64 (pow.f64 (atan.f64 N) #s(literal 3 binary64)) (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)))))","(-.f64 #s(literal 0 binary64) (-.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))))","(-.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) (atan.f64 N))","(exp.f64 (*.f64 (log.f64 (pow.f64 (-.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) (atan.f64 N)) #s(literal -1 binary64))) #s(literal -1 binary64)))","(+.f64 (/.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)) (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N)))) (neg.f64 (/.f64 (pow.f64 (atan.f64 N) #s(literal 2 binary64)) (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))))))","(+.f64 (/.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64)) (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)))) (neg.f64 (/.f64 (pow.f64 (atan.f64 N) #s(literal 3 binary64)) (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))))))","(+.f64 (neg.f64 (atan.f64 N)) (atan.f64 (+.f64 #s(literal 1 binary64) N)))","(+.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) (neg.f64 (atan.f64 N)))","(pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 1 binary64))","(neg.f64 (atan.f64 (/.f64 (neg.f64 (fma.f64 N N #s(literal -1 binary64))) (-.f64 N #s(literal 1 binary64)))))","(neg.f64 (atan.f64 (/.f64 (fma.f64 #s(literal -1 binary64) (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)) (fma.f64 N N (-.f64 #s(literal 1 binary64) N)))))","(neg.f64 (atan.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) N))))","(neg.f64 (atan.f64 (/.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (neg.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N))))))","(atan.f64 (+.f64 #s(literal 1 binary64) N))","(exp.f64 (*.f64 (log.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N))) #s(literal 1 binary64)))","(exp.f64 (log.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N))))","(*.f64 (pow.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64)) (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64)) (pow.f64 (+.f64 (fma.f64 N N #s(literal 1 binary64)) (pow.f64 N #s(literal 4 binary64))) #s(literal -1 binary64)))","(*.f64 (pow.f64 (/.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64)) (pow.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (/.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) (+.f64 (pow.f64 N #s(literal 9 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64)) (pow.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (pow.f64 N #s(literal 3 binary64))) #s(literal -1 binary64)))","(*.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (*.f64 N N))) (+.f64 #s(literal 1 binary64) N))","(*.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64)))) (fma.f64 (+.f64 #s(literal 1 binary64) N) N #s(literal 1 binary64)))","(*.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (fma.f64 (+.f64 #s(literal 1 binary64) N) N #s(literal 1 binary64)))","(*.f64 (/.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 4 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)))) (+.f64 (fma.f64 N N #s(literal -1 binary64)) N))","(*.f64 (/.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (+.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal 3 binary64)) (pow.f64 N #s(literal 6 binary64)))) (fma.f64 (-.f64 #s(literal 1 binary64) N) (-.f64 (-.f64 #s(literal 1 binary64) N) (*.f64 N N)) (pow.f64 N #s(literal 4 binary64))))","(*.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (+.f64 #s(literal 1 binary64) N))","(*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)))","(*.f64 (pow.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) #s(literal -1 binary64)) (pow.f64 (pow.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) #s(literal -1 binary64)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))","(*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (pow.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))","(*.f64 (neg.f64 (fma.f64 N N #s(literal -1 binary64))) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)))","(*.f64 (fma.f64 #s(literal -1 binary64) (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)) (pow.f64 (neg.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N))) #s(literal -1 binary64)))","(*.f64 (fma.f64 N N #s(literal -1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(*.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) #s(literal -1 binary64)))","(*.f64 (+.f64 #s(literal 1 binary64) N) (/.f64 (-.f64 N #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64))))","(*.f64 (+.f64 #s(literal 1 binary64) N) (*.f64 (-.f64 N #s(literal 1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))))","(*.f64 (+.f64 #s(literal 1 binary64) N) #s(literal 1 binary64))","(*.f64 #s(literal 1 binary64) (+.f64 #s(literal 1 binary64) N))","(pow.f64 (/.f64 (-.f64 #s(literal 1 binary64) N) (-.f64 #s(literal 1 binary64) (*.f64 N N))) #s(literal -1 binary64))","(pow.f64 (/.f64 (pow.f64 (+.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64))","(pow.f64 (pow.f64 (+.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) #s(literal -1 binary64))","(/.f64 (neg.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))) (neg.f64 (fma.f64 N N #s(literal 1 binary64))))","(/.f64 (neg.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))) (neg.f64 (+.f64 (fma.f64 N N #s(literal 1 binary64)) (pow.f64 N #s(literal 4 binary64)))))","(/.f64 (neg.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) #s(literal -1 binary64)))) (neg.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))))","(/.f64 (neg.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 9 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) #s(literal -1 binary64)))) (neg.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (pow.f64 N #s(literal 3 binary64)))))","(/.f64 (neg.f64 (-.f64 (pow.f64 (*.f64 N (/.f64 N (-.f64 N #s(literal 1 binary64)))) #s(literal 2 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -2 binary64)))) (neg.f64 (fma.f64 N (/.f64 N (-.f64 N #s(literal 1 binary64))) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))))","(/.f64 (neg.f64 (-.f64 (*.f64 (pow.f64 N #s(literal 6 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -3 binary64))) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -3 binary64)))) (neg.f64 (+.f64 (pow.f64 (*.f64 N (/.f64 N (-.f64 N #s(literal 1 binary64)))) #s(literal 2 binary64)) (+.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -2 binary64)) (*.f64 (*.f64 N (/.f64 N (-.f64 N #s(literal 1 binary64)))) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))))))","(/.f64 (neg.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (neg.f64 (neg.f64 (-.f64 #s(literal 1 binary64) N))))","(/.f64 (neg.f64 (neg.f64 (neg.f64 (fma.f64 N N #s(literal -1 binary64))))) (neg.f64 (neg.f64 (-.f64 #s(literal 1 binary64) N))))","(/.f64 (neg.f64 (neg.f64 (fma.f64 #s(literal -1 binary64) (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)))) (neg.f64 (neg.f64 (neg.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N))))))","(/.f64 (neg.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64))) (neg.f64 (*.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64)))))","(/.f64 (neg.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64))) (neg.f64 (*.f64 (+.f64 (fma.f64 N N #s(literal 1 binary64)) (pow.f64 N #s(literal 4 binary64))) (-.f64 N #s(literal 1 binary64)))))","(/.f64 (neg.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64))) (neg.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (fma.f64 N N (-.f64 #s(literal 1 binary64) N)))))","(/.f64 (neg.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 9 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64))) (neg.f64 (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (pow.f64 N #s(literal 3 binary64))) (fma.f64 N N (-.f64 #s(literal 1 binary64) N)))))","(/.f64 (neg.f64 (-.f64 (*.f64 (*.f64 N N) (-.f64 N #s(literal 1 binary64))) (*.f64 (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64)))) (neg.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal 2 binary64))))","(/.f64 (neg.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64))) (neg.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N))))","(/.f64 (-.f64 (*.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) N)) (*.f64 (-.f64 #s(literal 1 binary64) N) (*.f64 N N))) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)))","(/.f64 (-.f64 (*.f64 (neg.f64 (*.f64 N N)) (-.f64 #s(literal 1 binary64) N)) (*.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64))) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)))","(/.f64 (-.f64 (*.f64 (neg.f64 (*.f64 N N)) (/.f64 (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))) (-.f64 #s(literal 1 binary64) N)) (*.f64 (-.f64 #s(literal 1 binary64) N) (/.f64 (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))))","(/.f64 (-.f64 (*.f64 (neg.f64 (*.f64 N N)) (-.f64 N #s(literal 1 binary64))) (-.f64 #s(literal 1 binary64) N)) (*.f64 (-.f64 #s(literal 1 binary64) N) (-.f64 N #s(literal 1 binary64))))","(/.f64 (-.f64 (*.f64 (-.f64 #s(literal 1 binary64) N) (*.f64 N N)) (*.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (*.f64 (-.f64 N #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) N)))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (/.f64 (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))) (*.f64 (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))) (*.f64 (-.f64 N #s(literal 1 binary64)) (/.f64 (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))))","(/.f64 (-.f64 (*.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) N)) (*.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (*.f64 N N)) #s(literal -1 binary64))) (*.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (*.f64 N N)) (-.f64 #s(literal 1 binary64) N)))","(/.f64 (-.f64 (*.f64 #s(literal 1 binary64) (/.f64 (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))) (*.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (*.f64 N N)) #s(literal 1 binary64))) (*.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (*.f64 N N)) (/.f64 (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))))","(/.f64 (-.f64 (*.f64 #s(literal 1 binary64) (-.f64 N #s(literal 1 binary64))) (*.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (*.f64 N N)) #s(literal 1 binary64))) (*.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (*.f64 N N)) (-.f64 N #s(literal 1 binary64))))","(/.f64 (-.f64 (neg.f64 (*.f64 N N)) #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) N))","(/.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (fma.f64 N N #s(literal 1 binary64)))","(/.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (+.f64 (fma.f64 N N #s(literal 1 binary64)) (pow.f64 N #s(literal 4 binary64))))","(/.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) #s(literal -1 binary64))) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))","(/.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 9 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) #s(literal -1 binary64))) (-.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (pow.f64 N #s(literal 3 binary64))))","(/.f64 (-.f64 (pow.f64 (*.f64 N (/.f64 N (-.f64 N #s(literal 1 binary64)))) #s(literal 2 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -2 binary64))) (fma.f64 N (/.f64 N (-.f64 N #s(literal 1 binary64))) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))))","(/.f64 (-.f64 (*.f64 (pow.f64 N #s(literal 6 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -3 binary64))) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -3 binary64))) (+.f64 (pow.f64 (*.f64 N (/.f64 N (-.f64 N #s(literal 1 binary64)))) #s(literal 2 binary64)) (+.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -2 binary64)) (*.f64 (*.f64 N (/.f64 N (-.f64 N #s(literal 1 binary64)))) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))))))","(/.f64 (neg.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) (neg.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64)))))","(/.f64 (neg.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64))) (neg.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) (+.f64 (fma.f64 N N #s(literal 1 binary64)) (pow.f64 N #s(literal 4 binary64))))))","(/.f64 (neg.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64))) (neg.f64 (*.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))))","(/.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N))) (neg.f64 (-.f64 #s(literal 1 binary64) N)))","(/.f64 (neg.f64 (neg.f64 (fma.f64 N N #s(literal -1 binary64)))) (neg.f64 (-.f64 #s(literal 1 binary64) N)))","(/.f64 (neg.f64 (fma.f64 #s(literal -1 binary64) (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64))) (neg.f64 (neg.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)))))","(/.f64 (neg.f64 (+.f64 (pow.f64 N #s(literal 9 binary64)) #s(literal 1 binary64))) (neg.f64 (*.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) (-.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (pow.f64 N #s(literal 3 binary64))))))","(/.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64)) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64))))","(/.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64)) (*.f64 (+.f64 (fma.f64 N N #s(literal 1 binary64)) (pow.f64 N #s(literal 4 binary64))) (-.f64 N #s(literal 1 binary64))))","(/.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64)) (*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (fma.f64 N N (-.f64 #s(literal 1 binary64) N))))","(/.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 9 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64)) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (pow.f64 N #s(literal 3 binary64))) (fma.f64 N N (-.f64 #s(literal 1 binary64) N))))","(/.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64)) (fma.f64 N N (-.f64 #s(literal 1 binary64) N)))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (-.f64 N #s(literal 1 binary64))) (*.f64 (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)))","(/.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64))))","(/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) N))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (-.f64 #s(literal 1 binary64) N) (-.f64 #s(literal 1 binary64) (*.f64 N N)))))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (pow.f64 (+.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) #s(literal 1 binary64))))","(/.f64 #s(literal -1 binary64) (neg.f64 (pow.f64 (+.f64 #s(literal 1 binary64) N) #s(literal -1 binary64))))","(/.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) (+.f64 (fma.f64 N N #s(literal 1 binary64)) (pow.f64 N #s(literal 4 binary64)))))","(/.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (*.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))))","(/.f64 (+.f64 (pow.f64 N #s(literal 9 binary64)) #s(literal 1 binary64)) (*.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) (-.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (pow.f64 N #s(literal 3 binary64)))))","(/.f64 (neg.f64 (fma.f64 N N #s(literal -1 binary64))) (-.f64 #s(literal 1 binary64) N))","(/.f64 (fma.f64 #s(literal -1 binary64) (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)) (neg.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N))))","(/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 N #s(literal 1 binary64)))","(/.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (fma.f64 N N (-.f64 #s(literal 1 binary64) N)))","(/.f64 #s(literal 1 binary64) (neg.f64 (neg.f64 (pow.f64 (+.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)))))","(/.f64 #s(literal 1 binary64) (/.f64 (-.f64 #s(literal 1 binary64) N) (-.f64 #s(literal 1 binary64) (*.f64 N N))))","(/.f64 #s(literal 1 binary64) (/.f64 (pow.f64 (+.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) #s(literal 1 binary64)))","(/.f64 #s(literal 1 binary64) (pow.f64 (+.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)))","(neg.f64 (/.f64 (neg.f64 (fma.f64 N N #s(literal -1 binary64))) (-.f64 N #s(literal 1 binary64))))","(neg.f64 (/.f64 (fma.f64 #s(literal -1 binary64) (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)) (fma.f64 N N (-.f64 #s(literal 1 binary64) N))))","(neg.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) N)))","(neg.f64 (/.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (neg.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)))))","(fma.f64 (/.f64 (*.f64 N N) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (fma.f64 (+.f64 #s(literal 1 binary64) N) N #s(literal 1 binary64)) (neg.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))))","(fma.f64 (/.f64 (*.f64 N N) (fma.f64 N N #s(literal -1 binary64))) (+.f64 #s(literal 1 binary64) N) (neg.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))))","(fma.f64 (*.f64 N N) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (neg.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))))","(fma.f64 #s(literal 1 binary64) N #s(literal 1 binary64))","(fma.f64 N (/.f64 N (-.f64 N #s(literal 1 binary64))) (neg.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))))","(fma.f64 N #s(literal 1 binary64) #s(literal 1 binary64))","(-.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) (/.f64 (*.f64 N N) (-.f64 #s(literal 1 binary64) N)))","(-.f64 (*.f64 N (/.f64 N (-.f64 N #s(literal 1 binary64)))) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(exp.f64 (*.f64 (log.f64 (pow.f64 (+.f64 #s(literal 1 binary64) N) #s(literal -1 binary64))) #s(literal -1 binary64)))","(+.f64 (*.f64 N (/.f64 N (-.f64 N #s(literal 1 binary64)))) (neg.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))))","(+.f64 #s(literal 1 binary64) N)","(+.f64 N #s(literal 1 binary64))","(pow.f64 (atan.f64 N) #s(literal 1 binary64))","(atan.f64 N)","(exp.f64 (*.f64 (log.f64 (atan.f64 N)) #s(literal 1 binary64)))","(exp.f64 (log.f64 (atan.f64 N)))"]],"stop":[["iter limit",1],["node limit",1],["iter limit",1]],"time":267.119873046875,"type":"rewrite"},{"compiler":[[7523,927]],"memory":[[-931488,25348656]],"time":37.398193359375,"type":"eval"},{"alts":[["(atan2.f64 #s(literal 1 binary64) (fma.f64 (+.f64 #s(literal 1 binary64) N) N #s(literal 1 binary64)))","next",0.2109375,"binary64"]],"compiler":[[8,5]],"count":[[245,1]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[244,1],"picked":[1,0]}],"memory":[[1880096,9302416]],"min-error":[[0.2109375,"binary64"]],"time":4.30078125,"type":"prune"},{"egraph":[[0,45,19,0.000295012],[6,45,19,0.000281445],[5,42,19,0.000289482],[4,39,19,0.000271494],[3,29,19,0.000223962],[2,21,19,0.000153791],[1,14,19,0.00011869],[0,9,19,0.000174015],[0,5,19,8.6595e-5]],"inputs":[["(atan2.f64 #s(literal 1 binary64) (fma.f64 (+.f64 #s(literal 1 binary64) N) N #s(literal 1 binary64)))","#s(literal 1 binary64)","(fma.f64 (+.f64 #s(literal 1 binary64) N) N #s(literal 1 binary64))","(+.f64 #s(literal 1 binary64) N)","N"]],"locations":[["(+.f64 #s(literal 1 binary64) N)","cost-diff",0],["(fma.f64 (+.f64 #s(literal 1 binary64) N) N #s(literal 1 binary64))","cost-diff",0],["(atan2.f64 #s(literal 1 binary64) (fma.f64 (+.f64 #s(literal 1 binary64) N) N #s(literal 1 binary64)))","cost-diff",0]],"memory":[[-13112912,644000]],"method":["egg-herbie"],"outputs":[["(atan2.f64 #s(literal 1 binary64) (fma.f64 (+.f64 #s(literal 1 binary64) N) N #s(literal 1 binary64)))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))","#s(literal 1 binary64)","(fma.f64 (+.f64 #s(literal 1 binary64) N) N #s(literal 1 binary64))","(fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))","(+.f64 #s(literal 1 binary64) N)","(+.f64 N #s(literal 1 binary64))","N"]],"stop":[["iter limit",1],["saturated",1],["iter limit",1]],"time":38.089111328125,"type":"simplify"},{"compiler":[[23,8]],"locations":[["(fma.f64 (+.f64 #s(literal 1 binary64) N) N #s(literal 1 binary64))","accuracy",0.0],["(+.f64 #s(literal 1 binary64) N)","accuracy",0.0],["(atan2.f64 #s(literal 1 binary64) (fma.f64 (+.f64 #s(literal 1 binary64) N) N #s(literal 1 binary64)))","accuracy",0.2109375]],"memory":[[6875824,6875824]],"mixsample":[[1.9267578125,"ival-atan2",0],[0.142822265625,"ival-true",0],[2.513427734375,"ival-add",0],[1.6083984375,"ival-mult",0],[0.118408203125,"exact",0],[0.087646484375,"ival-assert",0]],"outcomes":[[11.3759765625,0,"valid",256]],"time":16.613037109375,"type":"localize"},{"count":[[3,11]],"inputs":[["(atan2.f64 #s(literal 1 binary64) (fma.f64 (+.f64 #s(literal 1 binary64) N) N #s(literal 1 binary64)))","(fma.f64 (+.f64 #s(literal 1 binary64) N) N #s(literal 1 binary64))","(+.f64 #s(literal 1 binary64) N)"]],"memory":[[607280,607280]],"outputs":[["(atan2 1 (+ 1 (* N (+ 1 N))))","1","(+ 1 N)","(+ 1 (* N (+ 1 N)))","(atan2 1 (+ 1 (+ N (pow N 2))))","(pow N 2)","(* (pow N 2) (+ 1 (/ 1 N)))","(* (pow N 2) (+ 1 (+ (/ 1 N) (/ 1 (pow N 2)))))","N","(* N (+ 1 (/ 1 N)))","(atan2 1 (+ 1 (* N (- 1 (* -1 N)))))"]],"series":[[0.39990234375,"((atan2 1 (+ (* (+ 1 N) N) 1)) (+ (* (+ 1 N) N) 1) (+ 1 N))","N","-inf"],[0.427978515625,"((atan2 1 (+ (* (+ 1 N) N) 1)) (+ (* (+ 1 N) N) 1) (+ 1 N))","N","inf"],[0.2900390625,"((atan2 1 (+ (* (+ 1 N) N) 1)) (+ (* (+ 1 N) N) 1) (+ 1 N))","N","0"]],"time":1.31689453125,"type":"series"},{"count":[[11,10]],"egraph":[[0,8117,51,0.062860073],[5,5464,57,0.030550915],[4,2415,57,0.033800518],[3,451,57,0.012282207],[2,117,57,0.001421077],[1,67,57,0.000458931],[0,25,61,0.000287757]],"inputs":[["(atan2 1 (+ 1 (* N (+ 1 N))))","1","(+ 1 N)","(+ 1 (* N (+ 1 N)))","(atan2 1 (+ 1 (+ N (pow N 2))))","(pow N 2)","(* (pow N 2) (+ 1 (/ 1 N)))","(* (pow N 2) (+ 1 (+ (/ 1 N) (/ 1 (pow N 2)))))","N","(* N (+ 1 (/ 1 N)))","(atan2 1 (+ 1 (* N (- 1 (* -1 N)))))"]],"memory":[[-2451552,29924912]],"method":["egg-herbie"],"outputs":[["(atan2 1 (+ 1 (* N (+ 1 N))))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)))","1","#s(literal 1 binary64)","(+ 1 N)","(-.f64 N #s(literal -1 binary64))","(+ 1 (* N (+ 1 N)))","(fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64))","(atan2 1 (+ 1 (+ N (pow N 2))))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)))","(pow N 2)","(*.f64 N N)","(* (pow N 2) (+ 1 (/ 1 N)))","(fma.f64 N N N)","(* (pow N 2) (+ 1 (+ (/ 1 N) (/ 1 (pow N 2)))))","(fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64))","N","(* N (+ 1 (/ 1 N)))","(-.f64 N #s(literal -1 binary64))","(atan2 1 (+ 1 (* N (- 1 (* -1 N)))))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)))"]],"stop":[["iter limit",1],["node limit",1]],"time":251.590087890625,"type":"simplify"},{"count":[[3,289]],"egraph":[[0,8410,17,0.072559066],[3,2796,17,0.032680369],[2,262,17,0.00822708],[1,37,17,0.000954607],[0,9,17,0.000624725],[0,5,17,0.000111831]],"inputs":[["(atan2.f64 #s(literal 1 binary64) (fma.f64 (+.f64 #s(literal 1 binary64) N) N #s(literal 1 binary64)))","(fma.f64 (+.f64 #s(literal 1 binary64) N) N #s(literal 1 binary64))","(+.f64 #s(literal 1 binary64) N)"]],"memory":[[-424992,47923280]],"outputs":[["(atan2.f64 #s(literal 1 binary64) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))","(*.f64 (pow.f64 (/.f64 (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 1 binary64)) (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 6 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64)) (pow.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (/.f64 (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 1 binary64)) (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 9 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64)) (pow.f64 (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 6 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 N N N) #s(literal 3 binary64))) #s(literal -1 binary64)))","(*.f64 (pow.f64 (/.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 4 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64)) (pow.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (/.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 6 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64)) (pow.f64 (+.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 4 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal -1 binary64)))","(*.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)))) (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1 binary64)))","(*.f64 (/.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64))) (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1 binary64)))","(*.f64 (/.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64)) (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 4 binary64)) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 2 binary64)))) (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (-.f64 #s(literal 1 binary64) (fma.f64 N N N))))","(*.f64 (/.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64)) (+.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal 3 binary64)) (pow.f64 (fma.f64 N N N) #s(literal 6 binary64)))) (fma.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) (-.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (pow.f64 (fma.f64 N N N) #s(literal 4 binary64))))","(*.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))","(*.f64 (/.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))","(*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) (pow.f64 (pow.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64)))","(*.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64)) (pow.f64 (pow.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64)) (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)))","(*.f64 (neg.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64))) (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64)))","(*.f64 (fma.f64 #s(literal -1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal -1 binary64)) (pow.f64 (neg.f64 (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64)))","(*.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64)))","(*.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)))","(*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (/.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))))","(*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64))))","(*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1 binary64))","(*.f64 #s(literal 1 binary64) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))","(pow.f64 (/.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) #s(literal -1 binary64))","(pow.f64 (/.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64))","(pow.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64))","(/.f64 (neg.f64 (*.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 4 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64)))) (neg.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64))))","(/.f64 (neg.f64 (*.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 6 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64)))) (neg.f64 (+.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 4 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))))","(/.f64 (neg.f64 (*.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 6 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)))) (neg.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64))))","(/.f64 (neg.f64 (*.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 9 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)))) (neg.f64 (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 6 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)))))","(/.f64 (neg.f64 (*.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64))) (neg.f64 (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 1 binary64))))","(/.f64 (neg.f64 (-.f64 (pow.f64 (/.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))) #s(literal 2 binary64)) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -2 binary64)))) (neg.f64 (+.f64 (/.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64)))))","(/.f64 (neg.f64 (-.f64 (*.f64 (pow.f64 (fma.f64 N N N) #s(literal 6 binary64)) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -3 binary64))) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -3 binary64)))) (neg.f64 (+.f64 (pow.f64 (/.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))) #s(literal 2 binary64)) (+.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -2 binary64)) (*.f64 (/.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64)))))))","(/.f64 (neg.f64 (neg.f64 (neg.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64))))) (neg.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)))))","(/.f64 (neg.f64 (neg.f64 (fma.f64 #s(literal -1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal -1 binary64)))) (neg.f64 (neg.f64 (neg.f64 (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 1 binary64))))))","(/.f64 (neg.f64 (*.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 4 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64))) (neg.f64 (*.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)))))","(/.f64 (neg.f64 (*.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 6 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64))) (neg.f64 (*.f64 (+.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 4 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)))))","(/.f64 (neg.f64 (*.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 6 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64))) (neg.f64 (*.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64)) (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 1 binary64)))))","(/.f64 (neg.f64 (*.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 9 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64))) (neg.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 6 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 N N N) #s(literal 3 binary64))) (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 1 binary64)))))","(/.f64 (neg.f64 (-.f64 (*.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 1 binary64)))) (neg.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 2 binary64))))","(/.f64 (neg.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))))) (neg.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)))))","(/.f64 (-.f64 (neg.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (fma.f64 N N N)))","(/.f64 (*.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 4 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64))) (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)))","(/.f64 (*.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 6 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64))) (+.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 4 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))))","(/.f64 (*.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 6 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64))) (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64)))","(/.f64 (*.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 9 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64))) (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 6 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 N N N) #s(literal 3 binary64))))","(/.f64 (*.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64)) (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 1 binary64)))","(/.f64 (-.f64 (pow.f64 (/.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))) #s(literal 2 binary64)) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -2 binary64))) (+.f64 (/.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64))))","(/.f64 (-.f64 (*.f64 (pow.f64 (fma.f64 N N N) #s(literal 6 binary64)) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -3 binary64))) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -3 binary64))) (+.f64 (pow.f64 (/.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))) #s(literal 2 binary64)) (+.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -2 binary64)) (*.f64 (/.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64))))))","(/.f64 (neg.f64 (neg.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)))) (neg.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N))))","(/.f64 (neg.f64 (fma.f64 #s(literal -1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal -1 binary64))) (neg.f64 (neg.f64 (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 1 binary64)))))","(/.f64 (neg.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 9 binary64)) #s(literal 1 binary64))) (neg.f64 (*.f64 (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 1 binary64)) (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 6 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 N N N) #s(literal 3 binary64))))))","(/.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) (neg.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N))))","(/.f64 (neg.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 4 binary64)) #s(literal 1 binary64))) (neg.f64 (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)))))","(/.f64 (neg.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 6 binary64)) #s(literal 1 binary64))) (neg.f64 (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) (+.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 4 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))))))","(/.f64 (neg.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 6 binary64)) #s(literal 1 binary64))) (neg.f64 (*.f64 (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 1 binary64)) (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64)))))","(/.f64 (*.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 4 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64)) (*.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))))","(/.f64 (*.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 6 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64)) (*.f64 (+.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 4 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))))","(/.f64 (*.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 6 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64)) (*.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64)) (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 1 binary64))))","(/.f64 (*.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 9 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64)) (*.f64 (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 6 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 N N N) #s(literal 3 binary64))) (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 1 binary64))))","(/.f64 (-.f64 (*.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 1 binary64))) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 2 binary64)))","(/.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64))))","(/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (-.f64 #s(literal 1 binary64) (fma.f64 N N N)))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))))))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64))))","(/.f64 #s(literal -1 binary64) (neg.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64))))","(/.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 6 binary64)) #s(literal 1 binary64)) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) (+.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 4 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))))","(/.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 6 binary64)) #s(literal 1 binary64)) (*.f64 (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 1 binary64)) (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64))))","(/.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 9 binary64)) #s(literal 1 binary64)) (*.f64 (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 1 binary64)) (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 6 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)))))","(/.f64 (neg.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64))) (-.f64 #s(literal 1 binary64) (fma.f64 N N N)))","(/.f64 (fma.f64 #s(literal -1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal -1 binary64)) (neg.f64 (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 1 binary64))))","(/.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)))","(/.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64)) (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 1 binary64)))","(/.f64 #s(literal 1 binary64) (neg.f64 (neg.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)))))","(/.f64 #s(literal 1 binary64) (/.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))))","(/.f64 #s(literal 1 binary64) (/.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64)))","(/.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)))","(neg.f64 (-.f64 (/.f64 #s(literal 0 binary64) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))","(neg.f64 (-.f64 (/.f64 #s(literal 0 binary64) (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 1 binary64))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))","(neg.f64 (/.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) (fma.f64 N N N))))","(neg.f64 (/.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64)) (neg.f64 (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 1 binary64)))))","(fma.f64 (exp.f64 (log1p.f64 N)) N #s(literal 1 binary64))","(fma.f64 (pow.f64 (/.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) N) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64)))) #s(literal 1 binary64)) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (/.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) N) (-.f64 #s(literal 1 binary64) (*.f64 N N))) #s(literal 1 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (/.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) N) (-.f64 #s(literal 1 binary64) (pow.f64 (-.f64 (*.f64 N N) N) #s(literal 2 binary64)))) #s(literal 1 binary64)) (pow.f64 (-.f64 #s(literal 1 binary64) (-.f64 (*.f64 N N) N)) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (/.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) N) (+.f64 (pow.f64 (-.f64 (*.f64 N N) N) #s(literal 3 binary64)) #s(literal 1 binary64))) #s(literal 1 binary64)) (pow.f64 (fma.f64 (-.f64 (*.f64 N N) N) (-.f64 (-.f64 (*.f64 N N) N) #s(literal 1 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) N) #s(literal 1 binary64)) (pow.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) N) #s(literal 1 binary64)) (pow.f64 (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal 1 binary64)) (pow.f64 (/.f64 N (-.f64 #s(literal 1 binary64) N)) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal 1 binary64)) (pow.f64 (*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) N) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64)) (pow.f64 (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64)) (pow.f64 (*.f64 (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)) N) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 1 binary64)) N #s(literal 1 binary64))","(fma.f64 (pow.f64 (/.f64 (-.f64 #s(literal 1 binary64) N) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64)))) #s(literal -1 binary64)) (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N))","(fma.f64 (pow.f64 (/.f64 (-.f64 #s(literal 1 binary64) N) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64)))) #s(literal -1 binary64)) (pow.f64 (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N))","(fma.f64 (pow.f64 (/.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64)))) #s(literal -1 binary64)) (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64))) #s(literal -1 binary64)) (*.f64 N N))","(fma.f64 (pow.f64 (/.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (+.f64 (pow.f64 N #s(literal 9 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64)) (pow.f64 (-.f64 (+.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64))) (pow.f64 N #s(literal 3 binary64))) #s(literal -1 binary64)) (*.f64 N N))","(fma.f64 (/.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64))) (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1 binary64)) (neg.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64))))","(fma.f64 (/.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (neg.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64))))","(fma.f64 (/.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) N) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64)))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (/.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) N) (-.f64 #s(literal 1 binary64) (*.f64 N N))) (+.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (/.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) N) (-.f64 #s(literal 1 binary64) (pow.f64 (-.f64 (*.f64 N N) N) #s(literal 2 binary64)))) (-.f64 #s(literal 1 binary64) (-.f64 (*.f64 N N) N)) #s(literal 1 binary64))","(fma.f64 (/.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) N) (+.f64 (pow.f64 (-.f64 (*.f64 N N) N) #s(literal 3 binary64)) #s(literal 1 binary64))) (fma.f64 (-.f64 (*.f64 N N) N) (-.f64 (-.f64 (*.f64 N N) N) #s(literal 1 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64)))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (/.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) (pow.f64 (-.f64 (*.f64 N N) N) #s(literal 2 binary64)))) (-.f64 #s(literal 1 binary64) (-.f64 (*.f64 N N) N)) (*.f64 N N))","(fma.f64 (/.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (+.f64 (pow.f64 (-.f64 (*.f64 N N) N) #s(literal 3 binary64)) #s(literal 1 binary64))) (fma.f64 (-.f64 (*.f64 N N) N) (-.f64 (-.f64 (*.f64 N N) N) #s(literal 1 binary64)) #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (*.f64 N N))) (+.f64 N #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) N) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) #s(literal 1 binary64))","(fma.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) N) (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64))","(fma.f64 (*.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)) N) (/.f64 N (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))) (neg.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64))))","(fma.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)) (/.f64 (*.f64 N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))) (neg.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64))))","(fma.f64 (fma.f64 N N #s(literal -1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N))","(fma.f64 (neg.f64 N) (neg.f64 N) (+.f64 N #s(literal 1 binary64)))","(fma.f64 (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)) (pow.f64 (pow.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64)) (*.f64 N N))","(fma.f64 (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (*.f64 (fma.f64 N N N) N) (/.f64 (+.f64 N #s(literal 1 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))) (neg.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64))))","(fma.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) (pow.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal -1 binary64)) #s(literal -1 binary64)) (*.f64 N N))","(fma.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N)) (*.f64 N N))","(fma.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N))) (pow.f64 (neg.f64 (-.f64 #s(literal 1 binary64) N)) #s(literal -1 binary64)) (*.f64 N N))","(fma.f64 (fma.f64 #s(literal -1 binary64) (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)) (pow.f64 (neg.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal -1 binary64)) (*.f64 N N))","(fma.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (/.f64 N (-.f64 #s(literal 1 binary64) N)) #s(literal 1 binary64))","(fma.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) N) #s(literal 1 binary64))","(fma.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) (*.f64 N N))","(fma.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64)) (neg.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64))))","(fma.f64 (*.f64 N N) (/.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))) (neg.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64))))","(fma.f64 (*.f64 N N) #s(literal 1 binary64) (+.f64 N #s(literal 1 binary64)))","(fma.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64))","(fma.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (*.f64 (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (*.f64 (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)) N) #s(literal 1 binary64))","(fma.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N))","(fma.f64 (fma.f64 N N N) (/.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))) (neg.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64))))","(fma.f64 (fma.f64 N N N) #s(literal 1 binary64) #s(literal 1 binary64))","(fma.f64 (+.f64 N #s(literal 1 binary64)) (/.f64 (*.f64 (fma.f64 N N N) N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))) (neg.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64))))","(fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))","(fma.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 1 binary64) (*.f64 N N))","(fma.f64 N (exp.f64 (log1p.f64 N)) #s(literal 1 binary64))","(fma.f64 N (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 N (/.f64 (*.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)) N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))) (neg.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64))))","(fma.f64 N (+.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 N N (+.f64 N #s(literal 1 binary64)))","(fma.f64 N #s(literal 1 binary64) (fma.f64 N N #s(literal 1 binary64)))","(fma.f64 #s(literal 1 binary64) (*.f64 N N) (+.f64 N #s(literal 1 binary64)))","(fma.f64 #s(literal 1 binary64) (fma.f64 N N N) #s(literal 1 binary64))","(fma.f64 #s(literal 1 binary64) (+.f64 N #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 #s(literal 1 binary64) N (fma.f64 N N #s(literal 1 binary64)))","(-.f64 (/.f64 (pow.f64 (/.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))) #s(literal 2 binary64)) (+.f64 (/.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64)))) (/.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -2 binary64)) (+.f64 (/.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64)))))","(-.f64 (/.f64 (*.f64 (pow.f64 (fma.f64 N N N) #s(literal 6 binary64)) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -3 binary64))) (+.f64 (pow.f64 (/.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))) #s(literal 2 binary64)) (+.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -2 binary64)) (*.f64 (/.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64)))))) (/.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -3 binary64)) (+.f64 (pow.f64 (/.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))) #s(literal 2 binary64)) (+.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -2 binary64)) (*.f64 (/.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64)))))))","(-.f64 (/.f64 (*.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 2 binary64))) (/.f64 (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 2 binary64))))","(-.f64 (/.f64 (pow.f64 (fma.f64 N N N) #s(literal 4 binary64)) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)))) (/.f64 #s(literal 1 binary64) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)))))","(-.f64 (/.f64 (pow.f64 (fma.f64 N N N) #s(literal 6 binary64)) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) (+.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 4 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))))) (/.f64 #s(literal 1 binary64) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) (+.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 4 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))))))","(-.f64 (/.f64 (pow.f64 (fma.f64 N N N) #s(literal 6 binary64)) (*.f64 (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 1 binary64)) (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64)))) (/.f64 #s(literal 1 binary64) (*.f64 (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 1 binary64)) (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64)))))","(-.f64 (/.f64 #s(literal 0 binary64) (-.f64 #s(literal 1 binary64) (fma.f64 N N N))) (/.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) (fma.f64 N N N))))","(-.f64 (/.f64 #s(literal 0 binary64) (neg.f64 (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 1 binary64)))) (/.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64)) (neg.f64 (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 1 binary64)))))","(-.f64 (/.f64 (/.f64 (pow.f64 (fma.f64 N N N) #s(literal 4 binary64)) (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))) (/.f64 (pow.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))))","(-.f64 (/.f64 (/.f64 (pow.f64 (fma.f64 N N N) #s(literal 6 binary64)) (+.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 4 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))) (/.f64 (pow.f64 (+.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 4 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal -1 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))))","(-.f64 (/.f64 (/.f64 (pow.f64 (fma.f64 N N N) #s(literal 6 binary64)) (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64))) (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 1 binary64))) (/.f64 (pow.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 1 binary64))))","(-.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64)) (/.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (-.f64 #s(literal 1 binary64) (fma.f64 N N N))))","(-.f64 (/.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64)))","(exp.f64 (*.f64 (log.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64))) #s(literal -1 binary64)))","(+.f64 (fma.f64 N N #s(literal 1 binary64)) N)","(+.f64 (/.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))) (neg.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64))))","(+.f64 (*.f64 N N) (+.f64 N #s(literal 1 binary64)))","(+.f64 (fma.f64 N N N) #s(literal 1 binary64))","(+.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 N N))","(+.f64 N (fma.f64 N N #s(literal 1 binary64)))","(+.f64 #s(literal 1 binary64) (fma.f64 N N N))","(*.f64 (pow.f64 (/.f64 (-.f64 #s(literal 1 binary64) N) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64)))) #s(literal -1 binary64)) (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (/.f64 (-.f64 #s(literal 1 binary64) N) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64)))) #s(literal -1 binary64)) (pow.f64 (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (/.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64)))) #s(literal -1 binary64)) (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64))) #s(literal -1 binary64)))","(*.f64 (pow.f64 (/.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (+.f64 (pow.f64 N #s(literal 9 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64)) (pow.f64 (-.f64 (+.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64))) (pow.f64 N #s(literal 3 binary64))) #s(literal -1 binary64)))","(*.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64)))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))","(*.f64 (/.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) (pow.f64 (-.f64 (*.f64 N N) N) #s(literal 2 binary64)))) (-.f64 #s(literal 1 binary64) (-.f64 (*.f64 N N) N)))","(*.f64 (/.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (+.f64 (pow.f64 (-.f64 (*.f64 N N) N) #s(literal 3 binary64)) #s(literal 1 binary64))) (fma.f64 (-.f64 (*.f64 N N) N) (-.f64 (-.f64 (*.f64 N N) N) #s(literal 1 binary64)) #s(literal 1 binary64)))","(*.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (*.f64 N N))) (+.f64 N #s(literal 1 binary64)))","(*.f64 (fma.f64 N N #s(literal -1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)) (pow.f64 (pow.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))","(*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) (pow.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal -1 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N)))","(*.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N))) (pow.f64 (neg.f64 (-.f64 #s(literal 1 binary64) N)) #s(literal -1 binary64)))","(*.f64 (fma.f64 #s(literal -1 binary64) (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)) (pow.f64 (neg.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal -1 binary64)))","(*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) #s(literal 1 binary64)))","(*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)))","(*.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (*.f64 (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64)))","(*.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)))","(*.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))","(*.f64 #s(literal 1 binary64) (+.f64 N #s(literal 1 binary64)))","(pow.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64))) #s(literal -1 binary64))","(pow.f64 (/.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64))","(pow.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64))","(/.f64 (neg.f64 (*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64))) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)))) (neg.f64 (fma.f64 N N #s(literal 1 binary64))))","(/.f64 (neg.f64 (*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64))) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)))) (neg.f64 (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64))))","(/.f64 (neg.f64 (*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64))) (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)))) (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64)))))","(/.f64 (neg.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 9 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)))) (neg.f64 (-.f64 (+.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64))) (pow.f64 N #s(literal 3 binary64)))))","(/.f64 (neg.f64 (-.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -2 binary64)) (pow.f64 (*.f64 N (/.f64 N (-.f64 #s(literal 1 binary64) N))) #s(literal 2 binary64)))) (neg.f64 (+.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) (*.f64 N (/.f64 N (-.f64 #s(literal 1 binary64) N))))))","(/.f64 (neg.f64 (-.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -3 binary64)) (*.f64 (pow.f64 N #s(literal 6 binary64)) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -3 binary64))))) (neg.f64 (+.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -2 binary64)) (+.f64 (pow.f64 (*.f64 N (/.f64 N (-.f64 #s(literal 1 binary64) N))) #s(literal 2 binary64)) (*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) (*.f64 N (/.f64 N (-.f64 #s(literal 1 binary64) N))))))))","(/.f64 (neg.f64 (neg.f64 (fma.f64 N N #s(literal -1 binary64)))) (neg.f64 (neg.f64 (-.f64 N #s(literal 1 binary64)))))","(/.f64 (neg.f64 (neg.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N))))) (neg.f64 (neg.f64 (neg.f64 (-.f64 #s(literal 1 binary64) N)))))","(/.f64 (neg.f64 (neg.f64 (fma.f64 #s(literal -1 binary64) (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)))) (neg.f64 (neg.f64 (neg.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))))","(/.f64 (neg.f64 (*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64))) (neg.f64 (*.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) N))))","(/.f64 (neg.f64 (*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64))) #s(literal 1 binary64))) (neg.f64 (*.f64 (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) N))))","(/.f64 (neg.f64 (*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64))) #s(literal 1 binary64))) (neg.f64 (*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64))) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))))","(/.f64 (neg.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 9 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64))) (neg.f64 (*.f64 (-.f64 (+.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64))) (pow.f64 N #s(literal 3 binary64))) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))))","(/.f64 (neg.f64 (-.f64 (*.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) N)) (*.f64 (-.f64 #s(literal 1 binary64) N) (*.f64 N N)))) (neg.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal 2 binary64))))","(/.f64 (neg.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64))) (neg.f64 (-.f64 N #s(literal 1 binary64))))","(/.f64 (neg.f64 (*.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N))) #s(literal 1 binary64))) (neg.f64 (neg.f64 (-.f64 #s(literal 1 binary64) N))))","(/.f64 (neg.f64 (*.f64 (fma.f64 #s(literal -1 binary64) (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64))) (neg.f64 (neg.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))))","(/.f64 (neg.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal 1 binary64))) (neg.f64 (-.f64 #s(literal 1 binary64) N)))","(/.f64 (neg.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64))) (neg.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))","(/.f64 (-.f64 #s(literal -1 binary64) (*.f64 (neg.f64 N) N)) (neg.f64 (-.f64 #s(literal 1 binary64) N)))","(/.f64 (*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64))) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64))) (fma.f64 N N #s(literal 1 binary64)))","(/.f64 (*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64))) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64))) (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)))","(/.f64 (*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64))) (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64))) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64))))","(/.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 9 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64))) (-.f64 (+.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64))) (pow.f64 N #s(literal 3 binary64))))","(/.f64 (-.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -2 binary64)) (pow.f64 (*.f64 N (/.f64 N (-.f64 #s(literal 1 binary64) N))) #s(literal 2 binary64))) (+.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) (*.f64 N (/.f64 N (-.f64 #s(literal 1 binary64) N)))))","(/.f64 (-.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -3 binary64)) (*.f64 (pow.f64 N #s(literal 6 binary64)) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -3 binary64)))) (+.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -2 binary64)) (+.f64 (pow.f64 (*.f64 N (/.f64 N (-.f64 #s(literal 1 binary64) N))) #s(literal 2 binary64)) (*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) (*.f64 N (/.f64 N (-.f64 #s(literal 1 binary64) N)))))))","(/.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64)))) (neg.f64 (*.f64 (-.f64 #s(literal 1 binary64) N) (fma.f64 N N #s(literal 1 binary64)))))","(/.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64)))) (neg.f64 (*.f64 (-.f64 #s(literal 1 binary64) N) (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)))))","(/.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64)))) (neg.f64 (*.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64))))))","(/.f64 (neg.f64 (fma.f64 N N #s(literal -1 binary64))) (neg.f64 (-.f64 N #s(literal 1 binary64))))","(/.f64 (neg.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (neg.f64 (neg.f64 (-.f64 #s(literal 1 binary64) N))))","(/.f64 (neg.f64 (fma.f64 #s(literal -1 binary64) (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64))) (neg.f64 (neg.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))))","(/.f64 (neg.f64 (+.f64 (pow.f64 N #s(literal 9 binary64)) #s(literal 1 binary64))) (neg.f64 (*.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (-.f64 (+.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64))) (pow.f64 N #s(literal 3 binary64))))))","(/.f64 (*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) N)))","(/.f64 (*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64))) #s(literal 1 binary64)) (*.f64 (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) N)))","(/.f64 (*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64))) #s(literal 1 binary64)) (*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64))) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))","(/.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 9 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64)) (*.f64 (-.f64 (+.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64))) (pow.f64 N #s(literal 3 binary64))) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))","(/.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64)))","(/.f64 (*.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N))) #s(literal 1 binary64)) (neg.f64 (-.f64 #s(literal 1 binary64) N)))","(/.f64 (*.f64 (fma.f64 #s(literal -1 binary64) (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64)) (neg.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))","(/.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) N))","(/.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64)) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))","(/.f64 (-.f64 (*.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) N)) (*.f64 (-.f64 #s(literal 1 binary64) N) (*.f64 N N))) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal 2 binary64)))","(/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64))) (*.f64 (-.f64 #s(literal 1 binary64) N) (fma.f64 N N #s(literal 1 binary64))))","(/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 N #s(literal 1 binary64)))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64)))))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64))))","(/.f64 #s(literal -1 binary64) (neg.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))))","(/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64))) (*.f64 (-.f64 #s(literal 1 binary64) N) (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64))))","(/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64))) (*.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64)))))","(/.f64 (+.f64 (pow.f64 N #s(literal 9 binary64)) #s(literal 1 binary64)) (*.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (-.f64 (+.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64))) (pow.f64 N #s(literal 3 binary64)))))","(/.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N))) (neg.f64 (-.f64 #s(literal 1 binary64) N)))","(/.f64 (fma.f64 #s(literal -1 binary64) (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)) (neg.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))","(/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) N))","(/.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))","(/.f64 #s(literal 1 binary64) (neg.f64 (neg.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))))","(/.f64 #s(literal 1 binary64) (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64))))","(/.f64 #s(literal 1 binary64) (/.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64)))","(/.f64 #s(literal 1 binary64) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(neg.f64 (-.f64 (/.f64 #s(literal 0 binary64) (-.f64 #s(literal 1 binary64) N)) (+.f64 N #s(literal 1 binary64))))","(neg.f64 (-.f64 (/.f64 #s(literal 0 binary64) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (+.f64 N #s(literal 1 binary64))))","(neg.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (neg.f64 (-.f64 #s(literal 1 binary64) N))))","(neg.f64 (/.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (neg.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))))","(fma.f64 (pow.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64))) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) #s(literal -1 binary64)) (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64)) (neg.f64 (*.f64 N (/.f64 N (-.f64 #s(literal 1 binary64) N)))))","(fma.f64 (pow.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64))) (neg.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)))) #s(literal -1 binary64)) (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64)) (neg.f64 (*.f64 N (/.f64 N (-.f64 #s(literal 1 binary64) N)))))","(fma.f64 (pow.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64))) (fma.f64 #s(literal -1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal -1 binary64))) #s(literal -1 binary64)) (pow.f64 (neg.f64 (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64)) (neg.f64 (*.f64 N (/.f64 N (-.f64 #s(literal 1 binary64) N)))))","(fma.f64 (pow.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64))) #s(literal 1 binary64)) #s(literal -1 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (neg.f64 (*.f64 N (/.f64 N (-.f64 #s(literal 1 binary64) N)))))","(fma.f64 (pow.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (fma.f64 N N #s(literal -1 binary64))) #s(literal -1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (neg.f64 (*.f64 N (/.f64 N (-.f64 #s(literal 1 binary64) N)))))","(fma.f64 (pow.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (neg.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)))) #s(literal -1 binary64)) (pow.f64 (neg.f64 (-.f64 #s(literal 1 binary64) N)) #s(literal -1 binary64)) (neg.f64 (*.f64 N (/.f64 N (-.f64 #s(literal 1 binary64) N)))))","(fma.f64 (pow.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (fma.f64 #s(literal -1 binary64) (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64))) #s(literal -1 binary64)) (pow.f64 (neg.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal -1 binary64)) (neg.f64 (*.f64 N (/.f64 N (-.f64 #s(literal 1 binary64) N)))))","(fma.f64 (pow.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal 1 binary64)) #s(literal -1 binary64)) (+.f64 N #s(literal 1 binary64)) (neg.f64 (*.f64 N (/.f64 N (-.f64 #s(literal 1 binary64) N)))))","(fma.f64 (pow.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64))) (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64)) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64)) (neg.f64 (*.f64 N (/.f64 N (-.f64 #s(literal 1 binary64) N)))))","(fma.f64 (pow.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64))) (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64)) (pow.f64 (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) (neg.f64 (*.f64 N (/.f64 N (-.f64 #s(literal 1 binary64) N)))))","(fma.f64 (pow.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (*.f64 N N))) #s(literal -1 binary64)) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) (neg.f64 (*.f64 N (/.f64 N (-.f64 #s(literal 1 binary64) N)))))","(fma.f64 (pow.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64)) (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)) (neg.f64 (*.f64 N (/.f64 N (-.f64 #s(literal 1 binary64) N)))))","(fma.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal -1 binary64)) (+.f64 N #s(literal 1 binary64)) (neg.f64 (*.f64 N (/.f64 N (-.f64 #s(literal 1 binary64) N)))))","(fma.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64))) #s(literal -1 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (neg.f64 (*.f64 N (/.f64 N (-.f64 #s(literal 1 binary64) N)))))","(fma.f64 N #s(literal 1 binary64) #s(literal 1 binary64))","(fma.f64 #s(literal 1 binary64) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) (neg.f64 (*.f64 N (/.f64 N (-.f64 #s(literal 1 binary64) N)))))","(fma.f64 #s(literal 1 binary64) N #s(literal 1 binary64))","(-.f64 (/.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -2 binary64)) (+.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) (*.f64 N (/.f64 N (-.f64 #s(literal 1 binary64) N))))) (/.f64 (pow.f64 (*.f64 N (/.f64 N (-.f64 #s(literal 1 binary64) N))) #s(literal 2 binary64)) (+.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) (*.f64 N (/.f64 N (-.f64 #s(literal 1 binary64) N))))))","(-.f64 (/.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -3 binary64)) (+.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -2 binary64)) (+.f64 (pow.f64 (*.f64 N (/.f64 N (-.f64 #s(literal 1 binary64) N))) #s(literal 2 binary64)) (*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) (*.f64 N (/.f64 N (-.f64 #s(literal 1 binary64) N))))))) (/.f64 (*.f64 (pow.f64 N #s(literal 6 binary64)) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -3 binary64))) (+.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -2 binary64)) (+.f64 (pow.f64 (*.f64 N (/.f64 N (-.f64 #s(literal 1 binary64) N))) #s(literal 2 binary64)) (*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) (*.f64 N (/.f64 N (-.f64 #s(literal 1 binary64) N))))))))","(-.f64 (/.f64 (*.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) N)) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal 2 binary64))) (/.f64 (*.f64 (-.f64 #s(literal 1 binary64) N) (*.f64 N N)) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal 2 binary64))))","(-.f64 (/.f64 #s(literal 1 binary64) (*.f64 (-.f64 #s(literal 1 binary64) N) (fma.f64 N N #s(literal 1 binary64)))) (/.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 (-.f64 #s(literal 1 binary64) N) (fma.f64 N N #s(literal 1 binary64)))))","(-.f64 (/.f64 #s(literal 1 binary64) (*.f64 (-.f64 #s(literal 1 binary64) N) (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)))) (/.f64 (pow.f64 N #s(literal 6 binary64)) (*.f64 (-.f64 #s(literal 1 binary64) N) (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)))))","(-.f64 (/.f64 #s(literal 1 binary64) (*.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64))))) (/.f64 (pow.f64 N #s(literal 6 binary64)) (*.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64))))))","(-.f64 (/.f64 #s(literal 0 binary64) (neg.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))) (/.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (neg.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))))","(-.f64 (/.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) N)) (/.f64 (/.f64 (pow.f64 N #s(literal 4 binary64)) (fma.f64 N N #s(literal 1 binary64))) (-.f64 #s(literal 1 binary64) N)))","(-.f64 (/.f64 (pow.f64 (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)) #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) N)) (/.f64 (/.f64 (pow.f64 N #s(literal 6 binary64)) (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64))) (-.f64 #s(literal 1 binary64) N)))","(-.f64 (/.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64))) #s(literal -1 binary64)) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (/.f64 (/.f64 (pow.f64 N #s(literal 6 binary64)) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64)))) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))","(-.f64 (/.f64 #s(literal 0 binary64) (neg.f64 (-.f64 #s(literal 1 binary64) N))) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (neg.f64 (-.f64 #s(literal 1 binary64) N))))","(-.f64 (/.f64 (*.f64 N N) (-.f64 N #s(literal 1 binary64))) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(-.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) (*.f64 N (/.f64 N (-.f64 #s(literal 1 binary64) N))))","(exp.f64 (*.f64 (log.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) #s(literal -1 binary64)))","(+.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) (neg.f64 (*.f64 N (/.f64 N (-.f64 #s(literal 1 binary64) N)))))","(+.f64 N #s(literal 1 binary64))","(+.f64 #s(literal 1 binary64) N)"]],"stop":[["iter limit",1],["node limit",1],["iter limit",1]],"time":237.85595703125,"type":"rewrite"},{"compiler":[[7357,1147]],"memory":[[2819488,29084704]],"time":41.64697265625,"type":"eval"},{"alts":[["(atan2.f64 #s(literal 1 binary64) (fma.f64 (/.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) N #s(literal 1 binary64)))","fresh",0.3652725586106521,"binary64"],["(atan2.f64 #s(literal 1 binary64) (fma.f64 (/.f64 #s(literal 1 binary64) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) N #s(literal 1 binary64)))","fresh",0.30697250976844204,"binary64"],["(atan2.f64 #s(literal 1 binary64) (fma.f64 (/.f64 #s(literal 1 binary64) (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) N #s(literal 1 binary64)))","next",0.40337758791597816,"binary64"],["(atan2.f64 #s(literal 1 binary64) (fma.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) N) #s(literal 1 binary64)))","next",0.3565025879159782,"binary64"],["(atan2.f64 #s(literal 1 binary64) (fma.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) N) (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64)))","fresh",18.30937384566228,"binary64"],["(atan2.f64 #s(literal 1 binary64) (fma.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64)))","fresh",0.5056038574528623,"binary64"],["(atan2.f64 #s(literal 1 binary64) (fma.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (*.f64 (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)) N) #s(literal 1 binary64)))","fresh",0.4812088867581884,"binary64"],["(atan2.f64 #s(literal 1 binary64) (fma.f64 (+.f64 #s(literal 1 binary64) N) N #s(literal 1 binary64)))","done",0.2109375,"binary64"],["(atan2.f64 #s(literal 1 binary64) (fma.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) N #s(literal 1 binary64)))","fresh",0.4265213867581883,"binary64"],["(atan2.f64 #s(literal 1 binary64) (fma.f64 (*.f64 (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)) (pow.f64 (pow.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64))) N #s(literal 1 binary64)))","fresh",0.45814145513728255,"binary64"],["(atan2.f64 #s(literal 1 binary64) (fma.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) N) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) #s(literal 1 binary64)))","fresh",0.4196663574528623,"binary64"],["(atan2.f64 #s(literal 1 binary64) (/.f64 #s(literal 1 binary64) (/.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))))))","next",18.255350115199164,"binary64"],["(atan2.f64 #s(literal 1 binary64) (+.f64 (fma.f64 N N #s(literal 1 binary64)) N))","next",0.228847509768442,"binary64"],["(atan2.f64 #s(literal 1 binary64) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64)))))","fresh",0.26857377930532605,"binary64"],["(atan2.f64 #s(literal 1 binary64) #s(approx (+ (* (+ 1 N) N) 1) (fma.f64 N N N)))","fresh",2.1924545334682572,"binary64"],["(atan2.f64 #s(literal 1 binary64) #s(approx (+ (* (+ 1 N) N) 1) (-.f64 N #s(literal -1 binary64))))","fresh",58.9780411009605,"binary64"],["(atan2.f64 #s(literal 1 binary64) #s(approx (+ (* (+ 1 N) N) 1) (*.f64 N N)))","fresh",4.495965423023124,"binary64"],["(atan2.f64 #s(literal 1 binary64) #s(approx (+ (* (+ 1 N) N) 1) #s(literal 1 binary64)))","next",59.97553665921092,"binary64"]],"compiler":[[17,10],[12,8],[15,9],[16,10],[17,11],[17,10],[19,12],[8,5],[15,9],[23,14],[16,10],[19,10],[8,5],[24,10],[14,9],[13,10],[13,9],[11,8],[17,10],[12,8],[15,9],[16,10],[17,11],[17,10],[19,12],[15,9],[23,14],[16,10],[19,10],[8,5],[24,10],[14,9],[13,10],[13,9],[11,8]],"count":[[297,18]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[296,17],"picked":[1,1]}],"memory":[[2613776,18333664]],"min-error":[[0.09765625,"binary64"]],"time":16.587158203125,"type":"prune"},{"egraph":[[0,8208,183,0.084241663],[5,7048,183,0.022740246],[4,2690,183,0.02561571],[3,802,183,0.009927702],[2,232,191,0.002624304],[1,107,197,0.000840313],[0,58,199,0.000565156],[0,32,231,0.000472132]],"inputs":[["(atan2.f64 #s(literal 1 binary64) (+.f64 (fma.f64 N N #s(literal 1 binary64)) N))","#s(literal 1 binary64)","(+.f64 (fma.f64 N N #s(literal 1 binary64)) N)","(fma.f64 N N #s(literal 1 binary64))","N","(atan2.f64 #s(literal 1 binary64) #s(approx (+ (* (+ 1 N) N) 1) #s(literal 1 binary64)))","#s(literal 1 binary64)","#s(approx (+ (* (+ 1 N) N) 1) #s(literal 1 binary64))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (/.f64 #s(literal 1 binary64) (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) N #s(literal 1 binary64)))","#s(literal 1 binary64)","(fma.f64 (/.f64 #s(literal 1 binary64) (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) N #s(literal 1 binary64))","(/.f64 #s(literal 1 binary64) (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64))))","(/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64)))","(-.f64 N #s(literal 1 binary64))","N","(fma.f64 N N #s(literal -1 binary64))","#s(literal -1 binary64)","(atan2.f64 #s(literal 1 binary64) (fma.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) N) #s(literal 1 binary64)))","#s(literal 1 binary64)","(fma.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) N) #s(literal 1 binary64))","(-.f64 #s(literal 1 binary64) (*.f64 N N))","(*.f64 N N)","N","(*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) N)","(pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64))","(-.f64 #s(literal 1 binary64) N)","#s(literal -1 binary64)","(atan2.f64 #s(literal 1 binary64) (/.f64 #s(literal 1 binary64) (/.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))))))","#s(literal 1 binary64)","(/.f64 #s(literal 1 binary64) (/.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))))","(/.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))))","(-.f64 #s(literal 1 binary64) (fma.f64 N N N))","(fma.f64 N N N)","N","(-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))","(pow.f64 (fma.f64 N N N) #s(literal 2 binary64))","#s(literal 2 binary64)"]],"locations":[["(-.f64 #s(literal 1 binary64) (fma.f64 N N N))","cost-diff",0],["(/.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))))","cost-diff",0],["(atan2.f64 #s(literal 1 binary64) (/.f64 #s(literal 1 binary64) (/.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))))))","cost-diff",0],["(/.f64 #s(literal 1 binary64) (/.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))))","cost-diff",2],["(-.f64 #s(literal 1 binary64) (*.f64 N N))","cost-diff",0],["(atan2.f64 #s(literal 1 binary64) (fma.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) N) #s(literal 1 binary64)))","cost-diff",0],["(*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) N)","cost-diff",2],["(fma.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) N) #s(literal 1 binary64))","cost-diff",6],["(fma.f64 (/.f64 #s(literal 1 binary64) (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) N #s(literal 1 binary64))","cost-diff",0],["(atan2.f64 #s(literal 1 binary64) (fma.f64 (/.f64 #s(literal 1 binary64) (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) N #s(literal 1 binary64)))","cost-diff",0],["(/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64)))","cost-diff",3],["(/.f64 #s(literal 1 binary64) (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64))))","cost-diff",4],["#s(approx (+ (* (+ 1 N) N) 1) #s(literal 1 binary64))","cost-diff",0],["(atan2.f64 #s(literal 1 binary64) #s(approx (+ (* (+ 1 N) N) 1) #s(literal 1 binary64)))","cost-diff",0],["(fma.f64 N N #s(literal 1 binary64))","cost-diff",0],["(+.f64 (fma.f64 N N #s(literal 1 binary64)) N)","cost-diff",0],["(atan2.f64 #s(literal 1 binary64) (+.f64 (fma.f64 N N #s(literal 1 binary64)) N))","cost-diff",0]],"memory":[[-589120,42488112]],"method":["egg-herbie"],"outputs":[["(atan2.f64 #s(literal 1 binary64) (+.f64 (fma.f64 N N #s(literal 1 binary64)) N))","#s(literal 1 binary64)","(+.f64 (fma.f64 N N #s(literal 1 binary64)) N)","(fma.f64 N N #s(literal 1 binary64))","N","(atan2.f64 #s(literal 1 binary64) #s(approx (+ (* (+ 1 N) N) 1) #s(literal 1 binary64)))","#s(literal 1 binary64)","#s(approx (+ (* (+ 1 N) N) 1) #s(literal 1 binary64))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (/.f64 #s(literal 1 binary64) (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) N #s(literal 1 binary64)))","(atan2.f64 #s(literal 1 binary64) (+.f64 (fma.f64 N N #s(literal 1 binary64)) N))","#s(literal 1 binary64)","(fma.f64 (/.f64 #s(literal 1 binary64) (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) N #s(literal 1 binary64))","(+.f64 (fma.f64 N N #s(literal 1 binary64)) N)","(/.f64 #s(literal 1 binary64) (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64))))","(-.f64 N #s(literal -1 binary64))","(/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64)))","(/.f64 #s(literal 1 binary64) (-.f64 N #s(literal -1 binary64)))","(-.f64 N #s(literal 1 binary64))","N","(fma.f64 N N #s(literal -1 binary64))","#s(literal -1 binary64)","(atan2.f64 #s(literal 1 binary64) (fma.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) N) #s(literal 1 binary64)))","(atan2.f64 #s(literal 1 binary64) (+.f64 (fma.f64 N N #s(literal 1 binary64)) N))","#s(literal 1 binary64)","(fma.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) N) #s(literal 1 binary64))","(+.f64 (fma.f64 N N #s(literal 1 binary64)) N)","(-.f64 #s(literal 1 binary64) (*.f64 N N))","(*.f64 N N)","N","(*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) N)","(/.f64 N (-.f64 #s(literal 1 binary64) N))","(pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64))","(-.f64 #s(literal 1 binary64) N)","#s(literal -1 binary64)","(atan2.f64 #s(literal 1 binary64) (/.f64 #s(literal 1 binary64) (/.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))))))","(atan2.f64 #s(literal 1 binary64) (/.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal -1 binary64))))","#s(literal 1 binary64)","(/.f64 #s(literal 1 binary64) (/.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))))","(/.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal -1 binary64)))","(/.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))))","(/.f64 (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal -1 binary64)) (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)))","(-.f64 #s(literal 1 binary64) (fma.f64 N N N))","(fma.f64 N N N)","N","(-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))","(pow.f64 (fma.f64 N N N) #s(literal 2 binary64))","#s(literal 2 binary64)"]],"stop":[["iter limit",1],["node limit",1],["iter limit",1]],"time":321.98681640625,"type":"simplify"},{"compiler":[[251,35]],"locations":[["(atan2.f64 #s(literal 1 binary64) (/.f64 #s(literal 1 binary64) (/.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))))))","accuracy",0.2109375],["(/.f64 #s(literal 1 binary64) (/.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))))","accuracy",0.2421875],["(pow.f64 (fma.f64 N N N) #s(literal 2 binary64))","accuracy",0.315448779305326],["(/.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))))","accuracy",18.25564381635695],["(*.f64 N N)","accuracy",0.0],["(fma.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) N) #s(literal 1 binary64))","accuracy",0.0625],["(*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) N)","accuracy",0.19140625],["(atan2.f64 #s(literal 1 binary64) (fma.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) N) #s(literal 1 binary64)))","accuracy",0.2109375],["(-.f64 N #s(literal 1 binary64))","accuracy",0.0],["(/.f64 #s(literal 1 binary64) (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64))))","accuracy",0.1796875],["(atan2.f64 #s(literal 1 binary64) (fma.f64 (/.f64 #s(literal 1 binary64) (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) N #s(literal 1 binary64)))","accuracy",0.2109375],["(/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64)))","accuracy",0.28515625],["(atan2.f64 #s(literal 1 binary64) #s(approx (+ (* (+ 1 N) N) 1) #s(literal 1 binary64)))","accuracy",0.2109375],["#s(approx (+ (* (+ 1 N) N) 1) #s(literal 1 binary64))","accuracy",59.98033328556221],["(fma.f64 N N #s(literal 1 binary64))","accuracy",0.0],["(+.f64 (fma.f64 N N #s(literal 1 binary64)) N)","accuracy",0.0390625],["(atan2.f64 #s(literal 1 binary64) (+.f64 (fma.f64 N N #s(literal 1 binary64)) N))","accuracy",0.2109375]],"memory":[[958368,33567184]],"mixsample":[[6.12353515625,"ival-div",0],[9.0478515625,"ival-add",0],[8.13232421875,"ival-mult",0],[0.111572265625,"ival-assert",0],[9.306884765625,"ival-atan2",0],[5.836669921875,"ival-sub",0],[0.210205078125,"ival-true",0],[0.43017578125,"exact",0],[2.273193359375,"ival-pow2",0],[6.555908203125,"ival-pow",0]],"outcomes":[[65.176513671875,0,"valid",256]],"time":86.898193359375,"type":"localize"},{"count":[[20,63]],"inputs":[["(atan2.f64 #s(literal 1 binary64) (+.f64 (fma.f64 N N #s(literal 1 binary64)) N))","(+.f64 (fma.f64 N N #s(literal 1 binary64)) N)","(fma.f64 N N #s(literal 1 binary64))","(atan2.f64 #s(literal 1 binary64) #s(approx (+ (* (+ 1 N) N) 1) #s(literal 1 binary64)))","#s(approx (+ (* (+ 1 N) N) 1) #s(literal 1 binary64))","(/.f64 #s(literal 1 binary64) (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64))))","(/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64)))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (/.f64 #s(literal 1 binary64) (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) N #s(literal 1 binary64)))","(fma.f64 (/.f64 #s(literal 1 binary64) (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) N #s(literal 1 binary64))","(fma.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) N) #s(literal 1 binary64))","(*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) N)","(atan2.f64 #s(literal 1 binary64) (fma.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) N) #s(literal 1 binary64)))","(-.f64 #s(literal 1 binary64) (*.f64 N N))","(/.f64 #s(literal 1 binary64) (/.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))))","(atan2.f64 #s(literal 1 binary64) (/.f64 #s(literal 1 binary64) (/.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))))))","(/.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))))","(-.f64 #s(literal 1 binary64) (fma.f64 N N N))","(-.f64 N #s(literal 1 binary64))","(*.f64 N N)","(pow.f64 (fma.f64 N N N) #s(literal 2 binary64))"]],"memory":[[-3294224,4363856]],"outputs":[["(atan2 1 (+ 1 (+ N (pow N 2))))","1","(+ 1 N)","(+ 1 (* N (+ 1 N)))","(+ 1 (pow N 2))","(atan2 1 (+ 1 (* N (+ 1 N))))","(+ 1 (* -1 N))","(+ 1 (* N (- N 1)))","(+ 1 (* N (- (* N (+ 1 (* -1 N))) 1)))","(atan2 1 (+ 1 (/ (* N (- (pow N 2) 1)) (- N 1))))","N","(* N (+ 1 N))","(* N (+ 1 (* N (+ 1 N))))","(* N (+ 1 (* N (+ 1 (* N (+ 1 N))))))","(atan2 1 (+ 1 (/ (* N (- 1 (pow N 2))) (- 1 N))))","(+ 1 (* -1 (pow N 2)))","(atan2 1 (/ (- 1 (pow (+ N (pow N 2)) 2)) (- 1 (+ N (pow N 2)))))","(+ 1 (* N (- (pow N 2) 1)))","(+ 1 (* N (- (* (pow N 2) (+ 1 (* -1 N))) 1)))","(+ 1 (* N (- (* -1 N) 1)))","-1","(- N 1)","(pow N 2)","(* (pow N 2) (+ 1 (* 2 N)))","(* (pow N 2) (+ 1 (* N (+ 2 N))))","(* (pow N 2) (+ 1 (/ 1 N)))","(* (pow N 2) (+ 1 (+ (/ 1 N) (/ 1 (pow N 2)))))","(* (pow N 2) (+ 1 (/ 1 (pow N 2))))","(* N (+ 1 (/ 1 N)))","(/ 1 N)","(/ (- 1 (/ 1 N)) N)","(/ (- (+ 1 (/ 1 (pow N 2))) (/ 1 N)) N)","(/ (- (+ 1 (/ 1 (pow N 2))) (+ (/ 1 N) (/ 1 (pow N 3)))) N)","(atan2 1 (- (+ 1 (/ (pow N 3) (- N 1))) (/ N (- N 1))))","(* -1 (+ 1 (/ 1 N)))","(- (* -1 (/ (+ 1 (/ 1 N)) N)) 1)","(- (* -1 (/ (+ 1 (/ 1 N)) (pow N 2))) (+ 1 (/ 1 N)))","(atan2 1 (- (+ 1 (/ N (- 1 N))) (/ (pow N 3) (- 1 N))))","(* -1 (pow N 2))","(* (pow N 2) (- (/ 1 (pow N 2)) 1))","(/ 1 (pow N 2))","(/ (- 1 (/ 1 N)) (pow N 2))","(/ (- (+ 1 (/ 1 (pow N 3))) (/ 1 N)) (pow N 2))","(/ (- (+ 1 (/ 1 (pow N 3))) (+ (/ 1 N) (/ 1 (pow N 4)))) (pow N 2))","(* -1 (* (pow N 2) (+ 1 (/ 1 N))))","(* (pow N 2) (- (/ 1 (pow N 2)) (+ 1 (/ 1 N))))","(* N (- 1 (/ 1 N)))","(pow N 4)","(* (pow N 4) (+ 1 (* 2 (/ 1 N))))","(* (pow N 4) (+ 1 (+ (* 2 (/ 1 N)) (/ 1 (pow N 2)))))","(atan2 1 (- (+ 1 (pow N 2)) (* -1 N)))","(atan2 1 (+ 1 (* N (- 1 (* -1 N)))))","(* -1 (/ (- (/ 1 N) 1) N))","(* -1 (/ (- (* -1 (/ (- (/ 1 N) 1) N)) 1) N))","(* -1 (/ (- (* -1 (/ (- (* -1 (/ (- (/ 1 N) 1) N)) 1) N)) 1) N))","(atan2 1 (- (+ 1 (* -1 (/ (pow N 3) (+ 1 (* -1 N))))) (* -1 (/ N (+ 1 (* -1 N))))))","(- (* -1 (/ (+ 1 (+ (/ 1 N) (/ 1 (pow N 2)))) N)) 1)","(atan2 1 (+ 1 (/ (* N (- 1 (pow N 2))) (+ 1 (* -1 N)))))","(atan2 1 (/ (- 1 (pow (- (pow N 2) (* -1 N)) 2)) (- (+ 1 (* -1 N)) (pow N 2))))","(/ (+ 1 (* -1 (/ (- 1 (/ 1 (pow N 2))) N))) (pow N 2))","(/ (+ 1 (* -1 (/ (- (+ 1 (/ 1 (pow N 3))) (/ 1 (pow N 2))) N))) (pow N 2))","(* (pow N 2) (- (* -1 (/ (- 1 (/ 1 N)) N)) 1))","(* -1 (* N (- (/ 1 N) 1)))"]],"series":[[3.509033203125,"((atan2 1 (+ (+ (* N N) 1) N)) (+ (+ (* N N) 1) N) (+ (* N N) 1) (atan2 1 (+ (* (+ 1 N) N) 1)) (+ (* (+ 1 N) N) 1) (/ 1 (/ (- N 1) (+ (* N N) -1))) (/ (- N 1) (+ (* N N) -1)) (atan2 1 (+ (* (/ 1 (/ (- N 1) (+ (* N N) -1))) N) 1)) (+ (* (/ 1 (/ (- N 1) (+ (* N N) -1))) N) 1) (+ (* (- 1 (* N N)) (* (pow (- 1 N) -1) N)) 1) (* (pow (- 1 N) -1) N) (atan2 1 (+ (* (- 1 (* N N)) (* (pow (- 1 N) -1) N)) 1)) (- 1 (* N N)) (/ 1 (/ (- 1 (+ (* N N) N)) (- 1 (pow (+ (* N N) N) 2)))) (atan2 1 (/ 1 (/ (- 1 (+ (* N N) N)) (- 1 (pow (+ (* N N) N) 2))))) (/ (- 1 (+ (* N N) N)) (- 1 (pow (+ (* N N) N) 2))) (- 1 (+ (* N N) N)) (- N 1) (* N N) (pow (+ (* N N) N) 2))","N","-inf"],[3.047119140625,"((atan2 1 (+ (+ (* N N) 1) N)) (+ (+ (* N N) 1) N) (+ (* N N) 1) (atan2 1 (+ (* (+ 1 N) N) 1)) (+ (* (+ 1 N) N) 1) (/ 1 (/ (- N 1) (+ (* N N) -1))) (/ (- N 1) (+ (* N N) -1)) (atan2 1 (+ (* (/ 1 (/ (- N 1) (+ (* N N) -1))) N) 1)) (+ (* (/ 1 (/ (- N 1) (+ (* N N) -1))) N) 1) (+ (* (- 1 (* N N)) (* (pow (- 1 N) -1) N)) 1) (* (pow (- 1 N) -1) N) (atan2 1 (+ (* (- 1 (* N N)) (* (pow (- 1 N) -1) N)) 1)) (- 1 (* N N)) (/ 1 (/ (- 1 (+ (* N N) N)) (- 1 (pow (+ (* N N) N) 2)))) (atan2 1 (/ 1 (/ (- 1 (+ (* N N) N)) (- 1 (pow (+ (* N N) N) 2))))) (/ (- 1 (+ (* N N) N)) (- 1 (pow (+ (* N N) N) 2))) (- 1 (+ (* N N) N)) (- N 1) (* N N) (pow (+ (* N N) N) 2))","N","inf"],[3.525146484375,"((atan2 1 (+ (+ (* N N) 1) N)) (+ (+ (* N N) 1) N) (+ (* N N) 1) (atan2 1 (+ (* (+ 1 N) N) 1)) (+ (* (+ 1 N) N) 1) (/ 1 (/ (- N 1) (+ (* N N) -1))) (/ (- N 1) (+ (* N N) -1)) (atan2 1 (+ (* (/ 1 (/ (- N 1) (+ (* N N) -1))) N) 1)) (+ (* (/ 1 (/ (- N 1) (+ (* N N) -1))) N) 1) (+ (* (- 1 (* N N)) (* (pow (- 1 N) -1) N)) 1) (* (pow (- 1 N) -1) N) (atan2 1 (+ (* (- 1 (* N N)) (* (pow (- 1 N) -1) N)) 1)) (- 1 (* N N)) (/ 1 (/ (- 1 (+ (* N N) N)) (- 1 (pow (+ (* N N) N) 2)))) (atan2 1 (/ 1 (/ (- 1 (+ (* N N) N)) (- 1 (pow (+ (* N N) N) 2))))) (/ (- 1 (+ (* N N) N)) (- 1 (pow (+ (* N N) N) 2))) (- 1 (+ (* N N) N)) (- N 1) (* N N) (pow (+ (* N N) N) 2))","N","0"]],"time":11.29296875,"type":"series"},{"count":[[63,62]],"egraph":[[0,8346,478,0.088733112],[3,4698,510,0.029081195],[2,1111,516,0.015712382],[1,476,529,0.003768453],[0,166,555,0.001563419]],"inputs":[["(atan2 1 (+ 1 (+ N (pow N 2))))","1","(+ 1 N)","(+ 1 (* N (+ 1 N)))","(+ 1 (pow N 2))","(atan2 1 (+ 1 (* N (+ 1 N))))","(+ 1 (* -1 N))","(+ 1 (* N (- N 1)))","(+ 1 (* N (- (* N (+ 1 (* -1 N))) 1)))","(atan2 1 (+ 1 (/ (* N (- (pow N 2) 1)) (- N 1))))","N","(* N (+ 1 N))","(* N (+ 1 (* N (+ 1 N))))","(* N (+ 1 (* N (+ 1 (* N (+ 1 N))))))","(atan2 1 (+ 1 (/ (* N (- 1 (pow N 2))) (- 1 N))))","(+ 1 (* -1 (pow N 2)))","(atan2 1 (/ (- 1 (pow (+ N (pow N 2)) 2)) (- 1 (+ N (pow N 2)))))","(+ 1 (* N (- (pow N 2) 1)))","(+ 1 (* N (- (* (pow N 2) (+ 1 (* -1 N))) 1)))","(+ 1 (* N (- (* -1 N) 1)))","-1","(- N 1)","(pow N 2)","(* (pow N 2) (+ 1 (* 2 N)))","(* (pow N 2) (+ 1 (* N (+ 2 N))))","(* (pow N 2) (+ 1 (/ 1 N)))","(* (pow N 2) (+ 1 (+ (/ 1 N) (/ 1 (pow N 2)))))","(* (pow N 2) (+ 1 (/ 1 (pow N 2))))","(* N (+ 1 (/ 1 N)))","(/ 1 N)","(/ (- 1 (/ 1 N)) N)","(/ (- (+ 1 (/ 1 (pow N 2))) (/ 1 N)) N)","(/ (- (+ 1 (/ 1 (pow N 2))) (+ (/ 1 N) (/ 1 (pow N 3)))) N)","(atan2 1 (- (+ 1 (/ (pow N 3) (- N 1))) (/ N (- N 1))))","(* -1 (+ 1 (/ 1 N)))","(- (* -1 (/ (+ 1 (/ 1 N)) N)) 1)","(- (* -1 (/ (+ 1 (/ 1 N)) (pow N 2))) (+ 1 (/ 1 N)))","(atan2 1 (- (+ 1 (/ N (- 1 N))) (/ (pow N 3) (- 1 N))))","(* -1 (pow N 2))","(* (pow N 2) (- (/ 1 (pow N 2)) 1))","(/ 1 (pow N 2))","(/ (- 1 (/ 1 N)) (pow N 2))","(/ (- (+ 1 (/ 1 (pow N 3))) (/ 1 N)) (pow N 2))","(/ (- (+ 1 (/ 1 (pow N 3))) (+ (/ 1 N) (/ 1 (pow N 4)))) (pow N 2))","(* -1 (* (pow N 2) (+ 1 (/ 1 N))))","(* (pow N 2) (- (/ 1 (pow N 2)) (+ 1 (/ 1 N))))","(* N (- 1 (/ 1 N)))","(pow N 4)","(* (pow N 4) (+ 1 (* 2 (/ 1 N))))","(* (pow N 4) (+ 1 (+ (* 2 (/ 1 N)) (/ 1 (pow N 2)))))","(atan2 1 (- (+ 1 (pow N 2)) (* -1 N)))","(atan2 1 (+ 1 (* N (- 1 (* -1 N)))))","(* -1 (/ (- (/ 1 N) 1) N))","(* -1 (/ (- (* -1 (/ (- (/ 1 N) 1) N)) 1) N))","(* -1 (/ (- (* -1 (/ (- (* -1 (/ (- (/ 1 N) 1) N)) 1) N)) 1) N))","(atan2 1 (- (+ 1 (* -1 (/ (pow N 3) (+ 1 (* -1 N))))) (* -1 (/ N (+ 1 (* -1 N))))))","(- (* -1 (/ (+ 1 (+ (/ 1 N) (/ 1 (pow N 2)))) N)) 1)","(atan2 1 (+ 1 (/ (* N (- 1 (pow N 2))) (+ 1 (* -1 N)))))","(atan2 1 (/ (- 1 (pow (- (pow N 2) (* -1 N)) 2)) (- (+ 1 (* -1 N)) (pow N 2))))","(/ (+ 1 (* -1 (/ (- 1 (/ 1 (pow N 2))) N))) (pow N 2))","(/ (+ 1 (* -1 (/ (- (+ 1 (/ 1 (pow N 3))) (/ 1 (pow N 2))) N))) (pow N 2))","(* (pow N 2) (- (* -1 (/ (- 1 (/ 1 N)) N)) 1))","(* -1 (* N (- (/ 1 N) 1)))"]],"memory":[[7165952,37120784]],"method":["egg-herbie"],"outputs":[["(atan2 1 (+ 1 (+ N (pow N 2))))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)))","1","#s(literal 1 binary64)","(+ 1 N)","(-.f64 N #s(literal -1 binary64))","(+ 1 (* N (+ 1 N)))","(fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64))","(+ 1 (pow N 2))","(fma.f64 N N #s(literal 1 binary64))","(atan2 1 (+ 1 (* N (+ 1 N))))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)))","(+ 1 (* -1 N))","(-.f64 #s(literal 1 binary64) N)","(+ 1 (* N (- N 1)))","(fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))","(+ 1 (* N (- (* N (+ 1 (* -1 N))) 1)))","(*.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) N))","(atan2 1 (+ 1 (/ (* N (- (pow N 2) 1)) (- N 1))))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)))","N","(* N (+ 1 N))","(fma.f64 N N N)","(* N (+ 1 (* N (+ 1 N))))","(fma.f64 (fma.f64 N N N) N N)","(* N (+ 1 (* N (+ 1 (* N (+ 1 N))))))","(*.f64 (fma.f64 N N #s(literal 1 binary64)) (fma.f64 N N N))","(atan2 1 (+ 1 (/ (* N (- 1 (pow N 2))) (- 1 N))))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)))","(+ 1 (* -1 (pow N 2)))","(fma.f64 (neg.f64 N) N #s(literal 1 binary64))","(atan2 1 (/ (- 1 (pow (+ N (pow N 2)) 2)) (- 1 (+ N (pow N 2)))))","(atan2.f64 #s(literal 1 binary64) (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (fma.f64 (-.f64 #s(literal -1 binary64) N) N #s(literal 1 binary64))))","(+ 1 (* N (- (pow N 2) 1)))","(fma.f64 (fma.f64 N N #s(literal -1 binary64)) N #s(literal 1 binary64))","(+ 1 (* N (- (* (pow N 2) (+ 1 (* -1 N))) 1)))","(*.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) N))","(+ 1 (* N (- (* -1 N) 1)))","(fma.f64 (-.f64 #s(literal -1 binary64) N) N #s(literal 1 binary64))","-1","#s(literal -1 binary64)","(- N 1)","(-.f64 N #s(literal 1 binary64))","(pow N 2)","(*.f64 N N)","(* (pow N 2) (+ 1 (* 2 N)))","(fma.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 2 binary64) (*.f64 N N))","(* (pow N 2) (+ 1 (* N (+ 2 N))))","(*.f64 (*.f64 (fma.f64 (+.f64 #s(literal 2 binary64) N) N #s(literal 1 binary64)) N) N)","(* (pow N 2) (+ 1 (/ 1 N)))","(fma.f64 N N N)","(* (pow N 2) (+ 1 (+ (/ 1 N) (/ 1 (pow N 2)))))","(fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64))","(* (pow N 2) (+ 1 (/ 1 (pow N 2))))","(fma.f64 N N #s(literal 1 binary64))","(* N (+ 1 (/ 1 N)))","(-.f64 N #s(literal -1 binary64))","(/ 1 N)","(/.f64 #s(literal 1 binary64) N)","(/ (- 1 (/ 1 N)) N)","(/.f64 (-.f64 #s(literal 1 binary64) (/.f64 #s(literal 1 binary64) N)) N)","(/ (- (+ 1 (/ 1 (pow N 2))) (/ 1 N)) N)","(/.f64 (-.f64 #s(literal 1 binary64) (/.f64 (-.f64 #s(literal 1 binary64) (/.f64 #s(literal 1 binary64) N)) N)) N)","(/ (- (+ 1 (/ 1 (pow N 2))) (+ (/ 1 N) (/ 1 (pow N 3)))) N)","(/.f64 (-.f64 (/.f64 (-.f64 (/.f64 (-.f64 #s(literal 1 binary64) (/.f64 #s(literal 1 binary64) N)) N) #s(literal 1 binary64)) N) #s(literal -1 binary64)) N)","(atan2 1 (- (+ 1 (/ (pow N 3) (- N 1))) (/ N (- N 1))))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)))","(* -1 (+ 1 (/ 1 N)))","(-.f64 #s(literal -1 binary64) (/.f64 #s(literal 1 binary64) N))","(- (* -1 (/ (+ 1 (/ 1 N)) N)) 1)","(-.f64 #s(literal -1 binary64) (/.f64 (/.f64 (-.f64 N #s(literal -1 binary64)) N) N))","(- (* -1 (/ (+ 1 (/ 1 N)) (pow N 2))) (+ 1 (/ 1 N)))","(*.f64 (/.f64 (-.f64 N #s(literal -1 binary64)) N) (-.f64 (/.f64 #s(literal -1 binary64) (*.f64 N N)) #s(literal 1 binary64)))","(atan2 1 (- (+ 1 (/ N (- 1 N))) (/ (pow N 3) (- 1 N))))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)))","(* -1 (pow N 2))","(*.f64 (neg.f64 N) N)","(* (pow N 2) (- (/ 1 (pow N 2)) 1))","(fma.f64 (neg.f64 N) N #s(literal 1 binary64))","(/ 1 (pow N 2))","(/.f64 (/.f64 #s(literal 1 binary64) N) N)","(/ (- 1 (/ 1 N)) (pow N 2))","(/.f64 (/.f64 (-.f64 #s(literal 1 binary64) (/.f64 #s(literal 1 binary64) N)) N) N)","(/ (- (+ 1 (/ 1 (pow N 3))) (/ 1 N)) (pow N 2))","(/.f64 (-.f64 (+.f64 (pow.f64 (/.f64 #s(literal 1 binary64) N) #s(literal 3 binary64)) #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) N)) (*.f64 N N))","(/ (- (+ 1 (/ 1 (pow N 3))) (+ (/ 1 N) (/ 1 (pow N 4)))) (pow N 2))","(/.f64 (/.f64 (-.f64 (/.f64 (/.f64 (-.f64 #s(literal 1 binary64) (/.f64 #s(literal 1 binary64) N)) N) N) (-.f64 #s(literal 1 binary64) N)) (*.f64 N N)) N)","(* -1 (* (pow N 2) (+ 1 (/ 1 N))))","(*.f64 (-.f64 #s(literal -1 binary64) N) N)","(* (pow N 2) (- (/ 1 (pow N 2)) (+ 1 (/ 1 N))))","(fma.f64 (-.f64 #s(literal -1 binary64) N) N #s(literal 1 binary64))","(* N (- 1 (/ 1 N)))","(-.f64 N #s(literal 1 binary64))","(pow N 4)","(pow.f64 N #s(literal 4 binary64))","(* (pow N 4) (+ 1 (* 2 (/ 1 N))))","(*.f64 (pow.f64 N #s(literal 3 binary64)) (+.f64 #s(literal 2 binary64) N))","(* (pow N 4) (+ 1 (+ (* 2 (/ 1 N)) (/ 1 (pow N 2)))))","(*.f64 (*.f64 (fma.f64 (+.f64 #s(literal 2 binary64) N) N #s(literal 1 binary64)) N) N)","(atan2 1 (- (+ 1 (pow N 2)) (* -1 N)))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)))","(atan2 1 (+ 1 (* N (- 1 (* -1 N)))))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)))","(* -1 (/ (- (/ 1 N) 1) N))","(/.f64 (-.f64 #s(literal 1 binary64) (/.f64 #s(literal 1 binary64) N)) N)","(* -1 (/ (- (* -1 (/ (- (/ 1 N) 1) N)) 1) N))","(/.f64 (-.f64 #s(literal 1 binary64) (/.f64 (-.f64 #s(literal 1 binary64) (/.f64 #s(literal 1 binary64) N)) N)) N)","(* -1 (/ (- (* -1 (/ (- (* -1 (/ (- (/ 1 N) 1) N)) 1) N)) 1) N))","(/.f64 (-.f64 (/.f64 (-.f64 (/.f64 (-.f64 #s(literal 1 binary64) (/.f64 #s(literal 1 binary64) N)) N) #s(literal 1 binary64)) N) #s(literal -1 binary64)) N)","(atan2 1 (- (+ 1 (* -1 (/ (pow N 3) (+ 1 (* -1 N))))) (* -1 (/ N (+ 1 (* -1 N))))))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)))","(- (* -1 (/ (+ 1 (+ (/ 1 N) (/ 1 (pow N 2)))) N)) 1)","(*.f64 (/.f64 (-.f64 N #s(literal -1 binary64)) N) (-.f64 (/.f64 #s(literal -1 binary64) (*.f64 N N)) #s(literal 1 binary64)))","(atan2 1 (+ 1 (/ (* N (- 1 (pow N 2))) (+ 1 (* -1 N)))))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)))","(atan2 1 (/ (- 1 (pow (- (pow N 2) (* -1 N)) 2)) (- (+ 1 (* -1 N)) (pow N 2))))","(atan2.f64 #s(literal 1 binary64) (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (fma.f64 (-.f64 #s(literal -1 binary64) N) N #s(literal 1 binary64))))","(/ (+ 1 (* -1 (/ (- 1 (/ 1 (pow N 2))) N))) (pow N 2))","(/.f64 (-.f64 (+.f64 (pow.f64 (/.f64 #s(literal 1 binary64) N) #s(literal 3 binary64)) #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) N)) (*.f64 N N))","(/ (+ 1 (* -1 (/ (- (+ 1 (/ 1 (pow N 3))) (/ 1 (pow N 2))) N))) (pow N 2))","(/.f64 (-.f64 #s(literal 1 binary64) (/.f64 (-.f64 #s(literal 1 binary64) (/.f64 (/.f64 (-.f64 #s(literal 1 binary64) (/.f64 #s(literal 1 binary64) N)) N) N)) N)) (*.f64 N N))","(* (pow N 2) (- (* -1 (/ (- 1 (/ 1 N)) N)) 1))","(fma.f64 (-.f64 #s(literal -1 binary64) N) N #s(literal 1 binary64))","(* -1 (* N (- (/ 1 N) 1)))","(-.f64 N #s(literal 1 binary64))"]],"stop":[["iter limit",1],["node limit",1]],"time":230.89501953125,"type":"simplify"},{"count":[[20,1328]],"egraph":[[0,8198,120,0.057255914],[2,2192,122,0.029724399],[1,264,122,0.007419981],[0,58,141,0.00265848],[0,32,195,0.00061598]],"inputs":[["(atan2.f64 #s(literal 1 binary64) (+.f64 (fma.f64 N N #s(literal 1 binary64)) N))","(+.f64 (fma.f64 N N #s(literal 1 binary64)) N)","(fma.f64 N N #s(literal 1 binary64))","(atan2.f64 #s(literal 1 binary64) #s(approx (+ (* (+ 1 N) N) 1) #s(literal 1 binary64)))","#s(approx (+ (* (+ 1 N) N) 1) #s(literal 1 binary64))","(/.f64 #s(literal 1 binary64) (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64))))","(/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64)))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (/.f64 #s(literal 1 binary64) (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) N #s(literal 1 binary64)))","(fma.f64 (/.f64 #s(literal 1 binary64) (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) N #s(literal 1 binary64))","(fma.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) N) #s(literal 1 binary64))","(*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) N)","(atan2.f64 #s(literal 1 binary64) (fma.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) N) #s(literal 1 binary64)))","(-.f64 #s(literal 1 binary64) (*.f64 N N))","(/.f64 #s(literal 1 binary64) (/.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))))","(atan2.f64 #s(literal 1 binary64) (/.f64 #s(literal 1 binary64) (/.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))))))","(/.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))))","(-.f64 #s(literal 1 binary64) (fma.f64 N N N))","(-.f64 N #s(literal 1 binary64))","(*.f64 N N)","(pow.f64 (fma.f64 N N N) #s(literal 2 binary64))"]],"memory":[[-10655760,66670560]],"outputs":[["(atan2.f64 #s(literal 1 binary64) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))","(*.f64 (pow.f64 (/.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 4 binary64)))) #s(literal -1 binary64)) (pow.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (/.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 6 binary64)))) #s(literal -1 binary64)) (pow.f64 (+.f64 (+.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 4 binary64))) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal -1 binary64)))","(*.f64 (pow.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N))) #s(literal -1 binary64)) (pow.f64 (pow.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) #s(literal -1 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N))) #s(literal -1 binary64)) (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))))","(*.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)))) (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1 binary64)))","(*.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))","(*.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1/2 binary64)) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1/2 binary64)))","(*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal 1 binary64)) (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64)) (pow.f64 (/.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal -1 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64)) (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal 1 binary64)))","(*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))))","(*.f64 (-.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64)) (*.f64 N N)) (pow.f64 (fma.f64 N (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)))","(*.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64)))","(*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1 binary64))","(*.f64 (+.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 3 binary64)) (pow.f64 N #s(literal 3 binary64))) (pow.f64 (fma.f64 N (-.f64 N (fma.f64 N N #s(literal 1 binary64))) (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64))) #s(literal -1 binary64)))","(*.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64)) (pow.f64 (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 N N N)) #s(literal -1 binary64)))","(*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64)))","(*.f64 #s(literal -1 binary64) (/.f64 #s(literal -1 binary64) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))))","(*.f64 #s(literal 1 binary64) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))","(pow.f64 (*.f64 (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N)))) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))) #s(literal -1/2 binary64))","(pow.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1/2 binary64)) #s(literal 2 binary64))","(pow.f64 (/.f64 (fma.f64 N (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64)) (-.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64)) (*.f64 N N))) #s(literal -1 binary64))","(pow.f64 (/.f64 (fma.f64 N (-.f64 N (fma.f64 N N #s(literal 1 binary64))) (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64))) (+.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 3 binary64)) (pow.f64 N #s(literal 3 binary64)))) #s(literal -1 binary64))","(pow.f64 (/.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64))","(pow.f64 (/.f64 (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 N N N)) (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64))","(pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1 binary64))","(pow.f64 (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N)))) #s(literal -1 binary64))","(/.f64 (neg.f64 (*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 4 binary64))))) (neg.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64))))","(/.f64 (neg.f64 (*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 6 binary64))))) (neg.f64 (+.f64 (+.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 4 binary64))) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))))","(/.f64 (neg.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)))) (neg.f64 (-.f64 (*.f64 N N) (+.f64 N #s(literal 1 binary64)))))","(/.f64 (neg.f64 (-.f64 (*.f64 N N) (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64)))) (neg.f64 (-.f64 N (fma.f64 N N #s(literal 1 binary64)))))","(/.f64 (neg.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 3 binary64)))) (neg.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) (-.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)) (*.f64 (*.f64 N N) (+.f64 N #s(literal 1 binary64)))))))","(/.f64 (neg.f64 (neg.f64 (-.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64)) (*.f64 N N)))) (neg.f64 (neg.f64 (fma.f64 N (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64)))))","(/.f64 (neg.f64 (neg.f64 (+.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 3 binary64)) (pow.f64 N #s(literal 3 binary64))))) (neg.f64 (neg.f64 (fma.f64 N (-.f64 N (fma.f64 N N #s(literal 1 binary64))) (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64))))))","(/.f64 (neg.f64 (neg.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)))) (neg.f64 (neg.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)))))","(/.f64 (neg.f64 (neg.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64)))) (neg.f64 (neg.f64 (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 N N N)))))","(/.f64 (neg.f64 (*.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 4 binary64))))) (neg.f64 (*.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)))))","(/.f64 (neg.f64 (*.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 6 binary64))))) (neg.f64 (*.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) (+.f64 (+.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 4 binary64))) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))))))","(/.f64 (neg.f64 (*.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))))) (neg.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N))))","(/.f64 (neg.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64))) (neg.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal -1 binary64))))","(/.f64 (-.f64 (*.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64)) (fma.f64 N (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))) (*.f64 (fma.f64 N (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64)) (*.f64 N N))) (*.f64 (fma.f64 N (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64)) (fma.f64 N (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))))","(/.f64 (-.f64 (*.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 1 binary64))) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))))","(/.f64 (-.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N))) (*.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N))) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) (*.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N))) (-.f64 #s(literal 1 binary64) (fma.f64 N N N))))","(/.f64 (-.f64 (*.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) (fma.f64 N N N))) (*.f64 (/.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal 1 binary64)) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) (*.f64 (/.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) (fma.f64 N N N))))","(/.f64 (-.f64 (*.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) (fma.f64 N N N))) (*.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal 2 binary64)))","(/.f64 (*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 4 binary64)))) (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)))","(/.f64 (*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 6 binary64)))) (+.f64 (+.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 4 binary64))) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))))","(/.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64))) (-.f64 (*.f64 N N) (+.f64 N #s(literal 1 binary64))))","(/.f64 (-.f64 (*.f64 N N) (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64))) (-.f64 N (fma.f64 N N #s(literal 1 binary64))))","(/.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 3 binary64))) (+.f64 (pow.f64 N #s(literal 4 binary64)) (-.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)) (*.f64 (*.f64 N N) (+.f64 N #s(literal 1 binary64))))))","(/.f64 (neg.f64 (-.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64)) (*.f64 N N))) (neg.f64 (fma.f64 N (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))))","(/.f64 (neg.f64 (+.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 3 binary64)) (pow.f64 N #s(literal 3 binary64)))) (neg.f64 (fma.f64 N N (-.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64)) (*.f64 (fma.f64 N N #s(literal 1 binary64)) N)))))","(/.f64 (neg.f64 (+.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 3 binary64)) (pow.f64 N #s(literal 3 binary64)))) (neg.f64 (fma.f64 N (-.f64 N (fma.f64 N N #s(literal 1 binary64))) (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64)))))","(/.f64 (neg.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))))) (neg.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)))))","(/.f64 (neg.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64))) (neg.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))))","(/.f64 (neg.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64))) (neg.f64 (+.f64 #s(literal 1 binary64) (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (fma.f64 N N N)))))","(/.f64 (neg.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64))) (neg.f64 (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 N N N))))","(/.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 4 binary64)))) (neg.f64 (*.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)))))","(/.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 6 binary64)))) (neg.f64 (*.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) (+.f64 (+.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 4 binary64))) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))))))","(/.f64 (*.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 4 binary64)))) (*.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64))))","(/.f64 (*.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 6 binary64)))) (*.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) (+.f64 (+.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 4 binary64))) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))))","(/.f64 (*.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) (-.f64 #s(literal 1 binary64) (fma.f64 N N N)))","(/.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64)) (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal -1 binary64)))","(/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 4 binary64))) (*.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64))))","(/.f64 (-.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64)) (*.f64 N N)) (fma.f64 N (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64)))","(/.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)))","(/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 6 binary64))) (*.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) (+.f64 (+.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 4 binary64))) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))))","(/.f64 (+.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 3 binary64)) (pow.f64 N #s(literal 3 binary64))) (fma.f64 N N (-.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64)) (*.f64 (fma.f64 N N #s(literal 1 binary64)) N))))","(/.f64 (+.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 3 binary64)) (pow.f64 N #s(literal 3 binary64))) (fma.f64 N (-.f64 N (fma.f64 N N #s(literal 1 binary64))) (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64))))","(/.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64)) (+.f64 #s(literal 1 binary64) (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (fma.f64 N N N))))","(/.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64)) (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 N N N)))","(/.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) (neg.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N))))","(/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (-.f64 #s(literal 1 binary64) (fma.f64 N N N)))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (fma.f64 N (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64)) (-.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64)) (*.f64 N N)))))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (fma.f64 N (-.f64 N (fma.f64 N N #s(literal 1 binary64))) (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64))) (+.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 3 binary64)) (pow.f64 N #s(literal 3 binary64))))))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)))))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 N N N)) (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64)))))","(/.f64 #s(literal -1 binary64) (/.f64 #s(literal -1 binary64) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))","(/.f64 #s(literal 1 binary64) (/.f64 (fma.f64 N (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64)) (-.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64)) (*.f64 N N))))","(/.f64 #s(literal 1 binary64) (/.f64 (fma.f64 N (-.f64 N (fma.f64 N N #s(literal 1 binary64))) (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64))) (+.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 3 binary64)) (pow.f64 N #s(literal 3 binary64)))))","(/.f64 #s(literal 1 binary64) (/.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64))))","(/.f64 #s(literal 1 binary64) (/.f64 (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 N N N)) (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64))))","(/.f64 #s(literal 1 binary64) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N)))))","(neg.f64 (/.f64 #s(literal -1 binary64) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))))","(fma.f64 (exp.f64 (log.f64 N)) (exp.f64 (log.f64 N)) (+.f64 N #s(literal 1 binary64)))","(fma.f64 (exp.f64 (log.f64 N)) (+.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (/.f64 N #s(literal 1 binary64)) #s(literal 1 binary64)) (+.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (/.f64 N (-.f64 N #s(literal 1 binary64))) #s(literal 1 binary64)) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (*.f64 N (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) #s(literal 1 binary64)) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (sqrt.f64 (fma.f64 N N N)) #s(literal 1 binary64)) (pow.f64 (sqrt.f64 (fma.f64 N N N)) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) N) #s(literal 1 binary64)) (pow.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 N N)) #s(literal 1 binary64)) (pow.f64 (pow.f64 (*.f64 N (-.f64 N #s(literal 1 binary64))) #s(literal -1 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) (pow.f64 N #s(literal 6 binary64))) #s(literal 1 binary64)) (pow.f64 (pow.f64 (fma.f64 N (-.f64 N (*.f64 N N)) (pow.f64 N #s(literal 4 binary64))) #s(literal -1 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64)) (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N))","(fma.f64 (pow.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))) #s(literal -1 binary64)) (pow.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) (fma.f64 N N #s(literal 1 binary64))) #s(literal -1 binary64)) (*.f64 N N))","(fma.f64 (pow.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) #s(literal 1 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (pow.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64)))) #s(literal 1 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (pow.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) #s(literal 1 binary64)) (+.f64 N #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (pow.f64 (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (+.f64 N #s(literal 1 binary64))) #s(literal 1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (pow.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1/2 binary64))) #s(literal 1 binary64)) (pow.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1/2 binary64)) #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (pow.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 1/2 binary64)) #s(literal 1 binary64)) (pow.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 1/2 binary64)) #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (pow.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64)) (pow.f64 (pow.f64 (fma.f64 N (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (pow.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) #s(literal 1 binary64)) (pow.f64 (*.f64 N (-.f64 #s(literal 1 binary64) (*.f64 N N))) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) #s(literal 1 binary64)) (pow.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (pow.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64)) (pow.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) N) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64)) (pow.f64 (/.f64 N (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64))) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64)) (pow.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (pow.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (pow.f64 (/.f64 N (-.f64 #s(literal 1 binary64) N)) #s(literal 1 binary64)) (pow.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal 1 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (/.f64 N (-.f64 #s(literal 1 binary64) N)) #s(literal 1 binary64)) (pow.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal 1 binary64)) (pow.f64 (*.f64 (/.f64 N (-.f64 #s(literal 1 binary64) N)) #s(literal 1 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal 1 binary64)) (pow.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal 1 binary64)) (pow.f64 (/.f64 N (-.f64 #s(literal 1 binary64) N)) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64)) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64)) (*.f64 (neg.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64))))","(fma.f64 (pow.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64)) (pow.f64 (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 N N N)) #s(literal -1 binary64)) (*.f64 (neg.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64))))","(fma.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 3 binary64))) #s(literal -1 binary64)) (pow.f64 (pow.f64 (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64)) (*.f64 (neg.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64))))","(fma.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 3 binary64))) #s(literal -1 binary64)) (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1 binary64)) (*.f64 (neg.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64))))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64)))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (+.f64 N #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (/.f64 N #s(literal 1 binary64)) (+.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (/.f64 N (-.f64 N #s(literal 1 binary64))) (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64))","(fma.f64 (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (+.f64 N #s(literal 1 binary64))) (-.f64 N #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1/2 binary64))) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1/2 binary64)) (*.f64 N N))","(fma.f64 (*.f64 N (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 1/2 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 1/2 binary64)) (*.f64 N N))","(fma.f64 (sqrt.f64 (fma.f64 N N N)) (sqrt.f64 (fma.f64 N N N)) #s(literal 1 binary64))","(fma.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) N) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64)) (pow.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N))","(fma.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64)) #s(literal 1 binary64) (*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64)) (neg.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))))","(fma.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (pow.f64 (/.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N))","(fma.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) N) #s(literal 1 binary64))","(fma.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (/.f64 N (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)) (*.f64 N N))","(fma.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)) N)","(fma.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 N N)) (pow.f64 (*.f64 N (-.f64 N #s(literal 1 binary64))) #s(literal -1 binary64)) #s(literal 1 binary64))","(fma.f64 (neg.f64 N) (neg.f64 N) (+.f64 N #s(literal 1 binary64)))","(fma.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 #s(literal -1 binary64) (fma.f64 N N #s(literal -1 binary64)) (pow.f64 N #s(literal 4 binary64))) #s(literal -1 binary64)) N)","(fma.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 N (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N))","(fma.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) (pow.f64 N #s(literal 6 binary64))) (pow.f64 (fma.f64 N (-.f64 N (*.f64 N N)) (pow.f64 N #s(literal 4 binary64))) #s(literal -1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal -1 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (*.f64 (neg.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64))))","(fma.f64 (fma.f64 N N N) #s(literal 1 binary64) #s(literal 1 binary64))","(fma.f64 (/.f64 N (-.f64 #s(literal 1 binary64) N)) (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (/.f64 N (-.f64 #s(literal 1 binary64) N)) (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) (pow.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal -1 binary64)) #s(literal -1 binary64)) (*.f64 N N))","(fma.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) (*.f64 N (-.f64 #s(literal 1 binary64) (*.f64 N N))) #s(literal 1 binary64))","(fma.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N)) (*.f64 N N))","(fma.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (*.f64 (/.f64 N (-.f64 #s(literal 1 binary64) N)) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (/.f64 N (-.f64 #s(literal 1 binary64) N)) #s(literal 1 binary64))","(fma.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) (*.f64 N N))","(fma.f64 (*.f64 N N) #s(literal 1 binary64) (+.f64 N #s(literal 1 binary64)))","(fma.f64 (fma.f64 N N #s(literal -1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N))","(fma.f64 #s(literal -1 binary64) (pow.f64 (/.f64 #s(literal -1 binary64) (exp.f64 (neg.f64 (log1p.f64 N)))) #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 #s(literal -1 binary64) (/.f64 #s(literal -1 binary64) (exp.f64 (neg.f64 (log1p.f64 N)))) (*.f64 N N))","(fma.f64 (+.f64 N #s(literal 1 binary64)) (exp.f64 (log.f64 N)) #s(literal 1 binary64))","(fma.f64 (+.f64 N #s(literal 1 binary64)) (pow.f64 (/.f64 (-.f64 #s(literal 1 binary64) N) (-.f64 #s(literal 1 binary64) N)) #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (+.f64 N #s(literal 1 binary64)) (/.f64 (-.f64 #s(literal 1 binary64) N) (-.f64 #s(literal 1 binary64) N)) (*.f64 N N))","(fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))","(fma.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 1 binary64) (*.f64 N N))","(fma.f64 N (+.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 N N (+.f64 N #s(literal 1 binary64)))","(fma.f64 N #s(literal 1 binary64) (fma.f64 N N #s(literal 1 binary64)))","(fma.f64 #s(literal 1 binary64) (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64)) (*.f64 (neg.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64))))","(fma.f64 #s(literal 1 binary64) (fma.f64 N N N) #s(literal 1 binary64))","(fma.f64 #s(literal 1 binary64) (*.f64 N N) (+.f64 N #s(literal 1 binary64)))","(fma.f64 #s(literal 1 binary64) (+.f64 N #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 #s(literal 1 binary64) N (fma.f64 N N #s(literal 1 binary64)))","(-.f64 (/.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64)) (fma.f64 N (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))) (/.f64 (*.f64 N N) (fma.f64 N (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))))","(-.f64 (/.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64)))","(-.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64)) (/.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (-.f64 #s(literal 1 binary64) (fma.f64 N N N))))","(exp.f64 (log1p.f64 (fma.f64 N N N)))","(+.f64 (*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64)) #s(literal 1 binary64)) (*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64)) (neg.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))))","(+.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64)) (*.f64 (neg.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64))))","(+.f64 (fma.f64 N N N) #s(literal 1 binary64))","(+.f64 (*.f64 N N) (+.f64 N #s(literal 1 binary64)))","(+.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 N N))","(+.f64 (fma.f64 N N #s(literal 1 binary64)) N)","(+.f64 N (fma.f64 N N #s(literal 1 binary64)))","(+.f64 #s(literal 1 binary64) (fma.f64 N N N))","(*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)))","(*.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 #s(literal -1 binary64) (fma.f64 N N #s(literal -1 binary64)) (pow.f64 N #s(literal 4 binary64))) #s(literal -1 binary64)))","(pow.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64))","(pow.f64 (/.f64 (fma.f64 #s(literal -1 binary64) (fma.f64 N N #s(literal -1 binary64)) (pow.f64 N #s(literal 4 binary64))) (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64))","(/.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (neg.f64 (pow.f64 N #s(literal 6 binary64))))) (neg.f64 (+.f64 #s(literal 1 binary64) (+.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 #s(literal 1 binary64) (*.f64 (neg.f64 N) N))))))","(/.f64 (neg.f64 (neg.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)))) (neg.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N))))","(/.f64 (neg.f64 (neg.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)))) (neg.f64 (neg.f64 (fma.f64 #s(literal -1 binary64) (fma.f64 N N #s(literal -1 binary64)) (pow.f64 N #s(literal 4 binary64))))))","(/.f64 (neg.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))) (neg.f64 (fma.f64 #s(literal -1 binary64) (fma.f64 N N #s(literal -1 binary64)) (pow.f64 N #s(literal 4 binary64)))))","(/.f64 (-.f64 (*.f64 (pow.f64 N #s(literal 4 binary64)) (-.f64 N #s(literal 1 binary64))) (-.f64 N #s(literal 1 binary64))) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 N #s(literal 1 binary64))))","(/.f64 (-.f64 (*.f64 (pow.f64 N #s(literal 4 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N))) (*.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64))) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N))))","(/.f64 (-.f64 (*.f64 (pow.f64 N #s(literal 4 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64))) (*.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64))) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64))))","(/.f64 (-.f64 (*.f64 (pow.f64 N #s(literal 4 binary64)) (fma.f64 N N #s(literal -1 binary64))) (*.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64))) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 2 binary64)))","(/.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)) (fma.f64 #s(literal -1 binary64) (fma.f64 N N #s(literal -1 binary64)) (pow.f64 N #s(literal 4 binary64))))","(/.f64 (-.f64 #s(literal 1 binary64) (neg.f64 (pow.f64 N #s(literal 6 binary64)))) (+.f64 #s(literal 1 binary64) (+.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 #s(literal 1 binary64) (*.f64 (neg.f64 N) N)))))","(/.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64)))) (neg.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N))))","(/.f64 (neg.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) (-.f64 #s(literal 1 binary64) (*.f64 N N)))","(/.f64 (neg.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64))) (neg.f64 (+.f64 #s(literal 1 binary64) (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 N N)))))","(/.f64 (neg.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64))) (neg.f64 (fma.f64 #s(literal -1 binary64) (fma.f64 N N #s(literal -1 binary64)) (pow.f64 N #s(literal 4 binary64)))))","(/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64))) (-.f64 #s(literal 1 binary64) (*.f64 N N)))","(/.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64)))","(/.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (+.f64 #s(literal 1 binary64) (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 N N))))","(/.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (fma.f64 #s(literal -1 binary64) (fma.f64 N N #s(literal -1 binary64)) (pow.f64 N #s(literal 4 binary64))))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)))))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (fma.f64 #s(literal -1 binary64) (fma.f64 N N #s(literal -1 binary64)) (pow.f64 N #s(literal 4 binary64))) (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)))))","(/.f64 #s(literal 1 binary64) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))))","(/.f64 #s(literal 1 binary64) (/.f64 (fma.f64 #s(literal -1 binary64) (fma.f64 N N #s(literal -1 binary64)) (pow.f64 N #s(literal 4 binary64))) (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64))))","(fma.f64 (exp.f64 (log.f64 N)) (exp.f64 (log.f64 N)) #s(literal 1 binary64))","(fma.f64 (neg.f64 N) (neg.f64 N) #s(literal 1 binary64))","(fma.f64 (*.f64 N N) #s(literal 1 binary64) #s(literal 1 binary64))","(fma.f64 N N #s(literal 1 binary64))","(fma.f64 #s(literal 1 binary64) (*.f64 N N) #s(literal 1 binary64))","(-.f64 (/.f64 (pow.f64 N #s(literal 4 binary64)) (fma.f64 N N #s(literal -1 binary64))) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)))","(-.f64 (*.f64 N N) #s(literal -1 binary64))","(-.f64 #s(literal 1 binary64) (*.f64 (neg.f64 N) N))","(+.f64 (*.f64 N N) #s(literal 1 binary64))","(+.f64 #s(literal 1 binary64) (*.f64 (*.f64 (neg.f64 N) N) #s(literal -1 binary64)))","(+.f64 #s(literal 1 binary64) (neg.f64 (*.f64 (neg.f64 N) N)))","(+.f64 #s(literal 1 binary64) (*.f64 N N))","(atan2.f64 #s(literal 1 binary64) #s(approx (+ (* (+ 1 N) N) 1) #s(literal 1 binary64)))","#s(approx (+ (* (+ 1 N) N) 1) #s(literal 1 binary64))","(*.f64 (pow.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64)) (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))) #s(literal -1 binary64)) (pow.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) (fma.f64 N N #s(literal 1 binary64))) #s(literal -1 binary64)))","(*.f64 (pow.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) #s(literal 1 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))","(*.f64 (pow.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64)))) #s(literal 1 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))","(*.f64 (pow.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) #s(literal 1 binary64)) (+.f64 N #s(literal 1 binary64)))","(*.f64 (pow.f64 (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (+.f64 N #s(literal 1 binary64))) #s(literal 1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64)))","(*.f64 (pow.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1/2 binary64))) #s(literal 1 binary64)) (pow.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1/2 binary64)) #s(literal 1 binary64)))","(*.f64 (pow.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 1/2 binary64)) #s(literal 1 binary64)) (pow.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 1/2 binary64)) #s(literal 1 binary64)))","(*.f64 (pow.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64)) (pow.f64 (pow.f64 (fma.f64 N (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64)))","(*.f64 (pow.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) #s(literal 1 binary64)) (pow.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal 1 binary64)))","(*.f64 (pow.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64)) (pow.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64)))","(*.f64 (pow.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64)))","(*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal 1 binary64)) (pow.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) #s(literal 1 binary64)))","(*.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))","(*.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64)))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))","(*.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (+.f64 N #s(literal 1 binary64)))","(*.f64 (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (+.f64 N #s(literal 1 binary64))) (-.f64 N #s(literal 1 binary64)))","(*.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1/2 binary64))) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1/2 binary64)))","(*.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 1/2 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 1/2 binary64)))","(*.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64)) (pow.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64)))","(*.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (pow.f64 (/.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64)))","(*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))","(*.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 N (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) (pow.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal -1 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N)))","(*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)))","(*.f64 (fma.f64 N N #s(literal -1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(*.f64 #s(literal -1 binary64) (pow.f64 (/.f64 #s(literal -1 binary64) (exp.f64 (neg.f64 (log1p.f64 N)))) #s(literal 1 binary64)))","(*.f64 #s(literal -1 binary64) (/.f64 #s(literal -1 binary64) (exp.f64 (neg.f64 (log1p.f64 N)))))","(*.f64 (+.f64 N #s(literal 1 binary64)) (pow.f64 (/.f64 (-.f64 #s(literal 1 binary64) N) (-.f64 #s(literal 1 binary64) N)) #s(literal 1 binary64)))","(*.f64 (+.f64 N #s(literal 1 binary64)) (/.f64 (-.f64 #s(literal 1 binary64) N) (-.f64 #s(literal 1 binary64) N)))","(*.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))","(*.f64 #s(literal 1 binary64) (+.f64 N #s(literal 1 binary64)))","(pow.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 1/2 binary64)) #s(literal 2 binary64))","(pow.f64 (/.f64 (fma.f64 N (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64))","(pow.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -2 binary64)) #s(literal -1/2 binary64))","(pow.f64 (exp.f64 (neg.f64 (log1p.f64 N))) #s(literal -1 binary64))","(pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))","(/.f64 (neg.f64 (*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64))) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)))) (neg.f64 (fma.f64 N N #s(literal 1 binary64))))","(/.f64 (neg.f64 (*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64))) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)))) (neg.f64 (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64))))","(/.f64 (neg.f64 (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)))) (neg.f64 (fma.f64 N N #s(literal 1 binary64))))","(/.f64 (neg.f64 (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)))) (neg.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) (fma.f64 N N #s(literal 1 binary64)))))","(/.f64 (neg.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal 1 binary64))) (neg.f64 (-.f64 #s(literal 1 binary64) N)))","(/.f64 (neg.f64 (neg.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (neg.f64 (neg.f64 (fma.f64 N (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64)))))","(/.f64 (neg.f64 (*.f64 #s(literal 1 binary64) (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)))) (neg.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64)))))","(/.f64 (neg.f64 (*.f64 #s(literal 1 binary64) (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)))) (neg.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) (+.f64 (pow.f64 N #s(literal 4 binary64)) (fma.f64 N N #s(literal 1 binary64))))))","(/.f64 (neg.f64 (*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64))) (neg.f64 (*.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) N))))","(/.f64 (neg.f64 (*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64))) #s(literal 1 binary64))) (neg.f64 (*.f64 (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) N))))","(/.f64 (neg.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (neg.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64))))","(/.f64 (neg.f64 (*.f64 #s(literal 1 binary64) (fma.f64 N N #s(literal -1 binary64)))) (-.f64 #s(literal 1 binary64) N))","(/.f64 (neg.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (neg.f64 (neg.f64 (-.f64 #s(literal 1 binary64) N))))","(/.f64 (-.f64 (*.f64 #s(literal -1 binary64) (-.f64 #s(literal 1 binary64) N)) (*.f64 (neg.f64 (-.f64 #s(literal 1 binary64) N)) (*.f64 N N))) (*.f64 (neg.f64 (-.f64 #s(literal 1 binary64) N)) (-.f64 #s(literal 1 binary64) N)))","(/.f64 (-.f64 (*.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) N)) (*.f64 (/.f64 (-.f64 #s(literal 1 binary64) N) #s(literal 1 binary64)) (*.f64 N N))) (*.f64 (/.f64 (-.f64 #s(literal 1 binary64) N) #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) N)))","(/.f64 (-.f64 (*.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) N)) (*.f64 (-.f64 #s(literal 1 binary64) N) (*.f64 N N))) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal 2 binary64)))","(/.f64 (*.f64 #s(literal 1 binary64) (fma.f64 N N #s(literal -1 binary64))) (-.f64 N #s(literal 1 binary64)))","(/.f64 (*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64))) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64))) (fma.f64 N N #s(literal 1 binary64)))","(/.f64 (*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64))) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64))) (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)))","(/.f64 (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) (fma.f64 N N #s(literal 1 binary64)))","(/.f64 (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))) (+.f64 (pow.f64 N #s(literal 4 binary64)) (fma.f64 N N #s(literal 1 binary64))))","(/.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) N))","(/.f64 (neg.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))) (neg.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) (+.f64 (pow.f64 N #s(literal 4 binary64)) (fma.f64 N N #s(literal 1 binary64))))))","(/.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64)))) (neg.f64 (*.f64 (-.f64 #s(literal 1 binary64) N) (fma.f64 N N #s(literal 1 binary64)))))","(/.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64)))) (neg.f64 (*.f64 (-.f64 #s(literal 1 binary64) N) (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)))))","(/.f64 (neg.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) (neg.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64)))))","(/.f64 (neg.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (neg.f64 (fma.f64 N (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))))","(/.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N))) (neg.f64 (-.f64 #s(literal 1 binary64) N)))","(/.f64 (*.f64 #s(literal 1 binary64) (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64))))","(/.f64 (*.f64 #s(literal 1 binary64) (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))) (*.f64 (-.f64 N #s(literal 1 binary64)) (+.f64 (pow.f64 N #s(literal 4 binary64)) (fma.f64 N N #s(literal 1 binary64)))))","(/.f64 (*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) N)))","(/.f64 (*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64))) #s(literal 1 binary64)) (*.f64 (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) N)))","(/.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)))","(/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64))) (*.f64 (-.f64 #s(literal 1 binary64) N) (fma.f64 N N #s(literal 1 binary64))))","(/.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64))))","(/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64))) (*.f64 (-.f64 #s(literal 1 binary64) N) (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64))))","(/.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) (+.f64 (pow.f64 N #s(literal 4 binary64)) (fma.f64 N N #s(literal 1 binary64)))))","(/.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (fma.f64 N (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64)))","(/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) N))","(/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 N #s(literal 1 binary64)))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (fma.f64 N (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))))","(/.f64 #s(literal -1 binary64) (/.f64 #s(literal -1 binary64) (+.f64 N #s(literal 1 binary64))))","(/.f64 #s(literal 1 binary64) (/.f64 (fma.f64 N (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))))","(/.f64 #s(literal 1 binary64) (exp.f64 (neg.f64 (log1p.f64 N))))","(neg.f64 (/.f64 #s(literal -1 binary64) (exp.f64 (neg.f64 (log1p.f64 N)))))","(fma.f64 (pow.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64)) (pow.f64 (fma.f64 N (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 (*.f64 N N) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))))","(fma.f64 (pow.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) #s(literal -1 binary64)) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) (*.f64 (*.f64 N N) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))))","(fma.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64))) #s(literal -1 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (*.f64 (*.f64 N N) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))))","(fma.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal -1 binary64)) (+.f64 N #s(literal 1 binary64)) (*.f64 (*.f64 N N) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))))","(fma.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N) (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64)))","(fma.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64) (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N)))","(fma.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1/2 binary64)) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1/2 binary64)) (*.f64 (*.f64 N N) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))))","(fma.f64 (*.f64 N N) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)))","(fma.f64 #s(literal -1 binary64) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 (*.f64 N N) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))))","(fma.f64 N #s(literal 1 binary64) #s(literal 1 binary64))","(fma.f64 #s(literal 1 binary64) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) (*.f64 (*.f64 N N) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))))","(fma.f64 #s(literal 1 binary64) N #s(literal 1 binary64))","(-.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) (/.f64 (*.f64 N N) (-.f64 #s(literal 1 binary64) N)))","(exp.f64 (*.f64 (log1p.f64 N) #s(literal 1 binary64)))","(exp.f64 (log1p.f64 N))","(+.f64 (*.f64 (*.f64 N N) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)))","(+.f64 (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N)) (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64)))","(+.f64 (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64)) (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N)))","(+.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) (*.f64 (*.f64 N N) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))))","(+.f64 N #s(literal 1 binary64))","(+.f64 #s(literal 1 binary64) N)","(*.f64 (pow.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64)) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N)))))","(*.f64 (pow.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64)))) #s(literal -1 binary64)) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N)))))","(*.f64 (pow.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) #s(literal -1 binary64)) (exp.f64 (neg.f64 (log1p.f64 N))))","(*.f64 (pow.f64 (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (+.f64 N #s(literal 1 binary64))) #s(literal -1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1/2 binary64))) #s(literal -1 binary64)) (pow.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1/2 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 1/2 binary64)) #s(literal -1 binary64)) (pow.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 1/2 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) (pow.f64 (pow.f64 (fma.f64 N (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) #s(literal -1 binary64)) (pow.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64)) (pow.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64)) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal -1 binary64)) (pow.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) #s(literal -1 binary64)))","(*.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) (fma.f64 N N #s(literal 1 binary64)))","(*.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))) (+.f64 (pow.f64 N #s(literal 4 binary64)) (fma.f64 N N #s(literal 1 binary64))))","(*.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)) (pow.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)) (-.f64 N #s(literal 1 binary64)))","(*.f64 (-.f64 #s(literal 1 binary64) N) (pow.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal -1 binary64)))","(*.f64 (exp.f64 (neg.f64 (log1p.f64 N))) (pow.f64 (/.f64 (-.f64 #s(literal 1 binary64) N) (-.f64 #s(literal 1 binary64) N)) #s(literal -1 binary64)))","(*.f64 (exp.f64 (neg.f64 (log1p.f64 N))) #s(literal 1 binary64))","(*.f64 #s(literal -1 binary64) (pow.f64 (/.f64 #s(literal -1 binary64) (exp.f64 (neg.f64 (log1p.f64 N)))) #s(literal -1 binary64)))","(*.f64 (-.f64 N #s(literal 1 binary64)) (/.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64)))","(*.f64 (-.f64 N #s(literal 1 binary64)) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)))","(*.f64 #s(literal 1 binary64) (exp.f64 (neg.f64 (log1p.f64 N))))","(pow.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64))","(pow.f64 (exp.f64 (neg.f64 (log1p.f64 N))) #s(literal 1 binary64))","(pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))","(/.f64 (neg.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (+.f64 N #s(literal 1 binary64)))) (-.f64 #s(literal 1 binary64) N))","(/.f64 (neg.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)))) (neg.f64 (+.f64 N #s(literal 1 binary64))))","(/.f64 (neg.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)))) (neg.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))","(/.f64 (neg.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))) (-.f64 #s(literal 1 binary64) (*.f64 N N)))","(/.f64 (neg.f64 (-.f64 (pow.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) #s(literal 2 binary64)) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -2 binary64)))) (neg.f64 (+.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)))))","(/.f64 (neg.f64 (-.f64 (pow.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) #s(literal 3 binary64)) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -3 binary64)))) (neg.f64 (+.f64 (pow.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) #s(literal 2 binary64)) (+.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -2 binary64)) (*.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)))))))","(/.f64 (neg.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64))) (neg.f64 (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64)))))","(/.f64 (neg.f64 (-.f64 (*.f64 N (fma.f64 N N #s(literal -1 binary64))) (*.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64)))) (neg.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 2 binary64))))","(/.f64 (neg.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64))) (neg.f64 (*.f64 (+.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64)))))","(/.f64 (neg.f64 (neg.f64 (-.f64 #s(literal 1 binary64) N))) (neg.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)))))","(/.f64 (-.f64 (*.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) #s(literal 1 binary64)) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64))) #s(literal 1 binary64))","(/.f64 (-.f64 (*.f64 (/.f64 N (+.f64 N #s(literal 1 binary64))) (-.f64 N #s(literal 1 binary64))) (*.f64 (-.f64 N #s(literal 1 binary64)) (exp.f64 (neg.f64 (log1p.f64 N))))) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal 2 binary64)))","(/.f64 (-.f64 (*.f64 (/.f64 N (+.f64 N #s(literal 1 binary64))) (-.f64 #s(literal 1 binary64) (*.f64 N N))) (*.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (*.f64 (-.f64 N #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N))))","(/.f64 (-.f64 (*.f64 (/.f64 N (+.f64 N #s(literal 1 binary64))) (/.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64))) (*.f64 (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))) (*.f64 (-.f64 N #s(literal 1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64))))","(/.f64 (-.f64 (*.f64 (/.f64 N (+.f64 N #s(literal 1 binary64))) (fma.f64 N N #s(literal -1 binary64))) (*.f64 (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))) (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64))))","(/.f64 (-.f64 (*.f64 (neg.f64 N) (-.f64 N #s(literal 1 binary64))) (-.f64 #s(literal 1 binary64) N)) (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 N #s(literal 1 binary64))))","(/.f64 (-.f64 (*.f64 (neg.f64 N) (-.f64 #s(literal 1 binary64) (*.f64 N N))) (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal -1 binary64))) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 2 binary64)))","(/.f64 (-.f64 (*.f64 (neg.f64 N) (/.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64))) (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal 1 binary64))) (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64))))","(/.f64 (-.f64 (*.f64 (neg.f64 N) (fma.f64 N N #s(literal -1 binary64))) (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal 1 binary64))) (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (fma.f64 N N #s(literal -1 binary64))))","(/.f64 (-.f64 (*.f64 N (-.f64 N #s(literal 1 binary64))) (-.f64 N #s(literal 1 binary64))) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 N #s(literal 1 binary64))))","(/.f64 (-.f64 (*.f64 N (-.f64 #s(literal 1 binary64) (*.f64 N N))) (*.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64))) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N))))","(/.f64 (-.f64 (*.f64 N (/.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64))) (*.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64))) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64))))","(/.f64 (-.f64 (*.f64 #s(literal 1 binary64) (-.f64 N #s(literal 1 binary64))) (*.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) N) (exp.f64 (neg.f64 (log1p.f64 N))))) (*.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) N) (-.f64 N #s(literal 1 binary64))))","(/.f64 (-.f64 (*.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) (*.f64 N N))) (*.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) N) #s(literal -1 binary64))) (*.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) N) (-.f64 #s(literal 1 binary64) (*.f64 N N))))","(/.f64 (-.f64 (*.f64 #s(literal 1 binary64) (/.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64))) (*.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) N) #s(literal 1 binary64))) (*.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) N) (/.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64))))","(/.f64 (-.f64 (*.f64 #s(literal 1 binary64) (fma.f64 N N #s(literal -1 binary64))) (*.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) N) #s(literal 1 binary64))) (*.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) N) (fma.f64 N N #s(literal -1 binary64))))","(/.f64 (-.f64 (/.f64 N (+.f64 N #s(literal 1 binary64))) (exp.f64 (neg.f64 (log1p.f64 N)))) (-.f64 N #s(literal 1 binary64)))","(/.f64 (-.f64 (neg.f64 N) #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N)))","(/.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (+.f64 N #s(literal 1 binary64))) (-.f64 N #s(literal 1 binary64)))","(/.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64))) (+.f64 N #s(literal 1 binary64)))","(/.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))","(/.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64)))","(/.f64 (-.f64 (pow.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) #s(literal 2 binary64)) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -2 binary64))) (+.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64))))","(/.f64 (-.f64 (pow.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) #s(literal 3 binary64)) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -3 binary64))) (+.f64 (pow.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) #s(literal 2 binary64)) (+.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -2 binary64)) (*.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64))))))","(/.f64 (neg.f64 (-.f64 #s(literal 1 binary64) N)) (neg.f64 (*.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) (*.f64 N N)))))","(/.f64 (neg.f64 (-.f64 #s(literal 1 binary64) N)) (neg.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N))))","(/.f64 (neg.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (neg.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))))","(/.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64)) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64))))","(/.f64 (-.f64 (*.f64 N (fma.f64 N N #s(literal -1 binary64))) (*.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64))) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 2 binary64)))","(/.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64)) (*.f64 (+.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64))))","(/.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))","(/.f64 (/.f64 #s(literal -1 binary64) (+.f64 N #s(literal 1 binary64))) #s(literal -1 binary64))","(/.f64 (-.f64 #s(literal 1 binary64) N) (neg.f64 (*.f64 #s(literal 1 binary64) (fma.f64 N N #s(literal -1 binary64)))))","(/.f64 (-.f64 #s(literal 1 binary64) N) (*.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) (*.f64 N N))))","(/.f64 (-.f64 #s(literal 1 binary64) N) (-.f64 #s(literal 1 binary64) (*.f64 N N)))","(/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (neg.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) (+.f64 N #s(literal 1 binary64)))))","(/.f64 (exp.f64 (neg.f64 (log1p.f64 N))) #s(literal 1 binary64))","(/.f64 (fma.f64 N N #s(literal -1 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (+.f64 N #s(literal 1 binary64))))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))))","(/.f64 #s(literal -1 binary64) (neg.f64 (+.f64 N #s(literal 1 binary64))))","(/.f64 (-.f64 N #s(literal 1 binary64)) (*.f64 #s(literal 1 binary64) (fma.f64 N N #s(literal -1 binary64))))","(/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64)))","(/.f64 #s(literal 1 binary64) (neg.f64 (neg.f64 (+.f64 N #s(literal 1 binary64)))))","(/.f64 #s(literal 1 binary64) (/.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 1 binary64)))","(/.f64 #s(literal 1 binary64) (+.f64 N #s(literal 1 binary64)))","(neg.f64 (/.f64 #s(literal -1 binary64) (+.f64 N #s(literal 1 binary64))))","(fma.f64 (/.f64 N (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) (fma.f64 N N #s(literal 1 binary64)) (neg.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64))))","(fma.f64 (/.f64 N (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))) (+.f64 (pow.f64 N #s(literal 4 binary64)) (fma.f64 N N #s(literal 1 binary64))) (neg.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64))))","(fma.f64 N (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)) (neg.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64))))","(-.f64 (/.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) #s(literal 1 binary64)) (/.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64)))","(-.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)))","(exp.f64 (*.f64 (log1p.f64 N) #s(literal -1 binary64)))","(exp.f64 (neg.f64 (log1p.f64 N)))","(+.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) (neg.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64))))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))","(*.f64 (pow.f64 (/.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 4 binary64)))) #s(literal -1 binary64)) (pow.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (/.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 6 binary64)))) #s(literal -1 binary64)) (pow.f64 (+.f64 (+.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 4 binary64))) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal -1 binary64)))","(*.f64 (pow.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N))) #s(literal -1 binary64)) (pow.f64 (pow.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) #s(literal -1 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N))) #s(literal -1 binary64)) (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))))","(*.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)))) (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1 binary64)))","(*.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))","(*.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1/2 binary64)) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1/2 binary64)))","(*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal 1 binary64)) (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64)) (pow.f64 (/.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal -1 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64)) (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal 1 binary64)))","(*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))))","(*.f64 (-.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64)) (*.f64 N N)) (pow.f64 (fma.f64 N (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)))","(*.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64)))","(*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1 binary64))","(*.f64 (+.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 3 binary64)) (pow.f64 N #s(literal 3 binary64))) (pow.f64 (fma.f64 N (-.f64 N (fma.f64 N N #s(literal 1 binary64))) (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64))) #s(literal -1 binary64)))","(*.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64)) (pow.f64 (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 N N N)) #s(literal -1 binary64)))","(*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64)))","(*.f64 #s(literal -1 binary64) (/.f64 #s(literal -1 binary64) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))))","(*.f64 #s(literal 1 binary64) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))","(pow.f64 (*.f64 (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N)))) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))) #s(literal -1/2 binary64))","(pow.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1/2 binary64)) #s(literal 2 binary64))","(pow.f64 (/.f64 (fma.f64 N (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64)) (-.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64)) (*.f64 N N))) #s(literal -1 binary64))","(pow.f64 (/.f64 (fma.f64 N (-.f64 N (fma.f64 N N #s(literal 1 binary64))) (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64))) (+.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 3 binary64)) (pow.f64 N #s(literal 3 binary64)))) #s(literal -1 binary64))","(pow.f64 (/.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64))","(pow.f64 (/.f64 (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 N N N)) (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64))","(pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1 binary64))","(pow.f64 (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N)))) #s(literal -1 binary64))","(/.f64 (neg.f64 (*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 4 binary64))))) (neg.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64))))","(/.f64 (neg.f64 (*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 6 binary64))))) (neg.f64 (+.f64 (+.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 4 binary64))) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))))","(/.f64 (neg.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)))) (neg.f64 (-.f64 (*.f64 N N) (+.f64 N #s(literal 1 binary64)))))","(/.f64 (neg.f64 (-.f64 (*.f64 N N) (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64)))) (neg.f64 (-.f64 N (fma.f64 N N #s(literal 1 binary64)))))","(/.f64 (neg.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 3 binary64)))) (neg.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) (-.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)) (*.f64 (*.f64 N N) (+.f64 N #s(literal 1 binary64)))))))","(/.f64 (neg.f64 (neg.f64 (-.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64)) (*.f64 N N)))) (neg.f64 (neg.f64 (fma.f64 N (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64)))))","(/.f64 (neg.f64 (neg.f64 (+.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 3 binary64)) (pow.f64 N #s(literal 3 binary64))))) (neg.f64 (neg.f64 (fma.f64 N (-.f64 N (fma.f64 N N #s(literal 1 binary64))) (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64))))))","(/.f64 (neg.f64 (neg.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)))) (neg.f64 (neg.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)))))","(/.f64 (neg.f64 (neg.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64)))) (neg.f64 (neg.f64 (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 N N N)))))","(/.f64 (neg.f64 (*.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 4 binary64))))) (neg.f64 (*.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)))))","(/.f64 (neg.f64 (*.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 6 binary64))))) (neg.f64 (*.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) (+.f64 (+.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 4 binary64))) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))))))","(/.f64 (neg.f64 (*.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))))) (neg.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N))))","(/.f64 (neg.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64))) (neg.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal -1 binary64))))","(/.f64 (-.f64 (*.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64)) (fma.f64 N (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))) (*.f64 (fma.f64 N (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64)) (*.f64 N N))) (*.f64 (fma.f64 N (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64)) (fma.f64 N (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))))","(/.f64 (-.f64 (*.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 1 binary64))) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))))","(/.f64 (-.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N))) (*.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N))) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) (*.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N))) (-.f64 #s(literal 1 binary64) (fma.f64 N N N))))","(/.f64 (-.f64 (*.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) (fma.f64 N N N))) (*.f64 (/.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal 1 binary64)) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) (*.f64 (/.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) (fma.f64 N N N))))","(/.f64 (-.f64 (*.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) (fma.f64 N N N))) (*.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal 2 binary64)))","(/.f64 (*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 4 binary64)))) (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)))","(/.f64 (*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 6 binary64)))) (+.f64 (+.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 4 binary64))) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))))","(/.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64))) (-.f64 (*.f64 N N) (+.f64 N #s(literal 1 binary64))))","(/.f64 (-.f64 (*.f64 N N) (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64))) (-.f64 N (fma.f64 N N #s(literal 1 binary64))))","(/.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 3 binary64))) (+.f64 (pow.f64 N #s(literal 4 binary64)) (-.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)) (*.f64 (*.f64 N N) (+.f64 N #s(literal 1 binary64))))))","(/.f64 (neg.f64 (-.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64)) (*.f64 N N))) (neg.f64 (fma.f64 N (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))))","(/.f64 (neg.f64 (+.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 3 binary64)) (pow.f64 N #s(literal 3 binary64)))) (neg.f64 (fma.f64 N N (-.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64)) (*.f64 (fma.f64 N N #s(literal 1 binary64)) N)))))","(/.f64 (neg.f64 (+.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 3 binary64)) (pow.f64 N #s(literal 3 binary64)))) (neg.f64 (fma.f64 N (-.f64 N (fma.f64 N N #s(literal 1 binary64))) (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64)))))","(/.f64 (neg.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))))) (neg.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)))))","(/.f64 (neg.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64))) (neg.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))))","(/.f64 (neg.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64))) (neg.f64 (+.f64 #s(literal 1 binary64) (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (fma.f64 N N N)))))","(/.f64 (neg.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64))) (neg.f64 (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 N N N))))","(/.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 4 binary64)))) (neg.f64 (*.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)))))","(/.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 6 binary64)))) (neg.f64 (*.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) (+.f64 (+.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 4 binary64))) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))))))","(/.f64 (*.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 4 binary64)))) (*.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64))))","(/.f64 (*.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 6 binary64)))) (*.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) (+.f64 (+.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 4 binary64))) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))))","(/.f64 (*.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) (-.f64 #s(literal 1 binary64) (fma.f64 N N N)))","(/.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64)) (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal -1 binary64)))","(/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 4 binary64))) (*.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64))))","(/.f64 (-.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64)) (*.f64 N N)) (fma.f64 N (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64)))","(/.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)))","(/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 6 binary64))) (*.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) (+.f64 (+.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 4 binary64))) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))))","(/.f64 (+.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 3 binary64)) (pow.f64 N #s(literal 3 binary64))) (fma.f64 N N (-.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64)) (*.f64 (fma.f64 N N #s(literal 1 binary64)) N))))","(/.f64 (+.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 3 binary64)) (pow.f64 N #s(literal 3 binary64))) (fma.f64 N (-.f64 N (fma.f64 N N #s(literal 1 binary64))) (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64))))","(/.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64)) (+.f64 #s(literal 1 binary64) (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (fma.f64 N N N))))","(/.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64)) (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 N N N)))","(/.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) (neg.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N))))","(/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (-.f64 #s(literal 1 binary64) (fma.f64 N N N)))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (fma.f64 N (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64)) (-.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64)) (*.f64 N N)))))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (fma.f64 N (-.f64 N (fma.f64 N N #s(literal 1 binary64))) (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64))) (+.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 3 binary64)) (pow.f64 N #s(literal 3 binary64))))))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)))))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 N N N)) (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64)))))","(/.f64 #s(literal -1 binary64) (/.f64 #s(literal -1 binary64) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))","(/.f64 #s(literal 1 binary64) (/.f64 (fma.f64 N (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64)) (-.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64)) (*.f64 N N))))","(/.f64 #s(literal 1 binary64) (/.f64 (fma.f64 N (-.f64 N (fma.f64 N N #s(literal 1 binary64))) (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64))) (+.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 3 binary64)) (pow.f64 N #s(literal 3 binary64)))))","(/.f64 #s(literal 1 binary64) (/.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64))))","(/.f64 #s(literal 1 binary64) (/.f64 (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 N N N)) (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64))))","(/.f64 #s(literal 1 binary64) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N)))))","(neg.f64 (/.f64 #s(literal -1 binary64) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))))","(fma.f64 (exp.f64 (log.f64 N)) (exp.f64 (log.f64 N)) (+.f64 N #s(literal 1 binary64)))","(fma.f64 (exp.f64 (log.f64 N)) (+.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (/.f64 N #s(literal 1 binary64)) #s(literal 1 binary64)) (+.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (/.f64 N (-.f64 N #s(literal 1 binary64))) #s(literal 1 binary64)) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (*.f64 N (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) #s(literal 1 binary64)) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (sqrt.f64 (fma.f64 N N N)) #s(literal 1 binary64)) (pow.f64 (sqrt.f64 (fma.f64 N N N)) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) N) #s(literal 1 binary64)) (pow.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 N N)) #s(literal 1 binary64)) (pow.f64 (pow.f64 (*.f64 N (-.f64 N #s(literal 1 binary64))) #s(literal -1 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) (pow.f64 N #s(literal 6 binary64))) #s(literal 1 binary64)) (pow.f64 (pow.f64 (fma.f64 N (-.f64 N (*.f64 N N)) (pow.f64 N #s(literal 4 binary64))) #s(literal -1 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64)) (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N))","(fma.f64 (pow.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))) #s(literal -1 binary64)) (pow.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) (fma.f64 N N #s(literal 1 binary64))) #s(literal -1 binary64)) (*.f64 N N))","(fma.f64 (pow.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) #s(literal 1 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (pow.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64)))) #s(literal 1 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (pow.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) #s(literal 1 binary64)) (+.f64 N #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (pow.f64 (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (+.f64 N #s(literal 1 binary64))) #s(literal 1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (pow.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1/2 binary64))) #s(literal 1 binary64)) (pow.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1/2 binary64)) #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (pow.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 1/2 binary64)) #s(literal 1 binary64)) (pow.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 1/2 binary64)) #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (pow.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64)) (pow.f64 (pow.f64 (fma.f64 N (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (pow.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) #s(literal 1 binary64)) (pow.f64 (*.f64 N (-.f64 #s(literal 1 binary64) (*.f64 N N))) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) #s(literal 1 binary64)) (pow.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (pow.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64)) (pow.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) N) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64)) (pow.f64 (/.f64 N (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64))) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64)) (pow.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (pow.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (pow.f64 (/.f64 N (-.f64 #s(literal 1 binary64) N)) #s(literal 1 binary64)) (pow.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal 1 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (/.f64 N (-.f64 #s(literal 1 binary64) N)) #s(literal 1 binary64)) (pow.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal 1 binary64)) (pow.f64 (*.f64 (/.f64 N (-.f64 #s(literal 1 binary64) N)) #s(literal 1 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal 1 binary64)) (pow.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal 1 binary64)) (pow.f64 (/.f64 N (-.f64 #s(literal 1 binary64) N)) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64)) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64)) (*.f64 (neg.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64))))","(fma.f64 (pow.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64)) (pow.f64 (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 N N N)) #s(literal -1 binary64)) (*.f64 (neg.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64))))","(fma.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 3 binary64))) #s(literal -1 binary64)) (pow.f64 (pow.f64 (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64)) (*.f64 (neg.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64))))","(fma.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 3 binary64))) #s(literal -1 binary64)) (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1 binary64)) (*.f64 (neg.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64))))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64)))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (+.f64 N #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (/.f64 N #s(literal 1 binary64)) (+.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (/.f64 N (-.f64 N #s(literal 1 binary64))) (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64))","(fma.f64 (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (+.f64 N #s(literal 1 binary64))) (-.f64 N #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1/2 binary64))) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1/2 binary64)) (*.f64 N N))","(fma.f64 (*.f64 N (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 1/2 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 1/2 binary64)) (*.f64 N N))","(fma.f64 (sqrt.f64 (fma.f64 N N N)) (sqrt.f64 (fma.f64 N N N)) #s(literal 1 binary64))","(fma.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) N) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64)) (pow.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N))","(fma.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64)) #s(literal 1 binary64) (*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64)) (neg.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))))","(fma.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (pow.f64 (/.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N))","(fma.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) N) #s(literal 1 binary64))","(fma.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (/.f64 N (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)) (*.f64 N N))","(fma.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)) N)","(fma.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 N N)) (pow.f64 (*.f64 N (-.f64 N #s(literal 1 binary64))) #s(literal -1 binary64)) #s(literal 1 binary64))","(fma.f64 (neg.f64 N) (neg.f64 N) (+.f64 N #s(literal 1 binary64)))","(fma.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 #s(literal -1 binary64) (fma.f64 N N #s(literal -1 binary64)) (pow.f64 N #s(literal 4 binary64))) #s(literal -1 binary64)) N)","(fma.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 N (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N))","(fma.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) (pow.f64 N #s(literal 6 binary64))) (pow.f64 (fma.f64 N (-.f64 N (*.f64 N N)) (pow.f64 N #s(literal 4 binary64))) #s(literal -1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal -1 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (*.f64 (neg.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64))))","(fma.f64 (fma.f64 N N N) #s(literal 1 binary64) #s(literal 1 binary64))","(fma.f64 (/.f64 N (-.f64 #s(literal 1 binary64) N)) (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (/.f64 N (-.f64 #s(literal 1 binary64) N)) (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) (pow.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal -1 binary64)) #s(literal -1 binary64)) (*.f64 N N))","(fma.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) (*.f64 N (-.f64 #s(literal 1 binary64) (*.f64 N N))) #s(literal 1 binary64))","(fma.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N)) (*.f64 N N))","(fma.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (*.f64 (/.f64 N (-.f64 #s(literal 1 binary64) N)) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (/.f64 N (-.f64 #s(literal 1 binary64) N)) #s(literal 1 binary64))","(fma.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) (*.f64 N N))","(fma.f64 (*.f64 N N) #s(literal 1 binary64) (+.f64 N #s(literal 1 binary64)))","(fma.f64 (fma.f64 N N #s(literal -1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N))","(fma.f64 #s(literal -1 binary64) (pow.f64 (/.f64 #s(literal -1 binary64) (exp.f64 (neg.f64 (log1p.f64 N)))) #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 #s(literal -1 binary64) (/.f64 #s(literal -1 binary64) (exp.f64 (neg.f64 (log1p.f64 N)))) (*.f64 N N))","(fma.f64 (+.f64 N #s(literal 1 binary64)) (exp.f64 (log.f64 N)) #s(literal 1 binary64))","(fma.f64 (+.f64 N #s(literal 1 binary64)) (pow.f64 (/.f64 (-.f64 #s(literal 1 binary64) N) (-.f64 #s(literal 1 binary64) N)) #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (+.f64 N #s(literal 1 binary64)) (/.f64 (-.f64 #s(literal 1 binary64) N) (-.f64 #s(literal 1 binary64) N)) (*.f64 N N))","(fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))","(fma.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 1 binary64) (*.f64 N N))","(fma.f64 N (+.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 N N (+.f64 N #s(literal 1 binary64)))","(fma.f64 N #s(literal 1 binary64) (fma.f64 N N #s(literal 1 binary64)))","(fma.f64 #s(literal 1 binary64) (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64)) (*.f64 (neg.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64))))","(fma.f64 #s(literal 1 binary64) (fma.f64 N N N) #s(literal 1 binary64))","(fma.f64 #s(literal 1 binary64) (*.f64 N N) (+.f64 N #s(literal 1 binary64)))","(fma.f64 #s(literal 1 binary64) (+.f64 N #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 #s(literal 1 binary64) N (fma.f64 N N #s(literal 1 binary64)))","(-.f64 (/.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64)) (fma.f64 N (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))) (/.f64 (*.f64 N N) (fma.f64 N (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))))","(-.f64 (/.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64)))","(-.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64)) (/.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (-.f64 #s(literal 1 binary64) (fma.f64 N N N))))","(exp.f64 (log1p.f64 (fma.f64 N N N)))","(+.f64 (*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64)) #s(literal 1 binary64)) (*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64)) (neg.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))))","(+.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64)) (*.f64 (neg.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64))))","(+.f64 (fma.f64 N N N) #s(literal 1 binary64))","(+.f64 (*.f64 N N) (+.f64 N #s(literal 1 binary64)))","(+.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 N N))","(+.f64 (fma.f64 N N #s(literal 1 binary64)) N)","(+.f64 N (fma.f64 N N #s(literal 1 binary64)))","(+.f64 #s(literal 1 binary64) (fma.f64 N N N))","(*.f64 (pow.f64 (/.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 4 binary64)))) #s(literal -1 binary64)) (pow.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (/.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 6 binary64)))) #s(literal -1 binary64)) (pow.f64 (+.f64 (+.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 4 binary64))) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal -1 binary64)))","(*.f64 (pow.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N))) #s(literal -1 binary64)) (pow.f64 (pow.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) #s(literal -1 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N))) #s(literal -1 binary64)) (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))))","(*.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)))) (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1 binary64)))","(*.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))","(*.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1/2 binary64)) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1/2 binary64)))","(*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal 1 binary64)) (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64)) (pow.f64 (/.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal -1 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64)) (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal 1 binary64)))","(*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))))","(*.f64 (-.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64)) (*.f64 N N)) (pow.f64 (fma.f64 N (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)))","(*.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64)))","(*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1 binary64))","(*.f64 (+.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 3 binary64)) (pow.f64 N #s(literal 3 binary64))) (pow.f64 (fma.f64 N (-.f64 N (fma.f64 N N #s(literal 1 binary64))) (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64))) #s(literal -1 binary64)))","(*.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64)) (pow.f64 (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 N N N)) #s(literal -1 binary64)))","(*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64)))","(*.f64 #s(literal -1 binary64) (/.f64 #s(literal -1 binary64) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))))","(*.f64 #s(literal 1 binary64) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))","(pow.f64 (*.f64 (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N)))) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))) #s(literal -1/2 binary64))","(pow.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1/2 binary64)) #s(literal 2 binary64))","(pow.f64 (/.f64 (fma.f64 N (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64)) (-.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64)) (*.f64 N N))) #s(literal -1 binary64))","(pow.f64 (/.f64 (fma.f64 N (-.f64 N (fma.f64 N N #s(literal 1 binary64))) (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64))) (+.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 3 binary64)) (pow.f64 N #s(literal 3 binary64)))) #s(literal -1 binary64))","(pow.f64 (/.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64))","(pow.f64 (/.f64 (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 N N N)) (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64))","(pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1 binary64))","(pow.f64 (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N)))) #s(literal -1 binary64))","(/.f64 (neg.f64 (*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 4 binary64))))) (neg.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64))))","(/.f64 (neg.f64 (*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 6 binary64))))) (neg.f64 (+.f64 (+.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 4 binary64))) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))))","(/.f64 (neg.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)))) (neg.f64 (-.f64 (*.f64 N N) (+.f64 N #s(literal 1 binary64)))))","(/.f64 (neg.f64 (-.f64 (*.f64 N N) (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64)))) (neg.f64 (-.f64 N (fma.f64 N N #s(literal 1 binary64)))))","(/.f64 (neg.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 3 binary64)))) (neg.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) (-.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)) (*.f64 (*.f64 N N) (+.f64 N #s(literal 1 binary64)))))))","(/.f64 (neg.f64 (neg.f64 (-.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64)) (*.f64 N N)))) (neg.f64 (neg.f64 (fma.f64 N (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64)))))","(/.f64 (neg.f64 (neg.f64 (+.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 3 binary64)) (pow.f64 N #s(literal 3 binary64))))) (neg.f64 (neg.f64 (fma.f64 N (-.f64 N (fma.f64 N N #s(literal 1 binary64))) (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64))))))","(/.f64 (neg.f64 (neg.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)))) (neg.f64 (neg.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)))))","(/.f64 (neg.f64 (neg.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64)))) (neg.f64 (neg.f64 (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 N N N)))))","(/.f64 (neg.f64 (*.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 4 binary64))))) (neg.f64 (*.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)))))","(/.f64 (neg.f64 (*.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 6 binary64))))) (neg.f64 (*.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) (+.f64 (+.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 4 binary64))) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))))))","(/.f64 (neg.f64 (*.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))))) (neg.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N))))","(/.f64 (neg.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64))) (neg.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal -1 binary64))))","(/.f64 (-.f64 (*.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64)) (fma.f64 N (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))) (*.f64 (fma.f64 N (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64)) (*.f64 N N))) (*.f64 (fma.f64 N (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64)) (fma.f64 N (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))))","(/.f64 (-.f64 (*.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 1 binary64))) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))))","(/.f64 (-.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N))) (*.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N))) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) (*.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N))) (-.f64 #s(literal 1 binary64) (fma.f64 N N N))))","(/.f64 (-.f64 (*.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) (fma.f64 N N N))) (*.f64 (/.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal 1 binary64)) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) (*.f64 (/.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) (fma.f64 N N N))))","(/.f64 (-.f64 (*.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) (fma.f64 N N N))) (*.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal 2 binary64)))","(/.f64 (*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 4 binary64)))) (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)))","(/.f64 (*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 6 binary64)))) (+.f64 (+.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 4 binary64))) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))))","(/.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64))) (-.f64 (*.f64 N N) (+.f64 N #s(literal 1 binary64))))","(/.f64 (-.f64 (*.f64 N N) (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64))) (-.f64 N (fma.f64 N N #s(literal 1 binary64))))","(/.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 3 binary64))) (+.f64 (pow.f64 N #s(literal 4 binary64)) (-.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)) (*.f64 (*.f64 N N) (+.f64 N #s(literal 1 binary64))))))","(/.f64 (neg.f64 (-.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64)) (*.f64 N N))) (neg.f64 (fma.f64 N (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))))","(/.f64 (neg.f64 (+.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 3 binary64)) (pow.f64 N #s(literal 3 binary64)))) (neg.f64 (fma.f64 N N (-.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64)) (*.f64 (fma.f64 N N #s(literal 1 binary64)) N)))))","(/.f64 (neg.f64 (+.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 3 binary64)) (pow.f64 N #s(literal 3 binary64)))) (neg.f64 (fma.f64 N (-.f64 N (fma.f64 N N #s(literal 1 binary64))) (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64)))))","(/.f64 (neg.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))))) (neg.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)))))","(/.f64 (neg.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64))) (neg.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))))","(/.f64 (neg.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64))) (neg.f64 (+.f64 #s(literal 1 binary64) (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (fma.f64 N N N)))))","(/.f64 (neg.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64))) (neg.f64 (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 N N N))))","(/.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 4 binary64)))) (neg.f64 (*.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)))))","(/.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 6 binary64)))) (neg.f64 (*.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) (+.f64 (+.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 4 binary64))) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))))))","(/.f64 (*.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 4 binary64)))) (*.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64))))","(/.f64 (*.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 6 binary64)))) (*.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) (+.f64 (+.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 4 binary64))) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))))","(/.f64 (*.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) (-.f64 #s(literal 1 binary64) (fma.f64 N N N)))","(/.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64)) (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal -1 binary64)))","(/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 4 binary64))) (*.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64))))","(/.f64 (-.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64)) (*.f64 N N)) (fma.f64 N (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64)))","(/.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)))","(/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 6 binary64))) (*.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) (+.f64 (+.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 4 binary64))) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))))","(/.f64 (+.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 3 binary64)) (pow.f64 N #s(literal 3 binary64))) (fma.f64 N N (-.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64)) (*.f64 (fma.f64 N N #s(literal 1 binary64)) N))))","(/.f64 (+.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 3 binary64)) (pow.f64 N #s(literal 3 binary64))) (fma.f64 N (-.f64 N (fma.f64 N N #s(literal 1 binary64))) (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64))))","(/.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64)) (+.f64 #s(literal 1 binary64) (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (fma.f64 N N N))))","(/.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64)) (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 N N N)))","(/.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) (neg.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N))))","(/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (-.f64 #s(literal 1 binary64) (fma.f64 N N N)))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (fma.f64 N (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64)) (-.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64)) (*.f64 N N)))))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (fma.f64 N (-.f64 N (fma.f64 N N #s(literal 1 binary64))) (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64))) (+.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 3 binary64)) (pow.f64 N #s(literal 3 binary64))))))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)))))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 N N N)) (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64)))))","(/.f64 #s(literal -1 binary64) (/.f64 #s(literal -1 binary64) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))","(/.f64 #s(literal 1 binary64) (/.f64 (fma.f64 N (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64)) (-.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64)) (*.f64 N N))))","(/.f64 #s(literal 1 binary64) (/.f64 (fma.f64 N (-.f64 N (fma.f64 N N #s(literal 1 binary64))) (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64))) (+.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 3 binary64)) (pow.f64 N #s(literal 3 binary64)))))","(/.f64 #s(literal 1 binary64) (/.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64))))","(/.f64 #s(literal 1 binary64) (/.f64 (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 N N N)) (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64))))","(/.f64 #s(literal 1 binary64) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N)))))","(neg.f64 (/.f64 #s(literal -1 binary64) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))))","(fma.f64 (exp.f64 (log.f64 N)) (exp.f64 (log.f64 N)) (+.f64 N #s(literal 1 binary64)))","(fma.f64 (exp.f64 (log.f64 N)) (+.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (/.f64 N #s(literal 1 binary64)) #s(literal 1 binary64)) (+.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (/.f64 N (-.f64 N #s(literal 1 binary64))) #s(literal 1 binary64)) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (*.f64 N (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) #s(literal 1 binary64)) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (sqrt.f64 (fma.f64 N N N)) #s(literal 1 binary64)) (pow.f64 (sqrt.f64 (fma.f64 N N N)) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) N) #s(literal 1 binary64)) (pow.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 N N)) #s(literal 1 binary64)) (pow.f64 (pow.f64 (*.f64 N (-.f64 N #s(literal 1 binary64))) #s(literal -1 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) (pow.f64 N #s(literal 6 binary64))) #s(literal 1 binary64)) (pow.f64 (pow.f64 (fma.f64 N (-.f64 N (*.f64 N N)) (pow.f64 N #s(literal 4 binary64))) #s(literal -1 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64)) (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N))","(fma.f64 (pow.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))) #s(literal -1 binary64)) (pow.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) (fma.f64 N N #s(literal 1 binary64))) #s(literal -1 binary64)) (*.f64 N N))","(fma.f64 (pow.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) #s(literal 1 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (pow.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64)))) #s(literal 1 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (pow.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) #s(literal 1 binary64)) (+.f64 N #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (pow.f64 (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (+.f64 N #s(literal 1 binary64))) #s(literal 1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (pow.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1/2 binary64))) #s(literal 1 binary64)) (pow.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1/2 binary64)) #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (pow.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 1/2 binary64)) #s(literal 1 binary64)) (pow.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 1/2 binary64)) #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (pow.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64)) (pow.f64 (pow.f64 (fma.f64 N (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (pow.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) #s(literal 1 binary64)) (pow.f64 (*.f64 N (-.f64 #s(literal 1 binary64) (*.f64 N N))) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) #s(literal 1 binary64)) (pow.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (pow.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64)) (pow.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) N) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64)) (pow.f64 (/.f64 N (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64))) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64)) (pow.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (pow.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (pow.f64 (/.f64 N (-.f64 #s(literal 1 binary64) N)) #s(literal 1 binary64)) (pow.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal 1 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (/.f64 N (-.f64 #s(literal 1 binary64) N)) #s(literal 1 binary64)) (pow.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal 1 binary64)) (pow.f64 (*.f64 (/.f64 N (-.f64 #s(literal 1 binary64) N)) #s(literal 1 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal 1 binary64)) (pow.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal 1 binary64)) (pow.f64 (/.f64 N (-.f64 #s(literal 1 binary64) N)) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64)) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64)) (*.f64 (neg.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64))))","(fma.f64 (pow.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64)) (pow.f64 (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 N N N)) #s(literal -1 binary64)) (*.f64 (neg.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64))))","(fma.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 3 binary64))) #s(literal -1 binary64)) (pow.f64 (pow.f64 (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64)) (*.f64 (neg.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64))))","(fma.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 3 binary64))) #s(literal -1 binary64)) (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1 binary64)) (*.f64 (neg.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64))))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64)))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (+.f64 N #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (/.f64 N #s(literal 1 binary64)) (+.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (/.f64 N (-.f64 N #s(literal 1 binary64))) (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64))","(fma.f64 (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (+.f64 N #s(literal 1 binary64))) (-.f64 N #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1/2 binary64))) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1/2 binary64)) (*.f64 N N))","(fma.f64 (*.f64 N (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 1/2 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 1/2 binary64)) (*.f64 N N))","(fma.f64 (sqrt.f64 (fma.f64 N N N)) (sqrt.f64 (fma.f64 N N N)) #s(literal 1 binary64))","(fma.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) N) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64)) (pow.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N))","(fma.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64)) #s(literal 1 binary64) (*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64)) (neg.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))))","(fma.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (pow.f64 (/.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N))","(fma.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) N) #s(literal 1 binary64))","(fma.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (/.f64 N (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)) (*.f64 N N))","(fma.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)) N)","(fma.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 N N)) (pow.f64 (*.f64 N (-.f64 N #s(literal 1 binary64))) #s(literal -1 binary64)) #s(literal 1 binary64))","(fma.f64 (neg.f64 N) (neg.f64 N) (+.f64 N #s(literal 1 binary64)))","(fma.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 #s(literal -1 binary64) (fma.f64 N N #s(literal -1 binary64)) (pow.f64 N #s(literal 4 binary64))) #s(literal -1 binary64)) N)","(fma.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 N (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N))","(fma.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) (pow.f64 N #s(literal 6 binary64))) (pow.f64 (fma.f64 N (-.f64 N (*.f64 N N)) (pow.f64 N #s(literal 4 binary64))) #s(literal -1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal -1 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (*.f64 (neg.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64))))","(fma.f64 (fma.f64 N N N) #s(literal 1 binary64) #s(literal 1 binary64))","(fma.f64 (/.f64 N (-.f64 #s(literal 1 binary64) N)) (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (/.f64 N (-.f64 #s(literal 1 binary64) N)) (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) (pow.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal -1 binary64)) #s(literal -1 binary64)) (*.f64 N N))","(fma.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) (*.f64 N (-.f64 #s(literal 1 binary64) (*.f64 N N))) #s(literal 1 binary64))","(fma.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N)) (*.f64 N N))","(fma.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (*.f64 (/.f64 N (-.f64 #s(literal 1 binary64) N)) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (/.f64 N (-.f64 #s(literal 1 binary64) N)) #s(literal 1 binary64))","(fma.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) (*.f64 N N))","(fma.f64 (*.f64 N N) #s(literal 1 binary64) (+.f64 N #s(literal 1 binary64)))","(fma.f64 (fma.f64 N N #s(literal -1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N))","(fma.f64 #s(literal -1 binary64) (pow.f64 (/.f64 #s(literal -1 binary64) (exp.f64 (neg.f64 (log1p.f64 N)))) #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 #s(literal -1 binary64) (/.f64 #s(literal -1 binary64) (exp.f64 (neg.f64 (log1p.f64 N)))) (*.f64 N N))","(fma.f64 (+.f64 N #s(literal 1 binary64)) (exp.f64 (log.f64 N)) #s(literal 1 binary64))","(fma.f64 (+.f64 N #s(literal 1 binary64)) (pow.f64 (/.f64 (-.f64 #s(literal 1 binary64) N) (-.f64 #s(literal 1 binary64) N)) #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (+.f64 N #s(literal 1 binary64)) (/.f64 (-.f64 #s(literal 1 binary64) N) (-.f64 #s(literal 1 binary64) N)) (*.f64 N N))","(fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))","(fma.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 1 binary64) (*.f64 N N))","(fma.f64 N (+.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 N N (+.f64 N #s(literal 1 binary64)))","(fma.f64 N #s(literal 1 binary64) (fma.f64 N N #s(literal 1 binary64)))","(fma.f64 #s(literal 1 binary64) (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64)) (*.f64 (neg.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64))))","(fma.f64 #s(literal 1 binary64) (fma.f64 N N N) #s(literal 1 binary64))","(fma.f64 #s(literal 1 binary64) (*.f64 N N) (+.f64 N #s(literal 1 binary64)))","(fma.f64 #s(literal 1 binary64) (+.f64 N #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 #s(literal 1 binary64) N (fma.f64 N N #s(literal 1 binary64)))","(-.f64 (/.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64)) (fma.f64 N (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))) (/.f64 (*.f64 N N) (fma.f64 N (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))))","(-.f64 (/.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64)))","(-.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64)) (/.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (-.f64 #s(literal 1 binary64) (fma.f64 N N N))))","(exp.f64 (log1p.f64 (fma.f64 N N N)))","(+.f64 (*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64)) #s(literal 1 binary64)) (*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64)) (neg.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))))","(+.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64)) (*.f64 (neg.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64))))","(+.f64 (fma.f64 N N N) #s(literal 1 binary64))","(+.f64 (*.f64 N N) (+.f64 N #s(literal 1 binary64)))","(+.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 N N))","(+.f64 (fma.f64 N N #s(literal 1 binary64)) N)","(+.f64 N (fma.f64 N N #s(literal 1 binary64)))","(+.f64 #s(literal 1 binary64) (fma.f64 N N N))","(*.f64 (*.f64 N (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1/2 binary64))) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1/2 binary64)))","(*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1/2 binary64)) (*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1/2 binary64)) N))","(*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) N)","(*.f64 N (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)))","(/.f64 (neg.f64 N) (neg.f64 (-.f64 #s(literal 1 binary64) N)))","(/.f64 N (-.f64 #s(literal 1 binary64) N))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))","(*.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64))) (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) (fma.f64 N N #s(literal -1 binary64)))","(*.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64))) (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64))) (fma.f64 #s(literal -1 binary64) (fma.f64 N N #s(literal -1 binary64)) (pow.f64 N #s(literal 4 binary64))))","(*.f64 (neg.f64 (+.f64 N #s(literal 1 binary64))) (-.f64 N #s(literal 1 binary64)))","(*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64))) (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)))","(*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64))) (pow.f64 (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)) #s(literal -1 binary64)))","(*.f64 #s(literal -1 binary64) (fma.f64 N N #s(literal -1 binary64)))","(*.f64 (+.f64 N #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) N))","(pow.f64 (/.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64)))) #s(literal -1 binary64))","(pow.f64 (/.f64 (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64)))) #s(literal -1 binary64))","(/.f64 (neg.f64 (neg.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)))) (neg.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) (fma.f64 N N #s(literal 1 binary64)))))","(/.f64 (neg.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64))))) (neg.f64 (neg.f64 (fma.f64 N N #s(literal 1 binary64)))))","(/.f64 (neg.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64))))) (neg.f64 (neg.f64 (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)))))","(/.f64 (neg.f64 (neg.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)))) (neg.f64 (fma.f64 N N #s(literal 1 binary64))))","(/.f64 (-.f64 (*.f64 #s(literal 1 binary64) (fma.f64 N N #s(literal 1 binary64))) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (pow.f64 N #s(literal 4 binary64)))) (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64)))","(/.f64 (-.f64 (*.f64 #s(literal 1 binary64) (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64))) (*.f64 (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)) (pow.f64 N #s(literal 6 binary64)))) (*.f64 (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)) (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64))))","(/.f64 (neg.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))) (neg.f64 (neg.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) (fma.f64 N N #s(literal 1 binary64))))))","(/.f64 (neg.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))) (+.f64 (pow.f64 N #s(literal 4 binary64)) (fma.f64 N N #s(literal 1 binary64))))","(/.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64)))) (neg.f64 (fma.f64 N N #s(literal 1 binary64))))","(/.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64)))) (neg.f64 (+.f64 #s(literal 1 binary64) (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 #s(literal 1 binary64) (*.f64 (neg.f64 N) N))))))","(/.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64)))) (neg.f64 (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64))))","(/.f64 (neg.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) (neg.f64 (neg.f64 (fma.f64 N N #s(literal 1 binary64)))))","(/.f64 (neg.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) (fma.f64 N N #s(literal 1 binary64)))","(/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64))) (fma.f64 N N #s(literal 1 binary64)))","(/.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (neg.f64 (fma.f64 N N #s(literal 1 binary64))))","(/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64))) (+.f64 #s(literal 1 binary64) (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 #s(literal 1 binary64) (*.f64 (neg.f64 N) N)))))","(/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64))) (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)))","(/.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)) (neg.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) (fma.f64 N N #s(literal 1 binary64)))))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64))))))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64))))))","(/.f64 #s(literal 1 binary64) (/.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64)))))","(/.f64 #s(literal 1 binary64) (/.f64 (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64)))))","(neg.f64 (fma.f64 N N #s(literal -1 binary64)))","(fma.f64 (neg.f64 N) N #s(literal 1 binary64))","(fma.f64 (*.f64 N N) #s(literal -1 binary64) #s(literal 1 binary64))","(fma.f64 #s(literal -1 binary64) (*.f64 N N) #s(literal 1 binary64))","(fma.f64 N (*.f64 N #s(literal -1 binary64)) #s(literal 1 binary64))","(fma.f64 N (neg.f64 N) #s(literal 1 binary64))","(-.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (/.f64 (pow.f64 N #s(literal 4 binary64)) (fma.f64 N N #s(literal 1 binary64))))","(-.f64 (pow.f64 (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)) #s(literal -1 binary64)) (/.f64 (pow.f64 N #s(literal 6 binary64)) (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64))))","(-.f64 #s(literal 0 binary64) (fma.f64 N N #s(literal -1 binary64)))","(-.f64 #s(literal 1 binary64) (*.f64 N N))","(+.f64 (*.f64 (neg.f64 N) N) #s(literal 1 binary64))","(+.f64 #s(literal 1 binary64) (*.f64 (*.f64 (neg.f64 N) N) #s(literal 1 binary64)))","(+.f64 #s(literal 1 binary64) (*.f64 (neg.f64 N) N))","(*.f64 (pow.f64 (/.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 4 binary64)))) #s(literal -1 binary64)) (pow.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (/.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 6 binary64)))) #s(literal -1 binary64)) (pow.f64 (+.f64 (+.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 4 binary64))) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal -1 binary64)))","(*.f64 (pow.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N))) #s(literal -1 binary64)) (pow.f64 (pow.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) #s(literal -1 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N))) #s(literal -1 binary64)) (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))))","(*.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)))) (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1 binary64)))","(*.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))","(*.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1/2 binary64)) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1/2 binary64)))","(*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal 1 binary64)) (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64)) (pow.f64 (/.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal -1 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64)) (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal 1 binary64)))","(*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))))","(*.f64 (-.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64)) (*.f64 N N)) (pow.f64 (fma.f64 N (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)))","(*.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64)))","(*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1 binary64))","(*.f64 (+.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 3 binary64)) (pow.f64 N #s(literal 3 binary64))) (pow.f64 (fma.f64 N (-.f64 N (fma.f64 N N #s(literal 1 binary64))) (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64))) #s(literal -1 binary64)))","(*.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64)) (pow.f64 (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 N N N)) #s(literal -1 binary64)))","(*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64)))","(*.f64 #s(literal -1 binary64) (/.f64 #s(literal -1 binary64) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))))","(*.f64 #s(literal 1 binary64) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))","(pow.f64 (*.f64 (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N)))) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))) #s(literal -1/2 binary64))","(pow.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1/2 binary64)) #s(literal 2 binary64))","(pow.f64 (/.f64 (fma.f64 N (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64)) (-.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64)) (*.f64 N N))) #s(literal -1 binary64))","(pow.f64 (/.f64 (fma.f64 N (-.f64 N (fma.f64 N N #s(literal 1 binary64))) (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64))) (+.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 3 binary64)) (pow.f64 N #s(literal 3 binary64)))) #s(literal -1 binary64))","(pow.f64 (/.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64))","(pow.f64 (/.f64 (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 N N N)) (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64))","(pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1 binary64))","(pow.f64 (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N)))) #s(literal -1 binary64))","(/.f64 (neg.f64 (*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 4 binary64))))) (neg.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64))))","(/.f64 (neg.f64 (*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 6 binary64))))) (neg.f64 (+.f64 (+.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 4 binary64))) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))))","(/.f64 (neg.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)))) (neg.f64 (-.f64 (*.f64 N N) (+.f64 N #s(literal 1 binary64)))))","(/.f64 (neg.f64 (-.f64 (*.f64 N N) (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64)))) (neg.f64 (-.f64 N (fma.f64 N N #s(literal 1 binary64)))))","(/.f64 (neg.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 3 binary64)))) (neg.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) (-.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)) (*.f64 (*.f64 N N) (+.f64 N #s(literal 1 binary64)))))))","(/.f64 (neg.f64 (neg.f64 (-.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64)) (*.f64 N N)))) (neg.f64 (neg.f64 (fma.f64 N (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64)))))","(/.f64 (neg.f64 (neg.f64 (+.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 3 binary64)) (pow.f64 N #s(literal 3 binary64))))) (neg.f64 (neg.f64 (fma.f64 N (-.f64 N (fma.f64 N N #s(literal 1 binary64))) (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64))))))","(/.f64 (neg.f64 (neg.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)))) (neg.f64 (neg.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)))))","(/.f64 (neg.f64 (neg.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64)))) (neg.f64 (neg.f64 (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 N N N)))))","(/.f64 (neg.f64 (*.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 4 binary64))))) (neg.f64 (*.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)))))","(/.f64 (neg.f64 (*.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 6 binary64))))) (neg.f64 (*.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) (+.f64 (+.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 4 binary64))) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))))))","(/.f64 (neg.f64 (*.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))))) (neg.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N))))","(/.f64 (neg.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64))) (neg.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal -1 binary64))))","(/.f64 (-.f64 (*.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64)) (fma.f64 N (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))) (*.f64 (fma.f64 N (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64)) (*.f64 N N))) (*.f64 (fma.f64 N (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64)) (fma.f64 N (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))))","(/.f64 (-.f64 (*.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 1 binary64))) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))))","(/.f64 (-.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N))) (*.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N))) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) (*.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N))) (-.f64 #s(literal 1 binary64) (fma.f64 N N N))))","(/.f64 (-.f64 (*.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) (fma.f64 N N N))) (*.f64 (/.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal 1 binary64)) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) (*.f64 (/.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) (fma.f64 N N N))))","(/.f64 (-.f64 (*.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) (fma.f64 N N N))) (*.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal 2 binary64)))","(/.f64 (*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 4 binary64)))) (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)))","(/.f64 (*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 6 binary64)))) (+.f64 (+.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 4 binary64))) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))))","(/.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64))) (-.f64 (*.f64 N N) (+.f64 N #s(literal 1 binary64))))","(/.f64 (-.f64 (*.f64 N N) (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64))) (-.f64 N (fma.f64 N N #s(literal 1 binary64))))","(/.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 3 binary64))) (+.f64 (pow.f64 N #s(literal 4 binary64)) (-.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)) (*.f64 (*.f64 N N) (+.f64 N #s(literal 1 binary64))))))","(/.f64 (neg.f64 (-.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64)) (*.f64 N N))) (neg.f64 (fma.f64 N (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))))","(/.f64 (neg.f64 (+.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 3 binary64)) (pow.f64 N #s(literal 3 binary64)))) (neg.f64 (fma.f64 N N (-.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64)) (*.f64 (fma.f64 N N #s(literal 1 binary64)) N)))))","(/.f64 (neg.f64 (+.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 3 binary64)) (pow.f64 N #s(literal 3 binary64)))) (neg.f64 (fma.f64 N (-.f64 N (fma.f64 N N #s(literal 1 binary64))) (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64)))))","(/.f64 (neg.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))))) (neg.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)))))","(/.f64 (neg.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64))) (neg.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))))","(/.f64 (neg.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64))) (neg.f64 (+.f64 #s(literal 1 binary64) (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (fma.f64 N N N)))))","(/.f64 (neg.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64))) (neg.f64 (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 N N N))))","(/.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 4 binary64)))) (neg.f64 (*.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)))))","(/.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 6 binary64)))) (neg.f64 (*.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) (+.f64 (+.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 4 binary64))) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))))))","(/.f64 (*.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 4 binary64)))) (*.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64))))","(/.f64 (*.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 6 binary64)))) (*.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) (+.f64 (+.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 4 binary64))) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))))","(/.f64 (*.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) (-.f64 #s(literal 1 binary64) (fma.f64 N N N)))","(/.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64)) (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal -1 binary64)))","(/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 4 binary64))) (*.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64))))","(/.f64 (-.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64)) (*.f64 N N)) (fma.f64 N (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64)))","(/.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)))","(/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 6 binary64))) (*.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) (+.f64 (+.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 4 binary64))) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))))","(/.f64 (+.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 3 binary64)) (pow.f64 N #s(literal 3 binary64))) (fma.f64 N N (-.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64)) (*.f64 (fma.f64 N N #s(literal 1 binary64)) N))))","(/.f64 (+.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 3 binary64)) (pow.f64 N #s(literal 3 binary64))) (fma.f64 N (-.f64 N (fma.f64 N N #s(literal 1 binary64))) (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64))))","(/.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64)) (+.f64 #s(literal 1 binary64) (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (fma.f64 N N N))))","(/.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64)) (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 N N N)))","(/.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) (neg.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N))))","(/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (-.f64 #s(literal 1 binary64) (fma.f64 N N N)))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (fma.f64 N (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64)) (-.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64)) (*.f64 N N)))))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (fma.f64 N (-.f64 N (fma.f64 N N #s(literal 1 binary64))) (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64))) (+.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 3 binary64)) (pow.f64 N #s(literal 3 binary64))))))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)))))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 N N N)) (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64)))))","(/.f64 #s(literal -1 binary64) (/.f64 #s(literal -1 binary64) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))","(/.f64 #s(literal 1 binary64) (/.f64 (fma.f64 N (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64)) (-.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64)) (*.f64 N N))))","(/.f64 #s(literal 1 binary64) (/.f64 (fma.f64 N (-.f64 N (fma.f64 N N #s(literal 1 binary64))) (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64))) (+.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 3 binary64)) (pow.f64 N #s(literal 3 binary64)))))","(/.f64 #s(literal 1 binary64) (/.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64))))","(/.f64 #s(literal 1 binary64) (/.f64 (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 N N N)) (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64))))","(/.f64 #s(literal 1 binary64) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N)))))","(neg.f64 (/.f64 #s(literal -1 binary64) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))))","(fma.f64 (exp.f64 (log.f64 N)) (exp.f64 (log.f64 N)) (+.f64 N #s(literal 1 binary64)))","(fma.f64 (exp.f64 (log.f64 N)) (+.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (/.f64 N #s(literal 1 binary64)) #s(literal 1 binary64)) (+.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (/.f64 N (-.f64 N #s(literal 1 binary64))) #s(literal 1 binary64)) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (*.f64 N (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) #s(literal 1 binary64)) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (sqrt.f64 (fma.f64 N N N)) #s(literal 1 binary64)) (pow.f64 (sqrt.f64 (fma.f64 N N N)) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) N) #s(literal 1 binary64)) (pow.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 N N)) #s(literal 1 binary64)) (pow.f64 (pow.f64 (*.f64 N (-.f64 N #s(literal 1 binary64))) #s(literal -1 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) (pow.f64 N #s(literal 6 binary64))) #s(literal 1 binary64)) (pow.f64 (pow.f64 (fma.f64 N (-.f64 N (*.f64 N N)) (pow.f64 N #s(literal 4 binary64))) #s(literal -1 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64)) (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N))","(fma.f64 (pow.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))) #s(literal -1 binary64)) (pow.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) (fma.f64 N N #s(literal 1 binary64))) #s(literal -1 binary64)) (*.f64 N N))","(fma.f64 (pow.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) #s(literal 1 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (pow.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64)))) #s(literal 1 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (pow.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) #s(literal 1 binary64)) (+.f64 N #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (pow.f64 (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (+.f64 N #s(literal 1 binary64))) #s(literal 1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (pow.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1/2 binary64))) #s(literal 1 binary64)) (pow.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1/2 binary64)) #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (pow.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 1/2 binary64)) #s(literal 1 binary64)) (pow.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 1/2 binary64)) #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (pow.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64)) (pow.f64 (pow.f64 (fma.f64 N (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (pow.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) #s(literal 1 binary64)) (pow.f64 (*.f64 N (-.f64 #s(literal 1 binary64) (*.f64 N N))) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) #s(literal 1 binary64)) (pow.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (pow.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64)) (pow.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) N) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64)) (pow.f64 (/.f64 N (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64))) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64)) (pow.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (pow.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (pow.f64 (/.f64 N (-.f64 #s(literal 1 binary64) N)) #s(literal 1 binary64)) (pow.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal 1 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (/.f64 N (-.f64 #s(literal 1 binary64) N)) #s(literal 1 binary64)) (pow.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal 1 binary64)) (pow.f64 (*.f64 (/.f64 N (-.f64 #s(literal 1 binary64) N)) #s(literal 1 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal 1 binary64)) (pow.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal 1 binary64)) (pow.f64 (/.f64 N (-.f64 #s(literal 1 binary64) N)) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64)) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64)) (*.f64 (neg.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64))))","(fma.f64 (pow.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64)) (pow.f64 (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 N N N)) #s(literal -1 binary64)) (*.f64 (neg.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64))))","(fma.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 3 binary64))) #s(literal -1 binary64)) (pow.f64 (pow.f64 (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64)) (*.f64 (neg.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64))))","(fma.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 3 binary64))) #s(literal -1 binary64)) (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1 binary64)) (*.f64 (neg.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64))))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64)))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (+.f64 N #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (/.f64 N #s(literal 1 binary64)) (+.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (/.f64 N (-.f64 N #s(literal 1 binary64))) (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64))","(fma.f64 (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (+.f64 N #s(literal 1 binary64))) (-.f64 N #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1/2 binary64))) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1/2 binary64)) (*.f64 N N))","(fma.f64 (*.f64 N (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 1/2 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 1/2 binary64)) (*.f64 N N))","(fma.f64 (sqrt.f64 (fma.f64 N N N)) (sqrt.f64 (fma.f64 N N N)) #s(literal 1 binary64))","(fma.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) N) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64)) (pow.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N))","(fma.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64)) #s(literal 1 binary64) (*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64)) (neg.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))))","(fma.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (pow.f64 (/.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N))","(fma.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) N) #s(literal 1 binary64))","(fma.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (/.f64 N (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)) (*.f64 N N))","(fma.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)) N)","(fma.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 N N)) (pow.f64 (*.f64 N (-.f64 N #s(literal 1 binary64))) #s(literal -1 binary64)) #s(literal 1 binary64))","(fma.f64 (neg.f64 N) (neg.f64 N) (+.f64 N #s(literal 1 binary64)))","(fma.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 #s(literal -1 binary64) (fma.f64 N N #s(literal -1 binary64)) (pow.f64 N #s(literal 4 binary64))) #s(literal -1 binary64)) N)","(fma.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 N (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N))","(fma.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) (pow.f64 N #s(literal 6 binary64))) (pow.f64 (fma.f64 N (-.f64 N (*.f64 N N)) (pow.f64 N #s(literal 4 binary64))) #s(literal -1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal -1 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (*.f64 (neg.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64))))","(fma.f64 (fma.f64 N N N) #s(literal 1 binary64) #s(literal 1 binary64))","(fma.f64 (/.f64 N (-.f64 #s(literal 1 binary64) N)) (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (/.f64 N (-.f64 #s(literal 1 binary64) N)) (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) (pow.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal -1 binary64)) #s(literal -1 binary64)) (*.f64 N N))","(fma.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) (*.f64 N (-.f64 #s(literal 1 binary64) (*.f64 N N))) #s(literal 1 binary64))","(fma.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N)) (*.f64 N N))","(fma.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (*.f64 (/.f64 N (-.f64 #s(literal 1 binary64) N)) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (/.f64 N (-.f64 #s(literal 1 binary64) N)) #s(literal 1 binary64))","(fma.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) (*.f64 N N))","(fma.f64 (*.f64 N N) #s(literal 1 binary64) (+.f64 N #s(literal 1 binary64)))","(fma.f64 (fma.f64 N N #s(literal -1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N))","(fma.f64 #s(literal -1 binary64) (pow.f64 (/.f64 #s(literal -1 binary64) (exp.f64 (neg.f64 (log1p.f64 N)))) #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 #s(literal -1 binary64) (/.f64 #s(literal -1 binary64) (exp.f64 (neg.f64 (log1p.f64 N)))) (*.f64 N N))","(fma.f64 (+.f64 N #s(literal 1 binary64)) (exp.f64 (log.f64 N)) #s(literal 1 binary64))","(fma.f64 (+.f64 N #s(literal 1 binary64)) (pow.f64 (/.f64 (-.f64 #s(literal 1 binary64) N) (-.f64 #s(literal 1 binary64) N)) #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (+.f64 N #s(literal 1 binary64)) (/.f64 (-.f64 #s(literal 1 binary64) N) (-.f64 #s(literal 1 binary64) N)) (*.f64 N N))","(fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))","(fma.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 1 binary64) (*.f64 N N))","(fma.f64 N (+.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 N N (+.f64 N #s(literal 1 binary64)))","(fma.f64 N #s(literal 1 binary64) (fma.f64 N N #s(literal 1 binary64)))","(fma.f64 #s(literal 1 binary64) (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64)) (*.f64 (neg.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64))))","(fma.f64 #s(literal 1 binary64) (fma.f64 N N N) #s(literal 1 binary64))","(fma.f64 #s(literal 1 binary64) (*.f64 N N) (+.f64 N #s(literal 1 binary64)))","(fma.f64 #s(literal 1 binary64) (+.f64 N #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 #s(literal 1 binary64) N (fma.f64 N N #s(literal 1 binary64)))","(-.f64 (/.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64)) (fma.f64 N (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))) (/.f64 (*.f64 N N) (fma.f64 N (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))))","(-.f64 (/.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64)))","(-.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64)) (/.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (-.f64 #s(literal 1 binary64) (fma.f64 N N N))))","(exp.f64 (log1p.f64 (fma.f64 N N N)))","(+.f64 (*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64)) #s(literal 1 binary64)) (*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64)) (neg.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))))","(+.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64)) (*.f64 (neg.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64))))","(+.f64 (fma.f64 N N N) #s(literal 1 binary64))","(+.f64 (*.f64 N N) (+.f64 N #s(literal 1 binary64)))","(+.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 N N))","(+.f64 (fma.f64 N N #s(literal 1 binary64)) N)","(+.f64 N (fma.f64 N N #s(literal 1 binary64)))","(+.f64 #s(literal 1 binary64) (fma.f64 N N N))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))","(*.f64 (pow.f64 (pow.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N))) #s(literal -1 binary64)) #s(literal -1 binary64)) (pow.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) #s(literal -1 binary64)))","(*.f64 (pow.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)))) #s(literal -1 binary64)) (pow.f64 (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) #s(literal -1 binary64)) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N)))))","(*.f64 (pow.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1/2 binary64)) #s(literal -1 binary64)) (pow.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1/2 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (-.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64)) (*.f64 N N)) #s(literal -1 binary64)) (pow.f64 (pow.f64 (fma.f64 N (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) (pow.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (+.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 3 binary64)) (pow.f64 N #s(literal 3 binary64))) #s(literal -1 binary64)) (pow.f64 (pow.f64 (fma.f64 N (-.f64 N (fma.f64 N N #s(literal 1 binary64))) (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64))) #s(literal -1 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) (pow.f64 (pow.f64 (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 N N N)) #s(literal -1 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64)) #s(literal -1 binary64)) (pow.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal 1 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64)) #s(literal -1 binary64)) (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal -1 binary64)))","(*.f64 (/.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 4 binary64)))) (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)))","(*.f64 (/.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 6 binary64)))) (+.f64 (+.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 4 binary64))) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))))","(*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal -1 binary64)) (pow.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (fma.f64 N N N)))","(*.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N))) (pow.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) #s(literal -1 binary64)))","(*.f64 (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N)))) #s(literal 1 binary64))","(*.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) (/.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal -1 binary64)) #s(literal 1 binary64)))","(*.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal -1 binary64)))","(*.f64 #s(literal -1 binary64) (pow.f64 (/.f64 #s(literal -1 binary64) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))) #s(literal -1 binary64)))","(*.f64 #s(literal 1 binary64) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N)))))","(pow.f64 (/.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64))","(pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64))","(pow.f64 (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N)))) #s(literal 1 binary64))","(/.f64 (neg.f64 (*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 3 binary64))) (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal -1 binary64)))) (neg.f64 (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1 binary64))))","(/.f64 (neg.f64 (*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal -1 binary64)))) (neg.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))","(/.f64 (neg.f64 (*.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal 1 binary64))) (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))))","(/.f64 (neg.f64 (-.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal -2 binary64)) (pow.f64 (/.f64 (fma.f64 N N N) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) #s(literal 2 binary64)))) (neg.f64 (+.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal -1 binary64)) (/.f64 (fma.f64 N N N) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))))))","(/.f64 (neg.f64 (-.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal -3 binary64)) (pow.f64 (/.f64 (fma.f64 N N N) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) #s(literal 3 binary64)))) (neg.f64 (+.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal -2 binary64)) (+.f64 (pow.f64 (/.f64 (fma.f64 N N N) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) #s(literal 2 binary64)) (*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal -1 binary64)) (/.f64 (fma.f64 N N N) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))))))))","(/.f64 (neg.f64 (*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 3 binary64))) #s(literal 1 binary64))) (neg.f64 (*.f64 (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))))))","(/.f64 (neg.f64 (*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal 1 binary64))) (neg.f64 (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))))))","(/.f64 (neg.f64 (-.f64 (*.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) (*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (fma.f64 N N N)))) (neg.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal 2 binary64))))","(/.f64 (neg.f64 (neg.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N))))) (neg.f64 (neg.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))))))","(/.f64 (-.f64 (*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal -1 binary64)) #s(literal 1 binary64)) (*.f64 #s(literal 1 binary64) (/.f64 (fma.f64 N N N) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))))) #s(literal 1 binary64))","(/.f64 (-.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) (*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) N)) (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal 2 binary64)))","(/.f64 (-.f64 (*.f64 #s(literal -1 binary64) (*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (*.f64 N (-.f64 N #s(literal 1 binary64))))) (*.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 N N)))) (*.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) (*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (*.f64 N (-.f64 N #s(literal 1 binary64))))))","(/.f64 (-.f64 (*.f64 #s(literal -1 binary64) (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))))) (*.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) (neg.f64 (fma.f64 N N N)))) (*.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))))))","(/.f64 (-.f64 (*.f64 #s(literal -1 binary64) (*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (fma.f64 N (-.f64 N (*.f64 N N)) (pow.f64 N #s(literal 4 binary64))))) (*.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) (+.f64 (pow.f64 N #s(literal 3 binary64)) (pow.f64 N #s(literal 6 binary64))))) (*.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) (*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (fma.f64 N (-.f64 N (*.f64 N N)) (pow.f64 N #s(literal 4 binary64))))))","(/.f64 (-.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) (*.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) (fma.f64 N N N))) (*.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))))","(/.f64 (-.f64 (*.f64 #s(literal -1 binary64) (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (fma.f64 N N N))) (*.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) #s(literal 1 binary64))) (*.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (fma.f64 N N N))))","(/.f64 (-.f64 (*.f64 #s(literal 1 binary64) (*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (*.f64 N (-.f64 N #s(literal 1 binary64))))) (*.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 N N)))) (*.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal 1 binary64)) (*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (*.f64 N (-.f64 N #s(literal 1 binary64))))))","(/.f64 (-.f64 (*.f64 #s(literal 1 binary64) (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))))) (*.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal 1 binary64)) (neg.f64 (fma.f64 N N N)))) (*.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal 1 binary64)) (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))))))","(/.f64 (-.f64 (*.f64 #s(literal 1 binary64) (*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (fma.f64 N (-.f64 N (*.f64 N N)) (pow.f64 N #s(literal 4 binary64))))) (*.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal 1 binary64)) (+.f64 (pow.f64 N #s(literal 3 binary64)) (pow.f64 N #s(literal 6 binary64))))) (*.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal 1 binary64)) (*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (fma.f64 N (-.f64 N (*.f64 N N)) (pow.f64 N #s(literal 4 binary64))))))","(/.f64 (-.f64 (*.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) (*.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal 1 binary64)) (fma.f64 N N N))) (*.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))))","(/.f64 (-.f64 (*.f64 #s(literal 1 binary64) (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (fma.f64 N N N))) (*.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal 1 binary64)) #s(literal 1 binary64))) (*.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal 1 binary64)) (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (fma.f64 N N N))))","(/.f64 (-.f64 (*.f64 #s(literal 1 binary64) (*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (*.f64 N (-.f64 N #s(literal 1 binary64))))) (*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 N N)))) (*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (*.f64 N (-.f64 N #s(literal 1 binary64))))))","(/.f64 (-.f64 (*.f64 #s(literal 1 binary64) (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))))) (*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (neg.f64 (fma.f64 N N N)))) (*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))))))","(/.f64 (-.f64 (*.f64 #s(literal 1 binary64) (*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (fma.f64 N (-.f64 N (*.f64 N N)) (pow.f64 N #s(literal 4 binary64))))) (*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (+.f64 (pow.f64 N #s(literal 3 binary64)) (pow.f64 N #s(literal 6 binary64))))) (*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (fma.f64 N (-.f64 N (*.f64 N N)) (pow.f64 N #s(literal 4 binary64))))))","(/.f64 (-.f64 (*.f64 #s(literal 1 binary64) (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (fma.f64 N N N))) (*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal 1 binary64))) (*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (fma.f64 N N N))))","(/.f64 (-.f64 #s(literal -1 binary64) (neg.f64 (fma.f64 N N N))) (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))))","(/.f64 (*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 3 binary64))) (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal -1 binary64))) (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1 binary64)))","(/.f64 (*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal -1 binary64))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))","(/.f64 (*.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))))","(/.f64 (-.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal -2 binary64)) (pow.f64 (/.f64 (fma.f64 N N N) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) #s(literal 2 binary64))) (+.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal -1 binary64)) (/.f64 (fma.f64 N N N) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))))))","(/.f64 (-.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal -3 binary64)) (pow.f64 (/.f64 (fma.f64 N N N) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) #s(literal 3 binary64))) (+.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal -2 binary64)) (+.f64 (pow.f64 (/.f64 (fma.f64 N N N) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) #s(literal 2 binary64)) (*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal -1 binary64)) (/.f64 (fma.f64 N N N) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))))))))","(/.f64 (neg.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)))) (neg.f64 (*.f64 #s(literal 1 binary64) (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))))))","(/.f64 (neg.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)))) (neg.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))))))","(/.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)))) (neg.f64 (*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1 binary64)))))","(/.f64 (*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 3 binary64))) #s(literal 1 binary64)) (*.f64 (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))))","(/.f64 (*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal 1 binary64)) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))))","(/.f64 (-.f64 (*.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) (*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (fma.f64 N N N))) (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal 2 binary64)))","(/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 3 binary64))) (*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1 binary64))))","(/.f64 (/.f64 #s(literal -1 binary64) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal -1 binary64))","(/.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) (neg.f64 (*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))))","(/.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N))) (neg.f64 (*.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))))))","(/.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N))) (*.f64 #s(literal 1 binary64) (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))))))","(/.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N))) (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))))","(/.f64 (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N)))) #s(literal 1 binary64))","(/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))","(/.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) (*.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))))","(/.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1 binary64))))","(/.f64 #s(literal -1 binary64) (neg.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))","(/.f64 #s(literal 1 binary64) (neg.f64 (neg.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))))","(/.f64 #s(literal 1 binary64) (/.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1 binary64)))","(/.f64 #s(literal 1 binary64) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))","(neg.f64 (/.f64 #s(literal -1 binary64) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))","(fma.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 4 binary64))) #s(literal -1 binary64)) (pow.f64 (pow.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64)) (neg.f64 (/.f64 (fma.f64 N N N) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))))))","(fma.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 4 binary64))) #s(literal -1 binary64)) (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (neg.f64 (/.f64 (fma.f64 N N N) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))))))","(fma.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 6 binary64))) #s(literal -1 binary64)) (pow.f64 (pow.f64 (+.f64 (+.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 4 binary64))) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal -1 binary64)) #s(literal -1 binary64)) (neg.f64 (/.f64 (fma.f64 N N N) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))))))","(fma.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 6 binary64))) #s(literal -1 binary64)) (+.f64 (+.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 4 binary64))) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (neg.f64 (/.f64 (fma.f64 N N N) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))))))","(fma.f64 #s(literal 1 binary64) (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal -1 binary64)) (neg.f64 (/.f64 (fma.f64 N N N) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))))))","(-.f64 (/.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal -1 binary64)) #s(literal 1 binary64)) (/.f64 (/.f64 (fma.f64 N N N) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) #s(literal 1 binary64)))","(-.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) (/.f64 N (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))))","(-.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal -1 binary64)) (/.f64 (fma.f64 N N N) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))))","(exp.f64 (*.f64 (log1p.f64 (fma.f64 N N N)) #s(literal -1 binary64)))","(exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))","(+.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal -1 binary64)) (neg.f64 (/.f64 (fma.f64 N N N) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))))))","(*.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)))","(*.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64))) (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 N N N)))","(*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 3 binary64))) (pow.f64 (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)))","(*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N)))))","(pow.f64 (/.f64 (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)))) #s(literal -1 binary64))","(pow.f64 (/.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) #s(literal -1 binary64))","(/.f64 (neg.f64 (-.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 2 binary64)) (*.f64 N N))) (neg.f64 (fma.f64 #s(literal -1 binary64) (fma.f64 N N #s(literal -1 binary64)) N)))","(/.f64 (neg.f64 (-.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal 3 binary64)) (pow.f64 N #s(literal 3 binary64)))) (neg.f64 (+.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 2 binary64)) (fma.f64 N N (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) N)))))","(/.f64 (neg.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 3 binary64))))) (neg.f64 (neg.f64 (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1 binary64)))))","(/.f64 (-.f64 (*.f64 #s(literal 1 binary64) (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1 binary64))) (*.f64 (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)))) (*.f64 (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1 binary64)) (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1 binary64))))","(/.f64 (-.f64 (*.f64 (*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 3 binary64))) (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal -1 binary64))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (*.f64 (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) (*.f64 (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))","(/.f64 (-.f64 (*.f64 (*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal -1 binary64))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))","(/.f64 (-.f64 (*.f64 (*.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal 1 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) (*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))","(/.f64 (-.f64 (*.f64 (-.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal -2 binary64)) (pow.f64 (/.f64 (fma.f64 N N N) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) #s(literal 2 binary64))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (*.f64 (+.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal -1 binary64)) (/.f64 (fma.f64 N N N) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))))) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) (*.f64 (+.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal -1 binary64)) (/.f64 (fma.f64 N N N) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))","(/.f64 (-.f64 (*.f64 (-.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal -3 binary64)) (pow.f64 (/.f64 (fma.f64 N N N) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) #s(literal 3 binary64))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (*.f64 (+.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal -2 binary64)) (+.f64 (pow.f64 (/.f64 (fma.f64 N N N) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) #s(literal 2 binary64)) (*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal -1 binary64)) (/.f64 (fma.f64 N N N) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))))))) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) (*.f64 (+.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal -2 binary64)) (+.f64 (pow.f64 (/.f64 (fma.f64 N N N) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) #s(literal 2 binary64)) (*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal -1 binary64)) (/.f64 (fma.f64 N N N) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))))))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))","(/.f64 (-.f64 (*.f64 (neg.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (*.f64 (neg.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))))) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) (*.f64 (neg.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))","(/.f64 (-.f64 (*.f64 (*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 3 binary64))) #s(literal 1 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (*.f64 (*.f64 (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) (*.f64 (*.f64 (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))","(/.f64 (-.f64 (*.f64 (*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal 1 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (*.f64 (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) (*.f64 (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))","(/.f64 (-.f64 (*.f64 (-.f64 (*.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) (*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (fma.f64 N N N))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal 2 binary64)) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) (*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal 2 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))","(/.f64 (-.f64 (*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 3 binary64))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (*.f64 (*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1 binary64))) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) (*.f64 (*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1 binary64))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))","(/.f64 (-.f64 (*.f64 (/.f64 #s(literal -1 binary64) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (neg.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) (*.f64 #s(literal -1 binary64) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))","(/.f64 (-.f64 (*.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (*.f64 (*.f64 #s(literal 1 binary64) (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))))) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) (*.f64 (*.f64 #s(literal 1 binary64) (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))","(/.f64 (-.f64 (*.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (*.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) (*.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))","(/.f64 (-.f64 (*.f64 (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N)))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))","(/.f64 (-.f64 (*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (*.f64 (*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) (*.f64 (*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))","(/.f64 (-.f64 (*.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (*.f64 (*.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) (*.f64 (*.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))","(/.f64 (-.f64 (*.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) (*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))","(/.f64 (-.f64 (*.f64 #s(literal -1 binary64) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (*.f64 (neg.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) (*.f64 (neg.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))","(/.f64 (-.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (*.f64 (/.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) (*.f64 (/.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))","(/.f64 (-.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))","(/.f64 (-.f64 (*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal -1 binary64))) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))","(/.f64 (-.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 2 binary64)) (*.f64 N N)) (fma.f64 #s(literal -1 binary64) (fma.f64 N N #s(literal -1 binary64)) N))","(/.f64 (-.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal 3 binary64)) (pow.f64 N #s(literal 3 binary64))) (+.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 2 binary64)) (fma.f64 N N (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) N))))","(/.f64 (neg.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))))) (neg.f64 (neg.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))))","(/.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)))) (neg.f64 (+.f64 #s(literal 1 binary64) (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (*.f64 #s(literal 1 binary64) (neg.f64 (fma.f64 N N N)))))))","(/.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)))) (neg.f64 (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1 binary64))))","(/.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 4 binary64)))) (neg.f64 (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)))))","(/.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 6 binary64)))) (neg.f64 (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (+.f64 (+.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 4 binary64))) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))))))","(/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 4 binary64))) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64))))","(/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 3 binary64))) (+.f64 #s(literal 1 binary64) (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (*.f64 #s(literal 1 binary64) (neg.f64 (fma.f64 N N N))))))","(/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 3 binary64))) (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1 binary64)))","(/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 6 binary64))) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (+.f64 (+.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 4 binary64))) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))))","(/.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) (neg.f64 (-.f64 #s(literal 1 binary64) (neg.f64 (fma.f64 N N N)))))","(/.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) (neg.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))","(/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (-.f64 #s(literal 1 binary64) (neg.f64 (fma.f64 N N N))))","(/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 3 binary64))))))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))))))","(/.f64 #s(literal 1 binary64) (/.f64 (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)))))","(/.f64 #s(literal 1 binary64) (/.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64))) (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) (fma.f64 N N #s(literal -1 binary64)) (neg.f64 N))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64))) (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64))) (fma.f64 #s(literal -1 binary64) (fma.f64 N N #s(literal -1 binary64)) (pow.f64 N #s(literal 4 binary64))) (neg.f64 N))","(fma.f64 (neg.f64 (+.f64 N #s(literal 1 binary64))) (-.f64 N #s(literal 1 binary64)) (neg.f64 N))","(fma.f64 (neg.f64 (+.f64 N #s(literal 1 binary64))) N #s(literal 1 binary64))","(fma.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64))) (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (neg.f64 N))","(fma.f64 (neg.f64 N) (+.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64))) (pow.f64 (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)) #s(literal -1 binary64)) (neg.f64 N))","(fma.f64 #s(literal -1 binary64) (fma.f64 N N N) #s(literal 1 binary64))","(fma.f64 #s(literal -1 binary64) (fma.f64 N N #s(literal -1 binary64)) (neg.f64 N))","(fma.f64 (+.f64 N #s(literal 1 binary64)) (neg.f64 N) #s(literal 1 binary64))","(fma.f64 (+.f64 N #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) N) (neg.f64 N))","(fma.f64 N (neg.f64 (+.f64 N #s(literal 1 binary64))) #s(literal 1 binary64))","(-.f64 (pow.f64 (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) (/.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1 binary64))))","(-.f64 (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N)))) (/.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))","(-.f64 (-.f64 #s(literal 1 binary64) N) (*.f64 N N))","(-.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) N)","(-.f64 #s(literal 1 binary64) (fma.f64 N N N))","(+.f64 (neg.f64 (fma.f64 N N N)) #s(literal 1 binary64))","(+.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (neg.f64 N))","(+.f64 #s(literal 1 binary64) (-.f64 (*.f64 (neg.f64 N) N) N))","(+.f64 #s(literal 1 binary64) (*.f64 (neg.f64 (fma.f64 N N N)) #s(literal 1 binary64)))","(+.f64 #s(literal 1 binary64) (neg.f64 (fma.f64 N N N)))","(*.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (fma.f64 N (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64)))","(*.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N))) (-.f64 #s(literal 1 binary64) N))","(*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N)))))","(*.f64 (fma.f64 N N #s(literal -1 binary64)) (exp.f64 (neg.f64 (log1p.f64 N))))","(pow.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64))) #s(literal -1 binary64))","(pow.f64 (/.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64))","(/.f64 (neg.f64 (neg.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (neg.f64 (neg.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))))","(/.f64 (-.f64 (*.f64 (pow.f64 N #s(literal 3 binary64)) (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1 binary64))) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 3 binary64))) (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal -1 binary64))))) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1 binary64))))","(/.f64 (-.f64 (*.f64 (pow.f64 N #s(literal 3 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal -1 binary64))))) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))","(/.f64 (-.f64 (*.f64 (pow.f64 N #s(literal 3 binary64)) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (*.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal 1 binary64)))) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))))","(/.f64 (-.f64 (*.f64 (pow.f64 N #s(literal 3 binary64)) (+.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal -1 binary64)) (/.f64 (fma.f64 N N N) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))))) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (-.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal -2 binary64)) (pow.f64 (/.f64 (fma.f64 N N N) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) #s(literal 2 binary64))))) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (+.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal -1 binary64)) (/.f64 (fma.f64 N N N) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))))))","(/.f64 (-.f64 (*.f64 (pow.f64 N #s(literal 3 binary64)) (+.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal -2 binary64)) (+.f64 (pow.f64 (/.f64 (fma.f64 N N N) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) #s(literal 2 binary64)) (*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal -1 binary64)) (/.f64 (fma.f64 N N N) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))))))) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (-.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal -3 binary64)) (pow.f64 (/.f64 (fma.f64 N N N) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) #s(literal 3 binary64))))) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (+.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal -2 binary64)) (+.f64 (pow.f64 (/.f64 (fma.f64 N N N) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) #s(literal 2 binary64)) (*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal -1 binary64)) (/.f64 (fma.f64 N N N) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))))))))","(/.f64 (-.f64 (*.f64 (pow.f64 N #s(literal 3 binary64)) (neg.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))))) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (neg.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)))))) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (neg.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))))))","(/.f64 (-.f64 (*.f64 (pow.f64 N #s(literal 3 binary64)) (*.f64 (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))))) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 3 binary64))) #s(literal 1 binary64)))) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (*.f64 (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))))))","(/.f64 (-.f64 (*.f64 (pow.f64 N #s(literal 3 binary64)) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))))) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal 1 binary64)))) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))))))","(/.f64 (-.f64 (*.f64 (pow.f64 N #s(literal 3 binary64)) (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal 2 binary64))) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (-.f64 (*.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) (*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (fma.f64 N N N))))) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal 2 binary64))))","(/.f64 (-.f64 (*.f64 (pow.f64 N #s(literal 3 binary64)) (*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1 binary64)))) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 3 binary64))))) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1 binary64)))))","(/.f64 (-.f64 (*.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (/.f64 #s(literal -1 binary64) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)))","(/.f64 (-.f64 (*.f64 (pow.f64 N #s(literal 3 binary64)) (*.f64 #s(literal 1 binary64) (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))))) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (neg.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N))))) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (*.f64 #s(literal 1 binary64) (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))))))","(/.f64 (-.f64 (*.f64 (pow.f64 N #s(literal 3 binary64)) (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))))) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (neg.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N))))) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))))))","(/.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N)))))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))","(/.f64 (-.f64 (*.f64 (pow.f64 N #s(literal 3 binary64)) (*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))))) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))))","(/.f64 (-.f64 (*.f64 (pow.f64 N #s(literal 3 binary64)) (*.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))))) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) (fma.f64 N N N)))) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (*.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))))))","(/.f64 (-.f64 (*.f64 (pow.f64 N #s(literal 3 binary64)) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) (fma.f64 N N N)))) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))))","(/.f64 (-.f64 (*.f64 (pow.f64 N #s(literal 3 binary64)) (neg.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64))) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (neg.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))))","(/.f64 (-.f64 (*.f64 (pow.f64 N #s(literal 3 binary64)) (/.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1 binary64))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (/.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1 binary64))))","(/.f64 (-.f64 (*.f64 (pow.f64 N #s(literal 3 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (-.f64 N #s(literal 1 binary64))) (*.f64 (+.f64 N #s(literal 1 binary64)) (/.f64 (-.f64 N #s(literal 1 binary64)) (+.f64 N #s(literal 1 binary64))))) (fma.f64 N N #s(literal -1 binary64)))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (+.f64 N #s(literal 1 binary64))) (*.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64))))) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (*.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64))))) (*.f64 (+.f64 N #s(literal 1 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (fma.f64 N N #s(literal -1 binary64))) (*.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64)))) (*.f64 (+.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64))))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (+.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)))) (*.f64 (+.f64 N #s(literal 1 binary64)) (-.f64 (pow.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) #s(literal 2 binary64)) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -2 binary64))))) (*.f64 (+.f64 N #s(literal 1 binary64)) (+.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)))))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (+.f64 (pow.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) #s(literal 2 binary64)) (+.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -2 binary64)) (*.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)))))) (*.f64 (+.f64 N #s(literal 1 binary64)) (-.f64 (pow.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) #s(literal 3 binary64)) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -3 binary64))))) (*.f64 (+.f64 N #s(literal 1 binary64)) (+.f64 (pow.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) #s(literal 2 binary64)) (+.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -2 binary64)) (*.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)))))))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (neg.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (*.f64 (+.f64 N #s(literal 1 binary64)) (neg.f64 (-.f64 #s(literal 1 binary64) N)))) (*.f64 (+.f64 N #s(literal 1 binary64)) (neg.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)))))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (*.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64)))) (*.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64)))))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 2 binary64))) (*.f64 (+.f64 N #s(literal 1 binary64)) (-.f64 (*.f64 N (fma.f64 N N #s(literal -1 binary64))) (*.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64))))) (*.f64 (+.f64 N #s(literal 1 binary64)) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 2 binary64))))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (*.f64 (+.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (*.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64)))) (*.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 (+.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64)))))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))) (*.f64 (+.f64 N #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (*.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))))","(/.f64 (-.f64 (*.f64 (neg.f64 N) N) (*.f64 (+.f64 N #s(literal 1 binary64)) (/.f64 #s(literal -1 binary64) (+.f64 N #s(literal 1 binary64))))) (*.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (*.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (-.f64 #s(literal 1 binary64) (*.f64 N N))) (*.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) (*.f64 N N)))))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (-.f64 #s(literal 1 binary64) (*.f64 N N))) (-.f64 #s(literal 1 binary64) (*.f64 N N))) (*.f64 (+.f64 N #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N))))","(/.f64 (-.f64 (*.f64 N N) (*.f64 (+.f64 N #s(literal 1 binary64)) (exp.f64 (neg.f64 (log1p.f64 N))))) (+.f64 N #s(literal 1 binary64)))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (+.f64 N #s(literal 1 binary64)))) (*.f64 (+.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (*.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (+.f64 N #s(literal 1 binary64)))))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (neg.f64 (+.f64 N #s(literal 1 binary64)))) (*.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (*.f64 (+.f64 N #s(literal 1 binary64)) (neg.f64 (+.f64 N #s(literal 1 binary64)))))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (*.f64 #s(literal 1 binary64) (fma.f64 N N #s(literal -1 binary64)))) (fma.f64 N N #s(literal -1 binary64))) (*.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 #s(literal 1 binary64) (fma.f64 N N #s(literal -1 binary64)))))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (fma.f64 N N #s(literal -1 binary64))) (fma.f64 N N #s(literal -1 binary64))) (*.f64 (+.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64))))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (/.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))) (+.f64 N #s(literal 1 binary64))) (*.f64 (+.f64 N #s(literal 1 binary64)) (/.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (+.f64 N #s(literal 1 binary64))) (+.f64 N #s(literal 1 binary64))) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)))","(/.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) (*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal -1 binary64)))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))","(/.f64 (-.f64 (*.f64 N N) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)))) (+.f64 N #s(literal 1 binary64)))","(/.f64 (neg.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (neg.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) (*.f64 N #s(literal -1 binary64))))))","(/.f64 (neg.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (neg.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))","(/.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N))) (neg.f64 (neg.f64 (+.f64 N #s(literal 1 binary64)))))","(/.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (fma.f64 N N (-.f64 #s(literal 1 binary64) (*.f64 N #s(literal -1 binary64)))))","(/.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))","(/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (neg.f64 (-.f64 N #s(literal -1 binary64))))","(/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (neg.f64 (+.f64 N #s(literal 1 binary64))))","(/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 N #s(literal -1 binary64)))","(/.f64 (fma.f64 N N #s(literal -1 binary64)) (+.f64 N #s(literal 1 binary64)))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64)))))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))))","(/.f64 #s(literal 1 binary64) (/.f64 (+.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64))))","(/.f64 #s(literal 1 binary64) (/.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))))","(fma.f64 N #s(literal 1 binary64) #s(literal -1 binary64))","(fma.f64 #s(literal 1 binary64) N #s(literal -1 binary64))","(expm1.f64 (*.f64 (log.f64 N) #s(literal 1 binary64)))","(-.f64 (/.f64 (pow.f64 N #s(literal 3 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N)))))","(-.f64 (/.f64 (*.f64 N N) (+.f64 N #s(literal 1 binary64))) (exp.f64 (neg.f64 (log1p.f64 N))))","(-.f64 N #s(literal 1 binary64))","(+.f64 #s(literal -1 binary64) N)","(+.f64 N #s(literal -1 binary64))","(*.f64 (exp.f64 (log.f64 N)) (exp.f64 (log.f64 N)))","(*.f64 (neg.f64 N) (neg.f64 N))","(*.f64 (*.f64 N N) #s(literal 1 binary64))","(*.f64 N N)","(*.f64 #s(literal 1 binary64) (*.f64 N N))","(pow.f64 (exp.f64 (log.f64 N)) #s(literal 2 binary64))","(pow.f64 (neg.f64 N) #s(literal 2 binary64))","(pow.f64 (*.f64 N N) #s(literal 1 binary64))","(pow.f64 N #s(literal 2 binary64))","(exp.f64 (*.f64 (log.f64 N) #s(literal 2 binary64)))","(*.f64 (pow.f64 (*.f64 (fma.f64 N N N) (/.f64 N (-.f64 #s(literal 1 binary64) N))) #s(literal 1 binary64)) (pow.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal 1 binary64)))","(*.f64 (pow.f64 (*.f64 (fma.f64 N N N) (-.f64 #s(literal 1 binary64) (*.f64 N N))) #s(literal 1 binary64)) (pow.f64 (/.f64 N (-.f64 #s(literal 1 binary64) N)) #s(literal 1 binary64)))","(*.f64 (pow.f64 (*.f64 (fma.f64 N N N) (+.f64 N #s(literal 1 binary64))) #s(literal 1 binary64)) N)","(*.f64 (pow.f64 (*.f64 (fma.f64 N N N) N) #s(literal 1 binary64)) (+.f64 N #s(literal 1 binary64)))","(*.f64 (pow.f64 (pow.f64 (/.f64 N (-.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)) #s(literal 1 binary64)) (pow.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 2 binary64)) #s(literal 1 binary64)))","(*.f64 (pow.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 2 binary64)) #s(literal 1 binary64)) (pow.f64 (pow.f64 (/.f64 N (-.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)) #s(literal 1 binary64)))","(*.f64 (pow.f64 (/.f64 N (-.f64 #s(literal 1 binary64) N)) #s(literal 1 binary64)) (pow.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (fma.f64 N N N)) #s(literal 1 binary64)))","(*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal 1 binary64)) (pow.f64 (*.f64 (/.f64 N (-.f64 #s(literal 1 binary64) N)) (fma.f64 N N N)) #s(literal 1 binary64)))","(*.f64 (pow.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)) #s(literal 1 binary64)) (*.f64 N N))","(*.f64 (pow.f64 (/.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)))","(*.f64 (pow.f64 (/.f64 N (-.f64 N #s(literal 1 binary64))) #s(literal 2 binary64)) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 2 binary64)))","(*.f64 (pow.f64 (*.f64 N (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) #s(literal 2 binary64)) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 2 binary64)))","(*.f64 (pow.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) N) #s(literal 2 binary64)) (pow.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) #s(literal 2 binary64)))","(*.f64 (pow.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal 2 binary64)) (pow.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) N) #s(literal 2 binary64)))","(*.f64 (pow.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal 2 binary64)) (pow.f64 (/.f64 N (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64))) #s(literal 2 binary64)))","(*.f64 (pow.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) #s(literal 2 binary64)) (pow.f64 (*.f64 N (-.f64 #s(literal 1 binary64) (*.f64 N N))) #s(literal 2 binary64)))","(*.f64 (*.f64 (fma.f64 N N N) (/.f64 N (-.f64 #s(literal 1 binary64) N))) (-.f64 #s(literal 1 binary64) (*.f64 N N)))","(*.f64 (*.f64 (fma.f64 N N N) (-.f64 #s(literal 1 binary64) (*.f64 N N))) (/.f64 N (-.f64 #s(literal 1 binary64) N)))","(*.f64 (*.f64 (fma.f64 N N N) (+.f64 N #s(literal 1 binary64))) N)","(*.f64 (*.f64 (fma.f64 N N N) N) (+.f64 N #s(literal 1 binary64)))","(*.f64 (pow.f64 (/.f64 N (-.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)) (pow.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal 1 binary64)) #s(literal 2 binary64)))","(*.f64 (pow.f64 (/.f64 N (-.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 2 binary64)))","(*.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 2 binary64)) (pow.f64 (*.f64 (/.f64 N (-.f64 #s(literal 1 binary64) N)) #s(literal 1 binary64)) #s(literal 2 binary64)))","(*.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 2 binary64)) (pow.f64 (/.f64 N (-.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)))","(*.f64 (pow.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 N N)) #s(literal 2 binary64)) (pow.f64 (pow.f64 (*.f64 N (-.f64 N #s(literal 1 binary64))) #s(literal -1 binary64)) #s(literal 2 binary64)))","(*.f64 (pow.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) (pow.f64 N #s(literal 6 binary64))) #s(literal 2 binary64)) (pow.f64 (pow.f64 (fma.f64 N (-.f64 N (*.f64 N N)) (pow.f64 N #s(literal 4 binary64))) #s(literal -1 binary64)) #s(literal 2 binary64)))","(*.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)) (*.f64 N N))","(*.f64 (neg.f64 (fma.f64 N N N)) (neg.f64 (fma.f64 N N N)))","(*.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64))","(*.f64 (fma.f64 N N N) (fma.f64 N N N))","(*.f64 (/.f64 N (-.f64 #s(literal 1 binary64) N)) (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (fma.f64 N N N)))","(*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (*.f64 (/.f64 N (-.f64 #s(literal 1 binary64) N)) (fma.f64 N N N)))","(*.f64 (*.f64 N N) (pow.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)) #s(literal 1 binary64)))","(*.f64 (*.f64 N N) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)))","(*.f64 (+.f64 N #s(literal 1 binary64)) (pow.f64 (*.f64 N (fma.f64 N N N)) #s(literal 1 binary64)))","(*.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 N (fma.f64 N N N)))","(*.f64 N (pow.f64 (*.f64 (+.f64 N #s(literal 1 binary64)) (fma.f64 N N N)) #s(literal 1 binary64)))","(*.f64 N (*.f64 (+.f64 N #s(literal 1 binary64)) (fma.f64 N N N)))","(*.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))","(pow.f64 (exp.f64 #s(literal 2 binary64)) (+.f64 (log1p.f64 N) (log.f64 N)))","(pow.f64 (neg.f64 (fma.f64 N N N)) #s(literal 2 binary64))","(pow.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64))","(pow.f64 (fma.f64 N N N) #s(literal 2 binary64))","(/.f64 (neg.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 N N)) (fma.f64 N N N))) (neg.f64 (*.f64 N (-.f64 N #s(literal 1 binary64)))))","(/.f64 (neg.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) (pow.f64 N #s(literal 6 binary64))) (fma.f64 N N N))) (neg.f64 (fma.f64 N (-.f64 N (*.f64 N N)) (pow.f64 N #s(literal 4 binary64)))))","(/.f64 (neg.f64 (*.f64 (fma.f64 N N N) (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 N N)))) (neg.f64 (*.f64 N (-.f64 N #s(literal 1 binary64)))))","(/.f64 (neg.f64 (*.f64 (fma.f64 N N N) (+.f64 (pow.f64 N #s(literal 3 binary64)) (pow.f64 N #s(literal 6 binary64))))) (neg.f64 (fma.f64 N (-.f64 N (*.f64 N N)) (pow.f64 N #s(literal 4 binary64)))))","(/.f64 (neg.f64 (*.f64 N (fma.f64 N N N))) (/.f64 #s(literal -1 binary64) (+.f64 N #s(literal 1 binary64))))","(/.f64 (neg.f64 (*.f64 (fma.f64 N N N) N)) (/.f64 #s(literal -1 binary64) (+.f64 N #s(literal 1 binary64))))","(/.f64 (neg.f64 (pow.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 N N)) #s(literal 2 binary64))) (neg.f64 (pow.f64 (*.f64 N (-.f64 N #s(literal 1 binary64))) #s(literal 2 binary64))))","(/.f64 (neg.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 N N)) (+.f64 (pow.f64 N #s(literal 3 binary64)) (pow.f64 N #s(literal 6 binary64))))) (neg.f64 (*.f64 (*.f64 N (-.f64 N #s(literal 1 binary64))) (fma.f64 N (-.f64 N (*.f64 N N)) (pow.f64 N #s(literal 4 binary64))))))","(/.f64 (neg.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) (pow.f64 N #s(literal 6 binary64))) (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 N N)))) (neg.f64 (*.f64 (fma.f64 N (-.f64 N (*.f64 N N)) (pow.f64 N #s(literal 4 binary64))) (*.f64 N (-.f64 N #s(literal 1 binary64))))))","(/.f64 (neg.f64 (pow.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) (pow.f64 N #s(literal 6 binary64))) #s(literal 2 binary64))) (neg.f64 (pow.f64 (fma.f64 N (-.f64 N (*.f64 N N)) (pow.f64 N #s(literal 4 binary64))) #s(literal 2 binary64))))","(/.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 N N)) (fma.f64 N N N)) (*.f64 N (-.f64 N #s(literal 1 binary64))))","(/.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) (pow.f64 N #s(literal 6 binary64))) (fma.f64 N N N)) (fma.f64 N (-.f64 N (*.f64 N N)) (pow.f64 N #s(literal 4 binary64))))","(/.f64 (*.f64 (fma.f64 N N N) (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 N N))) (*.f64 N (-.f64 N #s(literal 1 binary64))))","(/.f64 (*.f64 (fma.f64 N N N) (+.f64 (pow.f64 N #s(literal 3 binary64)) (pow.f64 N #s(literal 6 binary64)))) (fma.f64 N (-.f64 N (*.f64 N N)) (pow.f64 N #s(literal 4 binary64))))","(/.f64 (*.f64 N (fma.f64 N N N)) (exp.f64 (neg.f64 (log1p.f64 N))))","(/.f64 (*.f64 (fma.f64 N N N) N) (exp.f64 (neg.f64 (log1p.f64 N))))","(/.f64 (pow.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 N N)) #s(literal 2 binary64)) (pow.f64 (*.f64 N (-.f64 N #s(literal 1 binary64))) #s(literal 2 binary64)))","(/.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 N N)) (+.f64 (pow.f64 N #s(literal 3 binary64)) (pow.f64 N #s(literal 6 binary64)))) (*.f64 (*.f64 N (-.f64 N #s(literal 1 binary64))) (fma.f64 N (-.f64 N (*.f64 N N)) (pow.f64 N #s(literal 4 binary64)))))","(/.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) (pow.f64 N #s(literal 6 binary64))) (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 N N))) (*.f64 (fma.f64 N (-.f64 N (*.f64 N N)) (pow.f64 N #s(literal 4 binary64))) (*.f64 N (-.f64 N #s(literal 1 binary64)))))","(/.f64 (pow.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) (pow.f64 N #s(literal 6 binary64))) #s(literal 2 binary64)) (pow.f64 (fma.f64 N (-.f64 N (*.f64 N N)) (pow.f64 N #s(literal 4 binary64))) #s(literal 2 binary64)))","(/.f64 (*.f64 (neg.f64 N) N) (neg.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -2 binary64))))","(/.f64 (*.f64 N N) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -2 binary64)))","(fma.f64 (fma.f64 N N N) (*.f64 N N) (*.f64 (fma.f64 N N N) N))","(fma.f64 (fma.f64 N N N) N (*.f64 (fma.f64 N N N) (*.f64 N N)))","(fma.f64 (*.f64 N N) (fma.f64 N N N) (*.f64 N (fma.f64 N N N)))","(fma.f64 N (fma.f64 N N N) (*.f64 (*.f64 N N) (fma.f64 N N N)))","(exp.f64 (*.f64 (log.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal 1 binary64)))","(exp.f64 (log.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))))","(+.f64 (*.f64 (*.f64 N N) (fma.f64 N N N)) (*.f64 N (fma.f64 N N N)))","(+.f64 (*.f64 N (fma.f64 N N N)) (*.f64 (*.f64 N N) (fma.f64 N N N)))","(+.f64 (*.f64 (fma.f64 N N N) (*.f64 N N)) (*.f64 (fma.f64 N N N) N))","(+.f64 (*.f64 (fma.f64 N N N) N) (*.f64 (fma.f64 N N N) (*.f64 N N)))"]],"stop":[["iter limit",1],["node limit",1],["iter limit",1]],"time":282.19677734375,"type":"rewrite"},{"compiler":[[22162,3764]],"memory":[[9511232,85655648]],"time":144.30712890625,"type":"eval"},{"alts":[["(atan2.f64 #s(literal 1 binary64) (fma.f64 (/.f64 #s(literal 1 binary64) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (+.f64 N #s(literal 1 binary64))))) N #s(literal 1 binary64)))","next",0.40271381837909415,"binary64"],["(atan2.f64 #s(literal 1 binary64) (fma.f64 (/.f64 #s(literal 1 binary64) (/.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 N #s(literal -1 binary64))) (fma.f64 N N #s(literal -1 binary64)))) N #s(literal 1 binary64)))","next",0.40728383791597816,"binary64"],["(atan2.f64 #s(literal 1 binary64) (fma.f64 (/.f64 #s(literal 1 binary64) (/.f64 (/.f64 #s(literal 1 binary64) (/.f64 (+.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (fma.f64 N N #s(literal -1 binary64)))) N #s(literal 1 binary64)))","fresh",0.3747062988422101,"binary64"],["(atan2.f64 #s(literal 1 binary64) (fma.f64 (/.f64 #s(literal 1 binary64) #s(approx (/ (- N 1) (+ (* N N) -1)) (/.f64 #s(literal 1 binary64) N))) N #s(literal 1 binary64)))","next",4.565637322478361,"binary64"],["(atan2.f64 #s(literal 1 binary64) (fma.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64)))","fresh",0.5056038574528623,"binary64"],["(atan2.f64 #s(literal 1 binary64) (fma.f64 (+.f64 #s(literal 1 binary64) N) N #s(literal 1 binary64)))","done",0.2109375,"binary64"],["(atan2.f64 #s(literal 1 binary64) (fma.f64 (*.f64 N (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64)))","next",0.3565025879159782,"binary64"],["(atan2.f64 #s(literal 1 binary64) (/.f64 #s(literal 1 binary64) (/.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) (-.f64 #s(literal 1 binary64) (*.f64 (fma.f64 N N N) (fma.f64 N N N))))))","fresh",18.251443865199164,"binary64"],["(atan2.f64 #s(literal 1 binary64) (/.f64 #s(literal 1 binary64) (/.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) (-.f64 #s(literal 1 binary64) (*.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 N (fma.f64 N N N)))))))","fresh",18.273260124967603,"binary64"],["(atan2.f64 #s(literal 1 binary64) (/.f64 #s(literal 1 binary64) #s(approx (/ (- 1 (+ (* N N) N)) (- 1 (pow (+ (* N N) N) 2))) (/.f64 (/.f64 (-.f64 #s(literal 1 binary64) (/.f64 #s(literal 1 binary64) N)) N) N))))","fresh",1.6994478721203023,"binary64"],["(atan2.f64 #s(literal 1 binary64) (/.f64 #s(literal 1 binary64) #s(approx (/ (- 1 (+ (* N N) N)) (- 1 (pow (+ (* N N) N) 2))) (/.f64 (/.f64 #s(literal 1 binary64) N) N))))","fresh",4.630193096900726,"binary64"],["(atan2.f64 #s(literal 1 binary64) (+.f64 (fma.f64 N N #s(literal 1 binary64)) N))","done",0.228847509768442,"binary64"],["(atan2.f64 #s(literal 1 binary64) #s(approx (+ (+ (* N N) 1) N) (fma.f64 N N N)))","fresh",2.1924545334682572,"binary64"],["(atan2.f64 #s(literal 1 binary64) #s(approx (+ (+ (* N N) 1) N) (-.f64 N #s(literal -1 binary64))))","next",58.9780411009605,"binary64"],["(atan2.f64 #s(literal 1 binary64) #s(approx (+ (* (+ 1 N) N) 1) (*.f64 N N)))","fresh",4.495965423023124,"binary64"],["(atan2.f64 #s(literal 1 binary64) #s(approx (+ (* (+ 1 N) N) 1) #s(literal 1 binary64)))","done",59.97553665921092,"binary64"]],"compiler":[[20,10],[20,10],[22,11],[20,13],[17,10],[8,5],[15,9],[22,9],[23,11],[31,17],[27,15],[8,5],[14,9],[13,10],[13,9],[11,8],[20,10],[20,10],[22,11],[20,13],[17,10],[15,9],[22,9],[23,11],[31,17],[27,15],[14,9],[13,10],[13,9]],"count":[[842,16]],"kept":[{"done":[1,1],"fresh":[12,2],"new":[824,11],"picked":[5,2]}],"memory":[[-11187040,37158224]],"min-error":[[0.09765625,"binary64"]],"time":54.72705078125,"type":"prune"},{"egraph":[[0,8066,190,0.073557116],[4,7734,190,0.025388228],[3,1265,190,0.02024302],[2,285,190,0.003401535],[1,112,234,0.001078755],[0,60,266,0.000578243],[0,34,315,0.000600961]],"inputs":[["(atan2.f64 #s(literal 1 binary64) (fma.f64 (*.f64 N (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64)))","#s(literal 1 binary64)","(fma.f64 (*.f64 N (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64))","(*.f64 N (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","N","(pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))","(-.f64 N #s(literal 1 binary64))","#s(literal -1 binary64)","(fma.f64 N N #s(literal -1 binary64))","(atan2.f64 #s(literal 1 binary64) #s(approx (+ (+ (* N N) 1) N) (-.f64 N #s(literal -1 binary64))))","#s(literal 1 binary64)","#s(approx (+ (+ (* N N) 1) N) (-.f64 N #s(literal -1 binary64)))","(-.f64 N #s(literal -1 binary64))","N","#s(literal -1 binary64)","(atan2.f64 #s(literal 1 binary64) (fma.f64 (/.f64 #s(literal 1 binary64) #s(approx (/ (- N 1) (+ (* N N) -1)) (/.f64 #s(literal 1 binary64) N))) N #s(literal 1 binary64)))","#s(literal 1 binary64)","(fma.f64 (/.f64 #s(literal 1 binary64) #s(approx (/ (- N 1) (+ (* N N) -1)) (/.f64 #s(literal 1 binary64) N))) N #s(literal 1 binary64))","(/.f64 #s(literal 1 binary64) #s(approx (/ (- N 1) (+ (* N N) -1)) (/.f64 #s(literal 1 binary64) N)))","#s(approx (/ (- N 1) (+ (* N N) -1)) (/.f64 #s(literal 1 binary64) N))","(/.f64 #s(literal 1 binary64) N)","N","(atan2.f64 #s(literal 1 binary64) (fma.f64 (/.f64 #s(literal 1 binary64) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (+.f64 N #s(literal 1 binary64))))) N #s(literal 1 binary64)))","#s(literal 1 binary64)","(fma.f64 (/.f64 #s(literal 1 binary64) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (+.f64 N #s(literal 1 binary64))))) N #s(literal 1 binary64))","(/.f64 #s(literal 1 binary64) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (+.f64 N #s(literal 1 binary64)))))","(/.f64 (fma.f64 N N #s(literal -1 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (+.f64 N #s(literal 1 binary64))))","(fma.f64 N N #s(literal -1 binary64))","N","#s(literal -1 binary64)","(*.f64 (fma.f64 N N #s(literal -1 binary64)) (+.f64 N #s(literal 1 binary64)))","(+.f64 N #s(literal 1 binary64))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (/.f64 #s(literal 1 binary64) (/.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 N #s(literal -1 binary64))) (fma.f64 N N #s(literal -1 binary64)))) N #s(literal 1 binary64)))","#s(literal 1 binary64)","(fma.f64 (/.f64 #s(literal 1 binary64) (/.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 N #s(literal -1 binary64))) (fma.f64 N N #s(literal -1 binary64)))) N #s(literal 1 binary64))","(/.f64 #s(literal 1 binary64) (/.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 N #s(literal -1 binary64))) (fma.f64 N N #s(literal -1 binary64))))","(/.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 N #s(literal -1 binary64))) (fma.f64 N N #s(literal -1 binary64)))","(/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 N #s(literal -1 binary64)))","(fma.f64 N N #s(literal -1 binary64))","N","#s(literal -1 binary64)","(-.f64 N #s(literal -1 binary64))"]],"locations":[["(atan2.f64 #s(literal 1 binary64) (fma.f64 (/.f64 #s(literal 1 binary64) (/.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 N #s(literal -1 binary64))) (fma.f64 N N #s(literal -1 binary64)))) N #s(literal 1 binary64)))","cost-diff",0],["(/.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 N #s(literal -1 binary64))) (fma.f64 N N #s(literal -1 binary64)))","cost-diff",3],["(/.f64 #s(literal 1 binary64) (/.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 N #s(literal -1 binary64))) (fma.f64 N N #s(literal -1 binary64))))","cost-diff",4],["(/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 N #s(literal -1 binary64)))","cost-diff",5],["(fma.f64 (/.f64 #s(literal 1 binary64) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (+.f64 N #s(literal 1 binary64))))) N #s(literal 1 binary64))","cost-diff",0],["(atan2.f64 #s(literal 1 binary64) (fma.f64 (/.f64 #s(literal 1 binary64) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (+.f64 N #s(literal 1 binary64))))) N #s(literal 1 binary64)))","cost-diff",0],["(/.f64 #s(literal 1 binary64) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (+.f64 N #s(literal 1 binary64)))))","cost-diff",4],["(/.f64 (fma.f64 N N #s(literal -1 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (+.f64 N #s(literal 1 binary64))))","cost-diff",8],["#s(approx (/ (- N 1) (+ (* N N) -1)) (/.f64 #s(literal 1 binary64) N))","cost-diff",0],["(/.f64 #s(literal 1 binary64) #s(approx (/ (- N 1) (+ (* N N) -1)) (/.f64 #s(literal 1 binary64) N)))","cost-diff",0],["(atan2.f64 #s(literal 1 binary64) (fma.f64 (/.f64 #s(literal 1 binary64) #s(approx (/ (- N 1) (+ (* N N) -1)) (/.f64 #s(literal 1 binary64) N))) N #s(literal 1 binary64)))","cost-diff",0],["(fma.f64 (/.f64 #s(literal 1 binary64) #s(approx (/ (- N 1) (+ (* N N) -1)) (/.f64 #s(literal 1 binary64) N))) N #s(literal 1 binary64))","cost-diff",1],["(-.f64 N #s(literal -1 binary64))","cost-diff",0],["#s(approx (+ (+ (* N N) 1) N) (-.f64 N #s(literal -1 binary64)))","cost-diff",0],["(atan2.f64 #s(literal 1 binary64) #s(approx (+ (+ (* N N) 1) N) (-.f64 N #s(literal -1 binary64))))","cost-diff",0],["(pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))","cost-diff",0],["(atan2.f64 #s(literal 1 binary64) (fma.f64 (*.f64 N (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64)))","cost-diff",0],["(*.f64 N (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","cost-diff",2],["(fma.f64 (*.f64 N (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64))","cost-diff",5]],"memory":[[3126656,35181280]],"method":["egg-herbie"],"outputs":[["(atan2.f64 #s(literal 1 binary64) (fma.f64 (*.f64 N (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64)))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)))","#s(literal 1 binary64)","(fma.f64 (*.f64 N (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64))","(fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64))","(*.f64 N (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(/.f64 N (-.f64 N #s(literal 1 binary64)))","N","(pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))","(-.f64 N #s(literal 1 binary64))","#s(literal -1 binary64)","(fma.f64 N N #s(literal -1 binary64))","(atan2.f64 #s(literal 1 binary64) #s(approx (+ (+ (* N N) 1) N) (-.f64 N #s(literal -1 binary64))))","#s(literal 1 binary64)","#s(approx (+ (+ (* N N) 1) N) (-.f64 N #s(literal -1 binary64)))","(-.f64 N #s(literal -1 binary64))","N","#s(literal -1 binary64)","(atan2.f64 #s(literal 1 binary64) (fma.f64 (/.f64 #s(literal 1 binary64) #s(approx (/ (- N 1) (+ (* N N) -1)) (/.f64 #s(literal 1 binary64) N))) N #s(literal 1 binary64)))","(atan2.f64 #s(literal 1 binary64) (+.f64 (/.f64 N #s(approx (/ (- N 1) (+ (* N N) -1)) (/.f64 #s(literal 1 binary64) N))) #s(literal 1 binary64)))","#s(literal 1 binary64)","(fma.f64 (/.f64 #s(literal 1 binary64) #s(approx (/ (- N 1) (+ (* N N) -1)) (/.f64 #s(literal 1 binary64) N))) N #s(literal 1 binary64))","(+.f64 (/.f64 N #s(approx (/ (- N 1) (+ (* N N) -1)) (/.f64 #s(literal 1 binary64) N))) #s(literal 1 binary64))","(/.f64 #s(literal 1 binary64) #s(approx (/ (- N 1) (+ (* N N) -1)) (/.f64 #s(literal 1 binary64) N)))","#s(approx (/ (- N 1) (+ (* N N) -1)) (/.f64 #s(literal 1 binary64) N))","(/.f64 #s(literal 1 binary64) N)","N","(atan2.f64 #s(literal 1 binary64) (fma.f64 (/.f64 #s(literal 1 binary64) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (+.f64 N #s(literal 1 binary64))))) N #s(literal 1 binary64)))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)))","#s(literal 1 binary64)","(fma.f64 (/.f64 #s(literal 1 binary64) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (+.f64 N #s(literal 1 binary64))))) N #s(literal 1 binary64))","(fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64))","(/.f64 #s(literal 1 binary64) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (+.f64 N #s(literal 1 binary64)))))","(-.f64 N #s(literal -1 binary64))","(/.f64 (fma.f64 N N #s(literal -1 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (+.f64 N #s(literal 1 binary64))))","(/.f64 #s(literal 1 binary64) (-.f64 N #s(literal -1 binary64)))","(fma.f64 N N #s(literal -1 binary64))","N","#s(literal -1 binary64)","(*.f64 (fma.f64 N N #s(literal -1 binary64)) (+.f64 N #s(literal 1 binary64)))","(*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))","(+.f64 N #s(literal 1 binary64))","(-.f64 N #s(literal -1 binary64))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (/.f64 #s(literal 1 binary64) (/.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 N #s(literal -1 binary64))) (fma.f64 N N #s(literal -1 binary64)))) N #s(literal 1 binary64)))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)))","#s(literal 1 binary64)","(fma.f64 (/.f64 #s(literal 1 binary64) (/.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 N #s(literal -1 binary64))) (fma.f64 N N #s(literal -1 binary64)))) N #s(literal 1 binary64))","(fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64))","(/.f64 #s(literal 1 binary64) (/.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 N #s(literal -1 binary64))) (fma.f64 N N #s(literal -1 binary64))))","(-.f64 N #s(literal -1 binary64))","(/.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 N #s(literal -1 binary64))) (fma.f64 N N #s(literal -1 binary64)))","(/.f64 #s(literal 1 binary64) (-.f64 N #s(literal -1 binary64)))","(/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 N #s(literal -1 binary64)))","(-.f64 N #s(literal 1 binary64))","(fma.f64 N N #s(literal -1 binary64))","N","#s(literal -1 binary64)","(-.f64 N #s(literal -1 binary64))"]],"stop":[["iter limit",1],["node limit",1],["iter limit",1]],"time":238.96484375,"type":"simplify"},{"compiler":[[328,36]],"locations":[["(/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 N #s(literal -1 binary64)))","accuracy",0.08203125],["(/.f64 #s(literal 1 binary64) (/.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 N #s(literal -1 binary64))) (fma.f64 N N #s(literal -1 binary64))))","accuracy",0.1796875],["(atan2.f64 #s(literal 1 binary64) (fma.f64 (/.f64 #s(literal 1 binary64) (/.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 N #s(literal -1 binary64))) (fma.f64 N N #s(literal -1 binary64)))) N #s(literal 1 binary64)))","accuracy",0.2109375],["(/.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 N #s(literal -1 binary64))) (fma.f64 N N #s(literal -1 binary64)))","accuracy",0.28515625],["(/.f64 #s(literal 1 binary64) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (+.f64 N #s(literal 1 binary64)))))","accuracy",0.1796875],["(atan2.f64 #s(literal 1 binary64) (fma.f64 (/.f64 #s(literal 1 binary64) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (+.f64 N #s(literal 1 binary64))))) N #s(literal 1 binary64)))","accuracy",0.2109375],["(*.f64 (fma.f64 N N #s(literal -1 binary64)) (+.f64 N #s(literal 1 binary64)))","accuracy",0.26171875],["(/.f64 (fma.f64 N N #s(literal -1 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (+.f64 N #s(literal 1 binary64))))","accuracy",0.35384750976844204],["(/.f64 #s(literal 1 binary64) N)","accuracy",0.0],["(/.f64 #s(literal 1 binary64) #s(approx (/ (- N 1) (+ (* N N) -1)) (/.f64 #s(literal 1 binary64) N)))","accuracy",0.1796875],["(atan2.f64 #s(literal 1 binary64) (fma.f64 (/.f64 #s(literal 1 binary64) #s(approx (/ (- N 1) (+ (* N N) -1)) (/.f64 #s(literal 1 binary64) N))) N #s(literal 1 binary64)))","accuracy",0.2109375],["#s(approx (/ (- N 1) (+ (* N N) -1)) (/.f64 #s(literal 1 binary64) N))","accuracy",4.2990063547228825],["(-.f64 N #s(literal -1 binary64))","accuracy",0.0],["(atan2.f64 #s(literal 1 binary64) #s(approx (+ (+ (* N N) 1) N) (-.f64 N #s(literal -1 binary64))))","accuracy",0.2109375],["#s(approx (+ (+ (* N N) 1) N) (-.f64 N #s(literal -1 binary64)))","accuracy",58.979360638403],["(-.f64 N #s(literal 1 binary64))","accuracy",0.0],["(fma.f64 (*.f64 N (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64))","accuracy",0.0625],["(*.f64 N (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","accuracy",0.19140625],["(atan2.f64 #s(literal 1 binary64) (fma.f64 (*.f64 N (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64)))","accuracy",0.2109375]],"memory":[[1997920,34707168]],"mixsample":[[12.076904296875,"ival-div",0],[10.434326171875,"ival-add",0],[10.847412109375,"ival-mult",0],[0.123291015625,"ival-assert",0],[8.65283203125,"ival-atan2",0],[2.876708984375,"ival-sub",0],[0.218017578125,"ival-true",0],[0.287109375,"exact",0],[3.81396484375,"ival-pow",0]],"outcomes":[[69.5751953125,0,"valid",256]],"time":94.6669921875,"type":"localize"},{"count":[[22,53]],"inputs":[["(fma.f64 (*.f64 N (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64))","(*.f64 N (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (*.f64 N (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64)))","(pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))","(atan2.f64 #s(literal 1 binary64) #s(approx (+ (+ (* N N) 1) N) (-.f64 N #s(literal -1 binary64))))","#s(approx (+ (+ (* N N) 1) N) (-.f64 N #s(literal -1 binary64)))","(-.f64 N #s(literal -1 binary64))","(fma.f64 (/.f64 #s(literal 1 binary64) #s(approx (/ (- N 1) (+ (* N N) -1)) (/.f64 #s(literal 1 binary64) N))) N #s(literal 1 binary64))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (/.f64 #s(literal 1 binary64) #s(approx (/ (- N 1) (+ (* N N) -1)) (/.f64 #s(literal 1 binary64) N))) N #s(literal 1 binary64)))","(/.f64 #s(literal 1 binary64) #s(approx (/ (- N 1) (+ (* N N) -1)) (/.f64 #s(literal 1 binary64) N)))","#s(approx (/ (- N 1) (+ (* N N) -1)) (/.f64 #s(literal 1 binary64) N))","(/.f64 (fma.f64 N N #s(literal -1 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (+.f64 N #s(literal 1 binary64))))","(/.f64 #s(literal 1 binary64) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (+.f64 N #s(literal 1 binary64)))))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (/.f64 #s(literal 1 binary64) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (+.f64 N #s(literal 1 binary64))))) N #s(literal 1 binary64)))","(fma.f64 (/.f64 #s(literal 1 binary64) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (+.f64 N #s(literal 1 binary64))))) N #s(literal 1 binary64))","(/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 N #s(literal -1 binary64)))","(/.f64 #s(literal 1 binary64) (/.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 N #s(literal -1 binary64))) (fma.f64 N N #s(literal -1 binary64))))","(/.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 N #s(literal -1 binary64))) (fma.f64 N N #s(literal -1 binary64)))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (/.f64 #s(literal 1 binary64) (/.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 N #s(literal -1 binary64))) (fma.f64 N N #s(literal -1 binary64)))) N #s(literal 1 binary64)))","(-.f64 N #s(literal 1 binary64))","(/.f64 #s(literal 1 binary64) N)","(*.f64 (fma.f64 N N #s(literal -1 binary64)) (+.f64 N #s(literal 1 binary64)))"]],"memory":[[-4402160,3257088]],"outputs":[["1","(+ 1 N)","(+ 1 (* N (+ 1 N)))","(* -1 N)","(* N (- (* -1 N) 1))","(* N (- (* N (- (* -1 N) 1)) 1))","(* N (- (* N (- (* N (- (* -1 N) 1)) 1)) 1))","(atan2 1 (+ 1 (/ (* N (- (pow N 2) 1)) (- N 1))))","-1","(- (* -1 N) 1)","(- (* N (- (* -1 N) 1)) 1)","(- (* N (- (* N (- (* -1 N) 1)) 1)) 1)","(atan2 1 (+ 1 (+ N (pow N 2))))","(+ 1 (* -1 N))","(+ 1 (* N (- N 1)))","(+ 1 (* N (- (* N (+ 1 (* -1 N))) 1)))","(atan2 1 (+ 1 (* N (+ 1 N))))","(- N 1)","(/ 1 N)","(- (* N (- N 1)) 1)","(- (* N (- (* N (+ 1 N)) 1)) 1)","(pow N 2)","(* (pow N 2) (+ 1 (/ 1 N)))","(* (pow N 2) (+ 1 (+ (/ 1 N) (/ 1 (pow N 2)))))","(+ 1 (/ 1 N))","(+ 1 (+ (/ 1 N) (/ 1 (pow N 2))))","(+ 1 (+ (/ 1 N) (+ (/ 1 (pow N 2)) (/ 1 (pow N 3)))))","(atan2 1 (- (+ 1 (/ (pow N 3) (- N 1))) (/ N (- N 1))))","(/ (+ 1 (/ 1 N)) N)","(/ (+ 1 (+ (/ 1 N) (/ 1 (pow N 2)))) N)","(/ (+ 1 (+ (/ 1 N) (+ (/ 1 (pow N 2)) (/ 1 (pow N 3))))) N)","N","(* N (+ 1 (/ 1 N)))","(/ (- 1 (/ 1 N)) N)","(/ (- (+ 1 (/ 1 (pow N 2))) (/ 1 N)) N)","(/ (- (+ 1 (/ 1 (pow N 2))) (+ (/ 1 N) (/ 1 (pow N 3)))) N)","(* N (- 1 (/ 1 N)))","(pow N 3)","(* (pow N 3) (+ 1 (/ 1 N)))","(* (pow N 3) (- (+ 1 (/ 1 N)) (/ 1 (pow N 2))))","(* (pow N 3) (+ 1 (+ (* -1 (/ (+ 1 (/ 1 N)) (pow N 2))) (/ 1 N))))","(+ 1 (* -1 (/ (- (* -1 (/ (+ 1 (/ 1 N)) N)) 1) N)))","(atan2 1 (- (+ 1 (* -1 (/ (pow N 3) (+ 1 (* -1 N))))) (* -1 (/ N (+ 1 (* -1 N))))))","(* -1 (/ (- (* -1 (/ (+ 1 (/ 1 N)) N)) 1) N))","(* -1 (/ (- (* -1 (/ (+ 1 (+ (/ 1 N) (/ 1 (pow N 2)))) N)) 1) N))","(atan2 1 (- (+ 1 (pow N 2)) (* -1 N)))","(* -1 (/ (- (/ 1 N) 1) N))","(* -1 (/ (- (* -1 (/ (- (/ 1 N) 1) N)) 1) N))","(* -1 (/ (- (* -1 (/ (- (* -1 (/ (- (/ 1 N) 1) N)) 1) N)) 1) N))","(atan2 1 (+ 1 (* N (- 1 (* -1 N)))))","(* -1 (* N (- (/ 1 N) 1)))","(* -1 (* (pow N 3) (- (* -1 (/ (- 1 (/ 1 N)) N)) 1)))","(* -1 (* (pow N 3) (- (* -1 (/ (+ 1 (* -1 (/ (+ 1 (/ 1 N)) N))) N)) 1)))"]],"series":[[3.634033203125,"((+ (* (* N (pow (- N 1) -1)) (+ (* N N) -1)) 1) (* N (pow (- N 1) -1)) (atan2 1 (+ (* (* N (pow (- N 1) -1)) (+ (* N N) -1)) 1)) (pow (- N 1) -1) (atan2 1 (+ (+ (* N N) 1) N)) (+ (+ (* N N) 1) N) (- N -1) (+ (* (/ 1 (/ (- N 1) (+ (* N N) -1))) N) 1) (atan2 1 (+ (* (/ 1 (/ (- N 1) (+ (* N N) -1))) N) 1)) (/ 1 (/ (- N 1) (+ (* N N) -1))) (/ (- N 1) (+ (* N N) -1)) (/ (+ (* N N) -1) (* (+ (* N N) -1) (+ N 1))) (/ 1 (/ (+ (* N N) -1) (* (+ (* N N) -1) (+ N 1)))) (atan2 1 (+ (* (/ 1 (/ (+ (* N N) -1) (* (+ (* N N) -1) (+ N 1)))) N) 1)) (+ (* (/ 1 (/ (+ (* N N) -1) (* (+ (* N N) -1) (+ N 1)))) N) 1) (/ (+ (* N N) -1) (- N -1)) (/ 1 (/ (/ (+ (* N N) -1) (- N -1)) (+ (* N N) -1))) (/ (/ (+ (* N N) -1) (- N -1)) (+ (* N N) -1)) (atan2 1 (+ (* (/ 1 (/ (/ (+ (* N N) -1) (- N -1)) (+ (* N N) -1))) N) 1)) (- N 1) (/ 1 N) (* (+ (* N N) -1) (+ N 1)))","N","-inf"],[1.4150390625,"((+ (* (* N (pow (- N 1) -1)) (+ (* N N) -1)) 1) (* N (pow (- N 1) -1)) (atan2 1 (+ (* (* N (pow (- N 1) -1)) (+ (* N N) -1)) 1)) (pow (- N 1) -1) (atan2 1 (+ (+ (* N N) 1) N)) (+ (+ (* N N) 1) N) (- N -1) (+ (* (/ 1 (/ (- N 1) (+ (* N N) -1))) N) 1) (atan2 1 (+ (* (/ 1 (/ (- N 1) (+ (* N N) -1))) N) 1)) (/ 1 (/ (- N 1) (+ (* N N) -1))) (/ (- N 1) (+ (* N N) -1)) (/ (+ (* N N) -1) (* (+ (* N N) -1) (+ N 1))) (/ 1 (/ (+ (* N N) -1) (* (+ (* N N) -1) (+ N 1)))) (atan2 1 (+ (* (/ 1 (/ (+ (* N N) -1) (* (+ (* N N) -1) (+ N 1)))) N) 1)) (+ (* (/ 1 (/ (+ (* N N) -1) (* (+ (* N N) -1) (+ N 1)))) N) 1) (/ (+ (* N N) -1) (- N -1)) (/ 1 (/ (/ (+ (* N N) -1) (- N -1)) (+ (* N N) -1))) (/ (/ (+ (* N N) -1) (- N -1)) (+ (* N N) -1)) (atan2 1 (+ (* (/ 1 (/ (/ (+ (* N N) -1) (- N -1)) (+ (* N N) -1))) N) 1)) (- N 1) (/ 1 N) (* (+ (* N N) -1) (+ N 1)))","N","inf"],[1.280029296875,"((+ (* (* N (pow (- N 1) -1)) (+ (* N N) -1)) 1) (* N (pow (- N 1) -1)) (atan2 1 (+ (* (* N (pow (- N 1) -1)) (+ (* N N) -1)) 1)) (pow (- N 1) -1) (atan2 1 (+ (+ (* N N) 1) N)) (+ (+ (* N N) 1) N) (- N -1) (+ (* (/ 1 (/ (- N 1) (+ (* N N) -1))) N) 1) (atan2 1 (+ (* (/ 1 (/ (- N 1) (+ (* N N) -1))) N) 1)) (/ 1 (/ (- N 1) (+ (* N N) -1))) (/ (- N 1) (+ (* N N) -1)) (/ (+ (* N N) -1) (* (+ (* N N) -1) (+ N 1))) (/ 1 (/ (+ (* N N) -1) (* (+ (* N N) -1) (+ N 1)))) (atan2 1 (+ (* (/ 1 (/ (+ (* N N) -1) (* (+ (* N N) -1) (+ N 1)))) N) 1)) (+ (* (/ 1 (/ (+ (* N N) -1) (* (+ (* N N) -1) (+ N 1)))) N) 1) (/ (+ (* N N) -1) (- N -1)) (/ 1 (/ (/ (+ (* N N) -1) (- N -1)) (+ (* N N) -1))) (/ (/ (+ (* N N) -1) (- N -1)) (+ (* N N) -1)) (atan2 1 (+ (* (/ 1 (/ (/ (+ (* N N) -1) (- N -1)) (+ (* N N) -1))) N) 1)) (- N 1) (/ 1 N) (* (+ (* N N) -1) (+ N 1)))","N","0"]],"time":7.5751953125,"type":"series"},{"count":[[53,52]],"egraph":[[0,8249,375,0.088510401],[3,4201,398,0.029869223],[2,837,460,0.0144071],[1,329,485,0.002763094],[0,119,512,0.001493111]],"inputs":[["1","(+ 1 N)","(+ 1 (* N (+ 1 N)))","(* -1 N)","(* N (- (* -1 N) 1))","(* N (- (* N (- (* -1 N) 1)) 1))","(* N (- (* N (- (* N (- (* -1 N) 1)) 1)) 1))","(atan2 1 (+ 1 (/ (* N (- (pow N 2) 1)) (- N 1))))","-1","(- (* -1 N) 1)","(- (* N (- (* -1 N) 1)) 1)","(- (* N (- (* N (- (* -1 N) 1)) 1)) 1)","(atan2 1 (+ 1 (+ N (pow N 2))))","(+ 1 (* -1 N))","(+ 1 (* N (- N 1)))","(+ 1 (* N (- (* N (+ 1 (* -1 N))) 1)))","(atan2 1 (+ 1 (* N (+ 1 N))))","(- N 1)","(/ 1 N)","(- (* N (- N 1)) 1)","(- (* N (- (* N (+ 1 N)) 1)) 1)","(pow N 2)","(* (pow N 2) (+ 1 (/ 1 N)))","(* (pow N 2) (+ 1 (+ (/ 1 N) (/ 1 (pow N 2)))))","(+ 1 (/ 1 N))","(+ 1 (+ (/ 1 N) (/ 1 (pow N 2))))","(+ 1 (+ (/ 1 N) (+ (/ 1 (pow N 2)) (/ 1 (pow N 3)))))","(atan2 1 (- (+ 1 (/ (pow N 3) (- N 1))) (/ N (- N 1))))","(/ (+ 1 (/ 1 N)) N)","(/ (+ 1 (+ (/ 1 N) (/ 1 (pow N 2)))) N)","(/ (+ 1 (+ (/ 1 N) (+ (/ 1 (pow N 2)) (/ 1 (pow N 3))))) N)","N","(* N (+ 1 (/ 1 N)))","(/ (- 1 (/ 1 N)) N)","(/ (- (+ 1 (/ 1 (pow N 2))) (/ 1 N)) N)","(/ (- (+ 1 (/ 1 (pow N 2))) (+ (/ 1 N) (/ 1 (pow N 3)))) N)","(* N (- 1 (/ 1 N)))","(pow N 3)","(* (pow N 3) (+ 1 (/ 1 N)))","(* (pow N 3) (- (+ 1 (/ 1 N)) (/ 1 (pow N 2))))","(* (pow N 3) (+ 1 (+ (* -1 (/ (+ 1 (/ 1 N)) (pow N 2))) (/ 1 N))))","(+ 1 (* -1 (/ (- (* -1 (/ (+ 1 (/ 1 N)) N)) 1) N)))","(atan2 1 (- (+ 1 (* -1 (/ (pow N 3) (+ 1 (* -1 N))))) (* -1 (/ N (+ 1 (* -1 N))))))","(* -1 (/ (- (* -1 (/ (+ 1 (/ 1 N)) N)) 1) N))","(* -1 (/ (- (* -1 (/ (+ 1 (+ (/ 1 N) (/ 1 (pow N 2)))) N)) 1) N))","(atan2 1 (- (+ 1 (pow N 2)) (* -1 N)))","(* -1 (/ (- (/ 1 N) 1) N))","(* -1 (/ (- (* -1 (/ (- (/ 1 N) 1) N)) 1) N))","(* -1 (/ (- (* -1 (/ (- (* -1 (/ (- (/ 1 N) 1) N)) 1) N)) 1) N))","(atan2 1 (+ 1 (* N (- 1 (* -1 N)))))","(* -1 (* N (- (/ 1 N) 1)))","(* -1 (* (pow N 3) (- (* -1 (/ (- 1 (/ 1 N)) N)) 1)))","(* -1 (* (pow N 3) (- (* -1 (/ (+ 1 (* -1 (/ (+ 1 (/ 1 N)) N))) N)) 1)))"]],"memory":[[1186032,43548368]],"method":["egg-herbie"],"outputs":[["1","#s(literal 1 binary64)","(+ 1 N)","(-.f64 N #s(literal -1 binary64))","(+ 1 (* N (+ 1 N)))","(fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64))","(* -1 N)","(neg.f64 N)","(* N (- (* -1 N) 1))","(*.f64 (-.f64 #s(literal -1 binary64) N) N)","(* N (- (* N (- (* -1 N) 1)) 1))","(*.f64 (fma.f64 (-.f64 #s(literal -1 binary64) N) N #s(literal -1 binary64)) N)","(* N (- (* N (- (* N (- (* -1 N) 1)) 1)) 1))","(*.f64 (*.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 #s(literal -1 binary64) N)) N)","(atan2 1 (+ 1 (/ (* N (- (pow N 2) 1)) (- N 1))))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)))","-1","#s(literal -1 binary64)","(- (* -1 N) 1)","(-.f64 #s(literal -1 binary64) N)","(- (* N (- (* -1 N) 1)) 1)","(fma.f64 (-.f64 #s(literal -1 binary64) N) N #s(literal -1 binary64))","(- (* N (- (* N (- (* -1 N) 1)) 1)) 1)","(*.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 #s(literal -1 binary64) N))","(atan2 1 (+ 1 (+ N (pow N 2))))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)))","(+ 1 (* -1 N))","(-.f64 #s(literal 1 binary64) N)","(+ 1 (* N (- N 1)))","(fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))","(+ 1 (* N (- (* N (+ 1 (* -1 N))) 1)))","(*.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) N))","(atan2 1 (+ 1 (* N (+ 1 N))))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)))","(- N 1)","(-.f64 N #s(literal 1 binary64))","(/ 1 N)","(/.f64 #s(literal 1 binary64) N)","(- (* N (- N 1)) 1)","(fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))","(- (* N (- (* N (+ 1 N)) 1)) 1)","(*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))","(pow N 2)","(*.f64 N N)","(* (pow N 2) (+ 1 (/ 1 N)))","(fma.f64 N N N)","(* (pow N 2) (+ 1 (+ (/ 1 N) (/ 1 (pow N 2)))))","(fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64))","(+ 1 (/ 1 N))","(/.f64 (-.f64 N #s(literal -1 binary64)) N)","(+ 1 (+ (/ 1 N) (/ 1 (pow N 2))))","(-.f64 (/.f64 (/.f64 (-.f64 N #s(literal -1 binary64)) N) N) #s(literal -1 binary64))","(+ 1 (+ (/ 1 N) (+ (/ 1 (pow N 2)) (/ 1 (pow N 3)))))","(-.f64 #s(literal 1 binary64) (/.f64 (-.f64 #s(literal -1 binary64) (/.f64 (/.f64 (-.f64 N #s(literal -1 binary64)) N) N)) N))","(atan2 1 (- (+ 1 (/ (pow N 3) (- N 1))) (/ N (- N 1))))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)))","(/ (+ 1 (/ 1 N)) N)","(/.f64 (/.f64 (-.f64 N #s(literal -1 binary64)) N) N)","(/ (+ 1 (+ (/ 1 N) (/ 1 (pow N 2)))) N)","(/.f64 (-.f64 (/.f64 (/.f64 (-.f64 N #s(literal -1 binary64)) N) N) #s(literal -1 binary64)) N)","(/ (+ 1 (+ (/ 1 N) (+ (/ 1 (pow N 2)) (/ 1 (pow N 3))))) N)","(/.f64 (-.f64 #s(literal 1 binary64) (/.f64 (-.f64 #s(literal -1 binary64) (/.f64 (/.f64 (-.f64 N #s(literal -1 binary64)) N) N)) N)) N)","N","(* N (+ 1 (/ 1 N)))","(-.f64 N #s(literal -1 binary64))","(/ (- 1 (/ 1 N)) N)","(/.f64 (-.f64 #s(literal 1 binary64) (/.f64 #s(literal 1 binary64) N)) N)","(/ (- (+ 1 (/ 1 (pow N 2))) (/ 1 N)) N)","(/.f64 (-.f64 (/.f64 (-.f64 (/.f64 #s(literal 1 binary64) N) #s(literal 1 binary64)) N) #s(literal -1 binary64)) N)","(/ (- (+ 1 (/ 1 (pow N 2))) (+ (/ 1 N) (/ 1 (pow N 3)))) N)","(/.f64 (-.f64 (/.f64 (-.f64 (/.f64 (-.f64 #s(literal 1 binary64) (/.f64 #s(literal 1 binary64) N)) N) #s(literal 1 binary64)) N) #s(literal -1 binary64)) N)","(* N (- 1 (/ 1 N)))","(-.f64 N #s(literal 1 binary64))","(pow N 3)","(pow.f64 N #s(literal 3 binary64))","(* (pow N 3) (+ 1 (/ 1 N)))","(*.f64 (fma.f64 N N N) N)","(* (pow N 3) (- (+ 1 (/ 1 N)) (/ 1 (pow N 2))))","(fma.f64 (fma.f64 N N N) N (neg.f64 N))","(* (pow N 3) (+ 1 (+ (* -1 (/ (+ 1 (/ 1 N)) (pow N 2))) (/ 1 N))))","(*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))","(+ 1 (* -1 (/ (- (* -1 (/ (+ 1 (/ 1 N)) N)) 1) N)))","(-.f64 #s(literal 1 binary64) (/.f64 (-.f64 #s(literal -1 binary64) (/.f64 (/.f64 (-.f64 N #s(literal -1 binary64)) N) N)) N))","(atan2 1 (- (+ 1 (* -1 (/ (pow N 3) (+ 1 (* -1 N))))) (* -1 (/ N (+ 1 (* -1 N))))))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)))","(* -1 (/ (- (* -1 (/ (+ 1 (/ 1 N)) N)) 1) N))","(/.f64 (-.f64 (/.f64 (/.f64 (-.f64 N #s(literal -1 binary64)) N) N) #s(literal -1 binary64)) N)","(* -1 (/ (- (* -1 (/ (+ 1 (+ (/ 1 N) (/ 1 (pow N 2)))) N)) 1) N))","(/.f64 (-.f64 #s(literal 1 binary64) (/.f64 (-.f64 #s(literal -1 binary64) (/.f64 (/.f64 (-.f64 N #s(literal -1 binary64)) N) N)) N)) N)","(atan2 1 (- (+ 1 (pow N 2)) (* -1 N)))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)))","(* -1 (/ (- (/ 1 N) 1) N))","(/.f64 (-.f64 #s(literal 1 binary64) (/.f64 #s(literal 1 binary64) N)) N)","(* -1 (/ (- (* -1 (/ (- (/ 1 N) 1) N)) 1) N))","(/.f64 (-.f64 (/.f64 (-.f64 (/.f64 #s(literal 1 binary64) N) #s(literal 1 binary64)) N) #s(literal -1 binary64)) N)","(* -1 (/ (- (* -1 (/ (- (* -1 (/ (- (/ 1 N) 1) N)) 1) N)) 1) N))","(/.f64 (-.f64 (/.f64 (-.f64 (/.f64 (-.f64 #s(literal 1 binary64) (/.f64 #s(literal 1 binary64) N)) N) #s(literal 1 binary64)) N) #s(literal -1 binary64)) N)","(atan2 1 (+ 1 (* N (- 1 (* -1 N)))))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)))","(* -1 (* N (- (/ 1 N) 1)))","(-.f64 N #s(literal 1 binary64))","(* -1 (* (pow N 3) (- (* -1 (/ (- 1 (/ 1 N)) N)) 1)))","(fma.f64 (fma.f64 N N N) N (neg.f64 N))","(* -1 (* (pow N 3) (- (* -1 (/ (+ 1 (* -1 (/ (+ 1 (/ 1 N)) N))) N)) 1)))","(*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))"]],"stop":[["iter limit",1],["node limit",1]],"time":235.825927734375,"type":"simplify"},{"count":[[22,1274]],"egraph":[[0,8223,146,0.070001782],[2,2014,154,0.025624219],[1,260,154,0.008649386],[0,60,221,0.00245594],[0,34,265,0.000371011]],"inputs":[["(fma.f64 (*.f64 N (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64))","(*.f64 N (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (*.f64 N (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64)))","(pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))","(atan2.f64 #s(literal 1 binary64) #s(approx (+ (+ (* N N) 1) N) (-.f64 N #s(literal -1 binary64))))","#s(approx (+ (+ (* N N) 1) N) (-.f64 N #s(literal -1 binary64)))","(-.f64 N #s(literal -1 binary64))","(fma.f64 (/.f64 #s(literal 1 binary64) #s(approx (/ (- N 1) (+ (* N N) -1)) (/.f64 #s(literal 1 binary64) N))) N #s(literal 1 binary64))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (/.f64 #s(literal 1 binary64) #s(approx (/ (- N 1) (+ (* N N) -1)) (/.f64 #s(literal 1 binary64) N))) N #s(literal 1 binary64)))","(/.f64 #s(literal 1 binary64) #s(approx (/ (- N 1) (+ (* N N) -1)) (/.f64 #s(literal 1 binary64) N)))","#s(approx (/ (- N 1) (+ (* N N) -1)) (/.f64 #s(literal 1 binary64) N))","(/.f64 (fma.f64 N N #s(literal -1 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (+.f64 N #s(literal 1 binary64))))","(/.f64 #s(literal 1 binary64) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (+.f64 N #s(literal 1 binary64)))))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (/.f64 #s(literal 1 binary64) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (+.f64 N #s(literal 1 binary64))))) N #s(literal 1 binary64)))","(fma.f64 (/.f64 #s(literal 1 binary64) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (+.f64 N #s(literal 1 binary64))))) N #s(literal 1 binary64))","(/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 N #s(literal -1 binary64)))","(/.f64 #s(literal 1 binary64) (/.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 N #s(literal -1 binary64))) (fma.f64 N N #s(literal -1 binary64))))","(/.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 N #s(literal -1 binary64))) (fma.f64 N N #s(literal -1 binary64)))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (/.f64 #s(literal 1 binary64) (/.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 N #s(literal -1 binary64))) (fma.f64 N N #s(literal -1 binary64)))) N #s(literal 1 binary64)))","(-.f64 N #s(literal 1 binary64))","(/.f64 #s(literal 1 binary64) N)","(*.f64 (fma.f64 N N #s(literal -1 binary64)) (+.f64 N #s(literal 1 binary64)))"]],"memory":[[9718768,72931088]],"outputs":[["(*.f64 (expm1.f64 (*.f64 (+.f64 (log.f64 N) (log1p.f64 N)) #s(literal 2 binary64))) (pow.f64 (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64)))","(*.f64 (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) N) #s(literal 3 binary64)) #s(literal 1 binary64)) (pow.f64 (-.f64 (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) N) #s(literal 2 binary64)) #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal -1 binary64)) N)) #s(literal -1 binary64)))","(pow.f64 (/.f64 (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal -1 binary64)) (expm1.f64 (*.f64 (+.f64 (log.f64 N) (log1p.f64 N)) #s(literal 2 binary64)))) #s(literal -1 binary64))","(pow.f64 (/.f64 (-.f64 (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) N) #s(literal 2 binary64)) #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal -1 binary64)) N)) (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) N) #s(literal 3 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64))","(/.f64 (+.f64 (pow.f64 (+.f64 #s(literal 1 binary64) (*.f64 (*.f64 (/.f64 N (-.f64 N #s(literal 1 binary64))) N) N)) #s(literal 3 binary64)) (pow.f64 (neg.f64 (/.f64 N (-.f64 N #s(literal 1 binary64)))) #s(literal 3 binary64))) (fma.f64 (+.f64 #s(literal 1 binary64) (*.f64 (*.f64 (/.f64 N (-.f64 N #s(literal 1 binary64))) N) N)) (+.f64 #s(literal 1 binary64) (*.f64 (*.f64 (/.f64 N (-.f64 N #s(literal 1 binary64))) N) N)) (-.f64 (pow.f64 (/.f64 N (-.f64 N #s(literal 1 binary64))) #s(literal 2 binary64)) (*.f64 (+.f64 #s(literal 1 binary64) (*.f64 (*.f64 (/.f64 N (-.f64 N #s(literal 1 binary64))) N) N)) (neg.f64 (/.f64 N (-.f64 N #s(literal 1 binary64))))))))","(/.f64 (fma.f64 (pow.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal 3 binary64)) (pow.f64 N #s(literal 9 binary64)) (pow.f64 (fma.f64 (/.f64 N (-.f64 N #s(literal 1 binary64))) #s(literal -1 binary64) #s(literal 1 binary64)) #s(literal 3 binary64))) (+.f64 (pow.f64 (*.f64 (*.f64 (/.f64 N (-.f64 N #s(literal 1 binary64))) N) N) #s(literal 2 binary64)) (-.f64 (*.f64 (fma.f64 (/.f64 N (-.f64 N #s(literal 1 binary64))) #s(literal -1 binary64) #s(literal 1 binary64)) (fma.f64 (/.f64 N (-.f64 N #s(literal 1 binary64))) #s(literal -1 binary64) #s(literal 1 binary64))) (*.f64 (*.f64 (*.f64 (/.f64 N (-.f64 N #s(literal 1 binary64))) N) N) (fma.f64 (/.f64 N (-.f64 N #s(literal 1 binary64))) #s(literal -1 binary64) #s(literal 1 binary64))))))","(/.f64 (neg.f64 (neg.f64 (expm1.f64 (*.f64 (+.f64 (log.f64 N) (log1p.f64 N)) #s(literal 2 binary64))))) (neg.f64 (neg.f64 (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal -1 binary64)))))","(/.f64 (neg.f64 (neg.f64 (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) N) #s(literal 3 binary64)) #s(literal 1 binary64)))) (neg.f64 (neg.f64 (-.f64 (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) N) #s(literal 2 binary64)) #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal -1 binary64)) N)))))","(/.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) N) #s(literal 2 binary64)))) (neg.f64 (-.f64 #s(literal 1 binary64) (*.f64 (-.f64 N #s(literal -1 binary64)) N))))","(/.f64 (-.f64 (*.f64 (pow.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) N) #s(literal 2 binary64)) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal -1 binary64))) (*.f64 (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal -1 binary64)) #s(literal 1 binary64))) (*.f64 (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal -1 binary64)) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal -1 binary64))))","(/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) N) #s(literal 2 binary64))) (-.f64 #s(literal 1 binary64) (*.f64 (-.f64 N #s(literal -1 binary64)) N)))","(/.f64 (neg.f64 (expm1.f64 (*.f64 (+.f64 (log.f64 N) (log1p.f64 N)) #s(literal 2 binary64)))) (neg.f64 (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal -1 binary64))))","(/.f64 (neg.f64 (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) N) #s(literal 3 binary64)) #s(literal 1 binary64))) (neg.f64 (+.f64 #s(literal 1 binary64) (-.f64 (pow.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) N) #s(literal 2 binary64)) (*.f64 (-.f64 N #s(literal -1 binary64)) N)))))","(/.f64 (neg.f64 (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) N) #s(literal 3 binary64)) #s(literal 1 binary64))) (neg.f64 (-.f64 (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) N) #s(literal 2 binary64)) #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal -1 binary64)) N))))","(/.f64 (expm1.f64 (*.f64 (+.f64 (log.f64 N) (log1p.f64 N)) #s(literal 2 binary64))) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal -1 binary64)))","(/.f64 (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) N) #s(literal 3 binary64)) #s(literal 1 binary64)) (+.f64 #s(literal 1 binary64) (-.f64 (pow.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) N) #s(literal 2 binary64)) (*.f64 (-.f64 N #s(literal -1 binary64)) N))))","(/.f64 (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) N) #s(literal 3 binary64)) #s(literal 1 binary64)) (-.f64 (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) N) #s(literal 2 binary64)) #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal -1 binary64)) N)))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal -1 binary64)) (expm1.f64 (*.f64 (+.f64 (log.f64 N) (log1p.f64 N)) #s(literal 2 binary64))))))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (-.f64 (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) N) #s(literal 2 binary64)) #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal -1 binary64)) N)) (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) N) #s(literal 3 binary64)) #s(literal 1 binary64)))))","(/.f64 #s(literal 1 binary64) (/.f64 (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal -1 binary64)) (expm1.f64 (*.f64 (+.f64 (log.f64 N) (log1p.f64 N)) #s(literal 2 binary64)))))","(/.f64 #s(literal 1 binary64) (/.f64 (-.f64 (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) N) #s(literal 2 binary64)) #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal -1 binary64)) N)) (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) N) #s(literal 3 binary64)) #s(literal 1 binary64))))","(fma.f64 (/.f64 N (-.f64 #s(literal 1 binary64) N)) (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal 1 binary64))","(fma.f64 (/.f64 N (-.f64 #s(literal 1 binary64) (*.f64 N N))) (*.f64 (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (*.f64 (/.f64 N (-.f64 N #s(literal 1 binary64))) N) N (fma.f64 (/.f64 N (-.f64 N #s(literal 1 binary64))) #s(literal -1 binary64) #s(literal 1 binary64)))","(fma.f64 (*.f64 (/.f64 N (-.f64 N #s(literal 1 binary64))) (-.f64 N #s(literal -1 binary64))) (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (*.f64 (*.f64 N N) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) N (fma.f64 (/.f64 N (-.f64 N #s(literal 1 binary64))) #s(literal -1 binary64) #s(literal 1 binary64)))","(fma.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) N) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (/.f64 N (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) N) #s(literal 1 binary64))","(fma.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (pow.f64 N #s(literal 3 binary64)) (fma.f64 (/.f64 N (-.f64 N #s(literal 1 binary64))) #s(literal -1 binary64) #s(literal 1 binary64)))","(fma.f64 (pow.f64 N #s(literal 3 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (fma.f64 (/.f64 N (-.f64 N #s(literal 1 binary64))) #s(literal -1 binary64) #s(literal 1 binary64)))","(fma.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)) (*.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) N) #s(literal 1 binary64))","(fma.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)) (/.f64 N (/.f64 (exp.f64 (neg.f64 (log1p.f64 N))) (fma.f64 N N #s(literal -1 binary64)))) #s(literal 1 binary64))","(fma.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) N) #s(literal 1 binary64) #s(literal 1 binary64))","(fma.f64 (-.f64 N #s(literal -1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) (/.f64 N (-.f64 N #s(literal 1 binary64)))) #s(literal 1 binary64))","(fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64))","(fma.f64 (*.f64 N N) (/.f64 N (-.f64 N #s(literal 1 binary64))) (fma.f64 (/.f64 N (-.f64 N #s(literal 1 binary64))) #s(literal -1 binary64) #s(literal 1 binary64)))","(fma.f64 (fma.f64 N N #s(literal -1 binary64)) (*.f64 (/.f64 N (-.f64 N #s(literal 1 binary64))) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (fma.f64 N N #s(literal -1 binary64)) (/.f64 N (-.f64 N #s(literal 1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 N (-.f64 N #s(literal 1 binary64))) (*.f64 N N) (fma.f64 (/.f64 N (-.f64 N #s(literal 1 binary64))) #s(literal -1 binary64) #s(literal 1 binary64)))","(fma.f64 (/.f64 N (-.f64 N #s(literal 1 binary64))) (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64))","(fma.f64 #s(literal 1 binary64) (*.f64 (-.f64 N #s(literal -1 binary64)) N) #s(literal 1 binary64))","(fma.f64 N (*.f64 N (/.f64 N (-.f64 N #s(literal 1 binary64)))) (fma.f64 (/.f64 N (-.f64 N #s(literal 1 binary64))) #s(literal -1 binary64) #s(literal 1 binary64)))","(fma.f64 N (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N)) (fma.f64 (/.f64 N (-.f64 N #s(literal 1 binary64))) #s(literal -1 binary64) #s(literal 1 binary64)))","(fma.f64 N (-.f64 N #s(literal -1 binary64)) #s(literal 1 binary64))","(-.f64 (/.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) (*.f64 (-.f64 N #s(literal -1 binary64)) N))) (/.f64 (pow.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) N) #s(literal 2 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 (-.f64 N #s(literal -1 binary64)) N))))","(-.f64 (/.f64 (pow.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) N) #s(literal 2 binary64)) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal -1 binary64))) (pow.f64 (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64)))","(+.f64 (+.f64 #s(literal 1 binary64) (*.f64 (*.f64 (/.f64 N (-.f64 N #s(literal 1 binary64))) N) N)) (neg.f64 (/.f64 N (-.f64 N #s(literal 1 binary64)))))","(+.f64 (*.f64 (*.f64 (/.f64 N (-.f64 N #s(literal 1 binary64))) N) N) (fma.f64 (/.f64 N (-.f64 N #s(literal 1 binary64))) #s(literal -1 binary64) #s(literal 1 binary64)))","(+.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) N) #s(literal 1 binary64))","(+.f64 #s(literal 1 binary64) (*.f64 (-.f64 N #s(literal -1 binary64)) N))","(*.f64 (*.f64 N (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1/2 binary64))) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1/2 binary64)))","(*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1/2 binary64)) (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1/2 binary64)) N))","(*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) N)","(*.f64 N (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(/.f64 (neg.f64 N) (-.f64 #s(literal 1 binary64) N))","(/.f64 N (-.f64 N #s(literal 1 binary64)))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)))","(*.f64 (pow.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64))) #s(literal -1 binary64)) (pow.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) #s(literal -1 binary64)))","(*.f64 (/.f64 (-.f64 N #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) (fma.f64 N N #s(literal 1 binary64)))","(*.f64 (/.f64 (-.f64 N #s(literal -1 binary64)) (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))))","(*.f64 (pow.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) (pow.f64 (pow.f64 (fma.f64 N N (-.f64 N #s(literal -1 binary64))) #s(literal -1 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) (fma.f64 N N (-.f64 N #s(literal -1 binary64))))","(*.f64 (/.f64 #s(literal -1 binary64) (fma.f64 N N #s(literal -1 binary64))) (/.f64 #s(literal -1 binary64) (exp.f64 (neg.f64 (log1p.f64 N)))))","(*.f64 (/.f64 #s(literal -1 binary64) (fma.f64 N N #s(literal -1 binary64))) (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)))","(*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1/2 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1/2 binary64)))","(*.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)) (-.f64 N #s(literal -1 binary64)))","(*.f64 (exp.f64 (neg.f64 (log1p.f64 N))) (pow.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (-.f64 N #s(literal -1 binary64))) #s(literal -1 binary64)))","(*.f64 (exp.f64 (neg.f64 (log1p.f64 N))) (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (-.f64 N #s(literal -1 binary64))))","(*.f64 (-.f64 N #s(literal -1 binary64)) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)))","(*.f64 #s(literal 1 binary64) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(pow.f64 (exp.f64 #s(literal -1 binary64)) (log.f64 (-.f64 N #s(literal 1 binary64))))","(pow.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal 2 binary64)) #s(literal -1/2 binary64))","(pow.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1/2 binary64)) #s(literal 2 binary64))","(pow.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64))","(pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))","(/.f64 (-.f64 (*.f64 (/.f64 N (-.f64 N #s(literal -1 binary64))) (fma.f64 N N #s(literal -1 binary64))) (*.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64))))","(/.f64 (-.f64 (*.f64 (neg.f64 N) (fma.f64 N N #s(literal -1 binary64))) (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal -1 binary64))) (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (fma.f64 N N #s(literal -1 binary64))))","(/.f64 (-.f64 (fma.f64 N N #s(literal -1 binary64)) (*.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) N) #s(literal -1 binary64))) (*.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) N) (fma.f64 N N #s(literal -1 binary64))))","(/.f64 (-.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) N) (*.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64))) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 2 binary64)))","(/.f64 (neg.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64))) (/.f64 #s(literal -1 binary64) (-.f64 N #s(literal -1 binary64))))","(/.f64 (neg.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64))) (neg.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N (-.f64 #s(literal 1 binary64) N)))))","(/.f64 (neg.f64 (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64))) (neg.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N))))","(/.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N (-.f64 #s(literal 1 binary64) N))))","(/.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)) (exp.f64 (neg.f64 (log1p.f64 N))))","(/.f64 (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N)))","(/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (neg.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 N #s(literal 1 binary64)))))","(/.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))","(/.f64 (fma.f64 N N #s(literal -1 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 N #s(literal 1 binary64))))","(/.f64 #s(literal -1 binary64) (-.f64 #s(literal 1 binary64) N))","(/.f64 #s(literal 1 binary64) (-.f64 N #s(literal 1 binary64)))","(-.f64 (/.f64 (pow.f64 N #s(literal 3 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N (-.f64 #s(literal 1 binary64) N)))) (/.f64 #s(literal -1 binary64) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N (-.f64 #s(literal 1 binary64) N)))))","(-.f64 (/.f64 (/.f64 (*.f64 N N) (-.f64 N #s(literal 1 binary64))) (fma.f64 N N #s(literal -1 binary64))) (/.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))))","(-.f64 (/.f64 (/.f64 (pow.f64 N #s(literal 3 binary64)) (fma.f64 N N (-.f64 #s(literal 1 binary64) N))) (fma.f64 N N #s(literal -1 binary64))) (/.f64 (/.f64 #s(literal -1 binary64) (fma.f64 N N (-.f64 #s(literal 1 binary64) N))) (fma.f64 N N #s(literal -1 binary64))))","(-.f64 (/.f64 (/.f64 (pow.f64 N #s(literal 4 binary64)) (fma.f64 N N #s(literal 1 binary64))) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 N #s(literal 1 binary64)))) (/.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 N #s(literal 1 binary64)))))","(-.f64 (/.f64 (*.f64 N N) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 N #s(literal 1 binary64)))) (/.f64 #s(literal 1 binary64) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 N #s(literal 1 binary64)))))","(-.f64 (/.f64 #s(literal 0 binary64) (-.f64 #s(literal 1 binary64) (*.f64 N N))) (/.f64 (-.f64 N #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N))))","(-.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) (/.f64 #s(literal -1 binary64) (fma.f64 N N #s(literal -1 binary64))))","(exp.f64 (fma.f64 (log.f64 (-.f64 N #s(literal 1 binary64))) #s(literal -1/2 binary64) (*.f64 (log.f64 (-.f64 N #s(literal 1 binary64))) #s(literal -1/2 binary64))))","(exp.f64 (*.f64 (*.f64 (log.f64 (-.f64 N #s(literal 1 binary64))) #s(literal -1/2 binary64)) #s(literal 2 binary64)))","(exp.f64 (*.f64 (log.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal 2 binary64))) #s(literal -1/2 binary64)))","(exp.f64 (*.f64 (log.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1/2 binary64))) #s(literal 2 binary64)))","(exp.f64 (*.f64 (log.f64 (-.f64 N #s(literal 1 binary64))) #s(literal -1 binary64)))","(atan2.f64 #s(literal 1 binary64) #s(approx (+ (+ (* N N) 1) N) (-.f64 N #s(literal -1 binary64))))","#s(approx (+ (+ (* N N) 1) N) (-.f64 N #s(literal -1 binary64)))","(*.f64 (pow.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64)) (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))) #s(literal -1 binary64)) (pow.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) #s(literal -1 binary64)))","(*.f64 (pow.f64 (pow.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64)) (pow.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) #s(literal -1 binary64)))","(*.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (fma.f64 N N (-.f64 N #s(literal -1 binary64))))","(*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) (pow.f64 (/.f64 #s(literal -1 binary64) (fma.f64 N N #s(literal -1 binary64))) #s(literal -1 binary64)))","(*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N)))","(*.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N))) (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)))","(*.f64 (/.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) (fma.f64 N N #s(literal 1 binary64)))","(*.f64 (/.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))))","(*.f64 (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (-.f64 N #s(literal -1 binary64))) (-.f64 N #s(literal 1 binary64)))","(*.f64 (pow.f64 (-.f64 N #s(literal -1 binary64)) #s(literal 1/2 binary64)) (pow.f64 (-.f64 N #s(literal -1 binary64)) #s(literal 1/2 binary64)))","(*.f64 (/.f64 #s(literal -1 binary64) (fma.f64 N N #s(literal -1 binary64))) (pow.f64 (pow.f64 (*.f64 (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) #s(literal -1 binary64)) #s(literal -1 binary64)))","(*.f64 (/.f64 #s(literal -1 binary64) (fma.f64 N N #s(literal -1 binary64))) (*.f64 (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))))","(*.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) #s(literal 1 binary64)) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1/2 binary64)) (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1/2 binary64)) (fma.f64 N N #s(literal -1 binary64))))","(*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (pow.f64 (/.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (/.f64 (-.f64 N #s(literal 1 binary64)) (exp.f64 (neg.f64 (log1p.f64 N)))))","(*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))","(*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)) (pow.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)) (pow.f64 (/.f64 (/.f64 (exp.f64 (neg.f64 (log1p.f64 N))) (fma.f64 N N #s(literal -1 binary64))) #s(literal 1 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)) (pow.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) #s(literal 1 binary64)))","(*.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)) (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))))","(*.f64 (exp.f64 (neg.f64 (log1p.f64 N))) (pow.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) #s(literal -1 binary64)))","(*.f64 (exp.f64 (neg.f64 (log1p.f64 N))) (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) (/.f64 (exp.f64 (neg.f64 (log1p.f64 N))) (fma.f64 N N #s(literal -1 binary64)))) #s(literal -1 binary64)))","(*.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)))","(*.f64 (-.f64 N #s(literal -1 binary64)) #s(literal 1 binary64))","(*.f64 (fma.f64 N N #s(literal -1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(*.f64 #s(literal -1 binary64) (/.f64 #s(literal -1 binary64) (exp.f64 (neg.f64 (log1p.f64 N)))))","(*.f64 (-.f64 N #s(literal 1 binary64)) (pow.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (-.f64 N #s(literal -1 binary64))) #s(literal -1 binary64)))","(*.f64 (-.f64 N #s(literal 1 binary64)) (/.f64 (-.f64 N #s(literal -1 binary64)) (-.f64 N #s(literal 1 binary64))))","(*.f64 #s(literal 1 binary64) (-.f64 N #s(literal -1 binary64)))","(pow.f64 (pow.f64 (-.f64 N #s(literal -1 binary64)) #s(literal 1/2 binary64)) #s(literal 2 binary64))","(pow.f64 (/.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64))) #s(literal -1 binary64))","(pow.f64 (pow.f64 (-.f64 N #s(literal -1 binary64)) #s(literal -2 binary64)) #s(literal -1/2 binary64))","(pow.f64 (exp.f64 (neg.f64 (log1p.f64 N))) #s(literal -1 binary64))","(pow.f64 (-.f64 N #s(literal -1 binary64)) #s(literal 1 binary64))","(/.f64 (+.f64 (pow.f64 (*.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) N) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64))) #s(literal 3 binary64)) #s(literal 1 binary64)) (fma.f64 (*.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) N) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64))) (*.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) N) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64))) (-.f64 #s(literal 1 binary64) (*.f64 (*.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) N) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64))) #s(literal 1 binary64)))))","(/.f64 (+.f64 (pow.f64 (*.f64 (*.f64 N N) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) #s(literal 3 binary64)) (pow.f64 (*.f64 #s(literal -1 binary64) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) #s(literal 3 binary64))) (fma.f64 (*.f64 (*.f64 N N) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (*.f64 (*.f64 N N) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (-.f64 (*.f64 (*.f64 #s(literal -1 binary64) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (*.f64 #s(literal -1 binary64) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))) (*.f64 (*.f64 (*.f64 N N) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (*.f64 #s(literal -1 binary64) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))))))","(/.f64 (+.f64 (pow.f64 (*.f64 #s(literal -1 binary64) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) #s(literal 3 binary64)) (pow.f64 (*.f64 (*.f64 N N) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) #s(literal 3 binary64))) (fma.f64 (*.f64 #s(literal -1 binary64) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (*.f64 #s(literal -1 binary64) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (-.f64 (*.f64 (*.f64 (*.f64 N N) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (*.f64 (*.f64 N N) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))) (*.f64 (*.f64 #s(literal -1 binary64) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (*.f64 (*.f64 N N) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))))))","(/.f64 (+.f64 (pow.f64 (*.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) N)) #s(literal 3 binary64)) #s(literal 1 binary64)) (fma.f64 (*.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) N)) (*.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) N)) (-.f64 #s(literal 1 binary64) (*.f64 (*.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) N)) #s(literal 1 binary64)))))","(/.f64 (+.f64 (pow.f64 (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N)) #s(literal 3 binary64)) (pow.f64 (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64)) #s(literal 3 binary64))) (fma.f64 (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N)) (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N)) (-.f64 (*.f64 (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64)) (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64))) (*.f64 (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N)) (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64))))))","(/.f64 (+.f64 (pow.f64 (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64)) #s(literal 3 binary64)) (pow.f64 (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N)) #s(literal 3 binary64))) (fma.f64 (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64)) (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64)) (-.f64 (*.f64 (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N)) (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N))) (*.f64 (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64)) (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N))))))","(/.f64 (neg.f64 (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)))) (neg.f64 (fma.f64 N N #s(literal 1 binary64))))","(/.f64 (neg.f64 (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)))) (neg.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N)))))","(/.f64 (neg.f64 (neg.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)))) (neg.f64 (neg.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)))))","(/.f64 (neg.f64 (*.f64 #s(literal 1 binary64) (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))))) (-.f64 #s(literal 1 binary64) (*.f64 N N)))","(/.f64 (neg.f64 (*.f64 #s(literal 1 binary64) (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)))) (neg.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64)))))","(/.f64 (neg.f64 (*.f64 #s(literal 1 binary64) (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)))) (neg.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))))))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N (-.f64 #s(literal 1 binary64) N)))) (*.f64 (-.f64 N #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)))) (*.f64 (-.f64 N #s(literal 1 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N (-.f64 #s(literal 1 binary64) N)))))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (exp.f64 (neg.f64 (log1p.f64 N)))) (exp.f64 (neg.f64 (log1p.f64 N)))) (*.f64 (-.f64 N #s(literal 1 binary64)) (exp.f64 (neg.f64 (log1p.f64 N)))))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (-.f64 #s(literal 1 binary64) (*.f64 N N))) (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)))) (*.f64 (-.f64 N #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N))))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 N #s(literal 1 binary64)))) (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (*.f64 (-.f64 N #s(literal 1 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 N #s(literal 1 binary64)))))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (-.f64 #s(literal 1 binary64) N)) (*.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (*.f64 (-.f64 N #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) N)))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (-.f64 N #s(literal 1 binary64))) (*.f64 (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal 2 binary64)))","(/.f64 (-.f64 (*.f64 (pow.f64 N #s(literal 3 binary64)) (fma.f64 N N (-.f64 #s(literal 1 binary64) N))) (*.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) #s(literal -1 binary64))) (*.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) (fma.f64 N N (-.f64 #s(literal 1 binary64) N))))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (fma.f64 N N #s(literal -1 binary64))) (fma.f64 N N #s(literal -1 binary64))) (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64))))","(/.f64 (*.f64 #s(literal 1 binary64) (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (fma.f64 N N #s(literal -1 binary64)))","(/.f64 (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) (fma.f64 N N #s(literal 1 binary64)))","(/.f64 (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))))","(/.f64 (neg.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64))) (neg.f64 (/.f64 (exp.f64 (neg.f64 (log1p.f64 N))) (fma.f64 N N #s(literal -1 binary64)))))","(/.f64 (neg.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))) (neg.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))))))","(/.f64 (neg.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64))) (neg.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N))))","(/.f64 (neg.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (neg.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64))))","(/.f64 (neg.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) (neg.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64)))))","(/.f64 (neg.f64 (*.f64 (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (neg.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N))))","(/.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N))) (-.f64 N #s(literal 1 binary64)))","(/.f64 (*.f64 #s(literal 1 binary64) (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64))))","(/.f64 (*.f64 #s(literal 1 binary64) (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))) (*.f64 (-.f64 N #s(literal 1 binary64)) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N)))))","(/.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64))))","(/.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)))","(/.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)) (fma.f64 N N (-.f64 #s(literal 1 binary64) N)))","(/.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N)))))","(/.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)) (/.f64 (exp.f64 (neg.f64 (log1p.f64 N))) (fma.f64 N N #s(literal -1 binary64))))","(/.f64 (*.f64 (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (-.f64 #s(literal 1 binary64) (*.f64 N N)))","(/.f64 (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)) #s(literal -1 binary64))","(/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) N))","(/.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (fma.f64 N N #s(literal -1 binary64)))","(/.f64 (-.f64 N #s(literal -1 binary64)) #s(literal 1 binary64))","(/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 N #s(literal 1 binary64)))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)))))","(/.f64 #s(literal -1 binary64) (/.f64 #s(literal -1 binary64) (-.f64 N #s(literal -1 binary64))))","(/.f64 #s(literal 1 binary64) (/.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64))))","(/.f64 #s(literal 1 binary64) (exp.f64 (neg.f64 (log1p.f64 N))))","(neg.f64 (/.f64 #s(literal -1 binary64) (exp.f64 (neg.f64 (log1p.f64 N)))))","(fma.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) N) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N) (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64)))","(fma.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64) (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N)))","(fma.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) N) #s(literal 1 binary64))","(fma.f64 (*.f64 N N) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 #s(literal -1 binary64) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))))","(fma.f64 #s(literal -1 binary64) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 (*.f64 N N) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))))","(fma.f64 #s(literal 1 binary64) N #s(literal 1 binary64))","(fma.f64 N #s(literal 1 binary64) #s(literal 1 binary64))","(-.f64 (/.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64)))) (/.f64 #s(literal 1 binary64) (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64)))))","(-.f64 (/.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64))) (/.f64 (/.f64 #s(literal -1 binary64) (fma.f64 N N #s(literal -1 binary64))) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64))))","(-.f64 (/.f64 #s(literal 0 binary64) (-.f64 #s(literal 1 binary64) N)) (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)))","(-.f64 (/.f64 (/.f64 (pow.f64 N #s(literal 4 binary64)) (fma.f64 N N #s(literal 1 binary64))) (-.f64 N #s(literal 1 binary64))) (/.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (-.f64 N #s(literal 1 binary64))))","(-.f64 (/.f64 #s(literal 0 binary64) (-.f64 #s(literal 1 binary64) (*.f64 N N))) (/.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (-.f64 #s(literal 1 binary64) (*.f64 N N))))","(-.f64 (/.f64 (/.f64 (*.f64 N N) (-.f64 N #s(literal 1 binary64))) #s(literal 1 binary64)) (/.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64)))","(-.f64 (/.f64 (/.f64 (pow.f64 N #s(literal 3 binary64)) (fma.f64 N N (-.f64 #s(literal 1 binary64) N))) #s(literal 1 binary64)) (/.f64 (/.f64 #s(literal -1 binary64) (fma.f64 N N (-.f64 #s(literal 1 binary64) N))) #s(literal 1 binary64)))","(-.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) (/.f64 (*.f64 N N) (-.f64 #s(literal 1 binary64) N)))","(-.f64 (/.f64 (*.f64 N N) (-.f64 N #s(literal 1 binary64))) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(-.f64 (/.f64 (pow.f64 N #s(literal 3 binary64)) (fma.f64 N N (-.f64 #s(literal 1 binary64) N))) (/.f64 #s(literal -1 binary64) (fma.f64 N N (-.f64 #s(literal 1 binary64) N))))","(-.f64 N #s(literal -1 binary64))","(exp.f64 (log1p.f64 N))","(+.f64 (*.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) N) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64))) #s(literal 1 binary64))","(+.f64 (*.f64 (*.f64 N N) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (*.f64 #s(literal -1 binary64) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))))","(+.f64 (*.f64 #s(literal -1 binary64) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (*.f64 (*.f64 N N) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))))","(+.f64 (*.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) N)) #s(literal 1 binary64))","(+.f64 (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N)) (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64)))","(+.f64 (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64)) (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N)))","(+.f64 #s(literal 1 binary64) N)","(+.f64 N #s(literal 1 binary64))","(*.f64 (-.f64 (pow.f64 (/.f64 N #s(approx (/ (- N 1) (+ (* N N) -1)) (pow.f64 N #s(literal -1 binary64)))) #s(literal 2 binary64)) #s(literal 1 binary64)) (pow.f64 (-.f64 (/.f64 N #s(approx (/ (- N 1) (+ (* N N) -1)) (pow.f64 N #s(literal -1 binary64)))) #s(literal 1 binary64)) #s(literal -1 binary64)))","(*.f64 (+.f64 (pow.f64 (/.f64 N #s(approx (/ (- N 1) (+ (* N N) -1)) (pow.f64 N #s(literal -1 binary64)))) #s(literal 3 binary64)) #s(literal 1 binary64)) (pow.f64 (+.f64 (-.f64 #s(literal 1 binary64) (/.f64 N #s(approx (/ (- N 1) (+ (* N N) -1)) (pow.f64 N #s(literal -1 binary64))))) (pow.f64 (/.f64 N #s(approx (/ (- N 1) (+ (* N N) -1)) (pow.f64 N #s(literal -1 binary64)))) #s(literal 2 binary64))) #s(literal -1 binary64)))","(pow.f64 (/.f64 (-.f64 (/.f64 N #s(approx (/ (- N 1) (+ (* N N) -1)) (pow.f64 N #s(literal -1 binary64)))) #s(literal 1 binary64)) (-.f64 (pow.f64 (/.f64 N #s(approx (/ (- N 1) (+ (* N N) -1)) (pow.f64 N #s(literal -1 binary64)))) #s(literal 2 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64))","(pow.f64 (/.f64 (+.f64 (-.f64 #s(literal 1 binary64) (/.f64 N #s(approx (/ (- N 1) (+ (* N N) -1)) (pow.f64 N #s(literal -1 binary64))))) (pow.f64 (/.f64 N #s(approx (/ (- N 1) (+ (* N N) -1)) (pow.f64 N #s(literal -1 binary64)))) #s(literal 2 binary64))) (+.f64 (pow.f64 (/.f64 N #s(approx (/ (- N 1) (+ (* N N) -1)) (pow.f64 N #s(literal -1 binary64)))) #s(literal 3 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64))","(/.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (/.f64 N #s(approx (/ (- N 1) (+ (* N N) -1)) (pow.f64 N #s(literal -1 binary64)))) #s(literal 2 binary64)))) (neg.f64 (-.f64 #s(literal 1 binary64) (/.f64 N #s(approx (/ (- N 1) (+ (* N N) -1)) (pow.f64 N #s(literal -1 binary64)))))))","(/.f64 (neg.f64 (neg.f64 (-.f64 (pow.f64 (/.f64 N #s(approx (/ (- N 1) (+ (* N N) -1)) (pow.f64 N #s(literal -1 binary64)))) #s(literal 2 binary64)) #s(literal 1 binary64)))) (neg.f64 (neg.f64 (-.f64 (/.f64 N #s(approx (/ (- N 1) (+ (* N N) -1)) (pow.f64 N #s(literal -1 binary64)))) #s(literal 1 binary64)))))","(/.f64 (neg.f64 (neg.f64 (+.f64 (pow.f64 (/.f64 N #s(approx (/ (- N 1) (+ (* N N) -1)) (pow.f64 N #s(literal -1 binary64)))) #s(literal 3 binary64)) #s(literal 1 binary64)))) (neg.f64 (neg.f64 (+.f64 (-.f64 #s(literal 1 binary64) (/.f64 N #s(approx (/ (- N 1) (+ (* N N) -1)) (pow.f64 N #s(literal -1 binary64))))) (pow.f64 (/.f64 N #s(approx (/ (- N 1) (+ (* N N) -1)) (pow.f64 N #s(literal -1 binary64)))) #s(literal 2 binary64))))))","(/.f64 (-.f64 (*.f64 (pow.f64 (/.f64 N #s(approx (/ (- N 1) (+ (* N N) -1)) (pow.f64 N #s(literal -1 binary64)))) #s(literal 2 binary64)) (-.f64 (/.f64 N #s(approx (/ (- N 1) (+ (* N N) -1)) (pow.f64 N #s(literal -1 binary64)))) #s(literal 1 binary64))) (*.f64 (-.f64 (/.f64 N #s(approx (/ (- N 1) (+ (* N N) -1)) (pow.f64 N #s(literal -1 binary64)))) #s(literal 1 binary64)) #s(literal 1 binary64))) (*.f64 (-.f64 (/.f64 N #s(approx (/ (- N 1) (+ (* N N) -1)) (pow.f64 N #s(literal -1 binary64)))) #s(literal 1 binary64)) (-.f64 (/.f64 N #s(approx (/ (- N 1) (+ (* N N) -1)) (pow.f64 N #s(literal -1 binary64)))) #s(literal 1 binary64))))","(/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (/.f64 N #s(approx (/ (- N 1) (+ (* N N) -1)) (pow.f64 N #s(literal -1 binary64)))) #s(literal 2 binary64))) (-.f64 #s(literal 1 binary64) (/.f64 N #s(approx (/ (- N 1) (+ (* N N) -1)) (pow.f64 N #s(literal -1 binary64))))))","(/.f64 (neg.f64 (-.f64 (pow.f64 (/.f64 N #s(approx (/ (- N 1) (+ (* N N) -1)) (pow.f64 N #s(literal -1 binary64)))) #s(literal 2 binary64)) #s(literal 1 binary64))) (neg.f64 (-.f64 (/.f64 N #s(approx (/ (- N 1) (+ (* N N) -1)) (pow.f64 N #s(literal -1 binary64)))) #s(literal 1 binary64))))","(/.f64 (neg.f64 (+.f64 (pow.f64 (/.f64 N #s(approx (/ (- N 1) (+ (* N N) -1)) (pow.f64 N #s(literal -1 binary64)))) #s(literal 3 binary64)) #s(literal 1 binary64))) (neg.f64 (+.f64 #s(literal 1 binary64) (-.f64 (pow.f64 (/.f64 N #s(approx (/ (- N 1) (+ (* N N) -1)) (pow.f64 N #s(literal -1 binary64)))) #s(literal 2 binary64)) (/.f64 N #s(approx (/ (- N 1) (+ (* N N) -1)) (pow.f64 N #s(literal -1 binary64))))))))","(/.f64 (neg.f64 (+.f64 (pow.f64 (/.f64 N #s(approx (/ (- N 1) (+ (* N N) -1)) (pow.f64 N #s(literal -1 binary64)))) #s(literal 3 binary64)) #s(literal 1 binary64))) (neg.f64 (+.f64 (-.f64 #s(literal 1 binary64) (/.f64 N #s(approx (/ (- N 1) (+ (* N N) -1)) (pow.f64 N #s(literal -1 binary64))))) (pow.f64 (/.f64 N #s(approx (/ (- N 1) (+ (* N N) -1)) (pow.f64 N #s(literal -1 binary64)))) #s(literal 2 binary64)))))","(/.f64 (-.f64 (pow.f64 (/.f64 N #s(approx (/ (- N 1) (+ (* N N) -1)) (pow.f64 N #s(literal -1 binary64)))) #s(literal 2 binary64)) #s(literal 1 binary64)) (-.f64 (/.f64 N #s(approx (/ (- N 1) (+ (* N N) -1)) (pow.f64 N #s(literal -1 binary64)))) #s(literal 1 binary64)))","(/.f64 (+.f64 (pow.f64 (/.f64 N #s(approx (/ (- N 1) (+ (* N N) -1)) (pow.f64 N #s(literal -1 binary64)))) #s(literal 3 binary64)) #s(literal 1 binary64)) (+.f64 #s(literal 1 binary64) (-.f64 (pow.f64 (/.f64 N #s(approx (/ (- N 1) (+ (* N N) -1)) (pow.f64 N #s(literal -1 binary64)))) #s(literal 2 binary64)) (/.f64 N #s(approx (/ (- N 1) (+ (* N N) -1)) (pow.f64 N #s(literal -1 binary64)))))))","(/.f64 (+.f64 (pow.f64 (/.f64 N #s(approx (/ (- N 1) (+ (* N N) -1)) (pow.f64 N #s(literal -1 binary64)))) #s(literal 3 binary64)) #s(literal 1 binary64)) (+.f64 (-.f64 #s(literal 1 binary64) (/.f64 N #s(approx (/ (- N 1) (+ (* N N) -1)) (pow.f64 N #s(literal -1 binary64))))) (pow.f64 (/.f64 N #s(approx (/ (- N 1) (+ (* N N) -1)) (pow.f64 N #s(literal -1 binary64)))) #s(literal 2 binary64))))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (-.f64 (/.f64 N #s(approx (/ (- N 1) (+ (* N N) -1)) (pow.f64 N #s(literal -1 binary64)))) #s(literal 1 binary64)) (-.f64 (pow.f64 (/.f64 N #s(approx (/ (- N 1) (+ (* N N) -1)) (pow.f64 N #s(literal -1 binary64)))) #s(literal 2 binary64)) #s(literal 1 binary64)))))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (+.f64 (-.f64 #s(literal 1 binary64) (/.f64 N #s(approx (/ (- N 1) (+ (* N N) -1)) (pow.f64 N #s(literal -1 binary64))))) (pow.f64 (/.f64 N #s(approx (/ (- N 1) (+ (* N N) -1)) (pow.f64 N #s(literal -1 binary64)))) #s(literal 2 binary64))) (+.f64 (pow.f64 (/.f64 N #s(approx (/ (- N 1) (+ (* N N) -1)) (pow.f64 N #s(literal -1 binary64)))) #s(literal 3 binary64)) #s(literal 1 binary64)))))","(/.f64 #s(literal 1 binary64) (/.f64 (-.f64 (/.f64 N #s(approx (/ (- N 1) (+ (* N N) -1)) (pow.f64 N #s(literal -1 binary64)))) #s(literal 1 binary64)) (-.f64 (pow.f64 (/.f64 N #s(approx (/ (- N 1) (+ (* N N) -1)) (pow.f64 N #s(literal -1 binary64)))) #s(literal 2 binary64)) #s(literal 1 binary64))))","(/.f64 #s(literal 1 binary64) (/.f64 (+.f64 (-.f64 #s(literal 1 binary64) (/.f64 N #s(approx (/ (- N 1) (+ (* N N) -1)) (pow.f64 N #s(literal -1 binary64))))) (pow.f64 (/.f64 N #s(approx (/ (- N 1) (+ (* N N) -1)) (pow.f64 N #s(literal -1 binary64)))) #s(literal 2 binary64))) (+.f64 (pow.f64 (/.f64 N #s(approx (/ (- N 1) (+ (* N N) -1)) (pow.f64 N #s(literal -1 binary64)))) #s(literal 3 binary64)) #s(literal 1 binary64))))","(fma.f64 (/.f64 N #s(approx (/ (- N 1) (+ (* N N) -1)) (pow.f64 N #s(literal -1 binary64)))) #s(literal 1 binary64) #s(literal 1 binary64))","(fma.f64 (pow.f64 #s(approx (/ (- N 1) (+ (* N N) -1)) (pow.f64 N #s(literal -1 binary64))) #s(literal -1 binary64)) N #s(literal 1 binary64))","(fma.f64 #s(literal 1 binary64) (/.f64 N #s(approx (/ (- N 1) (+ (* N N) -1)) (pow.f64 N #s(literal -1 binary64)))) #s(literal 1 binary64))","(fma.f64 N (pow.f64 #s(approx (/ (- N 1) (+ (* N N) -1)) (pow.f64 N #s(literal -1 binary64))) #s(literal -1 binary64)) #s(literal 1 binary64))","(-.f64 (/.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) (/.f64 N #s(approx (/ (- N 1) (+ (* N N) -1)) (pow.f64 N #s(literal -1 binary64)))))) (/.f64 (pow.f64 (/.f64 N #s(approx (/ (- N 1) (+ (* N N) -1)) (pow.f64 N #s(literal -1 binary64)))) #s(literal 2 binary64)) (-.f64 #s(literal 1 binary64) (/.f64 N #s(approx (/ (- N 1) (+ (* N N) -1)) (pow.f64 N #s(literal -1 binary64)))))))","(-.f64 (/.f64 (pow.f64 (/.f64 N #s(approx (/ (- N 1) (+ (* N N) -1)) (pow.f64 N #s(literal -1 binary64)))) #s(literal 2 binary64)) (-.f64 (/.f64 N #s(approx (/ (- N 1) (+ (* N N) -1)) (pow.f64 N #s(literal -1 binary64)))) #s(literal 1 binary64))) (pow.f64 (-.f64 (/.f64 N #s(approx (/ (- N 1) (+ (* N N) -1)) (pow.f64 N #s(literal -1 binary64)))) #s(literal 1 binary64)) #s(literal -1 binary64)))","(+.f64 (/.f64 N #s(approx (/ (- N 1) (+ (* N N) -1)) (pow.f64 N #s(literal -1 binary64)))) #s(literal 1 binary64))","(+.f64 #s(literal 1 binary64) (/.f64 N #s(approx (/ (- N 1) (+ (* N N) -1)) (pow.f64 N #s(literal -1 binary64)))))","(atan2.f64 #s(literal 1 binary64) (+.f64 (/.f64 N #s(approx (/ (- N 1) (+ (* N N) -1)) (pow.f64 N #s(literal -1 binary64)))) #s(literal 1 binary64)))","(*.f64 (pow.f64 #s(approx (/ (- N 1) (+ (* N N) -1)) (pow.f64 N #s(literal -1 binary64))) #s(literal -1/2 binary64)) (pow.f64 #s(approx (/ (- N 1) (+ (* N N) -1)) (pow.f64 N #s(literal -1 binary64))) #s(literal -1/2 binary64)))","(*.f64 (pow.f64 #s(approx (/ (- N 1) (+ (* N N) -1)) (pow.f64 N #s(literal -1 binary64))) #s(literal -1 binary64)) #s(literal 1 binary64))","(*.f64 #s(literal -1 binary64) (/.f64 #s(literal -1 binary64) #s(approx (/ (- N 1) (+ (* N N) -1)) (pow.f64 N #s(literal -1 binary64)))))","(*.f64 #s(literal 1 binary64) (pow.f64 #s(approx (/ (- N 1) (+ (* N N) -1)) (pow.f64 N #s(literal -1 binary64))) #s(literal -1 binary64)))","(pow.f64 (exp.f64 (log.f64 #s(approx (/ (- N 1) (+ (* N N) -1)) (pow.f64 N #s(literal -1 binary64))))) #s(literal -1 binary64))","(pow.f64 (pow.f64 #s(approx (/ (- N 1) (+ (* N N) -1)) (pow.f64 N #s(literal -1 binary64))) #s(literal -1/2 binary64)) #s(literal 2 binary64))","(pow.f64 (neg.f64 (neg.f64 #s(approx (/ (- N 1) (+ (* N N) -1)) (pow.f64 N #s(literal -1 binary64))))) #s(literal -1 binary64))","(pow.f64 (pow.f64 #s(approx (/ (- N 1) (+ (* N N) -1)) (pow.f64 N #s(literal -1 binary64))) #s(literal 2 binary64)) #s(literal -1/2 binary64))","(pow.f64 #s(approx (/ (- N 1) (+ (* N N) -1)) (pow.f64 N #s(literal -1 binary64))) #s(literal -1 binary64))","(/.f64 #s(literal -1 binary64) (neg.f64 (neg.f64 (neg.f64 #s(approx (/ (- N 1) (+ (* N N) -1)) (pow.f64 N #s(literal -1 binary64)))))))","(/.f64 #s(literal -1 binary64) (neg.f64 #s(approx (/ (- N 1) (+ (* N N) -1)) (pow.f64 N #s(literal -1 binary64)))))","(/.f64 #s(literal 1 binary64) (neg.f64 (neg.f64 #s(approx (/ (- N 1) (+ (* N N) -1)) (pow.f64 N #s(literal -1 binary64))))))","(/.f64 #s(literal 1 binary64) #s(approx (/ (- N 1) (+ (* N N) -1)) (pow.f64 N #s(literal -1 binary64))))","(neg.f64 (/.f64 #s(literal -1 binary64) #s(approx (/ (- N 1) (+ (* N N) -1)) (pow.f64 N #s(literal -1 binary64)))))","(exp.f64 (*.f64 (log.f64 #s(approx (/ (- N 1) (+ (* N N) -1)) (pow.f64 N #s(literal -1 binary64)))) #s(literal -1 binary64)))","(*.f64 #s(approx (/ (- N 1) (+ (* N N) -1)) (pow.f64 N #s(literal -1 binary64))) #s(literal 1 binary64))","(pow.f64 (pow.f64 #s(approx (/ (- N 1) (+ (* N N) -1)) (pow.f64 N #s(literal -1 binary64))) #s(literal -1 binary64)) #s(literal -1 binary64))","(pow.f64 #s(approx (/ (- N 1) (+ (* N N) -1)) (pow.f64 N #s(literal -1 binary64))) #s(literal 1 binary64))","#s(approx (/ (- N 1) (+ (* N N) -1)) (pow.f64 N #s(literal -1 binary64)))","(/.f64 (neg.f64 (neg.f64 #s(approx (/ (- N 1) (+ (* N N) -1)) (pow.f64 N #s(literal -1 binary64))))) #s(literal 1 binary64))","(/.f64 (neg.f64 #s(approx (/ (- N 1) (+ (* N N) -1)) (pow.f64 N #s(literal -1 binary64)))) #s(literal -1 binary64))","(/.f64 #s(approx (/ (- N 1) (+ (* N N) -1)) (pow.f64 N #s(literal -1 binary64))) #s(literal 1 binary64))","(/.f64 #s(literal -1 binary64) (neg.f64 (pow.f64 #s(approx (/ (- N 1) (+ (* N N) -1)) (pow.f64 N #s(literal -1 binary64))) #s(literal -1 binary64))))","(/.f64 #s(literal 1 binary64) (pow.f64 #s(approx (/ (- N 1) (+ (* N N) -1)) (pow.f64 N #s(literal -1 binary64))) #s(literal -1 binary64)))","(-.f64 #s(literal 0 binary64) (/.f64 #s(approx (/ (- N 1) (+ (* N N) -1)) (pow.f64 N #s(literal -1 binary64))) #s(literal -1 binary64)))","(exp.f64 (neg.f64 (*.f64 (log.f64 #s(approx (/ (- N 1) (+ (* N N) -1)) (pow.f64 N #s(literal -1 binary64)))) #s(literal -1 binary64))))","(*.f64 (pow.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64)) (pow.f64 (fma.f64 N N (-.f64 N #s(literal -1 binary64))) #s(literal -1 binary64)))","(*.f64 (pow.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) #s(literal -1 binary64)) (/.f64 #s(literal -1 binary64) (fma.f64 N N #s(literal -1 binary64))))","(*.f64 (pow.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N))) #s(literal -1 binary64)) (/.f64 #s(literal -1 binary64) (-.f64 N #s(literal -1 binary64))))","(*.f64 (pow.f64 (/.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64)) (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (/.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))) #s(literal -1 binary64)) (pow.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) #s(literal -1 binary64)))","(*.f64 (pow.f64 (pow.f64 (-.f64 N #s(literal -1 binary64)) #s(literal 1/2 binary64)) #s(literal -1 binary64)) (pow.f64 (pow.f64 (-.f64 N #s(literal -1 binary64)) #s(literal 1/2 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (/.f64 #s(literal -1 binary64) (fma.f64 N N #s(literal -1 binary64))) #s(literal -1 binary64)) (pow.f64 (*.f64 (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) #s(literal -1 binary64)))","(*.f64 (pow.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1/2 binary64)) #s(literal -1 binary64)) (pow.f64 (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1/2 binary64)) (fma.f64 N N #s(literal -1 binary64))) #s(literal -1 binary64)))","(*.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) (fma.f64 N N #s(literal 1 binary64)))","(*.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))))","(*.f64 (pow.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64)) (pow.f64 (pow.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) #s(literal -1 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64)) (fma.f64 N N (-.f64 #s(literal 1 binary64) N)))","(*.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) (exp.f64 (neg.f64 (log1p.f64 N)))) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(*.f64 (/.f64 (exp.f64 (neg.f64 (log1p.f64 N))) (fma.f64 N N #s(literal -1 binary64))) (fma.f64 N N #s(literal -1 binary64)))","(*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (pow.f64 (/.f64 (-.f64 N #s(literal -1 binary64)) (-.f64 N #s(literal 1 binary64))) #s(literal -1 binary64)))","(*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (/.f64 (-.f64 N #s(literal 1 binary64)) (-.f64 N #s(literal -1 binary64))))","(*.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)) (-.f64 N #s(literal 1 binary64)))","(*.f64 (-.f64 #s(literal 1 binary64) N) (/.f64 #s(literal -1 binary64) (fma.f64 N N #s(literal -1 binary64))))","(*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (pow.f64 (*.f64 (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) #s(literal -1 binary64)))","(*.f64 (exp.f64 (neg.f64 (log1p.f64 N))) #s(literal 1 binary64))","(*.f64 (-.f64 N #s(literal -1 binary64)) (/.f64 (-.f64 N #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))))","(*.f64 (-.f64 N #s(literal -1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) (/.f64 (exp.f64 (neg.f64 (log1p.f64 N))) (fma.f64 N N #s(literal -1 binary64)))))","(*.f64 (fma.f64 N N #s(literal -1 binary64)) (pow.f64 (pow.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) #s(literal 1 binary64)) #s(literal -1 binary64)))","(*.f64 (fma.f64 N N #s(literal -1 binary64)) (/.f64 (/.f64 (exp.f64 (neg.f64 (log1p.f64 N))) (fma.f64 N N #s(literal -1 binary64))) #s(literal 1 binary64)))","(*.f64 (fma.f64 N N #s(literal -1 binary64)) (/.f64 (exp.f64 (neg.f64 (log1p.f64 N))) (fma.f64 N N #s(literal -1 binary64))))","(*.f64 #s(literal -1 binary64) (pow.f64 (/.f64 #s(literal -1 binary64) (exp.f64 (neg.f64 (log1p.f64 N)))) #s(literal -1 binary64)))","(*.f64 (-.f64 N #s(literal 1 binary64)) (pow.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (exp.f64 (neg.f64 (log1p.f64 N)))) #s(literal -1 binary64)))","(*.f64 (-.f64 N #s(literal 1 binary64)) (/.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64)))","(*.f64 (-.f64 N #s(literal 1 binary64)) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)))","(*.f64 #s(literal 1 binary64) (exp.f64 (neg.f64 (log1p.f64 N))))","(pow.f64 (exp.f64 (neg.f64 (log1p.f64 N))) #s(literal 1 binary64))","(pow.f64 (-.f64 N #s(literal -1 binary64)) #s(literal -1 binary64))","(/.f64 (+.f64 (pow.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) #s(literal 3 binary64)) (pow.f64 (neg.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64))) #s(literal 3 binary64))) (+.f64 (pow.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) #s(literal 2 binary64)) (-.f64 (*.f64 (neg.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64))) (neg.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)))) (*.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) (neg.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)))))))","(/.f64 (neg.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)))) (neg.f64 (fma.f64 N N (-.f64 N #s(literal -1 binary64)))))","(/.f64 (neg.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)))) (neg.f64 (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64))))","(/.f64 (neg.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (/.f64 (exp.f64 (neg.f64 (log1p.f64 N))) (fma.f64 N N #s(literal -1 binary64))))) (neg.f64 (fma.f64 N N #s(literal 1 binary64))))","(/.f64 (neg.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)) (/.f64 (exp.f64 (neg.f64 (log1p.f64 N))) (fma.f64 N N #s(literal -1 binary64))))) (neg.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N)))))","(/.f64 (neg.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))) (-.f64 #s(literal 1 binary64) (*.f64 N N)))","(/.f64 (neg.f64 (-.f64 (pow.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) #s(literal 2 binary64)) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -2 binary64)))) (neg.f64 (+.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)))))","(/.f64 (neg.f64 (-.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) N) (fma.f64 N N #s(literal -1 binary64)))) (neg.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 2 binary64))))","(/.f64 (neg.f64 (-.f64 (pow.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) #s(literal 3 binary64)) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -3 binary64)))) (neg.f64 (+.f64 (pow.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) #s(literal 2 binary64)) (+.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -2 binary64)) (*.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)))))))","(/.f64 (neg.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (-.f64 N #s(literal -1 binary64)))) (-.f64 #s(literal 1 binary64) N))","(/.f64 (neg.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64))) (neg.f64 (*.f64 (fma.f64 N N (-.f64 N #s(literal -1 binary64))) (fma.f64 N N #s(literal -1 binary64)))))","(/.f64 (neg.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal 1 binary64))) (neg.f64 (*.f64 (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))))","(/.f64 (neg.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (neg.f64 (neg.f64 (*.f64 (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))))))","(/.f64 (neg.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64))) (neg.f64 (*.f64 (fma.f64 N N #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))))))","(/.f64 (neg.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64))) (neg.f64 (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))))))","(/.f64 (-.f64 (*.f64 (/.f64 N (-.f64 N #s(literal -1 binary64))) (-.f64 N #s(literal 1 binary64))) (*.f64 (-.f64 N #s(literal 1 binary64)) (exp.f64 (neg.f64 (log1p.f64 N))))) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal 2 binary64)))","(/.f64 (-.f64 (*.f64 (/.f64 N (-.f64 N #s(literal -1 binary64))) (-.f64 #s(literal 1 binary64) (*.f64 N N))) (*.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (*.f64 (-.f64 N #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N))))","(/.f64 (-.f64 (*.f64 (/.f64 N (-.f64 N #s(literal -1 binary64))) (/.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64))) (*.f64 (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))) (*.f64 (-.f64 N #s(literal 1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64))))","(/.f64 (-.f64 (*.f64 (/.f64 N (-.f64 N #s(literal -1 binary64))) (fma.f64 N N #s(literal -1 binary64))) (*.f64 (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))) (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64))))","(/.f64 (-.f64 (*.f64 (neg.f64 N) (-.f64 N #s(literal 1 binary64))) (-.f64 #s(literal 1 binary64) N)) (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 N #s(literal 1 binary64))))","(/.f64 (-.f64 (*.f64 (neg.f64 N) (-.f64 #s(literal 1 binary64) (*.f64 N N))) (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal -1 binary64))) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 2 binary64)))","(/.f64 (-.f64 (*.f64 (neg.f64 N) (/.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64))) (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal 1 binary64))) (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64))))","(/.f64 (-.f64 (*.f64 (neg.f64 N) (fma.f64 N N #s(literal -1 binary64))) (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal 1 binary64))) (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (fma.f64 N N #s(literal -1 binary64))))","(/.f64 (-.f64 (-.f64 N #s(literal 1 binary64)) (*.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) N) (exp.f64 (neg.f64 (log1p.f64 N))))) (*.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) N) (-.f64 N #s(literal 1 binary64))))","(/.f64 (-.f64 (*.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) (*.f64 N N))) (*.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) N) #s(literal -1 binary64))) (*.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) N) (-.f64 #s(literal 1 binary64) (*.f64 N N))))","(/.f64 (-.f64 (*.f64 #s(literal 1 binary64) (/.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64))) (*.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) N) #s(literal 1 binary64))) (*.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) N) (/.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64))))","(/.f64 (-.f64 (fma.f64 N N #s(literal -1 binary64)) (*.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) N) #s(literal 1 binary64))) (*.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) N) (fma.f64 N N #s(literal -1 binary64))))","(/.f64 (-.f64 (*.f64 N (-.f64 N #s(literal 1 binary64))) (-.f64 N #s(literal 1 binary64))) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 N #s(literal 1 binary64))))","(/.f64 (-.f64 (*.f64 N (-.f64 #s(literal 1 binary64) (*.f64 N N))) (*.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64))) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N))))","(/.f64 (-.f64 (*.f64 N (/.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64))) (fma.f64 N N #s(literal -1 binary64))) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64))))","(/.f64 (-.f64 (neg.f64 N) #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N)))","(/.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64))) (fma.f64 N N (-.f64 N #s(literal -1 binary64))))","(/.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64))) (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)))","(/.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (/.f64 (exp.f64 (neg.f64 (log1p.f64 N))) (fma.f64 N N #s(literal -1 binary64)))) (fma.f64 N N #s(literal 1 binary64)))","(/.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)) (/.f64 (exp.f64 (neg.f64 (log1p.f64 N))) (fma.f64 N N #s(literal -1 binary64)))) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))))","(/.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64)))","(/.f64 (-.f64 (pow.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) #s(literal 2 binary64)) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -2 binary64))) (+.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64))))","(/.f64 (-.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) N) (fma.f64 N N #s(literal -1 binary64))) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 2 binary64)))","(/.f64 (neg.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64))) (neg.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))))","(/.f64 (-.f64 (pow.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) #s(literal 3 binary64)) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -3 binary64))) (+.f64 (pow.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) #s(literal 2 binary64)) (+.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -2 binary64)) (*.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64))))))","(/.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (-.f64 N #s(literal -1 binary64))) (-.f64 N #s(literal 1 binary64)))","(/.f64 (neg.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))) (neg.f64 (*.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))))))","(/.f64 (neg.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (neg.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N (-.f64 N #s(literal -1 binary64))))))","(/.f64 (neg.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) (neg.f64 (*.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (fma.f64 N N #s(literal 1 binary64)))))","(/.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N))) (neg.f64 (*.f64 #s(literal 1 binary64) (*.f64 (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))))))","(/.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N))) (neg.f64 (*.f64 (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))))","(/.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64)) (*.f64 (fma.f64 N N (-.f64 N #s(literal -1 binary64))) (fma.f64 N N #s(literal -1 binary64))))","(/.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal 1 binary64)) (*.f64 (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))))","(/.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64)) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))))","(/.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64)) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))))","(/.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (fma.f64 N N #s(literal 1 binary64))))","(/.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N (-.f64 N #s(literal -1 binary64)))))","(/.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)) (*.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N)))))","(/.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(/.f64 (-.f64 #s(literal 1 binary64) N) (neg.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)))))","(/.f64 (-.f64 #s(literal 1 binary64) N) (*.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) (*.f64 N N))))","(/.f64 (-.f64 #s(literal 1 binary64) N) (-.f64 #s(literal 1 binary64) (*.f64 N N)))","(/.f64 (/.f64 #s(literal -1 binary64) (-.f64 N #s(literal -1 binary64))) #s(literal -1 binary64))","(/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (neg.f64 (*.f64 #s(literal 1 binary64) (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))))))","(/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (*.f64 #s(literal 1 binary64) (*.f64 (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))))","(/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (*.f64 (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))))","(/.f64 (exp.f64 (neg.f64 (log1p.f64 N))) #s(literal 1 binary64))","(/.f64 (fma.f64 N N #s(literal -1 binary64)) (*.f64 #s(literal 1 binary64) (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))))","(/.f64 (fma.f64 N N #s(literal -1 binary64)) (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))))","(/.f64 #s(literal -1 binary64) (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)))","(/.f64 (-.f64 N #s(literal 1 binary64)) (neg.f64 (*.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) (*.f64 N N)))))","(/.f64 (-.f64 N #s(literal 1 binary64)) (neg.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N))))","(/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64)))","(/.f64 #s(literal 1 binary64) (neg.f64 (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64))))","(/.f64 #s(literal 1 binary64) (-.f64 N #s(literal -1 binary64)))","(neg.f64 (/.f64 #s(literal -1 binary64) (-.f64 N #s(literal -1 binary64))))","(fma.f64 (/.f64 N (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) (fma.f64 N N #s(literal 1 binary64)) (neg.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64))))","(fma.f64 (/.f64 N (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (neg.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64))))","(fma.f64 N (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)) (neg.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64))))","(-.f64 (/.f64 (pow.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) #s(literal 2 binary64)) (+.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)))) (/.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -2 binary64)) (+.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)))))","(-.f64 (/.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) N) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 2 binary64))) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 2 binary64))))","(-.f64 (/.f64 (pow.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) #s(literal 3 binary64)) (+.f64 (pow.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) #s(literal 2 binary64)) (+.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -2 binary64)) (*.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)))))) (/.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -3 binary64)) (+.f64 (pow.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) #s(literal 2 binary64)) (+.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -2 binary64)) (*.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)))))))","(-.f64 (/.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (fma.f64 N N #s(literal 1 binary64)))) (/.f64 #s(literal 1 binary64) (*.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (fma.f64 N N #s(literal 1 binary64)))))","(-.f64 (/.f64 (pow.f64 N #s(literal 3 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N (-.f64 N #s(literal -1 binary64))))) (/.f64 #s(literal 1 binary64) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N (-.f64 N #s(literal -1 binary64))))))","(-.f64 (/.f64 #s(literal 0 binary64) (*.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (/.f64 (-.f64 N #s(literal 1 binary64)) (*.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) (*.f64 N N)))))","(-.f64 (/.f64 #s(literal 1 binary64) (*.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (/.f64 N (*.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) (*.f64 N N)))))","(-.f64 (/.f64 #s(literal 0 binary64) (-.f64 #s(literal 1 binary64) (*.f64 N N))) (/.f64 #s(literal -1 binary64) (-.f64 N #s(literal -1 binary64))))","(-.f64 (/.f64 #s(literal 0 binary64) (*.f64 #s(literal 1 binary64) (*.f64 (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))))) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (*.f64 #s(literal 1 binary64) (*.f64 (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))))))","(-.f64 (/.f64 #s(literal 1 binary64) (*.f64 #s(literal 1 binary64) (*.f64 (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))))) (/.f64 (*.f64 N N) (*.f64 #s(literal 1 binary64) (*.f64 (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))))))","(-.f64 (/.f64 #s(literal 0 binary64) (*.f64 (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (/.f64 #s(literal -1 binary64) (-.f64 N #s(literal -1 binary64))))","(-.f64 (/.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) #s(literal 1 binary64)) (/.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64)))","(-.f64 (/.f64 (/.f64 (pow.f64 N #s(literal 4 binary64)) (fma.f64 N N #s(literal 1 binary64))) (*.f64 #s(literal 1 binary64) (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))))) (/.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 #s(literal 1 binary64) (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))))))","(-.f64 (/.f64 (*.f64 N N) (*.f64 #s(literal 1 binary64) (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))))) (/.f64 #s(literal 1 binary64) (*.f64 #s(literal 1 binary64) (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))))))","(-.f64 (/.f64 (/.f64 (pow.f64 N #s(literal 4 binary64)) (fma.f64 N N #s(literal 1 binary64))) (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (/.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))))","(-.f64 (/.f64 (*.f64 N N) (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (/.f64 (exp.f64 (neg.f64 (log1p.f64 N))) (fma.f64 N N #s(literal -1 binary64))))","(-.f64 (/.f64 (/.f64 (*.f64 N N) (-.f64 N #s(literal -1 binary64))) (neg.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (/.f64 (exp.f64 (neg.f64 (log1p.f64 N))) (neg.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)))))","(-.f64 (/.f64 (/.f64 (pow.f64 N #s(literal 3 binary64)) (fma.f64 N N (-.f64 N #s(literal -1 binary64)))) (neg.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (/.f64 (pow.f64 (fma.f64 N N (-.f64 N #s(literal -1 binary64))) #s(literal -1 binary64)) (neg.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)))))","(-.f64 (/.f64 N (neg.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)))","(-.f64 (/.f64 (/.f64 (*.f64 N N) (-.f64 N #s(literal -1 binary64))) (fma.f64 N N #s(literal -1 binary64))) (/.f64 (exp.f64 (neg.f64 (log1p.f64 N))) (fma.f64 N N #s(literal -1 binary64))))","(-.f64 (/.f64 (/.f64 (pow.f64 N #s(literal 3 binary64)) (fma.f64 N N (-.f64 N #s(literal -1 binary64)))) (fma.f64 N N #s(literal -1 binary64))) (/.f64 (pow.f64 (fma.f64 N N (-.f64 N #s(literal -1 binary64))) #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))))","(-.f64 (/.f64 #s(literal -1 binary64) (fma.f64 N N #s(literal -1 binary64))) (/.f64 N (-.f64 #s(literal 1 binary64) (*.f64 N N))))","(-.f64 (pow.f64 (*.f64 (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) #s(literal -1 binary64)) (/.f64 (*.f64 N N) (*.f64 (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))))","(-.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)))","(-.f64 #s(literal 0 binary64) (/.f64 (exp.f64 (neg.f64 (log1p.f64 N))) #s(literal -1 binary64)))","(exp.f64 (*.f64 (log1p.f64 N) #s(literal -1 binary64)))","(exp.f64 (neg.f64 (log1p.f64 N)))","(+.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) (neg.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64))))","(*.f64 (pow.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64)) (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))) #s(literal -1 binary64)) (pow.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) #s(literal -1 binary64)))","(*.f64 (pow.f64 (pow.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64)) (pow.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) #s(literal -1 binary64)))","(*.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (fma.f64 N N (-.f64 N #s(literal -1 binary64))))","(*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) (pow.f64 (/.f64 #s(literal -1 binary64) (fma.f64 N N #s(literal -1 binary64))) #s(literal -1 binary64)))","(*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N)))","(*.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N))) (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)))","(*.f64 (/.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) (fma.f64 N N #s(literal 1 binary64)))","(*.f64 (/.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))))","(*.f64 (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (-.f64 N #s(literal -1 binary64))) (-.f64 N #s(literal 1 binary64)))","(*.f64 (pow.f64 (-.f64 N #s(literal -1 binary64)) #s(literal 1/2 binary64)) (pow.f64 (-.f64 N #s(literal -1 binary64)) #s(literal 1/2 binary64)))","(*.f64 (/.f64 #s(literal -1 binary64) (fma.f64 N N #s(literal -1 binary64))) (pow.f64 (pow.f64 (*.f64 (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) #s(literal -1 binary64)) #s(literal -1 binary64)))","(*.f64 (/.f64 #s(literal -1 binary64) (fma.f64 N N #s(literal -1 binary64))) (*.f64 (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))))","(*.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) #s(literal 1 binary64)) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1/2 binary64)) (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1/2 binary64)) (fma.f64 N N #s(literal -1 binary64))))","(*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (pow.f64 (/.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (/.f64 (-.f64 N #s(literal 1 binary64)) (exp.f64 (neg.f64 (log1p.f64 N)))))","(*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))","(*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)) (pow.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)) (pow.f64 (/.f64 (/.f64 (exp.f64 (neg.f64 (log1p.f64 N))) (fma.f64 N N #s(literal -1 binary64))) #s(literal 1 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)) (pow.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) #s(literal 1 binary64)))","(*.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)) (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))))","(*.f64 (exp.f64 (neg.f64 (log1p.f64 N))) (pow.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) #s(literal -1 binary64)))","(*.f64 (exp.f64 (neg.f64 (log1p.f64 N))) (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) (/.f64 (exp.f64 (neg.f64 (log1p.f64 N))) (fma.f64 N N #s(literal -1 binary64)))) #s(literal -1 binary64)))","(*.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)))","(*.f64 (-.f64 N #s(literal -1 binary64)) #s(literal 1 binary64))","(*.f64 (fma.f64 N N #s(literal -1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(*.f64 #s(literal -1 binary64) (/.f64 #s(literal -1 binary64) (exp.f64 (neg.f64 (log1p.f64 N)))))","(*.f64 (-.f64 N #s(literal 1 binary64)) (pow.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (-.f64 N #s(literal -1 binary64))) #s(literal -1 binary64)))","(*.f64 (-.f64 N #s(literal 1 binary64)) (/.f64 (-.f64 N #s(literal -1 binary64)) (-.f64 N #s(literal 1 binary64))))","(*.f64 #s(literal 1 binary64) (-.f64 N #s(literal -1 binary64)))","(pow.f64 (pow.f64 (-.f64 N #s(literal -1 binary64)) #s(literal 1/2 binary64)) #s(literal 2 binary64))","(pow.f64 (/.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64))) #s(literal -1 binary64))","(pow.f64 (pow.f64 (-.f64 N #s(literal -1 binary64)) #s(literal -2 binary64)) #s(literal -1/2 binary64))","(pow.f64 (exp.f64 (neg.f64 (log1p.f64 N))) #s(literal -1 binary64))","(pow.f64 (-.f64 N #s(literal -1 binary64)) #s(literal 1 binary64))","(/.f64 (+.f64 (pow.f64 (*.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) N) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64))) #s(literal 3 binary64)) #s(literal 1 binary64)) (fma.f64 (*.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) N) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64))) (*.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) N) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64))) (-.f64 #s(literal 1 binary64) (*.f64 (*.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) N) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64))) #s(literal 1 binary64)))))","(/.f64 (+.f64 (pow.f64 (*.f64 (*.f64 N N) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) #s(literal 3 binary64)) (pow.f64 (*.f64 #s(literal -1 binary64) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) #s(literal 3 binary64))) (fma.f64 (*.f64 (*.f64 N N) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (*.f64 (*.f64 N N) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (-.f64 (*.f64 (*.f64 #s(literal -1 binary64) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (*.f64 #s(literal -1 binary64) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))) (*.f64 (*.f64 (*.f64 N N) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (*.f64 #s(literal -1 binary64) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))))))","(/.f64 (+.f64 (pow.f64 (*.f64 #s(literal -1 binary64) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) #s(literal 3 binary64)) (pow.f64 (*.f64 (*.f64 N N) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) #s(literal 3 binary64))) (fma.f64 (*.f64 #s(literal -1 binary64) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (*.f64 #s(literal -1 binary64) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (-.f64 (*.f64 (*.f64 (*.f64 N N) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (*.f64 (*.f64 N N) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))) (*.f64 (*.f64 #s(literal -1 binary64) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (*.f64 (*.f64 N N) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))))))","(/.f64 (+.f64 (pow.f64 (*.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) N)) #s(literal 3 binary64)) #s(literal 1 binary64)) (fma.f64 (*.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) N)) (*.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) N)) (-.f64 #s(literal 1 binary64) (*.f64 (*.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) N)) #s(literal 1 binary64)))))","(/.f64 (+.f64 (pow.f64 (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N)) #s(literal 3 binary64)) (pow.f64 (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64)) #s(literal 3 binary64))) (fma.f64 (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N)) (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N)) (-.f64 (*.f64 (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64)) (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64))) (*.f64 (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N)) (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64))))))","(/.f64 (+.f64 (pow.f64 (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64)) #s(literal 3 binary64)) (pow.f64 (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N)) #s(literal 3 binary64))) (fma.f64 (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64)) (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64)) (-.f64 (*.f64 (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N)) (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N))) (*.f64 (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64)) (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N))))))","(/.f64 (neg.f64 (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)))) (neg.f64 (fma.f64 N N #s(literal 1 binary64))))","(/.f64 (neg.f64 (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)))) (neg.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N)))))","(/.f64 (neg.f64 (neg.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)))) (neg.f64 (neg.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)))))","(/.f64 (neg.f64 (*.f64 #s(literal 1 binary64) (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))))) (-.f64 #s(literal 1 binary64) (*.f64 N N)))","(/.f64 (neg.f64 (*.f64 #s(literal 1 binary64) (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)))) (neg.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64)))))","(/.f64 (neg.f64 (*.f64 #s(literal 1 binary64) (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)))) (neg.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))))))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N (-.f64 #s(literal 1 binary64) N)))) (*.f64 (-.f64 N #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)))) (*.f64 (-.f64 N #s(literal 1 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N (-.f64 #s(literal 1 binary64) N)))))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (exp.f64 (neg.f64 (log1p.f64 N)))) (exp.f64 (neg.f64 (log1p.f64 N)))) (*.f64 (-.f64 N #s(literal 1 binary64)) (exp.f64 (neg.f64 (log1p.f64 N)))))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (-.f64 #s(literal 1 binary64) (*.f64 N N))) (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)))) (*.f64 (-.f64 N #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N))))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 N #s(literal 1 binary64)))) (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (*.f64 (-.f64 N #s(literal 1 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 N #s(literal 1 binary64)))))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (-.f64 #s(literal 1 binary64) N)) (*.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (*.f64 (-.f64 N #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) N)))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (-.f64 N #s(literal 1 binary64))) (*.f64 (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal 2 binary64)))","(/.f64 (-.f64 (*.f64 (pow.f64 N #s(literal 3 binary64)) (fma.f64 N N (-.f64 #s(literal 1 binary64) N))) (*.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) #s(literal -1 binary64))) (*.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) (fma.f64 N N (-.f64 #s(literal 1 binary64) N))))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (fma.f64 N N #s(literal -1 binary64))) (fma.f64 N N #s(literal -1 binary64))) (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64))))","(/.f64 (*.f64 #s(literal 1 binary64) (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (fma.f64 N N #s(literal -1 binary64)))","(/.f64 (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) (fma.f64 N N #s(literal 1 binary64)))","(/.f64 (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))))","(/.f64 (neg.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64))) (neg.f64 (/.f64 (exp.f64 (neg.f64 (log1p.f64 N))) (fma.f64 N N #s(literal -1 binary64)))))","(/.f64 (neg.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))) (neg.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))))))","(/.f64 (neg.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64))) (neg.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N))))","(/.f64 (neg.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (neg.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64))))","(/.f64 (neg.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) (neg.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64)))))","(/.f64 (neg.f64 (*.f64 (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (neg.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N))))","(/.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N))) (-.f64 N #s(literal 1 binary64)))","(/.f64 (*.f64 #s(literal 1 binary64) (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64))))","(/.f64 (*.f64 #s(literal 1 binary64) (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))) (*.f64 (-.f64 N #s(literal 1 binary64)) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N)))))","(/.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64))))","(/.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)))","(/.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)) (fma.f64 N N (-.f64 #s(literal 1 binary64) N)))","(/.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N)))))","(/.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)) (/.f64 (exp.f64 (neg.f64 (log1p.f64 N))) (fma.f64 N N #s(literal -1 binary64))))","(/.f64 (*.f64 (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (-.f64 #s(literal 1 binary64) (*.f64 N N)))","(/.f64 (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)) #s(literal -1 binary64))","(/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) N))","(/.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (fma.f64 N N #s(literal -1 binary64)))","(/.f64 (-.f64 N #s(literal -1 binary64)) #s(literal 1 binary64))","(/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 N #s(literal 1 binary64)))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)))))","(/.f64 #s(literal -1 binary64) (/.f64 #s(literal -1 binary64) (-.f64 N #s(literal -1 binary64))))","(/.f64 #s(literal 1 binary64) (/.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64))))","(/.f64 #s(literal 1 binary64) (exp.f64 (neg.f64 (log1p.f64 N))))","(neg.f64 (/.f64 #s(literal -1 binary64) (exp.f64 (neg.f64 (log1p.f64 N)))))","(fma.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) N) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N) (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64)))","(fma.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64) (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N)))","(fma.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) N) #s(literal 1 binary64))","(fma.f64 (*.f64 N N) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 #s(literal -1 binary64) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))))","(fma.f64 #s(literal -1 binary64) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 (*.f64 N N) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))))","(fma.f64 #s(literal 1 binary64) N #s(literal 1 binary64))","(fma.f64 N #s(literal 1 binary64) #s(literal 1 binary64))","(-.f64 (/.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64)))) (/.f64 #s(literal 1 binary64) (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64)))))","(-.f64 (/.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64))) (/.f64 (/.f64 #s(literal -1 binary64) (fma.f64 N N #s(literal -1 binary64))) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64))))","(-.f64 (/.f64 #s(literal 0 binary64) (-.f64 #s(literal 1 binary64) N)) (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)))","(-.f64 (/.f64 (/.f64 (pow.f64 N #s(literal 4 binary64)) (fma.f64 N N #s(literal 1 binary64))) (-.f64 N #s(literal 1 binary64))) (/.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (-.f64 N #s(literal 1 binary64))))","(-.f64 (/.f64 #s(literal 0 binary64) (-.f64 #s(literal 1 binary64) (*.f64 N N))) (/.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (-.f64 #s(literal 1 binary64) (*.f64 N N))))","(-.f64 (/.f64 (/.f64 (*.f64 N N) (-.f64 N #s(literal 1 binary64))) #s(literal 1 binary64)) (/.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64)))","(-.f64 (/.f64 (/.f64 (pow.f64 N #s(literal 3 binary64)) (fma.f64 N N (-.f64 #s(literal 1 binary64) N))) #s(literal 1 binary64)) (/.f64 (/.f64 #s(literal -1 binary64) (fma.f64 N N (-.f64 #s(literal 1 binary64) N))) #s(literal 1 binary64)))","(-.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) (/.f64 (*.f64 N N) (-.f64 #s(literal 1 binary64) N)))","(-.f64 (/.f64 (*.f64 N N) (-.f64 N #s(literal 1 binary64))) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(-.f64 (/.f64 (pow.f64 N #s(literal 3 binary64)) (fma.f64 N N (-.f64 #s(literal 1 binary64) N))) (/.f64 #s(literal -1 binary64) (fma.f64 N N (-.f64 #s(literal 1 binary64) N))))","(-.f64 N #s(literal -1 binary64))","(exp.f64 (log1p.f64 N))","(+.f64 (*.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) N) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64))) #s(literal 1 binary64))","(+.f64 (*.f64 (*.f64 N N) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (*.f64 #s(literal -1 binary64) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))))","(+.f64 (*.f64 #s(literal -1 binary64) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (*.f64 (*.f64 N N) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))))","(+.f64 (*.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) N)) #s(literal 1 binary64))","(+.f64 (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N)) (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64)))","(+.f64 (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64)) (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N)))","(+.f64 #s(literal 1 binary64) N)","(+.f64 N #s(literal 1 binary64))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)))","(*.f64 (expm1.f64 (*.f64 (+.f64 (log.f64 N) (log1p.f64 N)) #s(literal 2 binary64))) (pow.f64 (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64)))","(*.f64 (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) N) #s(literal 3 binary64)) #s(literal 1 binary64)) (pow.f64 (-.f64 (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) N) #s(literal 2 binary64)) #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal -1 binary64)) N)) #s(literal -1 binary64)))","(pow.f64 (/.f64 (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal -1 binary64)) (expm1.f64 (*.f64 (+.f64 (log.f64 N) (log1p.f64 N)) #s(literal 2 binary64)))) #s(literal -1 binary64))","(pow.f64 (/.f64 (-.f64 (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) N) #s(literal 2 binary64)) #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal -1 binary64)) N)) (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) N) #s(literal 3 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64))","(/.f64 (+.f64 (pow.f64 (+.f64 #s(literal 1 binary64) (*.f64 (*.f64 (/.f64 N (-.f64 N #s(literal 1 binary64))) N) N)) #s(literal 3 binary64)) (pow.f64 (neg.f64 (/.f64 N (-.f64 N #s(literal 1 binary64)))) #s(literal 3 binary64))) (fma.f64 (+.f64 #s(literal 1 binary64) (*.f64 (*.f64 (/.f64 N (-.f64 N #s(literal 1 binary64))) N) N)) (+.f64 #s(literal 1 binary64) (*.f64 (*.f64 (/.f64 N (-.f64 N #s(literal 1 binary64))) N) N)) (-.f64 (pow.f64 (/.f64 N (-.f64 N #s(literal 1 binary64))) #s(literal 2 binary64)) (*.f64 (+.f64 #s(literal 1 binary64) (*.f64 (*.f64 (/.f64 N (-.f64 N #s(literal 1 binary64))) N) N)) (neg.f64 (/.f64 N (-.f64 N #s(literal 1 binary64))))))))","(/.f64 (fma.f64 (pow.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal 3 binary64)) (pow.f64 N #s(literal 9 binary64)) (pow.f64 (fma.f64 (/.f64 N (-.f64 N #s(literal 1 binary64))) #s(literal -1 binary64) #s(literal 1 binary64)) #s(literal 3 binary64))) (+.f64 (pow.f64 (*.f64 (*.f64 (/.f64 N (-.f64 N #s(literal 1 binary64))) N) N) #s(literal 2 binary64)) (-.f64 (*.f64 (fma.f64 (/.f64 N (-.f64 N #s(literal 1 binary64))) #s(literal -1 binary64) #s(literal 1 binary64)) (fma.f64 (/.f64 N (-.f64 N #s(literal 1 binary64))) #s(literal -1 binary64) #s(literal 1 binary64))) (*.f64 (*.f64 (*.f64 (/.f64 N (-.f64 N #s(literal 1 binary64))) N) N) (fma.f64 (/.f64 N (-.f64 N #s(literal 1 binary64))) #s(literal -1 binary64) #s(literal 1 binary64))))))","(/.f64 (neg.f64 (neg.f64 (expm1.f64 (*.f64 (+.f64 (log.f64 N) (log1p.f64 N)) #s(literal 2 binary64))))) (neg.f64 (neg.f64 (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal -1 binary64)))))","(/.f64 (neg.f64 (neg.f64 (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) N) #s(literal 3 binary64)) #s(literal 1 binary64)))) (neg.f64 (neg.f64 (-.f64 (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) N) #s(literal 2 binary64)) #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal -1 binary64)) N)))))","(/.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) N) #s(literal 2 binary64)))) (neg.f64 (-.f64 #s(literal 1 binary64) (*.f64 (-.f64 N #s(literal -1 binary64)) N))))","(/.f64 (-.f64 (*.f64 (pow.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) N) #s(literal 2 binary64)) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal -1 binary64))) (*.f64 (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal -1 binary64)) #s(literal 1 binary64))) (*.f64 (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal -1 binary64)) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal -1 binary64))))","(/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) N) #s(literal 2 binary64))) (-.f64 #s(literal 1 binary64) (*.f64 (-.f64 N #s(literal -1 binary64)) N)))","(/.f64 (neg.f64 (expm1.f64 (*.f64 (+.f64 (log.f64 N) (log1p.f64 N)) #s(literal 2 binary64)))) (neg.f64 (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal -1 binary64))))","(/.f64 (neg.f64 (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) N) #s(literal 3 binary64)) #s(literal 1 binary64))) (neg.f64 (+.f64 #s(literal 1 binary64) (-.f64 (pow.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) N) #s(literal 2 binary64)) (*.f64 (-.f64 N #s(literal -1 binary64)) N)))))","(/.f64 (neg.f64 (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) N) #s(literal 3 binary64)) #s(literal 1 binary64))) (neg.f64 (-.f64 (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) N) #s(literal 2 binary64)) #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal -1 binary64)) N))))","(/.f64 (expm1.f64 (*.f64 (+.f64 (log.f64 N) (log1p.f64 N)) #s(literal 2 binary64))) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal -1 binary64)))","(/.f64 (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) N) #s(literal 3 binary64)) #s(literal 1 binary64)) (+.f64 #s(literal 1 binary64) (-.f64 (pow.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) N) #s(literal 2 binary64)) (*.f64 (-.f64 N #s(literal -1 binary64)) N))))","(/.f64 (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) N) #s(literal 3 binary64)) #s(literal 1 binary64)) (-.f64 (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) N) #s(literal 2 binary64)) #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal -1 binary64)) N)))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal -1 binary64)) (expm1.f64 (*.f64 (+.f64 (log.f64 N) (log1p.f64 N)) #s(literal 2 binary64))))))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (-.f64 (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) N) #s(literal 2 binary64)) #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal -1 binary64)) N)) (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) N) #s(literal 3 binary64)) #s(literal 1 binary64)))))","(/.f64 #s(literal 1 binary64) (/.f64 (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal -1 binary64)) (expm1.f64 (*.f64 (+.f64 (log.f64 N) (log1p.f64 N)) #s(literal 2 binary64)))))","(/.f64 #s(literal 1 binary64) (/.f64 (-.f64 (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) N) #s(literal 2 binary64)) #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal -1 binary64)) N)) (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) N) #s(literal 3 binary64)) #s(literal 1 binary64))))","(fma.f64 (/.f64 N (-.f64 #s(literal 1 binary64) N)) (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal 1 binary64))","(fma.f64 (/.f64 N (-.f64 #s(literal 1 binary64) (*.f64 N N))) (*.f64 (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (*.f64 (/.f64 N (-.f64 N #s(literal 1 binary64))) N) N (fma.f64 (/.f64 N (-.f64 N #s(literal 1 binary64))) #s(literal -1 binary64) #s(literal 1 binary64)))","(fma.f64 (*.f64 (/.f64 N (-.f64 N #s(literal 1 binary64))) (-.f64 N #s(literal -1 binary64))) (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (*.f64 (*.f64 N N) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) N (fma.f64 (/.f64 N (-.f64 N #s(literal 1 binary64))) #s(literal -1 binary64) #s(literal 1 binary64)))","(fma.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) N) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (/.f64 N (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) N) #s(literal 1 binary64))","(fma.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (pow.f64 N #s(literal 3 binary64)) (fma.f64 (/.f64 N (-.f64 N #s(literal 1 binary64))) #s(literal -1 binary64) #s(literal 1 binary64)))","(fma.f64 (pow.f64 N #s(literal 3 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (fma.f64 (/.f64 N (-.f64 N #s(literal 1 binary64))) #s(literal -1 binary64) #s(literal 1 binary64)))","(fma.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)) (*.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) N) #s(literal 1 binary64))","(fma.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)) (/.f64 N (/.f64 (exp.f64 (neg.f64 (log1p.f64 N))) (fma.f64 N N #s(literal -1 binary64)))) #s(literal 1 binary64))","(fma.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) N) #s(literal 1 binary64) #s(literal 1 binary64))","(fma.f64 (-.f64 N #s(literal -1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) (/.f64 N (-.f64 N #s(literal 1 binary64)))) #s(literal 1 binary64))","(fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64))","(fma.f64 (*.f64 N N) (/.f64 N (-.f64 N #s(literal 1 binary64))) (fma.f64 (/.f64 N (-.f64 N #s(literal 1 binary64))) #s(literal -1 binary64) #s(literal 1 binary64)))","(fma.f64 (fma.f64 N N #s(literal -1 binary64)) (*.f64 (/.f64 N (-.f64 N #s(literal 1 binary64))) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (fma.f64 N N #s(literal -1 binary64)) (/.f64 N (-.f64 N #s(literal 1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 N (-.f64 N #s(literal 1 binary64))) (*.f64 N N) (fma.f64 (/.f64 N (-.f64 N #s(literal 1 binary64))) #s(literal -1 binary64) #s(literal 1 binary64)))","(fma.f64 (/.f64 N (-.f64 N #s(literal 1 binary64))) (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64))","(fma.f64 #s(literal 1 binary64) (*.f64 (-.f64 N #s(literal -1 binary64)) N) #s(literal 1 binary64))","(fma.f64 N (*.f64 N (/.f64 N (-.f64 N #s(literal 1 binary64)))) (fma.f64 (/.f64 N (-.f64 N #s(literal 1 binary64))) #s(literal -1 binary64) #s(literal 1 binary64)))","(fma.f64 N (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N)) (fma.f64 (/.f64 N (-.f64 N #s(literal 1 binary64))) #s(literal -1 binary64) #s(literal 1 binary64)))","(fma.f64 N (-.f64 N #s(literal -1 binary64)) #s(literal 1 binary64))","(-.f64 (/.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) (*.f64 (-.f64 N #s(literal -1 binary64)) N))) (/.f64 (pow.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) N) #s(literal 2 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 (-.f64 N #s(literal -1 binary64)) N))))","(-.f64 (/.f64 (pow.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) N) #s(literal 2 binary64)) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal -1 binary64))) (pow.f64 (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64)))","(+.f64 (+.f64 #s(literal 1 binary64) (*.f64 (*.f64 (/.f64 N (-.f64 N #s(literal 1 binary64))) N) N)) (neg.f64 (/.f64 N (-.f64 N #s(literal 1 binary64)))))","(+.f64 (*.f64 (*.f64 (/.f64 N (-.f64 N #s(literal 1 binary64))) N) N) (fma.f64 (/.f64 N (-.f64 N #s(literal 1 binary64))) #s(literal -1 binary64) #s(literal 1 binary64)))","(+.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) N) #s(literal 1 binary64))","(+.f64 #s(literal 1 binary64) (*.f64 (-.f64 N #s(literal -1 binary64)) N))","(*.f64 (pow.f64 (/.f64 (-.f64 N #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64)) (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (/.f64 (-.f64 N #s(literal -1 binary64)) (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))) #s(literal -1 binary64)) (pow.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) #s(literal -1 binary64)))","(*.f64 (pow.f64 (pow.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64)) (pow.f64 (fma.f64 N N (-.f64 N #s(literal -1 binary64))) #s(literal -1 binary64)))","(*.f64 (pow.f64 (/.f64 #s(literal -1 binary64) (fma.f64 N N #s(literal -1 binary64))) #s(literal -1 binary64)) (/.f64 #s(literal -1 binary64) (-.f64 N #s(literal -1 binary64))))","(*.f64 (pow.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1/2 binary64)) #s(literal -1 binary64)) (pow.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1/2 binary64)) #s(literal -1 binary64)))","(*.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64))) (fma.f64 N N (-.f64 #s(literal 1 binary64) N)))","(*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 N N (-.f64 N #s(literal -1 binary64))) #s(literal -1 binary64)))","(*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (/.f64 #s(literal -1 binary64) (-.f64 N #s(literal -1 binary64))))","(*.f64 (exp.f64 (neg.f64 (log1p.f64 N))) (fma.f64 N N #s(literal -1 binary64)))","(*.f64 (-.f64 N #s(literal -1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) (exp.f64 (neg.f64 (log1p.f64 N)))))","(*.f64 (-.f64 N #s(literal -1 binary64)) (/.f64 (-.f64 N #s(literal 1 binary64)) (-.f64 N #s(literal -1 binary64))))","(*.f64 (fma.f64 N N #s(literal -1 binary64)) (exp.f64 (neg.f64 (log1p.f64 N))))","(*.f64 #s(literal 1 binary64) (-.f64 N #s(literal 1 binary64)))","(pow.f64 (/.f64 (fma.f64 N N (-.f64 N #s(literal -1 binary64))) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64))","(pow.f64 (/.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64))","(pow.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal 2 binary64)) #s(literal 1/2 binary64))","(pow.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1/2 binary64)) #s(literal -2 binary64))","(pow.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64))","(pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))","(/.f64 (+.f64 #s(literal -1 binary64) (pow.f64 N #s(literal 3 binary64))) (+.f64 #s(literal 1 binary64) (-.f64 (*.f64 N N) (neg.f64 N))))","(/.f64 (neg.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (exp.f64 (neg.f64 (log1p.f64 N))))) (neg.f64 (fma.f64 N N #s(literal 1 binary64))))","(/.f64 (neg.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)) (exp.f64 (neg.f64 (log1p.f64 N))))) (neg.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N)))))","(/.f64 (neg.f64 (neg.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (neg.f64 (neg.f64 (fma.f64 N N (-.f64 N #s(literal -1 binary64))))))","(/.f64 (neg.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (neg.f64 (neg.f64 (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)))))","(/.f64 (neg.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64))) (neg.f64 (*.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 N #s(literal -1 binary64)))))","(/.f64 (neg.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64))) (neg.f64 (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (-.f64 N #s(literal -1 binary64)))))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (fma.f64 N N (-.f64 N #s(literal -1 binary64)))) (*.f64 (-.f64 N #s(literal -1 binary64)) (*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64))))) (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N (-.f64 N #s(literal -1 binary64)))))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64))) (*.f64 (-.f64 N #s(literal -1 binary64)) (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64))))) (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64))))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (fma.f64 N N #s(literal 1 binary64))) (*.f64 (-.f64 N #s(literal -1 binary64)) (*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (/.f64 (exp.f64 (neg.f64 (log1p.f64 N))) (fma.f64 N N #s(literal -1 binary64)))))) (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal 1 binary64))))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N)))) (*.f64 (-.f64 N #s(literal -1 binary64)) (*.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)) (/.f64 (exp.f64 (neg.f64 (log1p.f64 N))) (fma.f64 N N #s(literal -1 binary64)))))) (*.f64 (-.f64 N #s(literal -1 binary64)) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N)))))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (+.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)))) (*.f64 (-.f64 N #s(literal -1 binary64)) (-.f64 (pow.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) #s(literal 2 binary64)) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -2 binary64))))) (*.f64 (-.f64 N #s(literal -1 binary64)) (+.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)))))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 2 binary64))) (*.f64 (-.f64 N #s(literal -1 binary64)) (-.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) N) (fma.f64 N N #s(literal -1 binary64))))) (*.f64 (-.f64 N #s(literal -1 binary64)) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 2 binary64))))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (+.f64 (pow.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) #s(literal 2 binary64)) (+.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -2 binary64)) (*.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)))))) (*.f64 (-.f64 N #s(literal -1 binary64)) (-.f64 (pow.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) #s(literal 3 binary64)) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -3 binary64))))) (*.f64 (-.f64 N #s(literal -1 binary64)) (+.f64 (pow.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) #s(literal 2 binary64)) (+.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -2 binary64)) (*.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)))))))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (-.f64 N #s(literal 1 binary64))) (-.f64 N #s(literal 1 binary64))) (fma.f64 N N #s(literal -1 binary64)))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (neg.f64 (*.f64 (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))))) (*.f64 (-.f64 N #s(literal -1 binary64)) (neg.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N))))) (*.f64 (-.f64 N #s(literal -1 binary64)) (neg.f64 (*.f64 (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))))))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (*.f64 (fma.f64 N N (-.f64 N #s(literal -1 binary64))) (fma.f64 N N #s(literal -1 binary64)))) (*.f64 (-.f64 N #s(literal -1 binary64)) (*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64)))) (*.f64 (-.f64 N #s(literal -1 binary64)) (*.f64 (fma.f64 N N (-.f64 N #s(literal -1 binary64))) (fma.f64 N N #s(literal -1 binary64)))))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (*.f64 (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (*.f64 (-.f64 N #s(literal -1 binary64)) (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal 1 binary64)))) (*.f64 (-.f64 N #s(literal -1 binary64)) (*.f64 (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))))) (*.f64 (-.f64 N #s(literal -1 binary64)) (*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64)))) (*.f64 (-.f64 N #s(literal -1 binary64)) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))))))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))))) (*.f64 (-.f64 N #s(literal -1 binary64)) (*.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64)))) (*.f64 (-.f64 N #s(literal -1 binary64)) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))))))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (*.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (fma.f64 N N #s(literal 1 binary64)))) (*.f64 (-.f64 N #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)))) (*.f64 (-.f64 N #s(literal -1 binary64)) (*.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (fma.f64 N N #s(literal 1 binary64)))))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N (-.f64 N #s(literal -1 binary64))))) (*.f64 (-.f64 N #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (*.f64 (-.f64 N #s(literal -1 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N (-.f64 N #s(literal -1 binary64))))))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (*.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))))) (*.f64 (-.f64 N #s(literal -1 binary64)) (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)))) (*.f64 (-.f64 N #s(literal -1 binary64)) (*.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))))))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (*.f64 (-.f64 N #s(literal -1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (*.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (-.f64 #s(literal 1 binary64) (*.f64 N N))) (*.f64 (-.f64 N #s(literal -1 binary64)) (*.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) (*.f64 N N)))))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (-.f64 #s(literal 1 binary64) (*.f64 N N))) (-.f64 #s(literal 1 binary64) (*.f64 N N))) (*.f64 (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))))","(/.f64 (-.f64 (*.f64 N (neg.f64 N)) (*.f64 (-.f64 N #s(literal -1 binary64)) (/.f64 #s(literal -1 binary64) (-.f64 N #s(literal -1 binary64))))) (*.f64 (-.f64 N #s(literal -1 binary64)) #s(literal -1 binary64)))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (*.f64 #s(literal 1 binary64) (*.f64 (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))))) (*.f64 (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (*.f64 (-.f64 N #s(literal -1 binary64)) (*.f64 #s(literal 1 binary64) (*.f64 (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))))))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (*.f64 (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (*.f64 (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (*.f64 (-.f64 N #s(literal -1 binary64)) (*.f64 (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (*.f64 #s(literal 1 binary64) (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))))) (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (*.f64 (-.f64 N #s(literal -1 binary64)) (*.f64 #s(literal 1 binary64) (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))))))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (*.f64 (-.f64 N #s(literal -1 binary64)) (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64))) (*.f64 (-.f64 N #s(literal -1 binary64)) #s(literal -1 binary64))) (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64))))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (neg.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (fma.f64 N N #s(literal -1 binary64))) (*.f64 (-.f64 N #s(literal -1 binary64)) (neg.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)))))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (fma.f64 N N #s(literal -1 binary64))) (fma.f64 N N #s(literal -1 binary64))) (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (-.f64 N #s(literal -1 binary64))) (-.f64 N #s(literal -1 binary64))) (pow.f64 (-.f64 N #s(literal -1 binary64)) #s(literal 2 binary64)))","(/.f64 (-.f64 (*.f64 (pow.f64 N #s(literal 3 binary64)) (fma.f64 N N (-.f64 N #s(literal -1 binary64)))) (*.f64 (fma.f64 N N (-.f64 N #s(literal -1 binary64))) #s(literal 1 binary64))) (*.f64 (fma.f64 N N (-.f64 N #s(literal -1 binary64))) (fma.f64 N N (-.f64 N #s(literal -1 binary64)))))","(/.f64 (exp.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64)))) (-.f64 N #s(literal -1 binary64)))","(/.f64 (exp.f64 (log.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (exp.f64 (log1p.f64 (fma.f64 N N N))))","(/.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (exp.f64 (neg.f64 (log1p.f64 N)))) (fma.f64 N N #s(literal 1 binary64)))","(/.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)) (exp.f64 (neg.f64 (log1p.f64 N)))) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))))","(/.f64 (neg.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))) (neg.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))))))","(/.f64 (neg.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (neg.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) (neg.f64 N)))))","(/.f64 (neg.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (neg.f64 (fma.f64 N N (-.f64 N #s(literal -1 binary64)))))","(/.f64 (neg.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) (neg.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal 1 binary64)))))","(/.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N))) (neg.f64 (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64))))","(/.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64)) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 N #s(literal -1 binary64))))","(/.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64)) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (-.f64 N #s(literal -1 binary64))))","(/.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal 1 binary64))))","(/.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (fma.f64 N N (-.f64 #s(literal 1 binary64) (neg.f64 N))))","(/.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (fma.f64 N N (-.f64 N #s(literal -1 binary64))))","(/.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)) (*.f64 (-.f64 N #s(literal -1 binary64)) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N)))))","(/.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64))","(/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)))","(/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 N #s(literal -1 binary64)))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (fma.f64 N N (-.f64 N #s(literal -1 binary64))) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64))))","(/.f64 #s(literal -1 binary64) (neg.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))))","(/.f64 (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))","(/.f64 #s(literal 1 binary64) (neg.f64 (neg.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))))","(/.f64 #s(literal 1 binary64) (/.f64 (fma.f64 N N (-.f64 N #s(literal -1 binary64))) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))))","(/.f64 #s(literal 1 binary64) (/.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64)))","(/.f64 #s(literal 1 binary64) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(neg.f64 (-.f64 #s(literal 1 binary64) N))","(fma.f64 #s(literal 1 binary64) N #s(literal -1 binary64))","(fma.f64 N #s(literal 1 binary64) #s(literal -1 binary64))","(expm1.f64 (neg.f64 (*.f64 (log.f64 N) #s(literal -1 binary64))))","(expm1.f64 (*.f64 (log.f64 N) #s(literal 1 binary64)))","(-.f64 (/.f64 (/.f64 (*.f64 N N) (-.f64 N #s(literal -1 binary64))) #s(literal 1 binary64)) (exp.f64 (neg.f64 (log1p.f64 N))))","(-.f64 (/.f64 (/.f64 (pow.f64 N #s(literal 3 binary64)) (fma.f64 N N (-.f64 N #s(literal -1 binary64)))) #s(literal 1 binary64)) (/.f64 (pow.f64 (fma.f64 N N (-.f64 N #s(literal -1 binary64))) #s(literal -1 binary64)) #s(literal 1 binary64)))","(-.f64 (/.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal 1 binary64)))) (/.f64 #s(literal 1 binary64) (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal 1 binary64)))))","(-.f64 (/.f64 (pow.f64 N #s(literal 3 binary64)) (fma.f64 N N (-.f64 #s(literal 1 binary64) (neg.f64 N)))) (/.f64 #s(literal 1 binary64) (fma.f64 N N (-.f64 #s(literal 1 binary64) (neg.f64 N)))))","(-.f64 (/.f64 #s(literal 0 binary64) (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64))) (-.f64 #s(literal 1 binary64) N))","(-.f64 (/.f64 (/.f64 (pow.f64 N #s(literal 4 binary64)) (fma.f64 N N #s(literal 1 binary64))) (-.f64 N #s(literal -1 binary64))) (/.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (-.f64 N #s(literal -1 binary64))))","(-.f64 (/.f64 (*.f64 N N) (-.f64 N #s(literal -1 binary64))) (exp.f64 (neg.f64 (log1p.f64 N))))","(-.f64 (/.f64 (pow.f64 N #s(literal 3 binary64)) (fma.f64 N N (-.f64 N #s(literal -1 binary64)))) (pow.f64 (fma.f64 N N (-.f64 N #s(literal -1 binary64))) #s(literal -1 binary64)))","(-.f64 (/.f64 #s(literal -1 binary64) (-.f64 N #s(literal -1 binary64))) (/.f64 (*.f64 N N) (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64))))","(-.f64 N #s(literal 1 binary64))","(exp.f64 (neg.f64 (*.f64 (log.f64 (-.f64 N #s(literal 1 binary64))) #s(literal -1 binary64))))","(exp.f64 (*.f64 (*.f64 (log.f64 (-.f64 N #s(literal 1 binary64))) #s(literal -1 binary64)) #s(literal -1 binary64)))","(exp.f64 (*.f64 (log.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) #s(literal -1 binary64)))","(exp.f64 (log.f64 (-.f64 N #s(literal 1 binary64))))","(+.f64 #s(literal -1 binary64) N)","(+.f64 N #s(literal -1 binary64))","(*.f64 (pow.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64)) (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))) #s(literal -1 binary64)) (pow.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) #s(literal -1 binary64)))","(*.f64 (pow.f64 (pow.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64)) (pow.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) #s(literal -1 binary64)))","(*.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (fma.f64 N N (-.f64 N #s(literal -1 binary64))))","(*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) (pow.f64 (/.f64 #s(literal -1 binary64) (fma.f64 N N #s(literal -1 binary64))) #s(literal -1 binary64)))","(*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N)))","(*.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N))) (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)))","(*.f64 (/.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) (fma.f64 N N #s(literal 1 binary64)))","(*.f64 (/.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))))","(*.f64 (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (-.f64 N #s(literal -1 binary64))) (-.f64 N #s(literal 1 binary64)))","(*.f64 (pow.f64 (-.f64 N #s(literal -1 binary64)) #s(literal 1/2 binary64)) (pow.f64 (-.f64 N #s(literal -1 binary64)) #s(literal 1/2 binary64)))","(*.f64 (/.f64 #s(literal -1 binary64) (fma.f64 N N #s(literal -1 binary64))) (pow.f64 (pow.f64 (*.f64 (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) #s(literal -1 binary64)) #s(literal -1 binary64)))","(*.f64 (/.f64 #s(literal -1 binary64) (fma.f64 N N #s(literal -1 binary64))) (*.f64 (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))))","(*.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) #s(literal 1 binary64)) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1/2 binary64)) (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1/2 binary64)) (fma.f64 N N #s(literal -1 binary64))))","(*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (pow.f64 (/.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (/.f64 (-.f64 N #s(literal 1 binary64)) (exp.f64 (neg.f64 (log1p.f64 N)))))","(*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))","(*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)) (pow.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)) (pow.f64 (/.f64 (/.f64 (exp.f64 (neg.f64 (log1p.f64 N))) (fma.f64 N N #s(literal -1 binary64))) #s(literal 1 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)) (pow.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) #s(literal 1 binary64)))","(*.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)) (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))))","(*.f64 (exp.f64 (neg.f64 (log1p.f64 N))) (pow.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) #s(literal -1 binary64)))","(*.f64 (exp.f64 (neg.f64 (log1p.f64 N))) (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) (/.f64 (exp.f64 (neg.f64 (log1p.f64 N))) (fma.f64 N N #s(literal -1 binary64)))) #s(literal -1 binary64)))","(*.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)))","(*.f64 (-.f64 N #s(literal -1 binary64)) #s(literal 1 binary64))","(*.f64 (fma.f64 N N #s(literal -1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(*.f64 #s(literal -1 binary64) (/.f64 #s(literal -1 binary64) (exp.f64 (neg.f64 (log1p.f64 N)))))","(*.f64 (-.f64 N #s(literal 1 binary64)) (pow.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (-.f64 N #s(literal -1 binary64))) #s(literal -1 binary64)))","(*.f64 (-.f64 N #s(literal 1 binary64)) (/.f64 (-.f64 N #s(literal -1 binary64)) (-.f64 N #s(literal 1 binary64))))","(*.f64 #s(literal 1 binary64) (-.f64 N #s(literal -1 binary64)))","(pow.f64 (pow.f64 (-.f64 N #s(literal -1 binary64)) #s(literal 1/2 binary64)) #s(literal 2 binary64))","(pow.f64 (/.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64))) #s(literal -1 binary64))","(pow.f64 (pow.f64 (-.f64 N #s(literal -1 binary64)) #s(literal -2 binary64)) #s(literal -1/2 binary64))","(pow.f64 (exp.f64 (neg.f64 (log1p.f64 N))) #s(literal -1 binary64))","(pow.f64 (-.f64 N #s(literal -1 binary64)) #s(literal 1 binary64))","(/.f64 (+.f64 (pow.f64 (*.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) N) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64))) #s(literal 3 binary64)) #s(literal 1 binary64)) (fma.f64 (*.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) N) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64))) (*.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) N) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64))) (-.f64 #s(literal 1 binary64) (*.f64 (*.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) N) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64))) #s(literal 1 binary64)))))","(/.f64 (+.f64 (pow.f64 (*.f64 (*.f64 N N) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) #s(literal 3 binary64)) (pow.f64 (*.f64 #s(literal -1 binary64) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) #s(literal 3 binary64))) (fma.f64 (*.f64 (*.f64 N N) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (*.f64 (*.f64 N N) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (-.f64 (*.f64 (*.f64 #s(literal -1 binary64) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (*.f64 #s(literal -1 binary64) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))) (*.f64 (*.f64 (*.f64 N N) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (*.f64 #s(literal -1 binary64) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))))))","(/.f64 (+.f64 (pow.f64 (*.f64 #s(literal -1 binary64) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) #s(literal 3 binary64)) (pow.f64 (*.f64 (*.f64 N N) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) #s(literal 3 binary64))) (fma.f64 (*.f64 #s(literal -1 binary64) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (*.f64 #s(literal -1 binary64) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (-.f64 (*.f64 (*.f64 (*.f64 N N) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (*.f64 (*.f64 N N) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))) (*.f64 (*.f64 #s(literal -1 binary64) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (*.f64 (*.f64 N N) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))))))","(/.f64 (+.f64 (pow.f64 (*.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) N)) #s(literal 3 binary64)) #s(literal 1 binary64)) (fma.f64 (*.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) N)) (*.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) N)) (-.f64 #s(literal 1 binary64) (*.f64 (*.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) N)) #s(literal 1 binary64)))))","(/.f64 (+.f64 (pow.f64 (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N)) #s(literal 3 binary64)) (pow.f64 (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64)) #s(literal 3 binary64))) (fma.f64 (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N)) (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N)) (-.f64 (*.f64 (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64)) (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64))) (*.f64 (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N)) (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64))))))","(/.f64 (+.f64 (pow.f64 (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64)) #s(literal 3 binary64)) (pow.f64 (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N)) #s(literal 3 binary64))) (fma.f64 (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64)) (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64)) (-.f64 (*.f64 (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N)) (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N))) (*.f64 (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64)) (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N))))))","(/.f64 (neg.f64 (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)))) (neg.f64 (fma.f64 N N #s(literal 1 binary64))))","(/.f64 (neg.f64 (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)))) (neg.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N)))))","(/.f64 (neg.f64 (neg.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)))) (neg.f64 (neg.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)))))","(/.f64 (neg.f64 (*.f64 #s(literal 1 binary64) (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))))) (-.f64 #s(literal 1 binary64) (*.f64 N N)))","(/.f64 (neg.f64 (*.f64 #s(literal 1 binary64) (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)))) (neg.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64)))))","(/.f64 (neg.f64 (*.f64 #s(literal 1 binary64) (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)))) (neg.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))))))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N (-.f64 #s(literal 1 binary64) N)))) (*.f64 (-.f64 N #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)))) (*.f64 (-.f64 N #s(literal 1 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N (-.f64 #s(literal 1 binary64) N)))))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (exp.f64 (neg.f64 (log1p.f64 N)))) (exp.f64 (neg.f64 (log1p.f64 N)))) (*.f64 (-.f64 N #s(literal 1 binary64)) (exp.f64 (neg.f64 (log1p.f64 N)))))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (-.f64 #s(literal 1 binary64) (*.f64 N N))) (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)))) (*.f64 (-.f64 N #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N))))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 N #s(literal 1 binary64)))) (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (*.f64 (-.f64 N #s(literal 1 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 N #s(literal 1 binary64)))))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (-.f64 #s(literal 1 binary64) N)) (*.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (*.f64 (-.f64 N #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) N)))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (-.f64 N #s(literal 1 binary64))) (*.f64 (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal 2 binary64)))","(/.f64 (-.f64 (*.f64 (pow.f64 N #s(literal 3 binary64)) (fma.f64 N N (-.f64 #s(literal 1 binary64) N))) (*.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) #s(literal -1 binary64))) (*.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) (fma.f64 N N (-.f64 #s(literal 1 binary64) N))))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (fma.f64 N N #s(literal -1 binary64))) (fma.f64 N N #s(literal -1 binary64))) (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64))))","(/.f64 (*.f64 #s(literal 1 binary64) (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (fma.f64 N N #s(literal -1 binary64)))","(/.f64 (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) (fma.f64 N N #s(literal 1 binary64)))","(/.f64 (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))))","(/.f64 (neg.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64))) (neg.f64 (/.f64 (exp.f64 (neg.f64 (log1p.f64 N))) (fma.f64 N N #s(literal -1 binary64)))))","(/.f64 (neg.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))) (neg.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))))))","(/.f64 (neg.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64))) (neg.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N))))","(/.f64 (neg.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (neg.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64))))","(/.f64 (neg.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) (neg.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64)))))","(/.f64 (neg.f64 (*.f64 (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (neg.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N))))","(/.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N))) (-.f64 N #s(literal 1 binary64)))","(/.f64 (*.f64 #s(literal 1 binary64) (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64))))","(/.f64 (*.f64 #s(literal 1 binary64) (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))) (*.f64 (-.f64 N #s(literal 1 binary64)) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N)))))","(/.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64))))","(/.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)))","(/.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)) (fma.f64 N N (-.f64 #s(literal 1 binary64) N)))","(/.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N)))))","(/.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)) (/.f64 (exp.f64 (neg.f64 (log1p.f64 N))) (fma.f64 N N #s(literal -1 binary64))))","(/.f64 (*.f64 (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (-.f64 #s(literal 1 binary64) (*.f64 N N)))","(/.f64 (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)) #s(literal -1 binary64))","(/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) N))","(/.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (fma.f64 N N #s(literal -1 binary64)))","(/.f64 (-.f64 N #s(literal -1 binary64)) #s(literal 1 binary64))","(/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 N #s(literal 1 binary64)))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)))))","(/.f64 #s(literal -1 binary64) (/.f64 #s(literal -1 binary64) (-.f64 N #s(literal -1 binary64))))","(/.f64 #s(literal 1 binary64) (/.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64))))","(/.f64 #s(literal 1 binary64) (exp.f64 (neg.f64 (log1p.f64 N))))","(neg.f64 (/.f64 #s(literal -1 binary64) (exp.f64 (neg.f64 (log1p.f64 N)))))","(fma.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) N) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N) (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64)))","(fma.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64) (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N)))","(fma.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) N) #s(literal 1 binary64))","(fma.f64 (*.f64 N N) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 #s(literal -1 binary64) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))))","(fma.f64 #s(literal -1 binary64) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 (*.f64 N N) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))))","(fma.f64 #s(literal 1 binary64) N #s(literal 1 binary64))","(fma.f64 N #s(literal 1 binary64) #s(literal 1 binary64))","(-.f64 (/.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64)))) (/.f64 #s(literal 1 binary64) (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64)))))","(-.f64 (/.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64))) (/.f64 (/.f64 #s(literal -1 binary64) (fma.f64 N N #s(literal -1 binary64))) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64))))","(-.f64 (/.f64 #s(literal 0 binary64) (-.f64 #s(literal 1 binary64) N)) (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)))","(-.f64 (/.f64 (/.f64 (pow.f64 N #s(literal 4 binary64)) (fma.f64 N N #s(literal 1 binary64))) (-.f64 N #s(literal 1 binary64))) (/.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (-.f64 N #s(literal 1 binary64))))","(-.f64 (/.f64 #s(literal 0 binary64) (-.f64 #s(literal 1 binary64) (*.f64 N N))) (/.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (-.f64 #s(literal 1 binary64) (*.f64 N N))))","(-.f64 (/.f64 (/.f64 (*.f64 N N) (-.f64 N #s(literal 1 binary64))) #s(literal 1 binary64)) (/.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64)))","(-.f64 (/.f64 (/.f64 (pow.f64 N #s(literal 3 binary64)) (fma.f64 N N (-.f64 #s(literal 1 binary64) N))) #s(literal 1 binary64)) (/.f64 (/.f64 #s(literal -1 binary64) (fma.f64 N N (-.f64 #s(literal 1 binary64) N))) #s(literal 1 binary64)))","(-.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) (/.f64 (*.f64 N N) (-.f64 #s(literal 1 binary64) N)))","(-.f64 (/.f64 (*.f64 N N) (-.f64 N #s(literal 1 binary64))) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(-.f64 (/.f64 (pow.f64 N #s(literal 3 binary64)) (fma.f64 N N (-.f64 #s(literal 1 binary64) N))) (/.f64 #s(literal -1 binary64) (fma.f64 N N (-.f64 #s(literal 1 binary64) N))))","(-.f64 N #s(literal -1 binary64))","(exp.f64 (log1p.f64 N))","(+.f64 (*.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) N) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64))) #s(literal 1 binary64))","(+.f64 (*.f64 (*.f64 N N) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (*.f64 #s(literal -1 binary64) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))))","(+.f64 (*.f64 #s(literal -1 binary64) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (*.f64 (*.f64 N N) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))))","(+.f64 (*.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) N)) #s(literal 1 binary64))","(+.f64 (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N)) (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64)))","(+.f64 (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64)) (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N)))","(+.f64 #s(literal 1 binary64) N)","(+.f64 N #s(literal 1 binary64))","(*.f64 (pow.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64)) (pow.f64 (fma.f64 N N (-.f64 N #s(literal -1 binary64))) #s(literal -1 binary64)))","(*.f64 (pow.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) #s(literal -1 binary64)) (/.f64 #s(literal -1 binary64) (fma.f64 N N #s(literal -1 binary64))))","(*.f64 (pow.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N))) #s(literal -1 binary64)) (/.f64 #s(literal -1 binary64) (-.f64 N #s(literal -1 binary64))))","(*.f64 (pow.f64 (/.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64)) (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (/.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))) #s(literal -1 binary64)) (pow.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) #s(literal -1 binary64)))","(*.f64 (pow.f64 (pow.f64 (-.f64 N #s(literal -1 binary64)) #s(literal 1/2 binary64)) #s(literal -1 binary64)) (pow.f64 (pow.f64 (-.f64 N #s(literal -1 binary64)) #s(literal 1/2 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (/.f64 #s(literal -1 binary64) (fma.f64 N N #s(literal -1 binary64))) #s(literal -1 binary64)) (pow.f64 (*.f64 (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) #s(literal -1 binary64)))","(*.f64 (pow.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1/2 binary64)) #s(literal -1 binary64)) (pow.f64 (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1/2 binary64)) (fma.f64 N N #s(literal -1 binary64))) #s(literal -1 binary64)))","(*.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) (fma.f64 N N #s(literal 1 binary64)))","(*.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))))","(*.f64 (pow.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64)) (pow.f64 (pow.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) #s(literal -1 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64)) (fma.f64 N N (-.f64 #s(literal 1 binary64) N)))","(*.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) (exp.f64 (neg.f64 (log1p.f64 N)))) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(*.f64 (/.f64 (exp.f64 (neg.f64 (log1p.f64 N))) (fma.f64 N N #s(literal -1 binary64))) (fma.f64 N N #s(literal -1 binary64)))","(*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (pow.f64 (/.f64 (-.f64 N #s(literal -1 binary64)) (-.f64 N #s(literal 1 binary64))) #s(literal -1 binary64)))","(*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (/.f64 (-.f64 N #s(literal 1 binary64)) (-.f64 N #s(literal -1 binary64))))","(*.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)) (-.f64 N #s(literal 1 binary64)))","(*.f64 (-.f64 #s(literal 1 binary64) N) (/.f64 #s(literal -1 binary64) (fma.f64 N N #s(literal -1 binary64))))","(*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (pow.f64 (*.f64 (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) #s(literal -1 binary64)))","(*.f64 (exp.f64 (neg.f64 (log1p.f64 N))) #s(literal 1 binary64))","(*.f64 (-.f64 N #s(literal -1 binary64)) (/.f64 (-.f64 N #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))))","(*.f64 (-.f64 N #s(literal -1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) (/.f64 (exp.f64 (neg.f64 (log1p.f64 N))) (fma.f64 N N #s(literal -1 binary64)))))","(*.f64 (fma.f64 N N #s(literal -1 binary64)) (pow.f64 (pow.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) #s(literal 1 binary64)) #s(literal -1 binary64)))","(*.f64 (fma.f64 N N #s(literal -1 binary64)) (/.f64 (/.f64 (exp.f64 (neg.f64 (log1p.f64 N))) (fma.f64 N N #s(literal -1 binary64))) #s(literal 1 binary64)))","(*.f64 (fma.f64 N N #s(literal -1 binary64)) (/.f64 (exp.f64 (neg.f64 (log1p.f64 N))) (fma.f64 N N #s(literal -1 binary64))))","(*.f64 #s(literal -1 binary64) (pow.f64 (/.f64 #s(literal -1 binary64) (exp.f64 (neg.f64 (log1p.f64 N)))) #s(literal -1 binary64)))","(*.f64 (-.f64 N #s(literal 1 binary64)) (pow.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (exp.f64 (neg.f64 (log1p.f64 N)))) #s(literal -1 binary64)))","(*.f64 (-.f64 N #s(literal 1 binary64)) (/.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64)))","(*.f64 (-.f64 N #s(literal 1 binary64)) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)))","(*.f64 #s(literal 1 binary64) (exp.f64 (neg.f64 (log1p.f64 N))))","(pow.f64 (exp.f64 (neg.f64 (log1p.f64 N))) #s(literal 1 binary64))","(pow.f64 (-.f64 N #s(literal -1 binary64)) #s(literal -1 binary64))","(/.f64 (+.f64 (pow.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) #s(literal 3 binary64)) (pow.f64 (neg.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64))) #s(literal 3 binary64))) (+.f64 (pow.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) #s(literal 2 binary64)) (-.f64 (*.f64 (neg.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64))) (neg.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)))) (*.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) (neg.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)))))))","(/.f64 (neg.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)))) (neg.f64 (fma.f64 N N (-.f64 N #s(literal -1 binary64)))))","(/.f64 (neg.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)))) (neg.f64 (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64))))","(/.f64 (neg.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (/.f64 (exp.f64 (neg.f64 (log1p.f64 N))) (fma.f64 N N #s(literal -1 binary64))))) (neg.f64 (fma.f64 N N #s(literal 1 binary64))))","(/.f64 (neg.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)) (/.f64 (exp.f64 (neg.f64 (log1p.f64 N))) (fma.f64 N N #s(literal -1 binary64))))) (neg.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N)))))","(/.f64 (neg.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))) (-.f64 #s(literal 1 binary64) (*.f64 N N)))","(/.f64 (neg.f64 (-.f64 (pow.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) #s(literal 2 binary64)) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -2 binary64)))) (neg.f64 (+.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)))))","(/.f64 (neg.f64 (-.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) N) (fma.f64 N N #s(literal -1 binary64)))) (neg.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 2 binary64))))","(/.f64 (neg.f64 (-.f64 (pow.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) #s(literal 3 binary64)) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -3 binary64)))) (neg.f64 (+.f64 (pow.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) #s(literal 2 binary64)) (+.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -2 binary64)) (*.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)))))))","(/.f64 (neg.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (-.f64 N #s(literal -1 binary64)))) (-.f64 #s(literal 1 binary64) N))","(/.f64 (neg.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64))) (neg.f64 (*.f64 (fma.f64 N N (-.f64 N #s(literal -1 binary64))) (fma.f64 N N #s(literal -1 binary64)))))","(/.f64 (neg.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal 1 binary64))) (neg.f64 (*.f64 (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))))","(/.f64 (neg.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (neg.f64 (neg.f64 (*.f64 (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))))))","(/.f64 (neg.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64))) (neg.f64 (*.f64 (fma.f64 N N #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))))))","(/.f64 (neg.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64))) (neg.f64 (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))))))","(/.f64 (-.f64 (*.f64 (/.f64 N (-.f64 N #s(literal -1 binary64))) (-.f64 N #s(literal 1 binary64))) (*.f64 (-.f64 N #s(literal 1 binary64)) (exp.f64 (neg.f64 (log1p.f64 N))))) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal 2 binary64)))","(/.f64 (-.f64 (*.f64 (/.f64 N (-.f64 N #s(literal -1 binary64))) (-.f64 #s(literal 1 binary64) (*.f64 N N))) (*.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (*.f64 (-.f64 N #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N))))","(/.f64 (-.f64 (*.f64 (/.f64 N (-.f64 N #s(literal -1 binary64))) (/.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64))) (*.f64 (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))) (*.f64 (-.f64 N #s(literal 1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64))))","(/.f64 (-.f64 (*.f64 (/.f64 N (-.f64 N #s(literal -1 binary64))) (fma.f64 N N #s(literal -1 binary64))) (*.f64 (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))) (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64))))","(/.f64 (-.f64 (*.f64 (neg.f64 N) (-.f64 N #s(literal 1 binary64))) (-.f64 #s(literal 1 binary64) N)) (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 N #s(literal 1 binary64))))","(/.f64 (-.f64 (*.f64 (neg.f64 N) (-.f64 #s(literal 1 binary64) (*.f64 N N))) (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal -1 binary64))) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 2 binary64)))","(/.f64 (-.f64 (*.f64 (neg.f64 N) (/.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64))) (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal 1 binary64))) (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64))))","(/.f64 (-.f64 (*.f64 (neg.f64 N) (fma.f64 N N #s(literal -1 binary64))) (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal 1 binary64))) (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (fma.f64 N N #s(literal -1 binary64))))","(/.f64 (-.f64 (-.f64 N #s(literal 1 binary64)) (*.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) N) (exp.f64 (neg.f64 (log1p.f64 N))))) (*.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) N) (-.f64 N #s(literal 1 binary64))))","(/.f64 (-.f64 (*.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) (*.f64 N N))) (*.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) N) #s(literal -1 binary64))) (*.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) N) (-.f64 #s(literal 1 binary64) (*.f64 N N))))","(/.f64 (-.f64 (*.f64 #s(literal 1 binary64) (/.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64))) (*.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) N) #s(literal 1 binary64))) (*.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) N) (/.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64))))","(/.f64 (-.f64 (fma.f64 N N #s(literal -1 binary64)) (*.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) N) #s(literal 1 binary64))) (*.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) N) (fma.f64 N N #s(literal -1 binary64))))","(/.f64 (-.f64 (*.f64 N (-.f64 N #s(literal 1 binary64))) (-.f64 N #s(literal 1 binary64))) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 N #s(literal 1 binary64))))","(/.f64 (-.f64 (*.f64 N (-.f64 #s(literal 1 binary64) (*.f64 N N))) (*.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64))) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N))))","(/.f64 (-.f64 (*.f64 N (/.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64))) (fma.f64 N N #s(literal -1 binary64))) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64))))","(/.f64 (-.f64 (neg.f64 N) #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N)))","(/.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64))) (fma.f64 N N (-.f64 N #s(literal -1 binary64))))","(/.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64))) (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)))","(/.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (/.f64 (exp.f64 (neg.f64 (log1p.f64 N))) (fma.f64 N N #s(literal -1 binary64)))) (fma.f64 N N #s(literal 1 binary64)))","(/.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)) (/.f64 (exp.f64 (neg.f64 (log1p.f64 N))) (fma.f64 N N #s(literal -1 binary64)))) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))))","(/.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64)))","(/.f64 (-.f64 (pow.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) #s(literal 2 binary64)) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -2 binary64))) (+.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64))))","(/.f64 (-.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) N) (fma.f64 N N #s(literal -1 binary64))) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 2 binary64)))","(/.f64 (neg.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64))) (neg.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))))","(/.f64 (-.f64 (pow.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) #s(literal 3 binary64)) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -3 binary64))) (+.f64 (pow.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) #s(literal 2 binary64)) (+.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -2 binary64)) (*.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64))))))","(/.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (-.f64 N #s(literal -1 binary64))) (-.f64 N #s(literal 1 binary64)))","(/.f64 (neg.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))) (neg.f64 (*.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))))))","(/.f64 (neg.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (neg.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N (-.f64 N #s(literal -1 binary64))))))","(/.f64 (neg.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) (neg.f64 (*.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (fma.f64 N N #s(literal 1 binary64)))))","(/.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N))) (neg.f64 (*.f64 #s(literal 1 binary64) (*.f64 (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))))))","(/.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N))) (neg.f64 (*.f64 (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))))","(/.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64)) (*.f64 (fma.f64 N N (-.f64 N #s(literal -1 binary64))) (fma.f64 N N #s(literal -1 binary64))))","(/.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal 1 binary64)) (*.f64 (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))))","(/.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64)) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))))","(/.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64)) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))))","(/.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (fma.f64 N N #s(literal 1 binary64))))","(/.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N (-.f64 N #s(literal -1 binary64)))))","(/.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)) (*.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N)))))","(/.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(/.f64 (-.f64 #s(literal 1 binary64) N) (neg.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)))))","(/.f64 (-.f64 #s(literal 1 binary64) N) (*.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) (*.f64 N N))))","(/.f64 (-.f64 #s(literal 1 binary64) N) (-.f64 #s(literal 1 binary64) (*.f64 N N)))","(/.f64 (/.f64 #s(literal -1 binary64) (-.f64 N #s(literal -1 binary64))) #s(literal -1 binary64))","(/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (neg.f64 (*.f64 #s(literal 1 binary64) (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))))))","(/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (*.f64 #s(literal 1 binary64) (*.f64 (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))))","(/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (*.f64 (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))))","(/.f64 (exp.f64 (neg.f64 (log1p.f64 N))) #s(literal 1 binary64))","(/.f64 (fma.f64 N N #s(literal -1 binary64)) (*.f64 #s(literal 1 binary64) (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))))","(/.f64 (fma.f64 N N #s(literal -1 binary64)) (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))))","(/.f64 #s(literal -1 binary64) (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)))","(/.f64 (-.f64 N #s(literal 1 binary64)) (neg.f64 (*.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) (*.f64 N N)))))","(/.f64 (-.f64 N #s(literal 1 binary64)) (neg.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N))))","(/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64)))","(/.f64 #s(literal 1 binary64) (neg.f64 (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64))))","(/.f64 #s(literal 1 binary64) (-.f64 N #s(literal -1 binary64)))","(neg.f64 (/.f64 #s(literal -1 binary64) (-.f64 N #s(literal -1 binary64))))","(fma.f64 (/.f64 N (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) (fma.f64 N N #s(literal 1 binary64)) (neg.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64))))","(fma.f64 (/.f64 N (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (neg.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64))))","(fma.f64 N (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)) (neg.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64))))","(-.f64 (/.f64 (pow.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) #s(literal 2 binary64)) (+.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)))) (/.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -2 binary64)) (+.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)))))","(-.f64 (/.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) N) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 2 binary64))) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 2 binary64))))","(-.f64 (/.f64 (pow.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) #s(literal 3 binary64)) (+.f64 (pow.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) #s(literal 2 binary64)) (+.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -2 binary64)) (*.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)))))) (/.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -3 binary64)) (+.f64 (pow.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) #s(literal 2 binary64)) (+.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -2 binary64)) (*.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)))))))","(-.f64 (/.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (fma.f64 N N #s(literal 1 binary64)))) (/.f64 #s(literal 1 binary64) (*.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (fma.f64 N N #s(literal 1 binary64)))))","(-.f64 (/.f64 (pow.f64 N #s(literal 3 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N (-.f64 N #s(literal -1 binary64))))) (/.f64 #s(literal 1 binary64) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N (-.f64 N #s(literal -1 binary64))))))","(-.f64 (/.f64 #s(literal 0 binary64) (*.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (/.f64 (-.f64 N #s(literal 1 binary64)) (*.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) (*.f64 N N)))))","(-.f64 (/.f64 #s(literal 1 binary64) (*.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (/.f64 N (*.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) (*.f64 N N)))))","(-.f64 (/.f64 #s(literal 0 binary64) (-.f64 #s(literal 1 binary64) (*.f64 N N))) (/.f64 #s(literal -1 binary64) (-.f64 N #s(literal -1 binary64))))","(-.f64 (/.f64 #s(literal 0 binary64) (*.f64 #s(literal 1 binary64) (*.f64 (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))))) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (*.f64 #s(literal 1 binary64) (*.f64 (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))))))","(-.f64 (/.f64 #s(literal 1 binary64) (*.f64 #s(literal 1 binary64) (*.f64 (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))))) (/.f64 (*.f64 N N) (*.f64 #s(literal 1 binary64) (*.f64 (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))))))","(-.f64 (/.f64 #s(literal 0 binary64) (*.f64 (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (/.f64 #s(literal -1 binary64) (-.f64 N #s(literal -1 binary64))))","(-.f64 (/.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) #s(literal 1 binary64)) (/.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64)))","(-.f64 (/.f64 (/.f64 (pow.f64 N #s(literal 4 binary64)) (fma.f64 N N #s(literal 1 binary64))) (*.f64 #s(literal 1 binary64) (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))))) (/.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 #s(literal 1 binary64) (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))))))","(-.f64 (/.f64 (*.f64 N N) (*.f64 #s(literal 1 binary64) (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))))) (/.f64 #s(literal 1 binary64) (*.f64 #s(literal 1 binary64) (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))))))","(-.f64 (/.f64 (/.f64 (pow.f64 N #s(literal 4 binary64)) (fma.f64 N N #s(literal 1 binary64))) (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (/.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))))","(-.f64 (/.f64 (*.f64 N N) (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (/.f64 (exp.f64 (neg.f64 (log1p.f64 N))) (fma.f64 N N #s(literal -1 binary64))))","(-.f64 (/.f64 (/.f64 (*.f64 N N) (-.f64 N #s(literal -1 binary64))) (neg.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (/.f64 (exp.f64 (neg.f64 (log1p.f64 N))) (neg.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)))))","(-.f64 (/.f64 (/.f64 (pow.f64 N #s(literal 3 binary64)) (fma.f64 N N (-.f64 N #s(literal -1 binary64)))) (neg.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (/.f64 (pow.f64 (fma.f64 N N (-.f64 N #s(literal -1 binary64))) #s(literal -1 binary64)) (neg.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)))))","(-.f64 (/.f64 N (neg.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)))","(-.f64 (/.f64 (/.f64 (*.f64 N N) (-.f64 N #s(literal -1 binary64))) (fma.f64 N N #s(literal -1 binary64))) (/.f64 (exp.f64 (neg.f64 (log1p.f64 N))) (fma.f64 N N #s(literal -1 binary64))))","(-.f64 (/.f64 (/.f64 (pow.f64 N #s(literal 3 binary64)) (fma.f64 N N (-.f64 N #s(literal -1 binary64)))) (fma.f64 N N #s(literal -1 binary64))) (/.f64 (pow.f64 (fma.f64 N N (-.f64 N #s(literal -1 binary64))) #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))))","(-.f64 (/.f64 #s(literal -1 binary64) (fma.f64 N N #s(literal -1 binary64))) (/.f64 N (-.f64 #s(literal 1 binary64) (*.f64 N N))))","(-.f64 (pow.f64 (*.f64 (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) #s(literal -1 binary64)) (/.f64 (*.f64 N N) (*.f64 (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))))","(-.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)))","(-.f64 #s(literal 0 binary64) (/.f64 (exp.f64 (neg.f64 (log1p.f64 N))) #s(literal -1 binary64)))","(exp.f64 (*.f64 (log1p.f64 N) #s(literal -1 binary64)))","(exp.f64 (neg.f64 (log1p.f64 N)))","(+.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) (neg.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64))))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)))","(*.f64 (pow.f64 (/.f64 (-.f64 N #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64)) (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (/.f64 (-.f64 N #s(literal -1 binary64)) (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))) #s(literal -1 binary64)) (pow.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) #s(literal -1 binary64)))","(*.f64 (pow.f64 (pow.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64)) (pow.f64 (fma.f64 N N (-.f64 N #s(literal -1 binary64))) #s(literal -1 binary64)))","(*.f64 (pow.f64 (/.f64 #s(literal -1 binary64) (fma.f64 N N #s(literal -1 binary64))) #s(literal -1 binary64)) (/.f64 #s(literal -1 binary64) (-.f64 N #s(literal -1 binary64))))","(*.f64 (pow.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1/2 binary64)) #s(literal -1 binary64)) (pow.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1/2 binary64)) #s(literal -1 binary64)))","(*.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64))) (fma.f64 N N (-.f64 #s(literal 1 binary64) N)))","(*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 N N (-.f64 N #s(literal -1 binary64))) #s(literal -1 binary64)))","(*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (/.f64 #s(literal -1 binary64) (-.f64 N #s(literal -1 binary64))))","(*.f64 (exp.f64 (neg.f64 (log1p.f64 N))) (fma.f64 N N #s(literal -1 binary64)))","(*.f64 (-.f64 N #s(literal -1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) (exp.f64 (neg.f64 (log1p.f64 N)))))","(*.f64 (-.f64 N #s(literal -1 binary64)) (/.f64 (-.f64 N #s(literal 1 binary64)) (-.f64 N #s(literal -1 binary64))))","(*.f64 (fma.f64 N N #s(literal -1 binary64)) (exp.f64 (neg.f64 (log1p.f64 N))))","(*.f64 #s(literal 1 binary64) (-.f64 N #s(literal 1 binary64)))","(pow.f64 (/.f64 (fma.f64 N N (-.f64 N #s(literal -1 binary64))) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64))","(pow.f64 (/.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64))","(pow.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal 2 binary64)) #s(literal 1/2 binary64))","(pow.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1/2 binary64)) #s(literal -2 binary64))","(pow.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64))","(pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))","(/.f64 (+.f64 #s(literal -1 binary64) (pow.f64 N #s(literal 3 binary64))) (+.f64 #s(literal 1 binary64) (-.f64 (*.f64 N N) (neg.f64 N))))","(/.f64 (neg.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (exp.f64 (neg.f64 (log1p.f64 N))))) (neg.f64 (fma.f64 N N #s(literal 1 binary64))))","(/.f64 (neg.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)) (exp.f64 (neg.f64 (log1p.f64 N))))) (neg.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N)))))","(/.f64 (neg.f64 (neg.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (neg.f64 (neg.f64 (fma.f64 N N (-.f64 N #s(literal -1 binary64))))))","(/.f64 (neg.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (neg.f64 (neg.f64 (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)))))","(/.f64 (neg.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64))) (neg.f64 (*.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 N #s(literal -1 binary64)))))","(/.f64 (neg.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64))) (neg.f64 (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (-.f64 N #s(literal -1 binary64)))))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (fma.f64 N N (-.f64 N #s(literal -1 binary64)))) (*.f64 (-.f64 N #s(literal -1 binary64)) (*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64))))) (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N (-.f64 N #s(literal -1 binary64)))))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64))) (*.f64 (-.f64 N #s(literal -1 binary64)) (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64))))) (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64))))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (fma.f64 N N #s(literal 1 binary64))) (*.f64 (-.f64 N #s(literal -1 binary64)) (*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (/.f64 (exp.f64 (neg.f64 (log1p.f64 N))) (fma.f64 N N #s(literal -1 binary64)))))) (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal 1 binary64))))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N)))) (*.f64 (-.f64 N #s(literal -1 binary64)) (*.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)) (/.f64 (exp.f64 (neg.f64 (log1p.f64 N))) (fma.f64 N N #s(literal -1 binary64)))))) (*.f64 (-.f64 N #s(literal -1 binary64)) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N)))))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (+.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)))) (*.f64 (-.f64 N #s(literal -1 binary64)) (-.f64 (pow.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) #s(literal 2 binary64)) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -2 binary64))))) (*.f64 (-.f64 N #s(literal -1 binary64)) (+.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)))))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 2 binary64))) (*.f64 (-.f64 N #s(literal -1 binary64)) (-.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) N) (fma.f64 N N #s(literal -1 binary64))))) (*.f64 (-.f64 N #s(literal -1 binary64)) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 2 binary64))))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (+.f64 (pow.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) #s(literal 2 binary64)) (+.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -2 binary64)) (*.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)))))) (*.f64 (-.f64 N #s(literal -1 binary64)) (-.f64 (pow.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) #s(literal 3 binary64)) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -3 binary64))))) (*.f64 (-.f64 N #s(literal -1 binary64)) (+.f64 (pow.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) #s(literal 2 binary64)) (+.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -2 binary64)) (*.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)))))))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (-.f64 N #s(literal 1 binary64))) (-.f64 N #s(literal 1 binary64))) (fma.f64 N N #s(literal -1 binary64)))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (neg.f64 (*.f64 (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))))) (*.f64 (-.f64 N #s(literal -1 binary64)) (neg.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N))))) (*.f64 (-.f64 N #s(literal -1 binary64)) (neg.f64 (*.f64 (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))))))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (*.f64 (fma.f64 N N (-.f64 N #s(literal -1 binary64))) (fma.f64 N N #s(literal -1 binary64)))) (*.f64 (-.f64 N #s(literal -1 binary64)) (*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64)))) (*.f64 (-.f64 N #s(literal -1 binary64)) (*.f64 (fma.f64 N N (-.f64 N #s(literal -1 binary64))) (fma.f64 N N #s(literal -1 binary64)))))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (*.f64 (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (*.f64 (-.f64 N #s(literal -1 binary64)) (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal 1 binary64)))) (*.f64 (-.f64 N #s(literal -1 binary64)) (*.f64 (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))))) (*.f64 (-.f64 N #s(literal -1 binary64)) (*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64)))) (*.f64 (-.f64 N #s(literal -1 binary64)) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))))))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))))) (*.f64 (-.f64 N #s(literal -1 binary64)) (*.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64)))) (*.f64 (-.f64 N #s(literal -1 binary64)) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))))))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (*.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (fma.f64 N N #s(literal 1 binary64)))) (*.f64 (-.f64 N #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)))) (*.f64 (-.f64 N #s(literal -1 binary64)) (*.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (fma.f64 N N #s(literal 1 binary64)))))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N (-.f64 N #s(literal -1 binary64))))) (*.f64 (-.f64 N #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (*.f64 (-.f64 N #s(literal -1 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N (-.f64 N #s(literal -1 binary64))))))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (*.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))))) (*.f64 (-.f64 N #s(literal -1 binary64)) (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)))) (*.f64 (-.f64 N #s(literal -1 binary64)) (*.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))))))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (*.f64 (-.f64 N #s(literal -1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (*.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (-.f64 #s(literal 1 binary64) (*.f64 N N))) (*.f64 (-.f64 N #s(literal -1 binary64)) (*.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) (*.f64 N N)))))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (-.f64 #s(literal 1 binary64) (*.f64 N N))) (-.f64 #s(literal 1 binary64) (*.f64 N N))) (*.f64 (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))))","(/.f64 (-.f64 (*.f64 N (neg.f64 N)) (*.f64 (-.f64 N #s(literal -1 binary64)) (/.f64 #s(literal -1 binary64) (-.f64 N #s(literal -1 binary64))))) (*.f64 (-.f64 N #s(literal -1 binary64)) #s(literal -1 binary64)))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (*.f64 #s(literal 1 binary64) (*.f64 (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))))) (*.f64 (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (*.f64 (-.f64 N #s(literal -1 binary64)) (*.f64 #s(literal 1 binary64) (*.f64 (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))))))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (*.f64 (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (*.f64 (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (*.f64 (-.f64 N #s(literal -1 binary64)) (*.f64 (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (*.f64 #s(literal 1 binary64) (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))))) (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (*.f64 (-.f64 N #s(literal -1 binary64)) (*.f64 #s(literal 1 binary64) (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))))))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (*.f64 (-.f64 N #s(literal -1 binary64)) (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64))) (*.f64 (-.f64 N #s(literal -1 binary64)) #s(literal -1 binary64))) (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64))))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (neg.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (fma.f64 N N #s(literal -1 binary64))) (*.f64 (-.f64 N #s(literal -1 binary64)) (neg.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)))))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (fma.f64 N N #s(literal -1 binary64))) (fma.f64 N N #s(literal -1 binary64))) (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (-.f64 N #s(literal -1 binary64))) (-.f64 N #s(literal -1 binary64))) (pow.f64 (-.f64 N #s(literal -1 binary64)) #s(literal 2 binary64)))","(/.f64 (-.f64 (*.f64 (pow.f64 N #s(literal 3 binary64)) (fma.f64 N N (-.f64 N #s(literal -1 binary64)))) (*.f64 (fma.f64 N N (-.f64 N #s(literal -1 binary64))) #s(literal 1 binary64))) (*.f64 (fma.f64 N N (-.f64 N #s(literal -1 binary64))) (fma.f64 N N (-.f64 N #s(literal -1 binary64)))))","(/.f64 (exp.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64)))) (-.f64 N #s(literal -1 binary64)))","(/.f64 (exp.f64 (log.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (exp.f64 (log1p.f64 (fma.f64 N N N))))","(/.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (exp.f64 (neg.f64 (log1p.f64 N)))) (fma.f64 N N #s(literal 1 binary64)))","(/.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)) (exp.f64 (neg.f64 (log1p.f64 N)))) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))))","(/.f64 (neg.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))) (neg.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))))))","(/.f64 (neg.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (neg.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) (neg.f64 N)))))","(/.f64 (neg.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (neg.f64 (fma.f64 N N (-.f64 N #s(literal -1 binary64)))))","(/.f64 (neg.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) (neg.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal 1 binary64)))))","(/.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N))) (neg.f64 (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64))))","(/.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64)) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 N #s(literal -1 binary64))))","(/.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64)) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (-.f64 N #s(literal -1 binary64))))","(/.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal 1 binary64))))","(/.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (fma.f64 N N (-.f64 #s(literal 1 binary64) (neg.f64 N))))","(/.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (fma.f64 N N (-.f64 N #s(literal -1 binary64))))","(/.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)) (*.f64 (-.f64 N #s(literal -1 binary64)) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N)))))","(/.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64))","(/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)))","(/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 N #s(literal -1 binary64)))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (fma.f64 N N (-.f64 N #s(literal -1 binary64))) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64))))","(/.f64 #s(literal -1 binary64) (neg.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))))","(/.f64 (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))","(/.f64 #s(literal 1 binary64) (neg.f64 (neg.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))))","(/.f64 #s(literal 1 binary64) (/.f64 (fma.f64 N N (-.f64 N #s(literal -1 binary64))) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))))","(/.f64 #s(literal 1 binary64) (/.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64)))","(/.f64 #s(literal 1 binary64) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(neg.f64 (-.f64 #s(literal 1 binary64) N))","(fma.f64 #s(literal 1 binary64) N #s(literal -1 binary64))","(fma.f64 N #s(literal 1 binary64) #s(literal -1 binary64))","(expm1.f64 (neg.f64 (*.f64 (log.f64 N) #s(literal -1 binary64))))","(expm1.f64 (*.f64 (log.f64 N) #s(literal 1 binary64)))","(-.f64 (/.f64 (/.f64 (*.f64 N N) (-.f64 N #s(literal -1 binary64))) #s(literal 1 binary64)) (exp.f64 (neg.f64 (log1p.f64 N))))","(-.f64 (/.f64 (/.f64 (pow.f64 N #s(literal 3 binary64)) (fma.f64 N N (-.f64 N #s(literal -1 binary64)))) #s(literal 1 binary64)) (/.f64 (pow.f64 (fma.f64 N N (-.f64 N #s(literal -1 binary64))) #s(literal -1 binary64)) #s(literal 1 binary64)))","(-.f64 (/.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal 1 binary64)))) (/.f64 #s(literal 1 binary64) (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal 1 binary64)))))","(-.f64 (/.f64 (pow.f64 N #s(literal 3 binary64)) (fma.f64 N N (-.f64 #s(literal 1 binary64) (neg.f64 N)))) (/.f64 #s(literal 1 binary64) (fma.f64 N N (-.f64 #s(literal 1 binary64) (neg.f64 N)))))","(-.f64 (/.f64 #s(literal 0 binary64) (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64))) (-.f64 #s(literal 1 binary64) N))","(-.f64 (/.f64 (/.f64 (pow.f64 N #s(literal 4 binary64)) (fma.f64 N N #s(literal 1 binary64))) (-.f64 N #s(literal -1 binary64))) (/.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (-.f64 N #s(literal -1 binary64))))","(-.f64 (/.f64 (*.f64 N N) (-.f64 N #s(literal -1 binary64))) (exp.f64 (neg.f64 (log1p.f64 N))))","(-.f64 (/.f64 (pow.f64 N #s(literal 3 binary64)) (fma.f64 N N (-.f64 N #s(literal -1 binary64)))) (pow.f64 (fma.f64 N N (-.f64 N #s(literal -1 binary64))) #s(literal -1 binary64)))","(-.f64 (/.f64 #s(literal -1 binary64) (-.f64 N #s(literal -1 binary64))) (/.f64 (*.f64 N N) (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64))))","(-.f64 N #s(literal 1 binary64))","(exp.f64 (neg.f64 (*.f64 (log.f64 (-.f64 N #s(literal 1 binary64))) #s(literal -1 binary64))))","(exp.f64 (*.f64 (*.f64 (log.f64 (-.f64 N #s(literal 1 binary64))) #s(literal -1 binary64)) #s(literal -1 binary64)))","(exp.f64 (*.f64 (log.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) #s(literal -1 binary64)))","(exp.f64 (log.f64 (-.f64 N #s(literal 1 binary64))))","(+.f64 #s(literal -1 binary64) N)","(+.f64 N #s(literal -1 binary64))","(*.f64 (pow.f64 N #s(literal -1/2 binary64)) (pow.f64 N #s(literal -1/2 binary64)))","(*.f64 (pow.f64 N #s(literal -1 binary64)) #s(literal 1 binary64))","(*.f64 #s(literal -1 binary64) (/.f64 #s(literal -1 binary64) N))","(*.f64 #s(literal 1 binary64) (pow.f64 N #s(literal -1 binary64)))","(pow.f64 (exp.f64 (log.f64 N)) #s(literal -1 binary64))","(pow.f64 (pow.f64 N #s(literal -1/2 binary64)) #s(literal 2 binary64))","(pow.f64 (neg.f64 (neg.f64 N)) #s(literal -1 binary64))","(pow.f64 (*.f64 N N) #s(literal -1/2 binary64))","(pow.f64 N #s(literal -1 binary64))","(/.f64 #s(literal -1 binary64) (neg.f64 (neg.f64 (neg.f64 N))))","(/.f64 #s(literal -1 binary64) (neg.f64 N))","(/.f64 #s(literal 1 binary64) (neg.f64 (neg.f64 N)))","(/.f64 #s(literal 1 binary64) N)","(neg.f64 (/.f64 #s(literal -1 binary64) N))","(exp.f64 (*.f64 (log.f64 N) #s(literal -1 binary64)))","(*.f64 (pow.f64 (-.f64 N #s(literal -1 binary64)) #s(literal 2 binary64)) (-.f64 N #s(literal 1 binary64)))","(*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))","(*.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 N #s(literal -1 binary64)))","(/.f64 (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) (*.f64 N N)) #s(literal 3 binary64)) (pow.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) #s(literal -1 binary64)) #s(literal 3 binary64))) (fma.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) (*.f64 N N)) (*.f64 (-.f64 N #s(literal -1 binary64)) (*.f64 N N)) (-.f64 (*.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) #s(literal -1 binary64)) (*.f64 (-.f64 N #s(literal -1 binary64)) #s(literal -1 binary64))) (*.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) (*.f64 N N)) (*.f64 (-.f64 N #s(literal -1 binary64)) #s(literal -1 binary64))))))","(/.f64 (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) #s(literal -1 binary64)) #s(literal 3 binary64)) (pow.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) (*.f64 N N)) #s(literal 3 binary64))) (fma.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) #s(literal -1 binary64)) (*.f64 (-.f64 N #s(literal -1 binary64)) #s(literal -1 binary64)) (-.f64 (*.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) (*.f64 N N)) (*.f64 (-.f64 N #s(literal -1 binary64)) (*.f64 N N))) (*.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) #s(literal -1 binary64)) (*.f64 (-.f64 N #s(literal -1 binary64)) (*.f64 N N))))))","(/.f64 (+.f64 (pow.f64 (*.f64 (*.f64 N N) (-.f64 N #s(literal -1 binary64))) #s(literal 3 binary64)) (pow.f64 (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)) #s(literal 3 binary64))) (fma.f64 (*.f64 (*.f64 N N) (-.f64 N #s(literal -1 binary64))) (*.f64 (*.f64 N N) (-.f64 N #s(literal -1 binary64))) (-.f64 (*.f64 (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)) (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64))) (*.f64 (*.f64 (*.f64 N N) (-.f64 N #s(literal -1 binary64))) (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64))))))","(/.f64 (+.f64 (pow.f64 (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)) #s(literal 3 binary64)) (pow.f64 (*.f64 (*.f64 N N) (-.f64 N #s(literal -1 binary64))) #s(literal 3 binary64))) (fma.f64 (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)) (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)) (-.f64 (*.f64 (*.f64 (*.f64 N N) (-.f64 N #s(literal -1 binary64))) (*.f64 (*.f64 N N) (-.f64 N #s(literal -1 binary64)))) (*.f64 (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)) (*.f64 (*.f64 N N) (-.f64 N #s(literal -1 binary64)))))))","(/.f64 (+.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 3 binary64)) (pow.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) N) #s(literal 3 binary64))) (+.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 2 binary64)) (-.f64 (pow.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) N) #s(literal 2 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) N)))))","(/.f64 (neg.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (-.f64 N #s(literal -1 binary64)))) (neg.f64 (fma.f64 N N #s(literal 1 binary64))))","(/.f64 (neg.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)) (-.f64 N #s(literal -1 binary64)))) (neg.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N)))))","(/.f64 (neg.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)))) (neg.f64 (fma.f64 N N #s(literal 1 binary64))))","(/.f64 (neg.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)))) (neg.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N)))))","(/.f64 (neg.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)))) (neg.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N))))","(/.f64 (neg.f64 (-.f64 (pow.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) N) #s(literal 2 binary64)) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 2 binary64)))) (neg.f64 (-.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) N) (fma.f64 N N #s(literal -1 binary64)))))","(/.f64 (neg.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) N) #s(literal 3 binary64)) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 3 binary64)))) (neg.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) N) #s(literal 2 binary64)) (-.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 2 binary64)) (*.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) N) (fma.f64 N N #s(literal -1 binary64)))))))","(/.f64 (neg.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)))) (neg.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64)))))","(/.f64 (neg.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)))) (neg.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))))))","(/.f64 (neg.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)))) (neg.f64 (*.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) (fma.f64 N N #s(literal 1 binary64)))))","(/.f64 (neg.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)) (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)))) (neg.f64 (*.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))))))","(/.f64 (neg.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (neg.f64 (*.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64)))))","(/.f64 (neg.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)))) (neg.f64 (*.f64 (fma.f64 N N #s(literal 1 binary64)) (fma.f64 N N (-.f64 #s(literal 1 binary64) N)))))","(/.f64 (neg.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (neg.f64 (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (-.f64 N #s(literal 1 binary64)))))","(/.f64 (neg.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)))) (neg.f64 (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (fma.f64 N N (-.f64 #s(literal 1 binary64) N)))))","(/.f64 (neg.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (neg.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N))))","(/.f64 (neg.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 2 binary64))) (-.f64 #s(literal 1 binary64) N))","(/.f64 (fma.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) N) (-.f64 N #s(literal 1 binary64)) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 N #s(literal 1 binary64))))) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64))))","(/.f64 (fma.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) N) (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)) (-.f64 N #s(literal 1 binary64))))) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (fma.f64 N N (-.f64 #s(literal 1 binary64) N))))","(/.f64 (fma.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) N) (*.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) (-.f64 N #s(literal -1 binary64))) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))))) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (*.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) (-.f64 N #s(literal -1 binary64)))))","(/.f64 (fma.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) N) (fma.f64 N N (-.f64 N #s(literal -1 binary64))) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))))) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (fma.f64 N N (-.f64 N #s(literal -1 binary64)))))","(/.f64 (fma.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) N) (-.f64 #s(literal -1 binary64) (*.f64 N N)) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64))))) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 #s(literal -1 binary64) (*.f64 N N))))","(/.f64 (fma.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) N) (+.f64 (pow.f64 N #s(literal 4 binary64)) (fma.f64 N N #s(literal 1 binary64))) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)))) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (+.f64 (pow.f64 N #s(literal 4 binary64)) (fma.f64 N N #s(literal 1 binary64)))))","(/.f64 (fma.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) N) (neg.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N)))) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (neg.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))))) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (neg.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))))))","(/.f64 (fma.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) N) (neg.f64 (fma.f64 N N #s(literal 1 binary64))) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (neg.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))))) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (neg.f64 (fma.f64 N N #s(literal 1 binary64)))))","(/.f64 (fma.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) N) (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N (-.f64 N #s(literal -1 binary64)))) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))))) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N (-.f64 N #s(literal -1 binary64))))))","(/.f64 (fma.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) N) (*.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) (fma.f64 N N (-.f64 N #s(literal -1 binary64)))) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))))) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (*.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) (fma.f64 N N (-.f64 N #s(literal -1 binary64))))))","(/.f64 (fma.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) N) (fma.f64 N N #s(literal 1 binary64)) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (*.f64 #s(literal 1 binary64) (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))))) (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64)))","(/.f64 (fma.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) N) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (*.f64 #s(literal 1 binary64) (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))))) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N)))))","(/.f64 (fma.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) N) (fma.f64 N N #s(literal 1 binary64)) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64)))) (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64)))","(/.f64 (fma.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) N) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (*.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64)))) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N)))))","(/.f64 (fma.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) N) (fma.f64 N N #s(literal -1 binary64)) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 2 binary64)))) (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)))","(/.f64 (fma.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) N) (fma.f64 N N #s(literal 1 binary64)) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)))) (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64)))","(/.f64 (fma.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) N) (+.f64 #s(literal 1 binary64) (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 N (neg.f64 N)))) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)))) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (+.f64 #s(literal 1 binary64) (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 N (neg.f64 N))))))","(/.f64 (fma.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) N) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)))) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N)))))","(/.f64 (fma.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) N) (-.f64 N #s(literal -1 binary64)) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))))) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 N #s(literal -1 binary64))))","(/.f64 (fma.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) N) (/.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) (*.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 1 binary64))) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (/.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)))))","(/.f64 (fma.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) N) (/.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))) (*.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 1 binary64))) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (/.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)))))","(/.f64 (fma.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)) N) (-.f64 N #s(literal 1 binary64)) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 N #s(literal 1 binary64))))) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (-.f64 N #s(literal 1 binary64))))","(/.f64 (fma.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)) N) (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)) (-.f64 N #s(literal 1 binary64))))) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (fma.f64 N N (-.f64 #s(literal 1 binary64) N))))","(/.f64 (fma.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)) N) (*.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) (-.f64 N #s(literal -1 binary64))) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))))) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) (-.f64 N #s(literal -1 binary64)))))","(/.f64 (fma.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)) N) (fma.f64 N N (-.f64 N #s(literal -1 binary64))) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 (-.f64 N #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))))) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (fma.f64 N N (-.f64 N #s(literal -1 binary64)))))","(/.f64 (fma.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)) N) (-.f64 #s(literal -1 binary64) (*.f64 N N)) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64))))) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (-.f64 #s(literal -1 binary64) (*.f64 N N))))","(/.f64 (fma.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)) N) (+.f64 (pow.f64 N #s(literal 4 binary64)) (fma.f64 N N #s(literal 1 binary64))) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)))) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (+.f64 (pow.f64 N #s(literal 4 binary64)) (fma.f64 N N #s(literal 1 binary64)))))","(/.f64 (fma.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)) N) (neg.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N)))) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (neg.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))))) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (neg.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))))))","(/.f64 (fma.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)) N) (neg.f64 (fma.f64 N N #s(literal 1 binary64))) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (neg.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))))) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (neg.f64 (fma.f64 N N #s(literal 1 binary64)))))","(/.f64 (fma.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)) N) (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N (-.f64 N #s(literal -1 binary64)))) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))))) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N (-.f64 N #s(literal -1 binary64))))))","(/.f64 (fma.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)) N) (*.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) (fma.f64 N N (-.f64 N #s(literal -1 binary64)))) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))))) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) (fma.f64 N N (-.f64 N #s(literal -1 binary64))))))","(/.f64 (fma.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)) N) (fma.f64 N N #s(literal 1 binary64)) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 #s(literal 1 binary64) (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))))) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (fma.f64 N N #s(literal 1 binary64))))","(/.f64 (fma.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)) N) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 #s(literal 1 binary64) (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))))) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N)))))","(/.f64 (fma.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)) N) (fma.f64 N N #s(literal 1 binary64)) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64)))) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (fma.f64 N N #s(literal 1 binary64))))","(/.f64 (fma.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)) N) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64)))) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N)))))","(/.f64 (fma.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)) N) (fma.f64 N N #s(literal -1 binary64)) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 2 binary64)))) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (fma.f64 N N #s(literal -1 binary64))))","(/.f64 (fma.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)) N) (fma.f64 N N #s(literal 1 binary64)) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)))) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (fma.f64 N N #s(literal 1 binary64))))","(/.f64 (fma.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)) N) (+.f64 #s(literal 1 binary64) (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 N (neg.f64 N)))) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)))) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (+.f64 #s(literal 1 binary64) (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 N (neg.f64 N))))))","(/.f64 (fma.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)) N) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)))) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N)))))","(/.f64 (fma.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)) N) (-.f64 N #s(literal -1 binary64)) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))))) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (-.f64 N #s(literal -1 binary64))))","(/.f64 (fma.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)) N) (/.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) #s(literal 1 binary64))) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (/.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)))))","(/.f64 (fma.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)) N) (/.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) #s(literal 1 binary64))) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (/.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)))))","(/.f64 (fma.f64 (*.f64 N (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) (-.f64 N #s(literal 1 binary64)) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 N #s(literal 1 binary64))))) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64))))","(/.f64 (fma.f64 (*.f64 N (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)) (-.f64 N #s(literal 1 binary64))))) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (fma.f64 N N (-.f64 #s(literal 1 binary64) N))))","(/.f64 (fma.f64 (*.f64 N (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) (*.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) (-.f64 N #s(literal -1 binary64))) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))))) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (*.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) (-.f64 N #s(literal -1 binary64)))))","(/.f64 (fma.f64 (*.f64 N (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) (fma.f64 N N (-.f64 N #s(literal -1 binary64))) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))))) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (fma.f64 N N (-.f64 N #s(literal -1 binary64)))))","(/.f64 (fma.f64 (*.f64 N (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) (-.f64 #s(literal -1 binary64) (*.f64 N N)) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64))))) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 #s(literal -1 binary64) (*.f64 N N))))","(/.f64 (fma.f64 (*.f64 N (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) (+.f64 (pow.f64 N #s(literal 4 binary64)) (fma.f64 N N #s(literal 1 binary64))) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)))) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (+.f64 (pow.f64 N #s(literal 4 binary64)) (fma.f64 N N #s(literal 1 binary64)))))","(/.f64 (fma.f64 (*.f64 N (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) (neg.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N)))) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (neg.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))))) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (neg.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))))))","(/.f64 (fma.f64 (*.f64 N (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) (neg.f64 (fma.f64 N N #s(literal 1 binary64))) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (neg.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))))) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (neg.f64 (fma.f64 N N #s(literal 1 binary64)))))","(/.f64 (fma.f64 (*.f64 N (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N (-.f64 N #s(literal -1 binary64)))) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))))) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N (-.f64 N #s(literal -1 binary64))))))","(/.f64 (fma.f64 (*.f64 N (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) (*.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) (fma.f64 N N (-.f64 N #s(literal -1 binary64)))) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))))) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (*.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) (fma.f64 N N (-.f64 N #s(literal -1 binary64))))))","(/.f64 (fma.f64 (*.f64 N (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) (fma.f64 N N #s(literal 1 binary64)) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (*.f64 #s(literal 1 binary64) (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))))) (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64)))","(/.f64 (fma.f64 (*.f64 N (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (*.f64 #s(literal 1 binary64) (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))))) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N)))))","(/.f64 (fma.f64 (*.f64 N (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) (fma.f64 N N #s(literal 1 binary64)) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64)))) (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64)))","(/.f64 (fma.f64 (*.f64 N (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (*.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64)))) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N)))))","(/.f64 (fma.f64 (*.f64 N (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) (fma.f64 N N #s(literal -1 binary64)) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 2 binary64)))) (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)))","(/.f64 (fma.f64 (*.f64 N (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) (fma.f64 N N #s(literal 1 binary64)) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)))) (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64)))","(/.f64 (fma.f64 (*.f64 N (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) (+.f64 #s(literal 1 binary64) (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 N (neg.f64 N)))) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)))) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (+.f64 #s(literal 1 binary64) (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 N (neg.f64 N))))))","(/.f64 (fma.f64 (*.f64 N (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)))) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N)))))","(/.f64 (fma.f64 (*.f64 N (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) (-.f64 N #s(literal -1 binary64)) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))))) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 N #s(literal -1 binary64))))","(/.f64 (fma.f64 (*.f64 N (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) (/.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) (*.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 1 binary64))) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (/.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)))))","(/.f64 (fma.f64 (*.f64 N (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) (/.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))) (*.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 1 binary64))) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (/.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)))))","(/.f64 (fma.f64 (*.f64 N (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))) (-.f64 N #s(literal 1 binary64)) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 N #s(literal 1 binary64))))) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (-.f64 N #s(literal 1 binary64))))","(/.f64 (fma.f64 (*.f64 N (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))) (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)) (-.f64 N #s(literal 1 binary64))))) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (fma.f64 N N (-.f64 #s(literal 1 binary64) N))))","(/.f64 (fma.f64 (*.f64 N (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))) (*.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) (-.f64 N #s(literal -1 binary64))) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))))) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) (-.f64 N #s(literal -1 binary64)))))","(/.f64 (fma.f64 (*.f64 N (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))) (fma.f64 N N (-.f64 N #s(literal -1 binary64))) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 (-.f64 N #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))))) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (fma.f64 N N (-.f64 N #s(literal -1 binary64)))))","(/.f64 (fma.f64 (*.f64 N (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))) (-.f64 #s(literal -1 binary64) (*.f64 N N)) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64))))) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (-.f64 #s(literal -1 binary64) (*.f64 N N))))","(/.f64 (fma.f64 (*.f64 N (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))) (+.f64 (pow.f64 N #s(literal 4 binary64)) (fma.f64 N N #s(literal 1 binary64))) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)))) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (+.f64 (pow.f64 N #s(literal 4 binary64)) (fma.f64 N N #s(literal 1 binary64)))))","(/.f64 (fma.f64 (*.f64 N (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))) (neg.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N)))) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (neg.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))))) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (neg.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))))))","(/.f64 (fma.f64 (*.f64 N (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))) (neg.f64 (fma.f64 N N #s(literal 1 binary64))) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (neg.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))))) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (neg.f64 (fma.f64 N N #s(literal 1 binary64)))))","(/.f64 (fma.f64 (*.f64 N (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))) (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N (-.f64 N #s(literal -1 binary64)))) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))))) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N (-.f64 N #s(literal -1 binary64))))))","(/.f64 (fma.f64 (*.f64 N (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))) (*.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) (fma.f64 N N (-.f64 N #s(literal -1 binary64)))) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))))) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) (fma.f64 N N (-.f64 N #s(literal -1 binary64))))))","(/.f64 (fma.f64 (*.f64 N (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))) (fma.f64 N N #s(literal 1 binary64)) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 #s(literal 1 binary64) (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))))) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (fma.f64 N N #s(literal 1 binary64))))","(/.f64 (fma.f64 (*.f64 N (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 #s(literal 1 binary64) (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))))) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N)))))","(/.f64 (fma.f64 (*.f64 N (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))) (fma.f64 N N #s(literal 1 binary64)) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64)))) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (fma.f64 N N #s(literal 1 binary64))))","(/.f64 (fma.f64 (*.f64 N (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64)))) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N)))))","(/.f64 (fma.f64 (*.f64 N (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))) (fma.f64 N N #s(literal -1 binary64)) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 2 binary64)))) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (fma.f64 N N #s(literal -1 binary64))))","(/.f64 (fma.f64 (*.f64 N (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))) (fma.f64 N N #s(literal 1 binary64)) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)))) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (fma.f64 N N #s(literal 1 binary64))))","(/.f64 (fma.f64 (*.f64 N (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))) (+.f64 #s(literal 1 binary64) (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 N (neg.f64 N)))) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)))) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (+.f64 #s(literal 1 binary64) (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 N (neg.f64 N))))))","(/.f64 (fma.f64 (*.f64 N (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)))) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N)))))","(/.f64 (fma.f64 (*.f64 N (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))) (-.f64 N #s(literal -1 binary64)) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))))) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (-.f64 N #s(literal -1 binary64))))","(/.f64 (fma.f64 (*.f64 N (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))) (/.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) #s(literal 1 binary64))) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (/.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)))))","(/.f64 (fma.f64 (*.f64 N (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))) (/.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) #s(literal 1 binary64))) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (/.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)))))","(/.f64 (fma.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 N #s(literal 1 binary64))) (fma.f64 N N #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) (*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) N))) (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64))))","(/.f64 (fma.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 N #s(literal 1 binary64))) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 (-.f64 N #s(literal 1 binary64)) (*.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)) N))) (*.f64 (-.f64 N #s(literal 1 binary64)) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N)))))","(/.f64 (fma.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 N #s(literal 1 binary64))) (fma.f64 N N #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) (*.f64 N (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))))) (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64))))","(/.f64 (fma.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 N #s(literal 1 binary64))) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 (-.f64 N #s(literal 1 binary64)) (*.f64 N (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))))) (*.f64 (-.f64 N #s(literal 1 binary64)) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N)))))","(/.f64 (fma.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)) (-.f64 N #s(literal 1 binary64))) (fma.f64 N N #s(literal 1 binary64)) (*.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) (*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) N))) (*.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) (fma.f64 N N #s(literal 1 binary64))))","(/.f64 (fma.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)) (-.f64 N #s(literal 1 binary64))) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) (*.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)) N))) (*.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N)))))","(/.f64 (fma.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)) (-.f64 N #s(literal 1 binary64))) (fma.f64 N N #s(literal 1 binary64)) (*.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) (*.f64 N (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))))) (*.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) (fma.f64 N N #s(literal 1 binary64))))","(/.f64 (fma.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)) (-.f64 N #s(literal 1 binary64))) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) (*.f64 N (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))))) (*.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N)))))","(/.f64 (fma.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (fma.f64 N N #s(literal 1 binary64)) (*.f64 (*.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) (-.f64 N #s(literal -1 binary64))) (*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) N))) (*.f64 (*.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) (-.f64 N #s(literal -1 binary64))) (fma.f64 N N #s(literal 1 binary64))))","(/.f64 (fma.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 (*.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) (-.f64 N #s(literal -1 binary64))) (*.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)) N))) (*.f64 (*.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) (-.f64 N #s(literal -1 binary64))) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N)))))","(/.f64 (fma.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (fma.f64 N N #s(literal 1 binary64)) (*.f64 (*.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) (-.f64 N #s(literal -1 binary64))) (*.f64 N (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))))) (*.f64 (*.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) (-.f64 N #s(literal -1 binary64))) (fma.f64 N N #s(literal 1 binary64))))","(/.f64 (fma.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 (*.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) (-.f64 N #s(literal -1 binary64))) (*.f64 N (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))))) (*.f64 (*.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) (-.f64 N #s(literal -1 binary64))) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N)))))","(/.f64 (fma.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (fma.f64 N N #s(literal 1 binary64)) (*.f64 (fma.f64 N N (-.f64 N #s(literal -1 binary64))) (*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) N))) (*.f64 (fma.f64 N N (-.f64 N #s(literal -1 binary64))) (fma.f64 N N #s(literal 1 binary64))))","(/.f64 (fma.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 (fma.f64 N N (-.f64 N #s(literal -1 binary64))) (*.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)) N))) (*.f64 (fma.f64 N N (-.f64 N #s(literal -1 binary64))) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N)))))","(/.f64 (fma.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (fma.f64 N N #s(literal 1 binary64)) (*.f64 (fma.f64 N N (-.f64 N #s(literal -1 binary64))) (*.f64 N (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))))) (*.f64 (fma.f64 N N (-.f64 N #s(literal -1 binary64))) (fma.f64 N N #s(literal 1 binary64))))","(/.f64 (fma.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 (fma.f64 N N (-.f64 N #s(literal -1 binary64))) (*.f64 N (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))))) (*.f64 (fma.f64 N N (-.f64 N #s(literal -1 binary64))) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N)))))","(/.f64 (fma.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64))) (fma.f64 N N #s(literal 1 binary64)) (*.f64 (-.f64 #s(literal -1 binary64) (*.f64 N N)) (*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) N))) (*.f64 (-.f64 #s(literal -1 binary64) (*.f64 N N)) (fma.f64 N N #s(literal 1 binary64))))","(/.f64 (fma.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64))) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 (-.f64 #s(literal -1 binary64) (*.f64 N N)) (*.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)) N))) (*.f64 (-.f64 #s(literal -1 binary64) (*.f64 N N)) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N)))))","(/.f64 (fma.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64))) (fma.f64 N N #s(literal 1 binary64)) (*.f64 (-.f64 #s(literal -1 binary64) (*.f64 N N)) (*.f64 N (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))))) (*.f64 (-.f64 #s(literal -1 binary64) (*.f64 N N)) (fma.f64 N N #s(literal 1 binary64))))","(/.f64 (fma.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64))) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 (-.f64 #s(literal -1 binary64) (*.f64 N N)) (*.f64 N (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))))) (*.f64 (-.f64 #s(literal -1 binary64) (*.f64 N N)) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N)))))","(/.f64 (fma.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64)) (*.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) (fma.f64 N N #s(literal 1 binary64))) (*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) N))) (*.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) (fma.f64 N N #s(literal 1 binary64))) (fma.f64 N N #s(literal 1 binary64))))","(/.f64 (fma.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) (fma.f64 N N #s(literal 1 binary64))) (*.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)) N))) (*.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) (fma.f64 N N #s(literal 1 binary64))) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N)))))","(/.f64 (fma.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64)) (*.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) (fma.f64 N N #s(literal 1 binary64))) (*.f64 N (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))))) (*.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) (fma.f64 N N #s(literal 1 binary64))) (fma.f64 N N #s(literal 1 binary64))))","(/.f64 (fma.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) (fma.f64 N N #s(literal 1 binary64))) (*.f64 N (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))))) (*.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) (fma.f64 N N #s(literal 1 binary64))) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N)))))","(/.f64 (fma.f64 (neg.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))) (fma.f64 N N #s(literal 1 binary64)) (*.f64 (neg.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N)))) (*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) N))) (*.f64 (neg.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N)))) (fma.f64 N N #s(literal 1 binary64))))","(/.f64 (fma.f64 (neg.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 (neg.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N)))) (*.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)) N))) (*.f64 (neg.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N)))) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N)))))","(/.f64 (fma.f64 (neg.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))) (fma.f64 N N #s(literal 1 binary64)) (*.f64 (neg.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N)))) (*.f64 N (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))))) (*.f64 (neg.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N)))) (fma.f64 N N #s(literal 1 binary64))))","(/.f64 (fma.f64 (neg.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 (neg.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N)))) (*.f64 N (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))))) (*.f64 (neg.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N)))) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N)))))","(/.f64 (fma.f64 (neg.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) (fma.f64 N N #s(literal 1 binary64)) (*.f64 (neg.f64 (fma.f64 N N #s(literal 1 binary64))) (*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) N))) (*.f64 (neg.f64 (fma.f64 N N #s(literal 1 binary64))) (fma.f64 N N #s(literal 1 binary64))))","(/.f64 (fma.f64 (neg.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 (neg.f64 (fma.f64 N N #s(literal 1 binary64))) (*.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)) N))) (*.f64 (neg.f64 (fma.f64 N N #s(literal 1 binary64))) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N)))))","(/.f64 (fma.f64 (neg.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) (fma.f64 N N #s(literal 1 binary64)) (*.f64 (neg.f64 (fma.f64 N N #s(literal 1 binary64))) (*.f64 N (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))))) (*.f64 (neg.f64 (fma.f64 N N #s(literal 1 binary64))) (fma.f64 N N #s(literal 1 binary64))))","(/.f64 (fma.f64 (neg.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 (neg.f64 (fma.f64 N N #s(literal 1 binary64))) (*.f64 N (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))))) (*.f64 (neg.f64 (fma.f64 N N #s(literal 1 binary64))) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N)))))","(/.f64 (fma.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (fma.f64 N N #s(literal 1 binary64)) (*.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N (-.f64 N #s(literal -1 binary64)))) (*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) N))) (*.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N (-.f64 N #s(literal -1 binary64)))) (fma.f64 N N #s(literal 1 binary64))))","(/.f64 (fma.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N (-.f64 N #s(literal -1 binary64)))) (*.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)) N))) (*.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N (-.f64 N #s(literal -1 binary64)))) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N)))))","(/.f64 (fma.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (fma.f64 N N #s(literal 1 binary64)) (*.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N (-.f64 N #s(literal -1 binary64)))) (*.f64 N (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))))) (*.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N (-.f64 N #s(literal -1 binary64)))) (fma.f64 N N #s(literal 1 binary64))))","(/.f64 (fma.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N (-.f64 N #s(literal -1 binary64)))) (*.f64 N (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))))) (*.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N (-.f64 N #s(literal -1 binary64)))) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N)))))","(/.f64 (fma.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (fma.f64 N N #s(literal 1 binary64)) (*.f64 (*.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) (fma.f64 N N (-.f64 N #s(literal -1 binary64)))) (*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) N))) (*.f64 (*.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) (fma.f64 N N (-.f64 N #s(literal -1 binary64)))) (fma.f64 N N #s(literal 1 binary64))))","(/.f64 (fma.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 (*.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) (fma.f64 N N (-.f64 N #s(literal -1 binary64)))) (*.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)) N))) (*.f64 (*.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) (fma.f64 N N (-.f64 N #s(literal -1 binary64)))) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N)))))","(/.f64 (fma.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (fma.f64 N N #s(literal 1 binary64)) (*.f64 (*.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) (fma.f64 N N (-.f64 N #s(literal -1 binary64)))) (*.f64 N (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))))) (*.f64 (*.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) (fma.f64 N N (-.f64 N #s(literal -1 binary64)))) (fma.f64 N N #s(literal 1 binary64))))","(/.f64 (fma.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 (*.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) (fma.f64 N N (-.f64 N #s(literal -1 binary64)))) (*.f64 N (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))))) (*.f64 (*.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) (fma.f64 N N (-.f64 N #s(literal -1 binary64)))) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N)))))","(/.f64 (fma.f64 (*.f64 #s(literal 1 binary64) (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) (fma.f64 N N #s(literal 1 binary64)) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) N))) (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64)))","(/.f64 (fma.f64 (*.f64 #s(literal 1 binary64) (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (*.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)) N))) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N)))))","(/.f64 (fma.f64 (*.f64 #s(literal 1 binary64) (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) (fma.f64 N N #s(literal 1 binary64)) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (*.f64 N (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))))) (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64)))","(/.f64 (fma.f64 (*.f64 #s(literal 1 binary64) (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (*.f64 N (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))))) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N)))))","(/.f64 (fma.f64 (*.f64 #s(literal 1 binary64) (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))) (fma.f64 N N #s(literal 1 binary64)) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) N))) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (fma.f64 N N #s(literal 1 binary64))))","(/.f64 (fma.f64 (*.f64 #s(literal 1 binary64) (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)) N))) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N)))))","(/.f64 (fma.f64 (*.f64 #s(literal 1 binary64) (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))) (fma.f64 N N #s(literal 1 binary64)) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 N (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))))) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (fma.f64 N N #s(literal 1 binary64))))","(/.f64 (fma.f64 (*.f64 #s(literal 1 binary64) (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 N (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))))) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N)))))","(/.f64 (fma.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64)) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) N))) (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64)))","(/.f64 (fma.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64)) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (*.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)) N))) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N)))))","(/.f64 (fma.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64)) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (*.f64 N (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))))) (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64)))","(/.f64 (fma.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64)) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (*.f64 N (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))))) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N)))))","(/.f64 (fma.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64)) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) N))) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (fma.f64 N N #s(literal 1 binary64))))","(/.f64 (fma.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64)) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)) N))) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N)))))","(/.f64 (fma.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64)) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 N (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))))) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (fma.f64 N N #s(literal 1 binary64))))","(/.f64 (fma.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64)) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 N (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))))) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N)))))","(/.f64 (fma.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 2 binary64)) (fma.f64 N N #s(literal 1 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) N))) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal 1 binary64))))","(/.f64 (fma.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 2 binary64)) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (*.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)) N))) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N)))))","(/.f64 (fma.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 2 binary64)) (fma.f64 N N #s(literal 1 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (*.f64 N (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))))) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal 1 binary64))))","(/.f64 (fma.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 2 binary64)) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (*.f64 N (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))))) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N)))))","(/.f64 (fma.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64)) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) N))) (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64)))","(/.f64 (fma.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (*.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)) N))) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N)))))","(/.f64 (fma.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64)) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (*.f64 N (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))))) (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64)))","(/.f64 (fma.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (*.f64 N (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))))) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N)))))","(/.f64 (fma.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)) (fma.f64 N N #s(literal 1 binary64)) (*.f64 (+.f64 #s(literal 1 binary64) (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 N (neg.f64 N)))) (*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) N))) (*.f64 (+.f64 #s(literal 1 binary64) (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 N (neg.f64 N)))) (fma.f64 N N #s(literal 1 binary64))))","(/.f64 (fma.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 (+.f64 #s(literal 1 binary64) (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 N (neg.f64 N)))) (*.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)) N))) (*.f64 (+.f64 #s(literal 1 binary64) (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 N (neg.f64 N)))) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N)))))","(/.f64 (fma.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)) (fma.f64 N N #s(literal 1 binary64)) (*.f64 (+.f64 #s(literal 1 binary64) (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 N (neg.f64 N)))) (*.f64 N (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))))) (*.f64 (+.f64 #s(literal 1 binary64) (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 N (neg.f64 N)))) (fma.f64 N N #s(literal 1 binary64))))","(/.f64 (fma.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 (+.f64 #s(literal 1 binary64) (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 N (neg.f64 N)))) (*.f64 N (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))))) (*.f64 (+.f64 #s(literal 1 binary64) (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 N (neg.f64 N)))) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N)))))","(/.f64 (fma.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)) (fma.f64 N N #s(literal 1 binary64)) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) N))) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (fma.f64 N N #s(literal 1 binary64))))","(/.f64 (fma.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)) N))) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N)))))","(/.f64 (fma.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)) (fma.f64 N N #s(literal 1 binary64)) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 N (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))))) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (fma.f64 N N #s(literal 1 binary64))))","(/.f64 (fma.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 N (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))))) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N)))))","(/.f64 (fma.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (fma.f64 N N #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal -1 binary64)) (*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) N))) (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal 1 binary64))))","(/.f64 (fma.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 (-.f64 N #s(literal -1 binary64)) (*.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)) N))) (*.f64 (-.f64 N #s(literal -1 binary64)) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N)))))","(/.f64 (fma.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (fma.f64 N N #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal -1 binary64)) (*.f64 N (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))))) (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal 1 binary64))))","(/.f64 (fma.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 (-.f64 N #s(literal -1 binary64)) (*.f64 N (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))))) (*.f64 (-.f64 N #s(literal -1 binary64)) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N)))))","(/.f64 (fma.f64 #s(literal 1 binary64) (fma.f64 N N #s(literal 1 binary64)) (*.f64 (/.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) (*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) N))) (*.f64 (/.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) (fma.f64 N N #s(literal 1 binary64))))","(/.f64 (fma.f64 #s(literal 1 binary64) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 (/.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) (*.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)) N))) (*.f64 (/.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N)))))","(/.f64 (fma.f64 #s(literal 1 binary64) (fma.f64 N N #s(literal 1 binary64)) (*.f64 (/.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) (*.f64 N (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))))) (*.f64 (/.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) (fma.f64 N N #s(literal 1 binary64))))","(/.f64 (fma.f64 #s(literal 1 binary64) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 (/.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) (*.f64 N (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))))) (*.f64 (/.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N)))))","(/.f64 (fma.f64 #s(literal 1 binary64) (fma.f64 N N #s(literal 1 binary64)) (*.f64 (/.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))) (*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) N))) (*.f64 (/.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))) (fma.f64 N N #s(literal 1 binary64))))","(/.f64 (fma.f64 #s(literal 1 binary64) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 (/.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))) (*.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)) N))) (*.f64 (/.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N)))))","(/.f64 (fma.f64 #s(literal 1 binary64) (fma.f64 N N #s(literal 1 binary64)) (*.f64 (/.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))) (*.f64 N (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))))) (*.f64 (/.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))) (fma.f64 N N #s(literal 1 binary64))))","(/.f64 (fma.f64 #s(literal 1 binary64) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (*.f64 (/.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))) (*.f64 N (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))))) (*.f64 (/.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N)))))","(/.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (fma.f64 N N (-.f64 #s(literal 1 binary64) N)))","(/.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (-.f64 N #s(literal -1 binary64))) (fma.f64 N N #s(literal 1 binary64)))","(/.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)) (-.f64 N #s(literal -1 binary64))) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))))","(/.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) (fma.f64 N N #s(literal 1 binary64)))","(/.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))))","(/.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64))) (fma.f64 N N (-.f64 #s(literal 1 binary64) N)))","(/.f64 (-.f64 (pow.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) N) #s(literal 2 binary64)) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 2 binary64))) (-.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) N) (fma.f64 N N #s(literal -1 binary64))))","(/.f64 (+.f64 (pow.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) N) #s(literal 3 binary64)) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 3 binary64))) (+.f64 (pow.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) N) #s(literal 2 binary64)) (-.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 2 binary64)) (*.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) N) (fma.f64 N N #s(literal -1 binary64))))))","(/.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64))))","(/.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))) (*.f64 (-.f64 N #s(literal 1 binary64)) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N)))))","(/.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) (*.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) (fma.f64 N N #s(literal 1 binary64))))","(/.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)) (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64))) (*.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N)))))","(/.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64))))","(/.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64))) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (fma.f64 N N (-.f64 #s(literal 1 binary64) N))))","(/.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (-.f64 N #s(literal 1 binary64))))","(/.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64))) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) (fma.f64 N N (-.f64 #s(literal 1 binary64) N))))","(/.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 2 binary64)) (-.f64 N #s(literal 1 binary64)))","(fma.f64 (pow.f64 (pow.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64)) (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) N))","(fma.f64 (pow.f64 (pow.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64)) (pow.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) #s(literal -1 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) N))","(fma.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) N))","(fma.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal -1 binary64)) (pow.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N (neg.f64 N))) #s(literal -1 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) N))","(fma.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) N) (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64)))","(fma.f64 (-.f64 N #s(literal -1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) N))","(fma.f64 (-.f64 N #s(literal -1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) N) (fma.f64 N N #s(literal -1 binary64)))","(fma.f64 (-.f64 N #s(literal -1 binary64)) (*.f64 N N) (*.f64 (-.f64 N #s(literal -1 binary64)) #s(literal -1 binary64)))","(fma.f64 (-.f64 N #s(literal -1 binary64)) #s(literal -1 binary64) (*.f64 (-.f64 N #s(literal -1 binary64)) (*.f64 N N)))","(fma.f64 (-.f64 N #s(literal -1 binary64)) (-.f64 N #s(literal 1 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) N))","(fma.f64 (*.f64 N N) (-.f64 N #s(literal -1 binary64)) (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)))","(fma.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64) (*.f64 (fma.f64 N N #s(literal -1 binary64)) N))","(fma.f64 (fma.f64 N N #s(literal -1 binary64)) N (fma.f64 N N #s(literal -1 binary64)))","(fma.f64 #s(literal -1 binary64) (-.f64 N #s(literal -1 binary64)) (*.f64 (*.f64 N N) (-.f64 N #s(literal -1 binary64))))","(fma.f64 (-.f64 N #s(literal 1 binary64)) (-.f64 N #s(literal -1 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) N))","(fma.f64 #s(literal 1 binary64) (fma.f64 N N #s(literal -1 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) N))","(fma.f64 N (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))","(-.f64 (/.f64 (pow.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) N) #s(literal 2 binary64)) (-.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) N) (fma.f64 N N #s(literal -1 binary64)))) (/.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 2 binary64)) (-.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) N) (fma.f64 N N #s(literal -1 binary64)))))","(+.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) (*.f64 N N)) (*.f64 (-.f64 N #s(literal -1 binary64)) #s(literal -1 binary64)))","(+.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) #s(literal -1 binary64)) (*.f64 (-.f64 N #s(literal -1 binary64)) (*.f64 N N)))","(+.f64 (*.f64 (*.f64 N N) (-.f64 N #s(literal -1 binary64))) (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)))","(+.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) N) (fma.f64 N N #s(literal -1 binary64)))","(+.f64 (fma.f64 #s(literal -1 binary64) N #s(literal -1 binary64)) (*.f64 (*.f64 N N) (-.f64 N #s(literal -1 binary64))))","(+.f64 (fma.f64 N N #s(literal -1 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) N))"]],"stop":[["iter limit",1],["node limit",1],["iter limit",1]],"time":247.75390625,"type":"rewrite"},{"compiler":[[31465,4877]],"memory":[[-6779488,101483680]],"time":212.650146484375,"type":"eval"},{"alts":[["(atan2.f64 #s(literal 1 binary64) (fma.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) #s(literal 1 binary64)))","fresh",0.41214755861065216,"binary64"],["(atan2.f64 #s(literal 1 binary64) (fma.f64 (/.f64 #s(literal 1 binary64) (/.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 N #s(literal -1 binary64))) (fma.f64 N N #s(literal -1 binary64)))) N #s(literal 1 binary64)))","done",0.40728383791597816,"binary64"],["(atan2.f64 #s(literal 1 binary64) (fma.f64 (/.f64 #s(literal 1 binary64) #s(approx (/ (- N 1) (+ (* N N) -1)) (/.f64 #s(literal 1 binary64) N))) N #s(literal 1 binary64)))","done",4.565637322478361,"binary64"],["(atan2.f64 #s(literal 1 binary64) (fma.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64)))","fresh",0.5056038574528623,"binary64"],["(atan2.f64 #s(literal 1 binary64) (fma.f64 (+.f64 #s(literal 1 binary64) N) N #s(literal 1 binary64)))","done",0.2109375,"binary64"],["(atan2.f64 #s(literal 1 binary64) (fma.f64 (*.f64 N (/.f64 #s(literal 1 binary64) (-.f64 N #s(literal 1 binary64)))) (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64)))","fresh",0.3565025879159782,"binary64"],["(atan2.f64 #s(literal 1 binary64) (/.f64 #s(literal 1 binary64) (/.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) (-.f64 #s(literal 1 binary64) (*.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 N (fma.f64 N N N)))))))","fresh",18.273260124967603,"binary64"],["(atan2.f64 #s(literal 1 binary64) (/.f64 #s(literal 1 binary64) #s(approx (/ (- 1 (+ (* N N) N)) (- 1 (pow (+ (* N N) N) 2))) (/.f64 (/.f64 #s(literal 1 binary64) N) N))))","fresh",4.630193096900726,"binary64"],["(atan2.f64 #s(literal 1 binary64) (+.f64 (fma.f64 N N #s(literal 1 binary64)) N))","done",0.228847509768442,"binary64"],["(atan2.f64 #s(literal 1 binary64) #s(approx (+ (+ (* N N) 1) N) (fma.f64 N N N)))","fresh",2.1924545334682572,"binary64"],["(atan2.f64 #s(literal 1 binary64) #s(approx (+ (+ (* N N) 1) N) (-.f64 N #s(literal -1 binary64))))","done",58.9780411009605,"binary64"],["(atan2.f64 #s(literal 1 binary64) #s(approx (+ (* (+ 1 N) N) 1) (*.f64 N N)))","fresh",4.495965423023124,"binary64"],["(atan2.f64 #s(literal 1 binary64) #s(approx (+ (* (+ 1 N) N) 1) #s(literal 1 binary64)))","done",59.97553665921092,"binary64"]],"compiler":[[544,158],[18,9],[20,10],[20,13],[17,10],[8,5],[15,9],[23,11],[27,15],[8,5],[14,9],[13,10],[13,9],[11,8]],"count":[[924,13]],"kept":[{"done":[3,3],"fresh":[8,5],"new":[908,2],"picked":[5,3]}],"memory":[[-1256448,42038288]],"min-error":[[0.09765625,"binary64"]],"time":27.10986328125,"type":"prune"},{"accuracy":[0.2109375],"baseline":[0.2109375],"branch":[["N",0.2109375,1,"binary64"],["(-.f64 (atan.f64 (+.f64 N #s(literal 1 binary64))) (atan.f64 N))",0.2109375,1,"binary64"]],"compiler":[[1,1],[7,6]],"count":[[32,1]],"inputs":[["(atan2.f64 #s(literal 1 binary64) #s(approx (+ (* (+ 1 N) N) 1) #s(literal 1 binary64)))","(atan2.f64 #s(literal 1 binary64) #s(approx (+ (* (+ 1 N) N) 1) (-.f64 N #s(literal -1 binary64))))","(atan2.f64 #s(literal 1 binary64) #s(approx (+ (+ (* N N) 1) N) (-.f64 N #s(literal -1 binary64))))","(atan2.f64 #s(literal 1 binary64) #s(approx (+ (* (+ 1 N) N) 1) (*.f64 N N)))","(atan2.f64 #s(literal 1 binary64) #s(approx (+ (* (+ 1 N) N) 1) (fma.f64 N N N)))","(atan2.f64 #s(literal 1 binary64) #s(approx (+ (+ (* N N) 1) N) (fma.f64 N N N)))","(atan2.f64 #s(literal 1 binary64) (+.f64 (fma.f64 N N #s(literal 1 binary64)) N))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (+.f64 #s(literal 1 binary64) N) N #s(literal 1 binary64)))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (/.f64 #s(literal 1 binary64) #s(approx (/ (- N 1) (+ (* N N) -1)) (/.f64 #s(literal 1 binary64) N))) N #s(literal 1 binary64)))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (*.f64 N (/.f64 #s(literal 1 binary64) (-.f64 N #s(literal 1 binary64)))) (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64)))","(atan2.f64 #s(literal 1 binary64) (/.f64 #s(literal 1 binary64) #s(approx (/ (- 1 (+ (* N N) N)) (- 1 (pow (+ (* N N) N) 2))) (/.f64 (/.f64 #s(literal 1 binary64) N) N))))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (/.f64 #s(literal 1 binary64) (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) N #s(literal 1 binary64)))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) (*.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) #s(literal 1 binary64)))","(atan2.f64 #s(literal 1 binary64) (/.f64 #s(literal 1 binary64) #s(approx (/ (- 1 (+ (* N N) N)) (- 1 (pow (+ (* N N) N) 2))) (/.f64 (/.f64 (-.f64 #s(literal 1 binary64) (/.f64 #s(literal 1 binary64) N)) N) N))))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (/.f64 #s(literal 1 binary64) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (+.f64 N #s(literal 1 binary64))))) N #s(literal 1 binary64)))","(atan2.f64 #s(literal 1 binary64) (/.f64 #s(literal 1 binary64) (/.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) (-.f64 #s(literal 1 binary64) (*.f64 (fma.f64 N N N) (fma.f64 N N N))))))","(atan2.f64 #s(literal 1 binary64) (/.f64 #s(literal 1 binary64) (/.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) (-.f64 #s(literal 1 binary64) (*.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 N (fma.f64 N N N)))))))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (/.f64 #s(literal 1 binary64) (/.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 N #s(literal -1 binary64))) (fma.f64 N N #s(literal -1 binary64)))) N #s(literal 1 binary64)))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (/.f64 #s(literal 1 binary64) (/.f64 (/.f64 #s(literal 1 binary64) (/.f64 (+.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (fma.f64 N N #s(literal -1 binary64)))) N #s(literal 1 binary64)))","(-.f64 (atan.f64 (+.f64 N #s(literal 1 binary64))) (atan.f64 N))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (*.f64 N (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64)))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) N #s(literal 1 binary64)))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (/.f64 #s(literal 1 binary64) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) N #s(literal 1 binary64)))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) N) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) #s(literal 1 binary64)))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) N) #s(literal 1 binary64)))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64)))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (/.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) N #s(literal 1 binary64)))","(atan2.f64 #s(literal 1 binary64) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64)))))","(atan2.f64 #s(literal 1 binary64) (/.f64 #s(literal 1 binary64) (/.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))))))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) N) (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64)))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (*.f64 (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)) N) #s(literal 1 binary64)))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (*.f64 (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)) (pow.f64 (pow.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64))) N #s(literal 1 binary64)))"]],"memory":[[1495024,9497008]],"oracle":[61.02772940768139],"outputs":[["(atan2.f64 #s(literal 1 binary64) (fma.f64 (+.f64 #s(literal 1 binary64) N) N #s(literal 1 binary64)))"]],"repr":["binary64"],"time":14.589111328125,"times":[[7.3310546875,"N"],[5.705078125,"(-.f64 (atan.f64 (+.f64 N #s(literal 1 binary64))) (atan.f64 N))"]],"type":"regimes"},{"accuracy":[0.228847509768442],"baseline":[0.228847509768442],"branch":[["N",0.228847509768442,1,"binary64"],["(-.f64 (atan.f64 (+.f64 N #s(literal 1 binary64))) (atan.f64 N))",0.228847509768442,1,"binary64"]],"compiler":[[1,1],[7,6]],"count":[[7,1]],"inputs":[["(atan2.f64 #s(literal 1 binary64) #s(approx (+ (* (+ 1 N) N) 1) #s(literal 1 binary64)))","(atan2.f64 #s(literal 1 binary64) #s(approx (+ (* (+ 1 N) N) 1) (-.f64 N #s(literal -1 binary64))))","(atan2.f64 #s(literal 1 binary64) #s(approx (+ (+ (* N N) 1) N) (-.f64 N #s(literal -1 binary64))))","(atan2.f64 #s(literal 1 binary64) #s(approx (+ (* (+ 1 N) N) 1) (*.f64 N N)))","(atan2.f64 #s(literal 1 binary64) #s(approx (+ (* (+ 1 N) N) 1) (fma.f64 N N N)))","(atan2.f64 #s(literal 1 binary64) #s(approx (+ (+ (* N N) 1) N) (fma.f64 N N N)))","(atan2.f64 #s(literal 1 binary64) (+.f64 (fma.f64 N N #s(literal 1 binary64)) N))"]],"memory":[[3982960,3982960]],"oracle":[59.97553665921092],"outputs":[["(atan2.f64 #s(literal 1 binary64) (+.f64 (fma.f64 N N #s(literal 1 binary64)) N))"]],"repr":["binary64"],"time":4.698974609375,"times":[[2.26806640625,"N"],[1.862060546875,"(-.f64 (atan.f64 (+.f64 N #s(literal 1 binary64))) (atan.f64 N))"]],"type":"regimes"},{"accuracy":[2.192454533468257],"baseline":[2.1924545334682572],"branch":[["N",2.192454533468257,1,"binary64"],["(-.f64 (atan.f64 (+.f64 N #s(literal 1 binary64))) (atan.f64 N))",2.1924545334682572,1,"binary64"]],"compiler":[[1,1],[7,6]],"count":[[6,1]],"inputs":[["(atan2.f64 #s(literal 1 binary64) #s(approx (+ (* (+ 1 N) N) 1) #s(literal 1 binary64)))","(atan2.f64 #s(literal 1 binary64) #s(approx (+ (* (+ 1 N) N) 1) (-.f64 N #s(literal -1 binary64))))","(atan2.f64 #s(literal 1 binary64) #s(approx (+ (+ (* N N) 1) N) (-.f64 N #s(literal -1 binary64))))","(atan2.f64 #s(literal 1 binary64) #s(approx (+ (* (+ 1 N) N) 1) (*.f64 N N)))","(atan2.f64 #s(literal 1 binary64) #s(approx (+ (* (+ 1 N) N) 1) (fma.f64 N N N)))","(atan2.f64 #s(literal 1 binary64) #s(approx (+ (+ (* N N) 1) N) (fma.f64 N N N)))"]],"memory":[[-4482048,3792208]],"oracle":[59.97553665921092],"outputs":[["(atan2.f64 #s(literal 1 binary64) #s(approx (+ (* (+ 1 N) N) 1) (fma.f64 N N N)))"]],"repr":["binary64"],"time":4.4990234375,"times":[[2.257080078125,"N"],[1.68798828125,"(-.f64 (atan.f64 (+.f64 N #s(literal 1 binary64))) (atan.f64 N))"]],"type":"regimes"},{"accuracy":[4.495965423023125],"baseline":[4.495965423023124],"branch":[["(-.f64 (atan.f64 (+.f64 N #s(literal 1 binary64))) (atan.f64 N))",4.495965423023125,1,"binary64"],["N",4.495965423023125,1,"binary64"]],"compiler":[[7,6],[1,1]],"count":[[4,1]],"inputs":[["(atan2.f64 #s(literal 1 binary64) #s(approx (+ (* (+ 1 N) N) 1) #s(literal 1 binary64)))","(atan2.f64 #s(literal 1 binary64) #s(approx (+ (* (+ 1 N) N) 1) (-.f64 N #s(literal -1 binary64))))","(atan2.f64 #s(literal 1 binary64) #s(approx (+ (+ (* N N) 1) N) (-.f64 N #s(literal -1 binary64))))","(atan2.f64 #s(literal 1 binary64) #s(approx (+ (* (+ 1 N) N) 1) (*.f64 N N)))"]],"memory":[[3374896,3374896]],"oracle":[59.97553665921092],"outputs":[["(atan2.f64 #s(literal 1 binary64) #s(approx (+ (* (+ 1 N) N) 1) (*.f64 N N)))"]],"repr":["binary64"],"time":3.719970703125,"times":[[1.43701171875,"(-.f64 (atan.f64 (+.f64 N #s(literal 1 binary64))) (atan.f64 N))"],[1.800048828125,"N"]],"type":"regimes"},{"accuracy":[58.9780411009605],"baseline":[58.9780411009605],"branch":[["N",58.97804110096053,1,"binary64"],["(-.f64 (atan.f64 (+.f64 N #s(literal 1 binary64))) (atan.f64 N))",58.9780411009605,1,"binary64"]],"compiler":[[1,1],[7,6]],"count":[[3,1]],"inputs":[["(atan2.f64 #s(literal 1 binary64) #s(approx (+ (* (+ 1 N) N) 1) #s(literal 1 binary64)))","(atan2.f64 #s(literal 1 binary64) #s(approx (+ (* (+ 1 N) N) 1) (-.f64 N #s(literal -1 binary64))))","(atan2.f64 #s(literal 1 binary64) #s(approx (+ (+ (* N N) 1) N) (-.f64 N #s(literal -1 binary64))))"]],"memory":[[3191088,3191088]],"oracle":[59.97553665921092],"outputs":[["(atan2.f64 #s(literal 1 binary64) #s(approx (+ (* (+ 1 N) N) 1) (-.f64 N #s(literal -1 binary64))))"]],"repr":["binary64"],"time":3.343017578125,"times":[[1.58203125,"N"],[1.251953125,"(-.f64 (atan.f64 (+.f64 N #s(literal 1 binary64))) (atan.f64 N))"]],"type":"regimes"},{"accuracy":[59.97553665921086],"baseline":[59.97553665921092],"branch":[["N",59.97553665921086,1,"binary64"],["(-.f64 (atan.f64 (+.f64 N #s(literal 1 binary64))) (atan.f64 N))",59.97553665921091,1,"binary64"]],"compiler":[[1,1],[7,6]],"count":[[1,1]],"inputs":[["(atan2.f64 #s(literal 1 binary64) #s(approx (+ (* (+ 1 N) N) 1) #s(literal 1 binary64)))"]],"link":["."],"memory":[[-5605056,2720608]],"name":["2atan (example 3.5)"],"oracle":[59.97553665921092],"outputs":[["(atan2.f64 #s(literal 1 binary64) #s(approx (+ (* (+ 1 N) N) 1) #s(literal 1 binary64)))"]],"repr":["binary64"],"time":2.702880859375,"times":[[1.06298828125,"N"],[1.10888671875,"(-.f64 (atan.f64 (+.f64 N #s(literal 1 binary64))) (atan.f64 N))"]],"type":"regimes"},{"egraph":[[6,68,67,0.000665996],[5,65,67,0.000842985],[4,62,67,0.000703551],[3,48,67,0.000576023],[2,39,67,0.000521078],[1,30,67,0.000491464],[0,23,67,0.000487423]],"inputs":[["(atan2.f64 #s(literal 1 binary64) (fma.f64 (+.f64 #s(literal 1 binary64) N) N #s(literal 1 binary64)))","(atan2.f64 #s(literal 1 binary64) (+.f64 (fma.f64 N N #s(literal 1 binary64)) N))","(atan2.f64 #s(literal 1 binary64) #s(approx (+ (* (+ 1 N) N) 1) (fma.f64 N N N)))","(atan2.f64 #s(literal 1 binary64) #s(approx (+ (* (+ 1 N) N) 1) (*.f64 N N)))","(atan2.f64 #s(literal 1 binary64) #s(approx (+ (* (+ 1 N) N) 1) (-.f64 N #s(literal -1 binary64))))","(atan2.f64 #s(literal 1 binary64) #s(approx (+ (* (+ 1 N) N) 1) #s(literal 1 binary64)))"]],"memory":[[5500496,5500496]],"method":["egg-herbie"],"outputs":[["(atan2.f64 #s(literal 1 binary64) (fma.f64 (+.f64 #s(literal 1 binary64) N) N #s(literal 1 binary64)))","(atan2.f64 #s(literal 1 binary64) (+.f64 (fma.f64 N N #s(literal 1 binary64)) N))","(atan2.f64 #s(literal 1 binary64) #s(approx (+ (* (+ 1 N) N) 1) (fma.f64 N N N)))","(atan2.f64 #s(literal 1 binary64) #s(approx (+ (* (+ 1 N) N) 1) (*.f64 N N)))","(atan2.f64 #s(literal 1 binary64) #s(approx (+ (* (+ 1 N) N) 1) (-.f64 N #s(literal -1 binary64))))","(atan2.f64 #s(literal 1 binary64) #s(approx (+ (* (+ 1 N) N) 1) #s(literal 1 binary64)))"]],"stop":[["saturated",1]],"time":14.1650390625,"type":"simplify"},{"compiler":[[67,24],[3,3],[15,8],[5,5],[15,8],[5,4],[15,8],[6,4],[15,8],[16,8],[15,8],[15,8]],"egraph":[[0,8410,17,0.067692453],[3,2796,17,0.033069553],[2,262,17,0.00767106],[1,37,17,0.001043278],[0,9,17,0.000664783],[0,5,17,8.2739e-5],[0,8376,16,0.063031333],[3,2885,16,0.03389656],[2,284,16,0.00821439],[1,44,16,0.001078052],[0,10,16,0.000630277],[0,6,16,8.9516e-5],[0,8117,51,0.061801049],[5,5464,57,0.02481468],[4,2415,57,0.021191226],[3,451,57,0.009097419],[2,117,57,0.001430514],[1,67,57,0.000475098],[0,25,61,0.000361587]],"memory":[[-10683248,5648368]],"stop":[["fuel",1],["iter limit",1],["node limit",1],["iter limit",1],["iter limit",1],["node limit",1],["iter limit",1],["iter limit",1],["node limit",1]],"time":1313.009033203125,"type":"soundness"},{"compiler":[[67,24],[67,24],[8,5],[8,5],[7,6],[7,6]],"memory":[[3336016,26910208]],"remove-preprocessing":[[],[],[],[],[],[],[]],"time":73.344970703125,"type":"preprocess"},{"memory":[[2000,2000]],"time":0.010009765625,"type":"end"}]