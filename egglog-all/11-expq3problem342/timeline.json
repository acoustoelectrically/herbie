[{"memory":[[52608,52608]],"time":0.092041015625,"type":"start"},{"compiler":[[52,27]],"memory":[[-579920,49182416]],"method":["search"],"sampling":[[12,{"invalid":0.209961568909735,"precondition":0.7460122308758788,"unknown":0.04402620021438625,"valid":0.0}],[11,{"invalid":0.20363667817471048,"precondition":0.7460122308758788,"unknown":0.05035109094941075,"valid":0.0}],[10,{"invalid":0.19693973504350806,"precondition":0.7460122308758788,"unknown":0.05704803408061317,"valid":0.0}],[9,{"invalid":0.17164017210341007,"precondition":0.7460122308758788,"unknown":0.08234759702071119,"valid":0.0}],[8,{"invalid":0.160726635148858,"precondition":0.7460122308758788,"unknown":0.09326113397526327,"valid":0.0}],[7,{"invalid":0.1468366790248826,"precondition":0.7460122308758788,"unknown":0.10715109009923865,"valid":0.0}],[6,{"invalid":0.0714340600661591,"precondition":0.7460122308758788,"unknown":0.18255370905796214,"valid":0.0}],[5,{"invalid":0.04762270671077273,"precondition":0.7460122308758788,"unknown":0.2063650624133485,"valid":0.0}],[4,{"invalid":0.031748471140515155,"precondition":0.7460122308758788,"unknown":0.2222392979836061,"valid":0.0}],[3,{"invalid":0.0,"precondition":0.7460122308758788,"unknown":0.25398776912412124,"valid":0.0}],[2,{"invalid":0.0,"precondition":0.7460122308758788,"unknown":0.25398776912412124,"valid":0.0}],[1,{"invalid":0.0,"precondition":0.7460122308758788,"unknown":0.25398776912412124,"valid":0.0}],[0,{"invalid":0.0,"precondition":0.7460122308758788,"unknown":0.25398776912412124,"valid":0.0}]],"time":258.511962890625,"type":"analyze"},{"bogosity":[{"invalid":0.24882095354792297,"precondition":0.7460122308758788,"valid":0.005166815576198281}],"memory":[[176159872,4767978432]],"mixsample":[[1252.323486328125,"ival-div",0],[812.634521484375,"ival-add",0],[1083.90234375,"ival-fabs",0],[3678.070068359375,"ival-mult",0],[1695.310791015625,"ival-expm1",0],[39.54736328125,"ival-assert",0],[527.823974609375,"ival-fmin",0],[324.761962890625,"ival-and",0],[1787.795654296875,"const",0],[90.744140625,"exact",0],[1099.40576171875,"ival-<=",0]],"outcomes":[[14134.97509765625,0,"invalid",62093],[1840.501708984375,0,"valid",8256]],"time":21525.024169921875,"type":"sample"},{"compiler":[[24,17],[101,19],[101,19]],"confusion":[[256,0,0,0]],"explanations":[["/.f64","(/.f64 (*.f64 eps (-.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) #s(literal 1 binary64))) (*.f64 (-.f64 (exp.f64 (*.f64 a eps)) #s(literal 1 binary64)) (-.f64 (exp.f64 (*.f64 b eps)) #s(literal 1 binary64))))","n/u",19,0,[["(*.f64 b eps)","underflow",145],["(-.f64 (exp.f64 (*.f64 a eps)) #s(literal 1 binary64))","underflow",147],["(-.f64 (exp.f64 (*.f64 b eps)) #s(literal 1 binary64))","underflow",145],["(*.f64 (-.f64 (exp.f64 (*.f64 a eps)) #s(literal 1 binary64)) (-.f64 (exp.f64 (*.f64 b eps)) #s(literal 1 binary64)))","underflow",233],["(*.f64 a eps)","underflow",147]],[[]]],["-.f64","(-.f64 (exp.f64 (*.f64 a eps)) #s(literal 1 binary64))","cancellation",109,0,[],[[2,1]]],["-.f64","(-.f64 (exp.f64 (*.f64 b eps)) #s(literal 1 binary64))","cancellation",111,0,[],[[2,2]]],["-.f64","(-.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) #s(literal 1 binary64))","cancellation",144,0,[],[[1,2]]],["/.f64","(/.f64 (*.f64 eps (-.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) #s(literal 1 binary64))) (*.f64 (-.f64 (exp.f64 (*.f64 a eps)) #s(literal 1 binary64)) (-.f64 (exp.f64 (*.f64 b eps)) #s(literal 1 binary64))))","u/u",214,0,[["(*.f64 eps (-.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) #s(literal 1 binary64)))","underflow",214],["(*.f64 (+.f64 a b) eps)","underflow",112],["(-.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) #s(literal 1 binary64))","underflow",112],["(*.f64 b eps)","underflow",145],["(-.f64 (exp.f64 (*.f64 a eps)) #s(literal 1 binary64))","underflow",147],["(-.f64 (exp.f64 (*.f64 b eps)) #s(literal 1 binary64))","underflow",145],["(*.f64 (-.f64 (exp.f64 (*.f64 a eps)) #s(literal 1 binary64)) (-.f64 (exp.f64 (*.f64 b eps)) #s(literal 1 binary64)))","underflow",233],["(*.f64 a eps)","underflow",147]],[[]]]],"fperrors":[["(-.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) #s(literal 1 binary64))",144,0,false,0,false],["(-.f64 (exp.f64 (*.f64 b eps)) #s(literal 1 binary64))",110,1,[-2.7652282189396592e-27,5.1484372107960306e-155,2.5178005035755604e-169],0,false],["(-.f64 (exp.f64 (*.f64 a eps)) #s(literal 1 binary64))",109,0,false,0,false],["(/.f64 (*.f64 eps (-.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) #s(literal 1 binary64))) (*.f64 (-.f64 (exp.f64 (*.f64 a eps)) #s(literal 1 binary64)) (-.f64 (exp.f64 (*.f64 b eps)) #s(literal 1 binary64))))",234,0,false,1,[2.315137637507186e-10,5.4741698537021043e-101,2.2707904511721494e-105]],["(+.f64 a b)",0,0,false,0,false],["(*.f64 b eps)",0,0,false,0,false],["(exp.f64 (*.f64 a eps))",0,0,false,0,false],["a",0,0,false,0,false],["#s(literal 1 binary64)",0,0,false,0,false],["(*.f64 a eps)",0,0,false,0,false],["(exp.f64 (*.f64 (+.f64 a b) eps))",0,0,false,0,false],["eps",0,0,false,0,false],["(*.f64 (-.f64 (exp.f64 (*.f64 a eps)) #s(literal 1 binary64)) (-.f64 (exp.f64 (*.f64 b eps)) #s(literal 1 binary64)))",0,0,false,0,false],["(*.f64 eps (-.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) #s(literal 1 binary64)))",0,0,false,0,false],["(*.f64 (+.f64 a b) eps)",0,0,false,0,false],["(exp.f64 (*.f64 b eps))",0,0,false,0,false],["b",0,0,false,0,false]],"freqs":[[4,53],[3,91],[1,112]],"maybe-confusion":[[256,0,0,0,0,0]],"memory":[[-3232448,115521680]],"mixsample":[[4.55224609375,"ival-div",0],[1.03759765625,"ival-true",0],[3.78271484375,"ival-add",0],[18.141357421875,"ival-exp",0],[20.442138671875,"ival-mult",0],[10.474365234375,"ival-expm1",0],[0.542724609375,"exact",0],[0.3349609375,"ival-assert",0]],"outcomes":[[92.87109375,0,"valid",512]],"time":284.56884765625,"total-confusion":[[1,0,0,0,0,0]],"type":"explain"},{"compiler":[[24,17]],"inputs":[["(/.f64 (*.f64 eps (-.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) #s(literal 1 binary64))) (*.f64 (-.f64 (exp.f64 (*.f64 a eps)) #s(literal 1 binary64)) (-.f64 (exp.f64 (*.f64 b eps)) #s(literal 1 binary64))))"]],"memory":[[-572368,23762144]],"method":["egg-herbie"],"outputs":[["(/.f64 (*.f64 eps (-.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) #s(literal 1 binary64))) (*.f64 (-.f64 (exp.f64 (*.f64 a eps)) #s(literal 1 binary64)) (-.f64 (exp.f64 (*.f64 b eps)) #s(literal 1 binary64))))","(/.f64 (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps))) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))))"]],"symmetry":[["(sort a b)"]],"time":437.09814453125,"type":"preprocess"},{"compiler":[[0,3]],"memory":[[53136,53136]],"time":0.140869140625,"type":"eval"},{"alts":[["(/.f64 (*.f64 eps (-.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) #s(literal 1 binary64))) (*.f64 (-.f64 (exp.f64 (*.f64 a eps)) #s(literal 1 binary64)) (-.f64 (exp.f64 (*.f64 b eps)) #s(literal 1 binary64))))","next",63.91998796705164,"binary64"]],"compiler":[[24,17]],"memory":[[326992,326992]],"time":0.635009765625,"type":"prune"},{"inputs":[["(/.f64 (*.f64 eps (-.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) #s(literal 1 binary64))) (*.f64 (-.f64 (exp.f64 (*.f64 a eps)) #s(literal 1 binary64)) (-.f64 (exp.f64 (*.f64 b eps)) #s(literal 1 binary64))))","(*.f64 eps (-.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) #s(literal 1 binary64)))","eps","(-.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) #s(literal 1 binary64))","(exp.f64 (*.f64 (+.f64 a b) eps))","(*.f64 (+.f64 a b) eps)","(+.f64 a b)","a","b","#s(literal 1 binary64)","(*.f64 (-.f64 (exp.f64 (*.f64 a eps)) #s(literal 1 binary64)) (-.f64 (exp.f64 (*.f64 b eps)) #s(literal 1 binary64)))","(-.f64 (exp.f64 (*.f64 a eps)) #s(literal 1 binary64))","(exp.f64 (*.f64 a eps))","(*.f64 a eps)","(-.f64 (exp.f64 (*.f64 b eps)) #s(literal 1 binary64))","(exp.f64 (*.f64 b eps))","(*.f64 b eps)"]],"locations":[["(/.f64 (*.f64 eps (-.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) #s(literal 1 binary64))) (*.f64 (-.f64 (exp.f64 (*.f64 a eps)) #s(literal 1 binary64)) (-.f64 (exp.f64 (*.f64 b eps)) #s(literal 1 binary64))))","cost-diff",0],["(-.f64 (exp.f64 (*.f64 b eps)) #s(literal 1 binary64))","cost-diff",2],["(-.f64 (exp.f64 (*.f64 a eps)) #s(literal 1 binary64))","cost-diff",2],["(-.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) #s(literal 1 binary64))","cost-diff",2]],"memory":[[1113296,10455504]],"method":["egg-herbie"],"outputs":[["(/.f64 (*.f64 eps (-.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) #s(literal 1 binary64))) (*.f64 (-.f64 (exp.f64 (*.f64 a eps)) #s(literal 1 binary64)) (-.f64 (exp.f64 (*.f64 b eps)) #s(literal 1 binary64))))","(/.f64 (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps))) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))))","(*.f64 eps (-.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) #s(literal 1 binary64)))","(*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps)))","eps","(-.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) #s(literal 1 binary64))","(expm1.f64 (*.f64 (+.f64 a b) eps))","(exp.f64 (*.f64 (+.f64 a b) eps))","(*.f64 (+.f64 a b) eps)","(+.f64 a b)","a","b","#s(literal 1 binary64)","(*.f64 (-.f64 (exp.f64 (*.f64 a eps)) #s(literal 1 binary64)) (-.f64 (exp.f64 (*.f64 b eps)) #s(literal 1 binary64)))","(*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))","(-.f64 (exp.f64 (*.f64 a eps)) #s(literal 1 binary64))","(expm1.f64 (*.f64 a eps))","(exp.f64 (*.f64 a eps))","(*.f64 a eps)","(-.f64 (exp.f64 (*.f64 b eps)) #s(literal 1 binary64))","(expm1.f64 (*.f64 b eps))","(exp.f64 (*.f64 b eps))","(*.f64 b eps)"]],"time":243.041015625,"type":"simplify"},{"compiler":[[101,19]],"locations":[["(-.f64 (exp.f64 (*.f64 a eps)) #s(literal 1 binary64))","accuracy",23.699781821474193],["(-.f64 (exp.f64 (*.f64 b eps)) #s(literal 1 binary64))","accuracy",24.96444415544346],["(-.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) #s(literal 1 binary64))","accuracy",31.88994878074638],["(/.f64 (*.f64 eps (-.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) #s(literal 1 binary64))) (*.f64 (-.f64 (exp.f64 (*.f64 a eps)) #s(literal 1 binary64)) (-.f64 (exp.f64 (*.f64 b eps)) #s(literal 1 binary64))))","accuracy",56.457110456795874]],"memory":[[2630432,18475232]],"mixsample":[[2.165771484375,"ival-div",0],[0.341552734375,"ival-true",0],[2.11572265625,"ival-add",0],[9.20068359375,"ival-exp",0],[10.427978515625,"ival-mult",0],[5.47021484375,"ival-expm1",0],[0.27685546875,"exact",0],[0.19970703125,"ival-assert",0]],"outcomes":[[46.1181640625,0,"valid",256]],"time":61.85205078125,"type":"localize"},{"count":[[4,44]],"inputs":[["(-.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) #s(literal 1 binary64))","(-.f64 (exp.f64 (*.f64 a eps)) #s(literal 1 binary64))","(-.f64 (exp.f64 (*.f64 b eps)) #s(literal 1 binary64))","(/.f64 (*.f64 eps (-.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) #s(literal 1 binary64))) (*.f64 (-.f64 (exp.f64 (*.f64 a eps)) #s(literal 1 binary64)) (-.f64 (exp.f64 (*.f64 b eps)) #s(literal 1 binary64))))"]],"memory":[[-618656,7016192]],"outputs":[["(- (exp (* b eps)) 1)","(- (+ (exp (* b eps)) (* a (* eps (exp (* b eps))))) 1)","(- (+ (exp (* b eps)) (* a (+ (* 1/2 (* a (* (pow eps 2) (exp (* b eps))))) (* eps (exp (* b eps)))))) 1)","(- (+ (exp (* b eps)) (* a (+ (* a (+ (* 1/6 (* a (* (pow eps 3) (exp (* b eps))))) (* 1/2 (* (pow eps 2) (exp (* b eps)))))) (* eps (exp (* b eps)))))) 1)","(* a eps)","(* a (+ eps (* 1/2 (* a (pow eps 2)))))","(* a (+ eps (* a (+ (* 1/6 (* a (pow eps 3))) (* 1/2 (pow eps 2))))))","(* a (+ eps (* a (+ (* 1/2 (pow eps 2)) (* a (+ (* 1/24 (* a (pow eps 4))) (* 1/6 (pow eps 3))))))))","(/ 1 a)","(/ (+ 1 (* a (- (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1)) (* 1/2 eps)))) a)","(/ (+ 1 (* a (- (+ (* a (- (* 1/2 (/ (* (pow eps 2) (exp (* b eps))) (- (exp (* b eps)) 1))) (+ (* 1/6 (pow eps 2)) (* 1/2 (* eps (- (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1)) (* 1/2 eps))))))) (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1))) (* 1/2 eps)))) a)","(/ (+ 1 (* a (- (+ (* a (- (+ (* 1/2 (/ (* (pow eps 2) (exp (* b eps))) (- (exp (* b eps)) 1))) (* a (- (* 1/6 (/ (* (pow eps 3) (exp (* b eps))) (- (exp (* b eps)) 1))) (+ (* 1/24 (pow eps 3)) (+ (* 1/6 (* (pow eps 2) (- (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1)) (* 1/2 eps)))) (* 1/2 (* eps (- (* 1/2 (/ (* (pow eps 2) (exp (* b eps))) (- (exp (* b eps)) 1))) (+ (* 1/6 (pow eps 2)) (* 1/2 (* eps (- (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1)) (* 1/2 eps))))))))))))) (+ (* 1/6 (pow eps 2)) (* 1/2 (* eps (- (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1)) (* 1/2 eps))))))) (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1))) (* 1/2 eps)))) a)","(- (exp (* eps (+ a b))) 1)","(- (exp (* a eps)) 1)","(/ (* eps (- (exp (* eps (+ a b))) 1)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)))","(- (exp (* eps (- b (* -1 a)))) 1)","(/ (* eps (- (exp (* eps (- b (* -1 a)))) 1)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)))","(- (+ (exp (* a eps)) (* b (* eps (exp (* a eps))))) 1)","(- (+ (exp (* a eps)) (* b (+ (* 1/2 (* b (* (pow eps 2) (exp (* a eps))))) (* eps (exp (* a eps)))))) 1)","(- (+ (exp (* a eps)) (* b (+ (* b (+ (* 1/6 (* b (* (pow eps 3) (exp (* a eps))))) (* 1/2 (* (pow eps 2) (exp (* a eps)))))) (* eps (exp (* a eps)))))) 1)","(* b eps)","(* b (+ eps (* 1/2 (* b (pow eps 2)))))","(* b (+ eps (* b (+ (* 1/6 (* b (pow eps 3))) (* 1/2 (pow eps 2))))))","(* b (+ eps (* b (+ (* 1/2 (pow eps 2)) (* b (+ (* 1/24 (* b (pow eps 4))) (* 1/6 (pow eps 3))))))))","(/ 1 b)","(/ (+ 1 (* b (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps)))) b)","(/ (+ 1 (* b (- (+ (* b (- (* 1/2 (/ (* (pow eps 2) (exp (* a eps))) (- (exp (* a eps)) 1))) (+ (* 1/6 (pow eps 2)) (* 1/2 (* eps (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps))))))) (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1))) (* 1/2 eps)))) b)","(/ (+ 1 (* b (- (+ (* b (- (+ (* 1/2 (/ (* (pow eps 2) (exp (* a eps))) (- (exp (* a eps)) 1))) (* b (- (* 1/6 (/ (* (pow eps 3) (exp (* a eps))) (- (exp (* a eps)) 1))) (+ (* 1/24 (pow eps 3)) (+ (* 1/6 (* (pow eps 2) (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps)))) (* 1/2 (* eps (- (* 1/2 (/ (* (pow eps 2) (exp (* a eps))) (- (exp (* a eps)) 1))) (+ (* 1/6 (pow eps 2)) (* 1/2 (* eps (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps))))))))))))) (+ (* 1/6 (pow eps 2)) (* 1/2 (* eps (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps))))))) (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1))) (* 1/2 eps)))) b)","(- (exp (* eps (- a (* -1 b)))) 1)","(/ (* eps (- (exp (* eps (- a (* -1 b)))) 1)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)))","(* eps (+ a b))","(* eps (+ a (+ b (* 1/2 (* eps (pow (+ a b) 2))))))","(* eps (+ a (+ b (* eps (+ (* 1/6 (* eps (pow (+ a b) 3))) (* 1/2 (pow (+ a b) 2)))))))","(* eps (+ a (+ b (* eps (+ (* 1/2 (pow (+ a b) 2)) (* eps (+ (* 1/24 (* eps (pow (+ a b) 4))) (* 1/6 (pow (+ a b) 3)))))))))","(* eps (+ a (* 1/2 (* (pow a 2) eps))))","(* eps (+ a (* eps (+ (* 1/6 (* (pow a 3) eps)) (* 1/2 (pow a 2))))))","(* eps (+ a (* eps (+ (* 1/2 (pow a 2)) (* eps (+ (* 1/24 (* (pow a 4) eps)) (* 1/6 (pow a 3))))))))","(* eps (+ b (* 1/2 (* (pow b 2) eps))))","(* eps (+ b (* eps (+ (* 1/6 (* (pow b 3) eps)) (* 1/2 (pow b 2))))))","(* eps (+ b (* eps (+ (* 1/2 (pow b 2)) (* eps (+ (* 1/24 (* (pow b 4) eps)) (* 1/6 (pow b 3))))))))","(/ (+ a b) (* a b))","(+ (* eps (- (* 1/2 (/ (pow (+ a b) 2) (* a b))) (/ (* (+ a b) (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b)))) (* (pow a 2) (pow b 2))))) (+ (/ 1 a) (/ 1 b)))","(+ (* eps (- (+ (* 1/2 (/ (pow (+ a b) 2) (* a b))) (* eps (- (* 1/6 (/ (pow (+ a b) 3) (* a b))) (+ (/ (* (+ a b) (+ (* 1/6 (* a (pow b 3))) (+ (* 1/6 (* (pow a 3) b)) (* 1/4 (* (pow a 2) (pow b 2)))))) (* (pow a 2) (pow b 2))) (/ (* (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b))) (- (* 1/2 (/ (pow (+ a b) 2) (* a b))) (/ (* (+ a b) (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b)))) (* (pow a 2) (pow b 2))))) (* a b)))))) (/ (* (+ a b) (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b)))) (* (pow a 2) (pow b 2))))) (+ (/ 1 a) (/ 1 b)))","(+ (* eps (- (+ (* 1/2 (/ (pow (+ a b) 2) (* a b))) (* eps (- (+ (* 1/6 (/ (pow (+ a b) 3) (* a b))) (* eps (- (* 1/24 (/ (pow (+ a b) 4) (* a b))) (+ (/ (* (+ a b) (+ (* 1/24 (* a (pow b 4))) (+ (* 1/24 (* (pow a 4) b)) (+ (* 1/12 (* (pow a 2) (pow b 3))) (* 1/12 (* (pow a 3) (pow b 2))))))) (* (pow a 2) (pow b 2))) (+ (/ (* (+ (* 1/6 (* a (pow b 3))) (+ (* 1/6 (* (pow a 3) b)) (* 1/4 (* (pow a 2) (pow b 2))))) (- (* 1/2 (/ (pow (+ a b) 2) (* a b))) (/ (* (+ a b) (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b)))) (* (pow a 2) (pow b 2))))) (* a b)) (/ (* (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b))) (- (* 1/6 (/ (pow (+ a b) 3) (* a b))) (+ (/ (* (+ a b) (+ (* 1/6 (* a (pow b 3))) (+ (* 1/6 (* (pow a 3) b)) (* 1/4 (* (pow a 2) (pow b 2)))))) (* (pow a 2) (pow b 2))) (/ (* (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b))) (- (* 1/2 (/ (pow (+ a b) 2) (* a b))) (/ (* (+ a b) (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b)))) (* (pow a 2) (pow b 2))))) (* a b))))) (* a b))))))) (+ (/ (* (+ a b) (+ (* 1/6 (* a (pow b 3))) (+ (* 1/6 (* (pow a 3) b)) (* 1/4 (* (pow a 2) (pow b 2)))))) (* (pow a 2) (pow b 2))) (/ (* (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b))) (- (* 1/2 (/ (pow (+ a b) 2) (* a b))) (/ (* (+ a b) (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b)))) (* (pow a 2) (pow b 2))))) (* a b)))))) (/ (* (+ a b) (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b)))) (* (pow a 2) (pow b 2))))) (+ (/ 1 a) (/ 1 b)))"]],"series":[[2.48486328125,"((- (exp (* (+ a b) eps)) 1) (- (exp (* a eps)) 1) (- (exp (* b eps)) 1) (/ (* eps (- (exp (* (+ a b) eps)) 1)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))))","eps","-inf"],[1.822021484375,"((- (exp (* (+ a b) eps)) 1) (- (exp (* a eps)) 1) (- (exp (* b eps)) 1) (/ (* eps (- (exp (* (+ a b) eps)) 1)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))))","eps","inf"],[4.002197265625,"((- (exp (* (+ a b) eps)) 1) (- (exp (* a eps)) 1) (- (exp (* b eps)) 1) (/ (* eps (- (exp (* (+ a b) eps)) 1)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))))","eps","0"],[5.154052734375,"((- (exp (* (+ a b) eps)) 1) (- (exp (* a eps)) 1) (- (exp (* b eps)) 1) (/ (* eps (- (exp (* (+ a b) eps)) 1)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))))","b","-inf"],[2.18701171875,"((- (exp (* (+ a b) eps)) 1) (- (exp (* a eps)) 1) (- (exp (* b eps)) 1) (/ (* eps (- (exp (* (+ a b) eps)) 1)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))))","b","inf"],[2.383056640625,"((- (exp (* (+ a b) eps)) 1) (- (exp (* a eps)) 1) (- (exp (* b eps)) 1) (/ (* eps (- (exp (* (+ a b) eps)) 1)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))))","b","0"],[2.6669921875,"((- (exp (* (+ a b) eps)) 1) (- (exp (* a eps)) 1) (- (exp (* b eps)) 1) (/ (* eps (- (exp (* (+ a b) eps)) 1)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))))","a","-inf"],[2.364013671875,"((- (exp (* (+ a b) eps)) 1) (- (exp (* a eps)) 1) (- (exp (* b eps)) 1) (/ (* eps (- (exp (* (+ a b) eps)) 1)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))))","a","inf"],[2.698974609375,"((- (exp (* (+ a b) eps)) 1) (- (exp (* a eps)) 1) (- (exp (* b eps)) 1) (/ (* eps (- (exp (* (+ a b) eps)) 1)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))))","a","0"]],"time":27.5439453125,"type":"series"},{"count":[[44,0]],"inputs":[["(- (exp (* b eps)) 1)","(- (+ (exp (* b eps)) (* a (* eps (exp (* b eps))))) 1)","(- (+ (exp (* b eps)) (* a (+ (* 1/2 (* a (* (pow eps 2) (exp (* b eps))))) (* eps (exp (* b eps)))))) 1)","(- (+ (exp (* b eps)) (* a (+ (* a (+ (* 1/6 (* a (* (pow eps 3) (exp (* b eps))))) (* 1/2 (* (pow eps 2) (exp (* b eps)))))) (* eps (exp (* b eps)))))) 1)","(* a eps)","(* a (+ eps (* 1/2 (* a (pow eps 2)))))","(* a (+ eps (* a (+ (* 1/6 (* a (pow eps 3))) (* 1/2 (pow eps 2))))))","(* a (+ eps (* a (+ (* 1/2 (pow eps 2)) (* a (+ (* 1/24 (* a (pow eps 4))) (* 1/6 (pow eps 3))))))))","(/ 1 a)","(/ (+ 1 (* a (- (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1)) (* 1/2 eps)))) a)","(/ (+ 1 (* a (- (+ (* a (- (* 1/2 (/ (* (pow eps 2) (exp (* b eps))) (- (exp (* b eps)) 1))) (+ (* 1/6 (pow eps 2)) (* 1/2 (* eps (- (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1)) (* 1/2 eps))))))) (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1))) (* 1/2 eps)))) a)","(/ (+ 1 (* a (- (+ (* a (- (+ (* 1/2 (/ (* (pow eps 2) (exp (* b eps))) (- (exp (* b eps)) 1))) (* a (- (* 1/6 (/ (* (pow eps 3) (exp (* b eps))) (- (exp (* b eps)) 1))) (+ (* 1/24 (pow eps 3)) (+ (* 1/6 (* (pow eps 2) (- (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1)) (* 1/2 eps)))) (* 1/2 (* eps (- (* 1/2 (/ (* (pow eps 2) (exp (* b eps))) (- (exp (* b eps)) 1))) (+ (* 1/6 (pow eps 2)) (* 1/2 (* eps (- (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1)) (* 1/2 eps))))))))))))) (+ (* 1/6 (pow eps 2)) (* 1/2 (* eps (- (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1)) (* 1/2 eps))))))) (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1))) (* 1/2 eps)))) a)","(- (exp (* eps (+ a b))) 1)","(- (exp (* a eps)) 1)","(/ (* eps (- (exp (* eps (+ a b))) 1)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)))","(- (exp (* eps (- b (* -1 a)))) 1)","(/ (* eps (- (exp (* eps (- b (* -1 a)))) 1)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)))","(- (+ (exp (* a eps)) (* b (* eps (exp (* a eps))))) 1)","(- (+ (exp (* a eps)) (* b (+ (* 1/2 (* b (* (pow eps 2) (exp (* a eps))))) (* eps (exp (* a eps)))))) 1)","(- (+ (exp (* a eps)) (* b (+ (* b (+ (* 1/6 (* b (* (pow eps 3) (exp (* a eps))))) (* 1/2 (* (pow eps 2) (exp (* a eps)))))) (* eps (exp (* a eps)))))) 1)","(* b eps)","(* b (+ eps (* 1/2 (* b (pow eps 2)))))","(* b (+ eps (* b (+ (* 1/6 (* b (pow eps 3))) (* 1/2 (pow eps 2))))))","(* b (+ eps (* b (+ (* 1/2 (pow eps 2)) (* b (+ (* 1/24 (* b (pow eps 4))) (* 1/6 (pow eps 3))))))))","(/ 1 b)","(/ (+ 1 (* b (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps)))) b)","(/ (+ 1 (* b (- (+ (* b (- (* 1/2 (/ (* (pow eps 2) (exp (* a eps))) (- (exp (* a eps)) 1))) (+ (* 1/6 (pow eps 2)) (* 1/2 (* eps (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps))))))) (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1))) (* 1/2 eps)))) b)","(/ (+ 1 (* b (- (+ (* b (- (+ (* 1/2 (/ (* (pow eps 2) (exp (* a eps))) (- (exp (* a eps)) 1))) (* b (- (* 1/6 (/ (* (pow eps 3) (exp (* a eps))) (- (exp (* a eps)) 1))) (+ (* 1/24 (pow eps 3)) (+ (* 1/6 (* (pow eps 2) (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps)))) (* 1/2 (* eps (- (* 1/2 (/ (* (pow eps 2) (exp (* a eps))) (- (exp (* a eps)) 1))) (+ (* 1/6 (pow eps 2)) (* 1/2 (* eps (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps))))))))))))) (+ (* 1/6 (pow eps 2)) (* 1/2 (* eps (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps))))))) (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1))) (* 1/2 eps)))) b)","(- (exp (* eps (- a (* -1 b)))) 1)","(/ (* eps (- (exp (* eps (- a (* -1 b)))) 1)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)))","(* eps (+ a b))","(* eps (+ a (+ b (* 1/2 (* eps (pow (+ a b) 2))))))","(* eps (+ a (+ b (* eps (+ (* 1/6 (* eps (pow (+ a b) 3))) (* 1/2 (pow (+ a b) 2)))))))","(* eps (+ a (+ b (* eps (+ (* 1/2 (pow (+ a b) 2)) (* eps (+ (* 1/24 (* eps (pow (+ a b) 4))) (* 1/6 (pow (+ a b) 3)))))))))","(* eps (+ a (* 1/2 (* (pow a 2) eps))))","(* eps (+ a (* eps (+ (* 1/6 (* (pow a 3) eps)) (* 1/2 (pow a 2))))))","(* eps (+ a (* eps (+ (* 1/2 (pow a 2)) (* eps (+ (* 1/24 (* (pow a 4) eps)) (* 1/6 (pow a 3))))))))","(* eps (+ b (* 1/2 (* (pow b 2) eps))))","(* eps (+ b (* eps (+ (* 1/6 (* (pow b 3) eps)) (* 1/2 (pow b 2))))))","(* eps (+ b (* eps (+ (* 1/2 (pow b 2)) (* eps (+ (* 1/24 (* (pow b 4) eps)) (* 1/6 (pow b 3))))))))","(/ (+ a b) (* a b))","(+ (* eps (- (* 1/2 (/ (pow (+ a b) 2) (* a b))) (/ (* (+ a b) (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b)))) (* (pow a 2) (pow b 2))))) (+ (/ 1 a) (/ 1 b)))","(+ (* eps (- (+ (* 1/2 (/ (pow (+ a b) 2) (* a b))) (* eps (- (* 1/6 (/ (pow (+ a b) 3) (* a b))) (+ (/ (* (+ a b) (+ (* 1/6 (* a (pow b 3))) (+ (* 1/6 (* (pow a 3) b)) (* 1/4 (* (pow a 2) (pow b 2)))))) (* (pow a 2) (pow b 2))) (/ (* (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b))) (- (* 1/2 (/ (pow (+ a b) 2) (* a b))) (/ (* (+ a b) (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b)))) (* (pow a 2) (pow b 2))))) (* a b)))))) (/ (* (+ a b) (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b)))) (* (pow a 2) (pow b 2))))) (+ (/ 1 a) (/ 1 b)))","(+ (* eps (- (+ (* 1/2 (/ (pow (+ a b) 2) (* a b))) (* eps (- (+ (* 1/6 (/ (pow (+ a b) 3) (* a b))) (* eps (- (* 1/24 (/ (pow (+ a b) 4) (* a b))) (+ (/ (* (+ a b) (+ (* 1/24 (* a (pow b 4))) (+ (* 1/24 (* (pow a 4) b)) (+ (* 1/12 (* (pow a 2) (pow b 3))) (* 1/12 (* (pow a 3) (pow b 2))))))) (* (pow a 2) (pow b 2))) (+ (/ (* (+ (* 1/6 (* a (pow b 3))) (+ (* 1/6 (* (pow a 3) b)) (* 1/4 (* (pow a 2) (pow b 2))))) (- (* 1/2 (/ (pow (+ a b) 2) (* a b))) (/ (* (+ a b) (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b)))) (* (pow a 2) (pow b 2))))) (* a b)) (/ (* (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b))) (- (* 1/6 (/ (pow (+ a b) 3) (* a b))) (+ (/ (* (+ a b) (+ (* 1/6 (* a (pow b 3))) (+ (* 1/6 (* (pow a 3) b)) (* 1/4 (* (pow a 2) (pow b 2)))))) (* (pow a 2) (pow b 2))) (/ (* (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b))) (- (* 1/2 (/ (pow (+ a b) 2) (* a b))) (/ (* (+ a b) (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b)))) (* (pow a 2) (pow b 2))))) (* a b))))) (* a b))))))) (+ (/ (* (+ a b) (+ (* 1/6 (* a (pow b 3))) (+ (* 1/6 (* (pow a 3) b)) (* 1/4 (* (pow a 2) (pow b 2)))))) (* (pow a 2) (pow b 2))) (/ (* (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b))) (- (* 1/2 (/ (pow (+ a b) 2) (* a b))) (/ (* (+ a b) (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b)))) (* (pow a 2) (pow b 2))))) (* a b)))))) (/ (* (+ a b) (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b)))) (* (pow a 2) (pow b 2))))) (+ (/ 1 a) (/ 1 b)))"]],"memory":[[-1131344,9423664]],"method":["egg-herbie"],"outputs":[[]],"time":277.699951171875,"type":"simplify"},{"count":[[4,60]],"inputs":[["(-.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) #s(literal 1 binary64))","(-.f64 (exp.f64 (*.f64 a eps)) #s(literal 1 binary64))","(-.f64 (exp.f64 (*.f64 b eps)) #s(literal 1 binary64))","(/.f64 (*.f64 eps (-.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) #s(literal 1 binary64))) (*.f64 (-.f64 (exp.f64 (*.f64 a eps)) #s(literal 1 binary64)) (-.f64 (exp.f64 (*.f64 b eps)) #s(literal 1 binary64))))"]],"memory":[[3819920,20087440]],"outputs":[["(neg.f64 (neg.f64 (expm1.f64 (*.f64 (+.f64 a b) eps))))","(+.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) #s(literal -1 binary64))","(+.f64 #s(literal -1 binary64) (exp.f64 (*.f64 (+.f64 a b) eps)))","(+.f64 (/.f64 (exp.f64 (*.f64 (+.f64 a b) (+.f64 eps eps))) (+.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) #s(literal 1 binary64))) (neg.f64 (/.f64 #s(literal 1 binary64) (+.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) #s(literal 1 binary64)))))","(+.f64 (/.f64 (exp.f64 (*.f64 (+.f64 a b) (*.f64 eps #s(literal 3 binary64)))) (+.f64 (exp.f64 (*.f64 (+.f64 a b) (+.f64 eps eps))) (+.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) #s(literal 1 binary64)))) (neg.f64 (/.f64 #s(literal 1 binary64) (+.f64 (exp.f64 (*.f64 (+.f64 a b) (+.f64 eps eps))) (+.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) #s(literal 1 binary64))))))","(-.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) #s(literal 1 binary64))","(-.f64 (+.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) #s(literal 0 binary64)) #s(literal 1 binary64))","(-.f64 #s(literal 0 binary64) (neg.f64 (expm1.f64 (*.f64 (+.f64 a b) eps))))","(-.f64 (/.f64 (exp.f64 (*.f64 (+.f64 a b) (+.f64 eps eps))) (+.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) #s(literal 1 binary64))) (/.f64 #s(literal 1 binary64) (+.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) #s(literal 1 binary64))))","(-.f64 (/.f64 (exp.f64 (*.f64 (+.f64 a b) (*.f64 eps #s(literal 3 binary64)))) (+.f64 (exp.f64 (*.f64 (+.f64 a b) (+.f64 eps eps))) (+.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) #s(literal 1 binary64)))) (/.f64 #s(literal 1 binary64) (+.f64 (exp.f64 (*.f64 (+.f64 a b) (+.f64 eps eps))) (+.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) #s(literal 1 binary64)))))","(*.f64 (+.f64 (exp.f64 (*.f64 (+.f64 a b) (/.f64 eps #s(literal 2 binary64)))) #s(literal 1 binary64)) (expm1.f64 (*.f64 (+.f64 a b) (/.f64 eps #s(literal 2 binary64)))))","(*.f64 #s(literal 1 binary64) (expm1.f64 (*.f64 (+.f64 a b) eps)))","(*.f64 (neg.f64 (expm1.f64 (*.f64 (+.f64 a b) (+.f64 eps eps)))) (/.f64 #s(literal 1 binary64) (+.f64 (neg.f64 (exp.f64 (*.f64 (+.f64 a b) eps))) #s(literal -1 binary64))))","(*.f64 (/.f64 #s(literal 1 binary64) (+.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) #s(literal 1 binary64))) (expm1.f64 (*.f64 (+.f64 a b) (+.f64 eps eps))))","(*.f64 (/.f64 (expm1.f64 (*.f64 (+.f64 a b) (+.f64 eps eps))) (expm1.f64 (*.f64 (+.f64 a b) (+.f64 eps eps)))) (expm1.f64 (*.f64 (+.f64 a b) eps)))","(neg.f64 (neg.f64 (expm1.f64 (*.f64 a eps))))","(+.f64 (exp.f64 (*.f64 a eps)) #s(literal -1 binary64))","(+.f64 #s(literal -1 binary64) (exp.f64 (*.f64 a eps)))","(+.f64 (/.f64 (exp.f64 (*.f64 a (+.f64 eps eps))) (+.f64 (exp.f64 (*.f64 a eps)) #s(literal 1 binary64))) (neg.f64 (/.f64 #s(literal 1 binary64) (+.f64 (exp.f64 (*.f64 a eps)) #s(literal 1 binary64)))))","(+.f64 (/.f64 (exp.f64 (*.f64 (*.f64 a eps) #s(literal 3 binary64))) (+.f64 (+.f64 (exp.f64 (*.f64 a eps)) #s(literal 1 binary64)) (exp.f64 (*.f64 a (+.f64 eps eps))))) (neg.f64 (/.f64 #s(literal 1 binary64) (+.f64 (+.f64 (exp.f64 (*.f64 a eps)) #s(literal 1 binary64)) (exp.f64 (*.f64 a (+.f64 eps eps)))))))","(-.f64 (exp.f64 (*.f64 a eps)) #s(literal 1 binary64))","(-.f64 (+.f64 (exp.f64 (*.f64 a eps)) #s(literal 0 binary64)) #s(literal 1 binary64))","(-.f64 #s(literal 0 binary64) (neg.f64 (expm1.f64 (*.f64 a eps))))","(-.f64 (/.f64 (exp.f64 (*.f64 a (+.f64 eps eps))) (+.f64 (exp.f64 (*.f64 a eps)) #s(literal 1 binary64))) (/.f64 #s(literal 1 binary64) (+.f64 (exp.f64 (*.f64 a eps)) #s(literal 1 binary64))))","(-.f64 (/.f64 (exp.f64 (*.f64 (*.f64 a eps) #s(literal 3 binary64))) (+.f64 (+.f64 (exp.f64 (*.f64 a eps)) #s(literal 1 binary64)) (exp.f64 (*.f64 a (+.f64 eps eps))))) (/.f64 #s(literal 1 binary64) (+.f64 (+.f64 (exp.f64 (*.f64 a eps)) #s(literal 1 binary64)) (exp.f64 (*.f64 a (+.f64 eps eps))))))","(*.f64 #s(literal 1 binary64) (expm1.f64 (*.f64 a eps)))","(*.f64 (+.f64 (exp.f64 (*.f64 a (/.f64 eps #s(literal 2 binary64)))) #s(literal 1 binary64)) (expm1.f64 (*.f64 a (/.f64 eps #s(literal 2 binary64)))))","(*.f64 (/.f64 #s(literal 1 binary64) (+.f64 (exp.f64 (*.f64 a eps)) #s(literal 1 binary64))) (expm1.f64 (*.f64 a (+.f64 eps eps))))","(*.f64 (/.f64 (expm1.f64 (*.f64 a (+.f64 eps eps))) (expm1.f64 (*.f64 a (+.f64 eps eps)))) (expm1.f64 (*.f64 a eps)))","(*.f64 (/.f64 (expm1.f64 (*.f64 a (+.f64 eps eps))) (neg.f64 (expm1.f64 (*.f64 a (+.f64 eps eps))))) (neg.f64 (expm1.f64 (*.f64 a eps))))","(neg.f64 (neg.f64 (expm1.f64 (*.f64 b eps))))","(+.f64 (exp.f64 (*.f64 b eps)) #s(literal -1 binary64))","(+.f64 #s(literal -1 binary64) (exp.f64 (*.f64 b eps)))","(+.f64 (/.f64 (exp.f64 (*.f64 b (+.f64 eps eps))) (+.f64 (exp.f64 (*.f64 b eps)) #s(literal 1 binary64))) (neg.f64 (/.f64 #s(literal 1 binary64) (+.f64 (exp.f64 (*.f64 b eps)) #s(literal 1 binary64)))))","(+.f64 (/.f64 (exp.f64 (*.f64 (*.f64 b eps) #s(literal 3 binary64))) (+.f64 (+.f64 (exp.f64 (*.f64 b eps)) #s(literal 1 binary64)) (exp.f64 (*.f64 b (+.f64 eps eps))))) (neg.f64 (/.f64 #s(literal 1 binary64) (+.f64 (+.f64 (exp.f64 (*.f64 b eps)) #s(literal 1 binary64)) (exp.f64 (*.f64 b (+.f64 eps eps)))))))","(-.f64 (exp.f64 (*.f64 b eps)) #s(literal 1 binary64))","(-.f64 (+.f64 (exp.f64 (*.f64 b eps)) #s(literal 0 binary64)) #s(literal 1 binary64))","(-.f64 #s(literal 0 binary64) (neg.f64 (expm1.f64 (*.f64 b eps))))","(-.f64 (/.f64 (exp.f64 (*.f64 b (+.f64 eps eps))) (+.f64 (exp.f64 (*.f64 b eps)) #s(literal 1 binary64))) (/.f64 #s(literal 1 binary64) (+.f64 (exp.f64 (*.f64 b eps)) #s(literal 1 binary64))))","(-.f64 (/.f64 (exp.f64 (*.f64 (*.f64 b eps) #s(literal 3 binary64))) (+.f64 (+.f64 (exp.f64 (*.f64 b eps)) #s(literal 1 binary64)) (exp.f64 (*.f64 b (+.f64 eps eps))))) (/.f64 #s(literal 1 binary64) (+.f64 (+.f64 (exp.f64 (*.f64 b eps)) #s(literal 1 binary64)) (exp.f64 (*.f64 b (+.f64 eps eps))))))","(*.f64 #s(literal 1 binary64) (expm1.f64 (*.f64 b eps)))","(*.f64 (+.f64 (exp.f64 (*.f64 b (/.f64 eps #s(literal 2 binary64)))) #s(literal 1 binary64)) (expm1.f64 (*.f64 b (/.f64 eps #s(literal 2 binary64)))))","(*.f64 (/.f64 #s(literal 1 binary64) (+.f64 (exp.f64 (*.f64 b eps)) #s(literal 1 binary64))) (expm1.f64 (*.f64 b (+.f64 eps eps))))","(*.f64 (/.f64 (expm1.f64 (*.f64 b (+.f64 eps eps))) (expm1.f64 (*.f64 b (+.f64 eps eps)))) (expm1.f64 (*.f64 b eps)))","(*.f64 (/.f64 (expm1.f64 (*.f64 b (+.f64 eps eps))) (neg.f64 (expm1.f64 (*.f64 b (+.f64 eps eps))))) (neg.f64 (expm1.f64 (*.f64 b eps))))","(neg.f64 (/.f64 (*.f64 (expm1.f64 (*.f64 (+.f64 a b) eps)) (neg.f64 eps)) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))))","(neg.f64 (*.f64 #s(literal 1 binary64) (/.f64 (*.f64 (expm1.f64 (*.f64 (+.f64 a b) eps)) (neg.f64 eps)) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))))))","(neg.f64 (/.f64 #s(literal -1 binary64) (/.f64 (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))) (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps))))))","(+.f64 (*.f64 (/.f64 #s(literal 1 binary64) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))) (*.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) eps)) (*.f64 (/.f64 #s(literal 1 binary64) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))) (neg.f64 eps)))","(+.f64 (*.f64 (*.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) eps) (/.f64 #s(literal 1 binary64) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))))) (*.f64 (neg.f64 eps) (/.f64 #s(literal 1 binary64) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))))))","(+.f64 (*.f64 (/.f64 (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps))) (*.f64 (expm1.f64 (*.f64 b (+.f64 eps eps))) (expm1.f64 (*.f64 a eps)))) #s(literal 1 binary64)) (*.f64 (/.f64 (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps))) (*.f64 (expm1.f64 (*.f64 b (+.f64 eps eps))) (expm1.f64 (*.f64 a eps)))) (exp.f64 (*.f64 b eps))))","(+.f64 (*.f64 (/.f64 (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps))) (*.f64 (expm1.f64 (*.f64 b (+.f64 eps eps))) (expm1.f64 (*.f64 a eps)))) (exp.f64 (*.f64 b eps))) (*.f64 (/.f64 (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps))) (*.f64 (expm1.f64 (*.f64 b (+.f64 eps eps))) (expm1.f64 (*.f64 a eps)))) #s(literal 1 binary64)))","(+.f64 (*.f64 (/.f64 (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps))) (*.f64 (expm1.f64 (*.f64 (*.f64 b eps) #s(literal 3 binary64))) (expm1.f64 (*.f64 a eps)))) (exp.f64 (*.f64 b (+.f64 eps eps)))) (*.f64 (/.f64 (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps))) (*.f64 (expm1.f64 (*.f64 (*.f64 b eps) #s(literal 3 binary64))) (expm1.f64 (*.f64 a eps)))) (+.f64 (exp.f64 (*.f64 b eps)) #s(literal 1 binary64))))","(+.f64 (*.f64 (/.f64 (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps))) (*.f64 (expm1.f64 (*.f64 (*.f64 b eps) #s(literal 3 binary64))) (expm1.f64 (*.f64 a eps)))) (+.f64 (exp.f64 (*.f64 b (+.f64 eps eps))) #s(literal 1 binary64))) (*.f64 (/.f64 (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps))) (*.f64 (expm1.f64 (*.f64 (*.f64 b eps) #s(literal 3 binary64))) (expm1.f64 (*.f64 a eps)))) (exp.f64 (*.f64 b eps))))","(+.f64 (*.f64 (/.f64 (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps))) (*.f64 (expm1.f64 (*.f64 (*.f64 b eps) #s(literal 3 binary64))) (expm1.f64 (*.f64 a eps)))) (+.f64 (exp.f64 (*.f64 b eps)) #s(literal 1 binary64))) (*.f64 (/.f64 (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps))) (*.f64 (expm1.f64 (*.f64 (*.f64 b eps) #s(literal 3 binary64))) (expm1.f64 (*.f64 a eps)))) (exp.f64 (*.f64 b (+.f64 eps eps)))))","(+.f64 (*.f64 #s(literal 1 binary64) (/.f64 (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps))) (*.f64 (expm1.f64 (*.f64 b (+.f64 eps eps))) (expm1.f64 (*.f64 a eps))))) (*.f64 (exp.f64 (*.f64 b eps)) (/.f64 (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps))) (*.f64 (expm1.f64 (*.f64 b (+.f64 eps eps))) (expm1.f64 (*.f64 a eps))))))","(+.f64 (*.f64 (exp.f64 (*.f64 b eps)) (/.f64 (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps))) (*.f64 (expm1.f64 (*.f64 b (+.f64 eps eps))) (expm1.f64 (*.f64 a eps))))) (*.f64 #s(literal 1 binary64) (/.f64 (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps))) (*.f64 (expm1.f64 (*.f64 b (+.f64 eps eps))) (expm1.f64 (*.f64 a eps))))))","(+.f64 (*.f64 (exp.f64 (*.f64 b (+.f64 eps eps))) (/.f64 (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps))) (*.f64 (expm1.f64 (*.f64 (*.f64 b eps) #s(literal 3 binary64))) (expm1.f64 (*.f64 a eps))))) (*.f64 (+.f64 (exp.f64 (*.f64 b eps)) #s(literal 1 binary64)) (/.f64 (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps))) (*.f64 (expm1.f64 (*.f64 (*.f64 b eps) #s(literal 3 binary64))) (expm1.f64 (*.f64 a eps))))))","(+.f64 (*.f64 (+.f64 (exp.f64 (*.f64 b (+.f64 eps eps))) #s(literal 1 binary64)) (/.f64 (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps))) (*.f64 (expm1.f64 (*.f64 (*.f64 b eps) #s(literal 3 binary64))) (expm1.f64 (*.f64 a eps))))) (*.f64 (exp.f64 (*.f64 b eps)) (/.f64 (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps))) (*.f64 (expm1.f64 (*.f64 (*.f64 b eps) #s(literal 3 binary64))) (expm1.f64 (*.f64 a eps))))))","(+.f64 (*.f64 (+.f64 (exp.f64 (*.f64 b eps)) #s(literal 1 binary64)) (/.f64 (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps))) (*.f64 (expm1.f64 (*.f64 (*.f64 b eps) #s(literal 3 binary64))) (expm1.f64 (*.f64 a eps))))) (*.f64 (exp.f64 (*.f64 b (+.f64 eps eps))) (/.f64 (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps))) (*.f64 (expm1.f64 (*.f64 (*.f64 b eps) #s(literal 3 binary64))) (expm1.f64 (*.f64 a eps))))))"]],"time":1044.51318359375,"type":"rewrite"},{"compiler":[[2189,268]],"memory":[[-4074768,4081664]],"time":10.100830078125,"type":"eval"},{"alts":[["(neg.f64 (/.f64 (*.f64 (expm1.f64 (*.f64 (+.f64 a b) eps)) (neg.f64 eps)) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))))","next",58.21404842679292,"binary64"],["(neg.f64 (/.f64 #s(literal -1 binary64) (/.f64 (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))) (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps))))))","next",58.22186092679276,"binary64"]],"compiler":[[20,15],[21,16]],"count":[[61,2]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[60,2],"picked":[1,0]}],"memory":[[3128816,3128816]],"min-error":[[58.20623592679276,"binary64"]],"time":4.943115234375,"type":"prune"},{"inputs":[["(neg.f64 (/.f64 #s(literal -1 binary64) (/.f64 (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))) (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps))))))","(/.f64 #s(literal -1 binary64) (/.f64 (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))) (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps)))))","#s(literal -1 binary64)","(/.f64 (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))) (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps))))","(*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))","(expm1.f64 (*.f64 a eps))","(*.f64 a eps)","a","eps","(expm1.f64 (*.f64 b eps))","(*.f64 b eps)","b","(*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps)))","(expm1.f64 (*.f64 (+.f64 a b) eps))","(*.f64 (+.f64 a b) eps)","(+.f64 a b)","(neg.f64 (/.f64 (*.f64 (expm1.f64 (*.f64 (+.f64 a b) eps)) (neg.f64 eps)) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))))","(/.f64 (*.f64 (expm1.f64 (*.f64 (+.f64 a b) eps)) (neg.f64 eps)) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))))","(*.f64 (expm1.f64 (*.f64 (+.f64 a b) eps)) (neg.f64 eps))","(expm1.f64 (*.f64 (+.f64 a b) eps))","(*.f64 (+.f64 a b) eps)","(+.f64 a b)","a","b","eps","(neg.f64 eps)","(*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))","(expm1.f64 (*.f64 a eps))","(*.f64 a eps)","(expm1.f64 (*.f64 b eps))","(*.f64 b eps)"]],"locations":[["(expm1.f64 (*.f64 (+.f64 a b) eps))","cost-diff",0],["(*.f64 (expm1.f64 (*.f64 (+.f64 a b) eps)) (neg.f64 eps))","cost-diff",0],["(/.f64 (*.f64 (expm1.f64 (*.f64 (+.f64 a b) eps)) (neg.f64 eps)) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))))","cost-diff",0],["(neg.f64 (/.f64 (*.f64 (expm1.f64 (*.f64 (+.f64 a b) eps)) (neg.f64 eps)) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))))","cost-diff",2],["(*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))","cost-diff",0],["(/.f64 (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))) (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps))))","cost-diff",0],["(/.f64 #s(literal -1 binary64) (/.f64 (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))) (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps)))))","cost-diff",1],["(neg.f64 (/.f64 #s(literal -1 binary64) (/.f64 (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))) (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps))))))","cost-diff",2]],"memory":[[-4746112,12053040]],"method":["egg-herbie"],"outputs":[["(neg.f64 (/.f64 #s(literal -1 binary64) (/.f64 (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))) (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps))))))","(/.f64 (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps))) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))))","(/.f64 #s(literal -1 binary64) (/.f64 (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))) (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps)))))","(/.f64 (*.f64 (expm1.f64 (*.f64 (+.f64 a b) eps)) (neg.f64 eps)) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))))","#s(literal -1 binary64)","(/.f64 (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))) (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps))))","(*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))","(expm1.f64 (*.f64 a eps))","(*.f64 a eps)","a","eps","(expm1.f64 (*.f64 b eps))","(*.f64 b eps)","b","(*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps)))","(expm1.f64 (*.f64 (+.f64 a b) eps))","(*.f64 (+.f64 a b) eps)","(+.f64 a b)","(neg.f64 (/.f64 (*.f64 (expm1.f64 (*.f64 (+.f64 a b) eps)) (neg.f64 eps)) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))))","(/.f64 (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps))) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))))","(/.f64 (*.f64 (expm1.f64 (*.f64 (+.f64 a b) eps)) (neg.f64 eps)) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))))","(*.f64 (expm1.f64 (*.f64 (+.f64 a b) eps)) (neg.f64 eps))","(expm1.f64 (*.f64 (+.f64 a b) eps))","(*.f64 (+.f64 a b) eps)","(+.f64 a b)","a","b","eps","(neg.f64 eps)","(*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))","(expm1.f64 (*.f64 a eps))","(*.f64 a eps)","(expm1.f64 (*.f64 b eps))","(*.f64 b eps)"]],"time":464.654052734375,"type":"simplify"},{"compiler":[[254,22]],"locations":[["(*.f64 (+.f64 a b) eps)","accuracy",0.015625],["(*.f64 (expm1.f64 (*.f64 (+.f64 a b) eps)) (neg.f64 eps))","accuracy",0.02734375],["(*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))","accuracy",0.0390625],["(/.f64 (*.f64 (expm1.f64 (*.f64 (+.f64 a b) eps)) (neg.f64 eps)) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))))","accuracy",56.41712990977874],["(*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps)))","accuracy",0.02734375],["(/.f64 #s(literal -1 binary64) (/.f64 (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))) (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps)))))","accuracy",0.03125],["(*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))","accuracy",0.0390625],["(/.f64 (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))) (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps))))","accuracy",57.357150942474696]],"memory":[[-1735808,23659664]],"mixsample":[[11.363525390625,"ival-div",0],[0.708251953125,"ival-true",0],[3.3828125,"ival-add",0],[17.945068359375,"ival-mult",0],[0.381103515625,"exact",0],[7.890625,"ival-expm1",0],[0.2802734375,"ival-assert",0],[6.218505859375,"ival-neg",0]],"outcomes":[[87.021728515625,0,"valid",256]],"time":133.977783203125,"type":"localize"},{"count":[[10,111]],"inputs":[["(neg.f64 (/.f64 #s(literal -1 binary64) (/.f64 (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))) (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps))))))","(/.f64 #s(literal -1 binary64) (/.f64 (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))) (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps)))))","(/.f64 (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))) (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps))))","(*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))","(neg.f64 (/.f64 (*.f64 (expm1.f64 (*.f64 (+.f64 a b) eps)) (neg.f64 eps)) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))))","(/.f64 (*.f64 (expm1.f64 (*.f64 (+.f64 a b) eps)) (neg.f64 eps)) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))))","(*.f64 (expm1.f64 (*.f64 (+.f64 a b) eps)) (neg.f64 eps))","(expm1.f64 (*.f64 (+.f64 a b) eps))","(*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps)))","(*.f64 (+.f64 a b) eps)"]],"memory":[[5925104,13695936]],"outputs":[["(/ 1 a)","(/ (+ 1 (* a (- (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1)) (* 1/2 eps)))) a)","(/ (+ 1 (* a (- (* a (- (* 1/2 (/ (* (pow eps 2) (exp (* b eps))) (- (exp (* b eps)) 1))) (+ (* 1/6 (pow eps 2)) (* 1/2 (* eps (- (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1)) (* 1/2 eps))))))) (* -1 (- (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1)) (* 1/2 eps)))))) a)","(/ (+ 1 (* a (- (* a (- (* a (- (* 1/6 (/ (* (pow eps 3) (exp (* b eps))) (- (exp (* b eps)) 1))) (+ (* 1/24 (pow eps 3)) (+ (* 1/6 (* (pow eps 2) (- (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1)) (* 1/2 eps)))) (* 1/2 (* eps (- (* 1/2 (/ (* (pow eps 2) (exp (* b eps))) (- (exp (* b eps)) 1))) (+ (* 1/6 (pow eps 2)) (* 1/2 (* eps (- (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1)) (* 1/2 eps)))))))))))) (* -1 (- (* 1/2 (/ (* (pow eps 2) (exp (* b eps))) (- (exp (* b eps)) 1))) (+ (* 1/6 (pow eps 2)) (* 1/2 (* eps (- (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1)) (* 1/2 eps))))))))) (* -1 (- (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1)) (* 1/2 eps)))))) a)","(/ -1 a)","(/ (- (* -1 (* a (- (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1)) (* 1/2 eps)))) 1) a)","(/ (- (* a (+ (* -1 (* a (- (* 1/2 (/ (* (pow eps 2) (exp (* b eps))) (- (exp (* b eps)) 1))) (+ (* 1/6 (pow eps 2)) (* 1/2 (* eps (- (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1)) (* 1/2 eps)))))))) (* -1 (- (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1)) (* 1/2 eps))))) 1) a)","(/ (- (* a (+ (* -1 (- (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1)) (* 1/2 eps))) (* a (+ (* -1 (* a (- (* 1/6 (/ (* (pow eps 3) (exp (* b eps))) (- (exp (* b eps)) 1))) (+ (* 1/24 (pow eps 3)) (+ (* 1/6 (* (pow eps 2) (- (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1)) (* 1/2 eps)))) (* 1/2 (* eps (- (* 1/2 (/ (* (pow eps 2) (exp (* b eps))) (- (exp (* b eps)) 1))) (+ (* 1/6 (pow eps 2)) (* 1/2 (* eps (- (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1)) (* 1/2 eps))))))))))))) (* -1 (- (* 1/2 (/ (* (pow eps 2) (exp (* b eps))) (- (exp (* b eps)) 1))) (+ (* 1/6 (pow eps 2)) (* 1/2 (* eps (- (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1)) (* 1/2 eps))))))))))) 1) a)","a","(* a (+ 1 (* a (- (* 1/2 eps) (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1))))))","(* a (+ 1 (* a (- (+ (* 1/2 eps) (* a (- (* 1/6 (pow eps 2)) (+ (* 1/2 (/ (* (pow eps 2) (exp (* b eps))) (- (exp (* b eps)) 1))) (/ (* eps (* (exp (* b eps)) (- (* 1/2 eps) (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1))))) (- (exp (* b eps)) 1)))))) (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1))))))","(* a (+ 1 (* a (- (+ (* 1/2 eps) (* a (- (+ (* 1/6 (pow eps 2)) (* a (- (* 1/24 (pow eps 3)) (+ (* 1/6 (/ (* (pow eps 3) (exp (* b eps))) (- (exp (* b eps)) 1))) (+ (* 1/2 (/ (* (pow eps 2) (* (exp (* b eps)) (- (* 1/2 eps) (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1))))) (- (exp (* b eps)) 1))) (/ (* eps (* (exp (* b eps)) (- (* 1/6 (pow eps 2)) (+ (* 1/2 (/ (* (pow eps 2) (exp (* b eps))) (- (exp (* b eps)) 1))) (/ (* eps (* (exp (* b eps)) (- (* 1/2 eps) (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1))))) (- (exp (* b eps)) 1)))))) (- (exp (* b eps)) 1))))))) (+ (* 1/2 (/ (* (pow eps 2) (exp (* b eps))) (- (exp (* b eps)) 1))) (/ (* eps (* (exp (* b eps)) (- (* 1/2 eps) (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1))))) (- (exp (* b eps)) 1)))))) (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1))))))","(* a (* eps (- (exp (* b eps)) 1)))","(* a (+ (* 1/2 (* a (* (pow eps 2) (- (exp (* b eps)) 1)))) (* eps (- (exp (* b eps)) 1))))","(* a (+ (* a (+ (* 1/6 (* a (* (pow eps 3) (- (exp (* b eps)) 1)))) (* 1/2 (* (pow eps 2) (- (exp (* b eps)) 1))))) (* eps (- (exp (* b eps)) 1))))","(* a (+ (* a (+ (* 1/2 (* (pow eps 2) (- (exp (* b eps)) 1))) (* a (+ (* 1/24 (* a (* (pow eps 4) (- (exp (* b eps)) 1)))) (* 1/6 (* (pow eps 3) (- (exp (* b eps)) 1))))))) (* eps (- (exp (* b eps)) 1))))","(* -1 (* eps (- (exp (* b eps)) 1)))","(+ (* -1 (* a (* (pow eps 2) (exp (* b eps))))) (* -1 (* eps (- (exp (* b eps)) 1))))","(+ (* -1 (* eps (- (exp (* b eps)) 1))) (* a (+ (* -1 (* (pow eps 2) (exp (* b eps)))) (* -1/2 (* a (* (pow eps 3) (exp (* b eps))))))))","(+ (* -1 (* eps (- (exp (* b eps)) 1))) (* a (+ (* -1 (* (pow eps 2) (exp (* b eps)))) (* a (+ (* -1/2 (* (pow eps 3) (exp (* b eps)))) (* -1/6 (* a (* (pow eps 4) (exp (* b eps))))))))))","(- (exp (* b eps)) 1)","(- (+ (exp (* b eps)) (* a (* eps (exp (* b eps))))) 1)","(- (+ (exp (* b eps)) (* a (+ (* 1/2 (* a (* (pow eps 2) (exp (* b eps))))) (* eps (exp (* b eps)))))) 1)","(- (+ (exp (* b eps)) (* a (+ (* a (+ (* 1/6 (* a (* (pow eps 3) (exp (* b eps))))) (* 1/2 (* (pow eps 2) (exp (* b eps)))))) (* eps (exp (* b eps)))))) 1)","(* eps (- (exp (* b eps)) 1))","(+ (* a (* (pow eps 2) (exp (* b eps)))) (* eps (- (exp (* b eps)) 1)))","(+ (* a (+ (* 1/2 (* a (* (pow eps 3) (exp (* b eps))))) (* (pow eps 2) (exp (* b eps))))) (* eps (- (exp (* b eps)) 1)))","(+ (* a (+ (* a (+ (* 1/6 (* a (* (pow eps 4) (exp (* b eps))))) (* 1/2 (* (pow eps 3) (exp (* b eps)))))) (* (pow eps 2) (exp (* b eps))))) (* eps (- (exp (* b eps)) 1)))","(* b eps)","(+ (* a eps) (* b eps))","(/ (* eps (- (exp (* eps (+ a b))) 1)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)))","(* -1 (/ (* eps (- (exp (* eps (+ a b))) 1)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))))","(/ (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)) (* eps (- (exp (* eps (+ a b))) 1)))","(* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))","(* -1 (* eps (- (exp (* eps (+ a b))) 1)))","(- (exp (* eps (+ a b))) 1)","(* eps (- (exp (* eps (+ a b))) 1))","(* a eps)","(* a (+ eps (/ (* b eps) a)))","(/ (* eps (- (exp (* eps (- b (* -1 a)))) 1)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)))","(* -1 (/ (* eps (- (exp (* eps (- b (* -1 a)))) 1)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))))","(/ (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)) (* eps (- (exp (* eps (- b (* -1 a)))) 1)))","(* -1 (* eps (- (exp (* eps (- b (* -1 a)))) 1)))","(- (exp (* eps (- b (* -1 a)))) 1)","(* eps (- (exp (* eps (- b (* -1 a)))) 1))","(* -1 (* a (+ (* -1 eps) (* -1 (/ (* b eps) a)))))","(/ 1 b)","(/ (+ 1 (* b (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps)))) b)","(/ (+ 1 (* b (- (* b (- (* 1/2 (/ (* (pow eps 2) (exp (* a eps))) (- (exp (* a eps)) 1))) (+ (* 1/6 (pow eps 2)) (* 1/2 (* eps (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps))))))) (* -1 (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps)))))) b)","(/ (+ 1 (* b (- (* b (- (* b (- (* 1/6 (/ (* (pow eps 3) (exp (* a eps))) (- (exp (* a eps)) 1))) (+ (* 1/24 (pow eps 3)) (+ (* 1/6 (* (pow eps 2) (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps)))) (* 1/2 (* eps (- (* 1/2 (/ (* (pow eps 2) (exp (* a eps))) (- (exp (* a eps)) 1))) (+ (* 1/6 (pow eps 2)) (* 1/2 (* eps (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps)))))))))))) (* -1 (- (* 1/2 (/ (* (pow eps 2) (exp (* a eps))) (- (exp (* a eps)) 1))) (+ (* 1/6 (pow eps 2)) (* 1/2 (* eps (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps))))))))) (* -1 (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps)))))) b)","(/ -1 b)","(/ (- (* -1 (* b (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps)))) 1) b)","(/ (- (* b (+ (* -1 (* b (- (* 1/2 (/ (* (pow eps 2) (exp (* a eps))) (- (exp (* a eps)) 1))) (+ (* 1/6 (pow eps 2)) (* 1/2 (* eps (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps)))))))) (* -1 (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps))))) 1) b)","(/ (- (* b (+ (* -1 (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps))) (* b (+ (* -1 (* b (- (* 1/6 (/ (* (pow eps 3) (exp (* a eps))) (- (exp (* a eps)) 1))) (+ (* 1/24 (pow eps 3)) (+ (* 1/6 (* (pow eps 2) (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps)))) (* 1/2 (* eps (- (* 1/2 (/ (* (pow eps 2) (exp (* a eps))) (- (exp (* a eps)) 1))) (+ (* 1/6 (pow eps 2)) (* 1/2 (* eps (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps))))))))))))) (* -1 (- (* 1/2 (/ (* (pow eps 2) (exp (* a eps))) (- (exp (* a eps)) 1))) (+ (* 1/6 (pow eps 2)) (* 1/2 (* eps (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps))))))))))) 1) b)","b","(* b (+ 1 (* b (- (* 1/2 eps) (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1))))))","(* b (+ 1 (* b (- (+ (* 1/2 eps) (* b (- (* 1/6 (pow eps 2)) (+ (* 1/2 (/ (* (pow eps 2) (exp (* a eps))) (- (exp (* a eps)) 1))) (/ (* eps (* (exp (* a eps)) (- (* 1/2 eps) (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1))))) (- (exp (* a eps)) 1)))))) (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1))))))","(* b (+ 1 (* b (- (+ (* 1/2 eps) (* b (- (+ (* 1/6 (pow eps 2)) (* b (- (* 1/24 (pow eps 3)) (+ (* 1/6 (/ (* (pow eps 3) (exp (* a eps))) (- (exp (* a eps)) 1))) (+ (* 1/2 (/ (* (pow eps 2) (* (exp (* a eps)) (- (* 1/2 eps) (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1))))) (- (exp (* a eps)) 1))) (/ (* eps (* (exp (* a eps)) (- (* 1/6 (pow eps 2)) (+ (* 1/2 (/ (* (pow eps 2) (exp (* a eps))) (- (exp (* a eps)) 1))) (/ (* eps (* (exp (* a eps)) (- (* 1/2 eps) (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1))))) (- (exp (* a eps)) 1)))))) (- (exp (* a eps)) 1))))))) (+ (* 1/2 (/ (* (pow eps 2) (exp (* a eps))) (- (exp (* a eps)) 1))) (/ (* eps (* (exp (* a eps)) (- (* 1/2 eps) (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1))))) (- (exp (* a eps)) 1)))))) (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1))))))","(* b (* eps (- (exp (* a eps)) 1)))","(* b (+ (* 1/2 (* b (* (pow eps 2) (- (exp (* a eps)) 1)))) (* eps (- (exp (* a eps)) 1))))","(* b (+ (* b (+ (* 1/6 (* b (* (pow eps 3) (- (exp (* a eps)) 1)))) (* 1/2 (* (pow eps 2) (- (exp (* a eps)) 1))))) (* eps (- (exp (* a eps)) 1))))","(* b (+ (* b (+ (* 1/2 (* (pow eps 2) (- (exp (* a eps)) 1))) (* b (+ (* 1/24 (* b (* (pow eps 4) (- (exp (* a eps)) 1)))) (* 1/6 (* (pow eps 3) (- (exp (* a eps)) 1))))))) (* eps (- (exp (* a eps)) 1))))","(* -1 (* eps (- (exp (* a eps)) 1)))","(+ (* -1 (* b (* (pow eps 2) (exp (* a eps))))) (* -1 (* eps (- (exp (* a eps)) 1))))","(+ (* -1 (* eps (- (exp (* a eps)) 1))) (* b (+ (* -1 (* (pow eps 2) (exp (* a eps)))) (* -1/2 (* b (* (pow eps 3) (exp (* a eps))))))))","(+ (* -1 (* eps (- (exp (* a eps)) 1))) (* b (+ (* -1 (* (pow eps 2) (exp (* a eps)))) (* b (+ (* -1/2 (* (pow eps 3) (exp (* a eps)))) (* -1/6 (* b (* (pow eps 4) (exp (* a eps))))))))))","(- (exp (* a eps)) 1)","(- (+ (exp (* a eps)) (* b (* eps (exp (* a eps))))) 1)","(- (+ (exp (* a eps)) (* b (+ (* 1/2 (* b (* (pow eps 2) (exp (* a eps))))) (* eps (exp (* a eps)))))) 1)","(- (+ (exp (* a eps)) (* b (+ (* b (+ (* 1/6 (* b (* (pow eps 3) (exp (* a eps))))) (* 1/2 (* (pow eps 2) (exp (* a eps)))))) (* eps (exp (* a eps)))))) 1)","(* eps (- (exp (* a eps)) 1))","(+ (* b (* (pow eps 2) (exp (* a eps)))) (* eps (- (exp (* a eps)) 1)))","(+ (* b (+ (* 1/2 (* b (* (pow eps 3) (exp (* a eps))))) (* (pow eps 2) (exp (* a eps))))) (* eps (- (exp (* a eps)) 1)))","(+ (* b (+ (* b (+ (* 1/6 (* b (* (pow eps 4) (exp (* a eps))))) (* 1/2 (* (pow eps 3) (exp (* a eps)))))) (* (pow eps 2) (exp (* a eps))))) (* eps (- (exp (* a eps)) 1)))","(* b (+ eps (/ (* a eps) b)))","(/ (* eps (- (exp (* eps (- a (* -1 b)))) 1)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)))","(* -1 (/ (* eps (- (exp (* eps (- a (* -1 b)))) 1)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))))","(/ (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)) (* eps (- (exp (* eps (- a (* -1 b)))) 1)))","(* -1 (* eps (- (exp (* eps (- a (* -1 b)))) 1)))","(- (exp (* eps (- a (* -1 b)))) 1)","(* eps (- (exp (* eps (- a (* -1 b)))) 1))","(* -1 (* b (+ (* -1 eps) (* -1 (/ (* a eps) b)))))","(/ (+ a b) (* a b))","(- (* eps (- (* 1/2 (/ (pow (+ a b) 2) (* a b))) (/ (* (+ a b) (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b)))) (* (pow a 2) (pow b 2))))) (* -1 (/ (+ a b) (* a b))))","(- (* eps (- (* eps (- (* 1/6 (/ (pow (+ a b) 3) (* a b))) (+ (/ (* (+ a b) (+ (* 1/6 (* a (pow b 3))) (+ (* 1/6 (* (pow a 3) b)) (* 1/4 (* (pow a 2) (pow b 2)))))) (* (pow a 2) (pow b 2))) (/ (* (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b))) (- (* 1/2 (/ (pow (+ a b) 2) (* a b))) (/ (* (+ a b) (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b)))) (* (pow a 2) (pow b 2))))) (* a b))))) (* -1 (- (* 1/2 (/ (pow (+ a b) 2) (* a b))) (/ (* (+ a b) (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b)))) (* (pow a 2) (pow b 2))))))) (* -1 (/ (+ a b) (* a b))))","(- (* eps (- (* eps (- (* eps (- (* 1/24 (/ (pow (+ a b) 4) (* a b))) (+ (/ (* (+ a b) (+ (* 1/24 (* a (pow b 4))) (+ (* 1/24 (* (pow a 4) b)) (+ (* 1/12 (* (pow a 2) (pow b 3))) (* 1/12 (* (pow a 3) (pow b 2))))))) (* (pow a 2) (pow b 2))) (+ (/ (* (+ (* 1/6 (* a (pow b 3))) (+ (* 1/6 (* (pow a 3) b)) (* 1/4 (* (pow a 2) (pow b 2))))) (- (* 1/2 (/ (pow (+ a b) 2) (* a b))) (/ (* (+ a b) (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b)))) (* (pow a 2) (pow b 2))))) (* a b)) (/ (* (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b))) (- (* 1/6 (/ (pow (+ a b) 3) (* a b))) (+ (/ (* (+ a b) (+ (* 1/6 (* a (pow b 3))) (+ (* 1/6 (* (pow a 3) b)) (* 1/4 (* (pow a 2) (pow b 2)))))) (* (pow a 2) (pow b 2))) (/ (* (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b))) (- (* 1/2 (/ (pow (+ a b) 2) (* a b))) (/ (* (+ a b) (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b)))) (* (pow a 2) (pow b 2))))) (* a b))))) (* a b)))))) (* -1 (- (* 1/6 (/ (pow (+ a b) 3) (* a b))) (+ (/ (* (+ a b) (+ (* 1/6 (* a (pow b 3))) (+ (* 1/6 (* (pow a 3) b)) (* 1/4 (* (pow a 2) (pow b 2)))))) (* (pow a 2) (pow b 2))) (/ (* (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b))) (- (* 1/2 (/ (pow (+ a b) 2) (* a b))) (/ (* (+ a b) (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b)))) (* (pow a 2) (pow b 2))))) (* a b))))))) (* -1 (- (* 1/2 (/ (pow (+ a b) 2) (* a b))) (/ (* (+ a b) (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b)))) (* (pow a 2) (pow b 2))))))) (* -1 (/ (+ a b) (* a b))))","(* -1 (/ (+ a b) (* a b)))","(+ (* -1 (* eps (- (* 1/2 (/ (pow (+ a b) 2) (* a b))) (/ (* (+ a b) (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b)))) (* (pow a 2) (pow b 2)))))) (* -1 (/ (+ a b) (* a b))))","(+ (* -1 (/ (+ a b) (* a b))) (* eps (+ (* -1 (* eps (- (* 1/6 (/ (pow (+ a b) 3) (* a b))) (+ (/ (* (+ a b) (+ (* 1/6 (* a (pow b 3))) (+ (* 1/6 (* (pow a 3) b)) (* 1/4 (* (pow a 2) (pow b 2)))))) (* (pow a 2) (pow b 2))) (/ (* (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b))) (- (* 1/2 (/ (pow (+ a b) 2) (* a b))) (/ (* (+ a b) (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b)))) (* (pow a 2) (pow b 2))))) (* a b)))))) (* -1 (- (* 1/2 (/ (pow (+ a b) 2) (* a b))) (/ (* (+ a b) (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b)))) (* (pow a 2) (pow b 2))))))))","(+ (* -1 (/ (+ a b) (* a b))) (* eps (+ (* -1 (- (* 1/2 (/ (pow (+ a b) 2) (* a b))) (/ (* (+ a b) (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b)))) (* (pow a 2) (pow b 2))))) (* eps (+ (* -1 (* eps (- (* 1/24 (/ (pow (+ a b) 4) (* a b))) (+ (/ (* (+ a b) (+ (* 1/24 (* a (pow b 4))) (+ (* 1/24 (* (pow a 4) b)) (+ (* 1/12 (* (pow a 2) (pow b 3))) (* 1/12 (* (pow a 3) (pow b 2))))))) (* (pow a 2) (pow b 2))) (+ (/ (* (+ (* 1/6 (* a (pow b 3))) (+ (* 1/6 (* (pow a 3) b)) (* 1/4 (* (pow a 2) (pow b 2))))) (- (* 1/2 (/ (pow (+ a b) 2) (* a b))) (/ (* (+ a b) (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b)))) (* (pow a 2) (pow b 2))))) (* a b)) (/ (* (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b))) (- (* 1/6 (/ (pow (+ a b) 3) (* a b))) (+ (/ (* (+ a b) (+ (* 1/6 (* a (pow b 3))) (+ (* 1/6 (* (pow a 3) b)) (* 1/4 (* (pow a 2) (pow b 2)))))) (* (pow a 2) (pow b 2))) (/ (* (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b))) (- (* 1/2 (/ (pow (+ a b) 2) (* a b))) (/ (* (+ a b) (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b)))) (* (pow a 2) (pow b 2))))) (* a b))))) (* a b))))))) (* -1 (- (* 1/6 (/ (pow (+ a b) 3) (* a b))) (+ (/ (* (+ a b) (+ (* 1/6 (* a (pow b 3))) (+ (* 1/6 (* (pow a 3) b)) (* 1/4 (* (pow a 2) (pow b 2)))))) (* (pow a 2) (pow b 2))) (/ (* (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b))) (- (* 1/2 (/ (pow (+ a b) 2) (* a b))) (/ (* (+ a b) (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b)))) (* (pow a 2) (pow b 2))))) (* a b))))))))))","(/ (* a b) (+ a b))","(+ (* eps (- (+ (* 1/2 (/ (* a (pow b 2)) (+ a b))) (* 1/2 (/ (* (pow a 2) b) (+ a b)))) (* 1/2 (* a b)))) (/ (* a b) (+ a b)))","(+ (* eps (- (+ (* 1/2 (/ (* a (pow b 2)) (+ a b))) (+ (* 1/2 (/ (* (pow a 2) b) (+ a b))) (* eps (- (+ (* 1/6 (/ (* a (pow b 3)) (+ a b))) (+ (* 1/6 (/ (* (pow a 3) b) (+ a b))) (* 1/4 (/ (* (pow a 2) (pow b 2)) (+ a b))))) (+ (* 1/6 (* a (* b (+ a b)))) (* 1/2 (* (+ a b) (- (+ (* 1/2 (/ (* a (pow b 2)) (+ a b))) (* 1/2 (/ (* (pow a 2) b) (+ a b)))) (* 1/2 (* a b)))))))))) (* 1/2 (* a b)))) (/ (* a b) (+ a b)))","(+ (* eps (- (+ (* 1/2 (/ (* a (pow b 2)) (+ a b))) (+ (* 1/2 (/ (* (pow a 2) b) (+ a b))) (* eps (- (+ (* 1/6 (/ (* a (pow b 3)) (+ a b))) (+ (* 1/6 (/ (* (pow a 3) b) (+ a b))) (+ (* 1/4 (/ (* (pow a 2) (pow b 2)) (+ a b))) (* eps (- (+ (* 1/24 (/ (* a (pow b 4)) (+ a b))) (+ (* 1/24 (/ (* (pow a 4) b) (+ a b))) (+ (* 1/12 (/ (* (pow a 2) (pow b 3)) (+ a b))) (* 1/12 (/ (* (pow a 3) (pow b 2)) (+ a b)))))) (+ (* 1/24 (* a (* b (pow (+ a b) 2)))) (+ (* 1/6 (* (pow (+ a b) 2) (- (+ (* 1/2 (/ (* a (pow b 2)) (+ a b))) (* 1/2 (/ (* (pow a 2) b) (+ a b)))) (* 1/2 (* a b))))) (* 1/2 (* (+ a b) (- (+ (* 1/6 (/ (* a (pow b 3)) (+ a b))) (+ (* 1/6 (/ (* (pow a 3) b) (+ a b))) (* 1/4 (/ (* (pow a 2) (pow b 2)) (+ a b))))) (+ (* 1/6 (* a (* b (+ a b)))) (* 1/2 (* (+ a b) (- (+ (* 1/2 (/ (* a (pow b 2)) (+ a b))) (* 1/2 (/ (* (pow a 2) b) (+ a b)))) (* 1/2 (* a b)))))))))))))))) (+ (* 1/6 (* a (* b (+ a b)))) (* 1/2 (* (+ a b) (- (+ (* 1/2 (/ (* a (pow b 2)) (+ a b))) (* 1/2 (/ (* (pow a 2) b) (+ a b)))) (* 1/2 (* a b)))))))))) (* 1/2 (* a b)))) (/ (* a b) (+ a b)))","(* a (* b (pow eps 2)))","(* (pow eps 2) (+ (* a b) (* eps (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b))))))","(* (pow eps 2) (+ (* a b) (* eps (+ (* 1/2 (* a (pow b 2))) (+ (* 1/2 (* (pow a 2) b)) (* eps (+ (* 1/6 (* a (pow b 3))) (+ (* 1/6 (* (pow a 3) b)) (* 1/4 (* (pow a 2) (pow b 2)))))))))))","(* (pow eps 2) (+ (* a b) (* eps (+ (* 1/2 (* a (pow b 2))) (+ (* 1/2 (* (pow a 2) b)) (* eps (+ (* 1/6 (* a (pow b 3))) (+ (* 1/6 (* (pow a 3) b)) (+ (* 1/4 (* (pow a 2) (pow b 2))) (* eps (+ (* 1/24 (* a (pow b 4))) (+ (* 1/24 (* (pow a 4) b)) (+ (* 1/12 (* (pow a 2) (pow b 3))) (* 1/12 (* (pow a 3) (pow b 2))))))))))))))))","(* -1 (* (pow eps 2) (+ a b)))","(* (pow eps 2) (+ (* -1 (+ a b)) (* -1/2 (* eps (pow (+ a b) 2)))))","(* (pow eps 2) (+ (* -1 (+ a b)) (* eps (+ (* -1/2 (pow (+ a b) 2)) (* -1/6 (* eps (pow (+ a b) 3)))))))","(* (pow eps 2) (+ (* -1 (+ a b)) (* eps (+ (* -1/2 (pow (+ a b) 2)) (* eps (+ (* -1/6 (pow (+ a b) 3)) (* -1/24 (* eps (pow (+ a b) 4)))))))))","(* eps (+ a b))","(* eps (+ a (+ b (* 1/2 (* eps (pow (+ a b) 2))))))","(* eps (+ a (+ b (* eps (+ (* 1/6 (* eps (pow (+ a b) 3))) (* 1/2 (pow (+ a b) 2)))))))","(* eps (+ a (+ b (* eps (+ (* 1/2 (pow (+ a b) 2)) (* eps (+ (* 1/24 (* eps (pow (+ a b) 4))) (* 1/6 (pow (+ a b) 3)))))))))","(* (pow eps 2) (+ a b))","(* (pow eps 2) (+ a (+ b (* 1/2 (* eps (pow (+ a b) 2))))))","(* (pow eps 2) (+ a (+ b (* eps (+ (* 1/6 (* eps (pow (+ a b) 3))) (* 1/2 (pow (+ a b) 2)))))))","(* (pow eps 2) (+ a (+ b (* eps (+ (* 1/2 (pow (+ a b) 2)) (* eps (+ (* 1/24 (* eps (pow (+ a b) 4))) (* 1/6 (pow (+ a b) 3)))))))))","(* -1 (* eps (- (/ 1 (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))) (/ (exp (* eps (+ a b))) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))))))"]],"series":[[6.283935546875,"((neg (/ -1 (/ (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)) (* eps (- (exp (* (+ a b) eps)) 1))))) (/ -1 (/ (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)) (* eps (- (exp (* (+ a b) eps)) 1)))) (/ (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)) (* eps (- (exp (* (+ a b) eps)) 1))) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)) (neg (/ (* (- (exp (* (+ a b) eps)) 1) (neg eps)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)))) (/ (* (- (exp (* (+ a b) eps)) 1) (neg eps)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))) (* (- (exp (* (+ a b) eps)) 1) (neg eps)) (- (exp (* (+ a b) eps)) 1) (* eps (- (exp (* (+ a b) eps)) 1)) (* (+ a b) eps))","eps","-inf"],[3.9150390625,"((neg (/ -1 (/ (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)) (* eps (- (exp (* (+ a b) eps)) 1))))) (/ -1 (/ (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)) (* eps (- (exp (* (+ a b) eps)) 1)))) (/ (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)) (* eps (- (exp (* (+ a b) eps)) 1))) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)) (neg (/ (* (- (exp (* (+ a b) eps)) 1) (neg eps)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)))) (/ (* (- (exp (* (+ a b) eps)) 1) (neg eps)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))) (* (- (exp (* (+ a b) eps)) 1) (neg eps)) (- (exp (* (+ a b) eps)) 1) (* eps (- (exp (* (+ a b) eps)) 1)) (* (+ a b) eps))","eps","inf"],[9.38818359375,"((neg (/ -1 (/ (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)) (* eps (- (exp (* (+ a b) eps)) 1))))) (/ -1 (/ (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)) (* eps (- (exp (* (+ a b) eps)) 1)))) (/ (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)) (* eps (- (exp (* (+ a b) eps)) 1))) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)) (neg (/ (* (- (exp (* (+ a b) eps)) 1) (neg eps)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)))) (/ (* (- (exp (* (+ a b) eps)) 1) (neg eps)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))) (* (- (exp (* (+ a b) eps)) 1) (neg eps)) (- (exp (* (+ a b) eps)) 1) (* eps (- (exp (* (+ a b) eps)) 1)) (* (+ a b) eps))","eps","0"],[3.623046875,"((neg (/ -1 (/ (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)) (* eps (- (exp (* (+ a b) eps)) 1))))) (/ -1 (/ (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)) (* eps (- (exp (* (+ a b) eps)) 1)))) (/ (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)) (* eps (- (exp (* (+ a b) eps)) 1))) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)) (neg (/ (* (- (exp (* (+ a b) eps)) 1) (neg eps)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)))) (/ (* (- (exp (* (+ a b) eps)) 1) (neg eps)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))) (* (- (exp (* (+ a b) eps)) 1) (neg eps)) (- (exp (* (+ a b) eps)) 1) (* eps (- (exp (* (+ a b) eps)) 1)) (* (+ a b) eps))","b","-inf"],[3.85302734375,"((neg (/ -1 (/ (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)) (* eps (- (exp (* (+ a b) eps)) 1))))) (/ -1 (/ (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)) (* eps (- (exp (* (+ a b) eps)) 1)))) (/ (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)) (* eps (- (exp (* (+ a b) eps)) 1))) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)) (neg (/ (* (- (exp (* (+ a b) eps)) 1) (neg eps)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)))) (/ (* (- (exp (* (+ a b) eps)) 1) (neg eps)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))) (* (- (exp (* (+ a b) eps)) 1) (neg eps)) (- (exp (* (+ a b) eps)) 1) (* eps (- (exp (* (+ a b) eps)) 1)) (* (+ a b) eps))","b","inf"],[8.548095703125,"((neg (/ -1 (/ (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)) (* eps (- (exp (* (+ a b) eps)) 1))))) (/ -1 (/ (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)) (* eps (- (exp (* (+ a b) eps)) 1)))) (/ (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)) (* eps (- (exp (* (+ a b) eps)) 1))) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)) (neg (/ (* (- (exp (* (+ a b) eps)) 1) (neg eps)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)))) (/ (* (- (exp (* (+ a b) eps)) 1) (neg eps)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))) (* (- (exp (* (+ a b) eps)) 1) (neg eps)) (- (exp (* (+ a b) eps)) 1) (* eps (- (exp (* (+ a b) eps)) 1)) (* (+ a b) eps))","b","0"],[3.948974609375,"((neg (/ -1 (/ (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)) (* eps (- (exp (* (+ a b) eps)) 1))))) (/ -1 (/ (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)) (* eps (- (exp (* (+ a b) eps)) 1)))) (/ (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)) (* eps (- (exp (* (+ a b) eps)) 1))) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)) (neg (/ (* (- (exp (* (+ a b) eps)) 1) (neg eps)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)))) (/ (* (- (exp (* (+ a b) eps)) 1) (neg eps)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))) (* (- (exp (* (+ a b) eps)) 1) (neg eps)) (- (exp (* (+ a b) eps)) 1) (* eps (- (exp (* (+ a b) eps)) 1)) (* (+ a b) eps))","a","-inf"],[11.1591796875,"((neg (/ -1 (/ (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)) (* eps (- (exp (* (+ a b) eps)) 1))))) (/ -1 (/ (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)) (* eps (- (exp (* (+ a b) eps)) 1)))) (/ (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)) (* eps (- (exp (* (+ a b) eps)) 1))) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)) (neg (/ (* (- (exp (* (+ a b) eps)) 1) (neg eps)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)))) (/ (* (- (exp (* (+ a b) eps)) 1) (neg eps)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))) (* (- (exp (* (+ a b) eps)) 1) (neg eps)) (- (exp (* (+ a b) eps)) 1) (* eps (- (exp (* (+ a b) eps)) 1)) (* (+ a b) eps))","a","inf"],[8.3291015625,"((neg (/ -1 (/ (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)) (* eps (- (exp (* (+ a b) eps)) 1))))) (/ -1 (/ (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)) (* eps (- (exp (* (+ a b) eps)) 1)))) (/ (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)) (* eps (- (exp (* (+ a b) eps)) 1))) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)) (neg (/ (* (- (exp (* (+ a b) eps)) 1) (neg eps)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)))) (/ (* (- (exp (* (+ a b) eps)) 1) (neg eps)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))) (* (- (exp (* (+ a b) eps)) 1) (neg eps)) (- (exp (* (+ a b) eps)) 1) (* eps (- (exp (* (+ a b) eps)) 1)) (* (+ a b) eps))","a","0"]],"time":64.443115234375,"type":"series"},{"count":[[111,0]],"inputs":[["(/ 1 a)","(/ (+ 1 (* a (- (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1)) (* 1/2 eps)))) a)","(/ (+ 1 (* a (- (* a (- (* 1/2 (/ (* (pow eps 2) (exp (* b eps))) (- (exp (* b eps)) 1))) (+ (* 1/6 (pow eps 2)) (* 1/2 (* eps (- (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1)) (* 1/2 eps))))))) (* -1 (- (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1)) (* 1/2 eps)))))) a)","(/ (+ 1 (* a (- (* a (- (* a (- (* 1/6 (/ (* (pow eps 3) (exp (* b eps))) (- (exp (* b eps)) 1))) (+ (* 1/24 (pow eps 3)) (+ (* 1/6 (* (pow eps 2) (- (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1)) (* 1/2 eps)))) (* 1/2 (* eps (- (* 1/2 (/ (* (pow eps 2) (exp (* b eps))) (- (exp (* b eps)) 1))) (+ (* 1/6 (pow eps 2)) (* 1/2 (* eps (- (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1)) (* 1/2 eps)))))))))))) (* -1 (- (* 1/2 (/ (* (pow eps 2) (exp (* b eps))) (- (exp (* b eps)) 1))) (+ (* 1/6 (pow eps 2)) (* 1/2 (* eps (- (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1)) (* 1/2 eps))))))))) (* -1 (- (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1)) (* 1/2 eps)))))) a)","(/ -1 a)","(/ (- (* -1 (* a (- (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1)) (* 1/2 eps)))) 1) a)","(/ (- (* a (+ (* -1 (* a (- (* 1/2 (/ (* (pow eps 2) (exp (* b eps))) (- (exp (* b eps)) 1))) (+ (* 1/6 (pow eps 2)) (* 1/2 (* eps (- (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1)) (* 1/2 eps)))))))) (* -1 (- (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1)) (* 1/2 eps))))) 1) a)","(/ (- (* a (+ (* -1 (- (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1)) (* 1/2 eps))) (* a (+ (* -1 (* a (- (* 1/6 (/ (* (pow eps 3) (exp (* b eps))) (- (exp (* b eps)) 1))) (+ (* 1/24 (pow eps 3)) (+ (* 1/6 (* (pow eps 2) (- (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1)) (* 1/2 eps)))) (* 1/2 (* eps (- (* 1/2 (/ (* (pow eps 2) (exp (* b eps))) (- (exp (* b eps)) 1))) (+ (* 1/6 (pow eps 2)) (* 1/2 (* eps (- (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1)) (* 1/2 eps))))))))))))) (* -1 (- (* 1/2 (/ (* (pow eps 2) (exp (* b eps))) (- (exp (* b eps)) 1))) (+ (* 1/6 (pow eps 2)) (* 1/2 (* eps (- (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1)) (* 1/2 eps))))))))))) 1) a)","a","(* a (+ 1 (* a (- (* 1/2 eps) (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1))))))","(* a (+ 1 (* a (- (+ (* 1/2 eps) (* a (- (* 1/6 (pow eps 2)) (+ (* 1/2 (/ (* (pow eps 2) (exp (* b eps))) (- (exp (* b eps)) 1))) (/ (* eps (* (exp (* b eps)) (- (* 1/2 eps) (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1))))) (- (exp (* b eps)) 1)))))) (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1))))))","(* a (+ 1 (* a (- (+ (* 1/2 eps) (* a (- (+ (* 1/6 (pow eps 2)) (* a (- (* 1/24 (pow eps 3)) (+ (* 1/6 (/ (* (pow eps 3) (exp (* b eps))) (- (exp (* b eps)) 1))) (+ (* 1/2 (/ (* (pow eps 2) (* (exp (* b eps)) (- (* 1/2 eps) (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1))))) (- (exp (* b eps)) 1))) (/ (* eps (* (exp (* b eps)) (- (* 1/6 (pow eps 2)) (+ (* 1/2 (/ (* (pow eps 2) (exp (* b eps))) (- (exp (* b eps)) 1))) (/ (* eps (* (exp (* b eps)) (- (* 1/2 eps) (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1))))) (- (exp (* b eps)) 1)))))) (- (exp (* b eps)) 1))))))) (+ (* 1/2 (/ (* (pow eps 2) (exp (* b eps))) (- (exp (* b eps)) 1))) (/ (* eps (* (exp (* b eps)) (- (* 1/2 eps) (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1))))) (- (exp (* b eps)) 1)))))) (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1))))))","(* a (* eps (- (exp (* b eps)) 1)))","(* a (+ (* 1/2 (* a (* (pow eps 2) (- (exp (* b eps)) 1)))) (* eps (- (exp (* b eps)) 1))))","(* a (+ (* a (+ (* 1/6 (* a (* (pow eps 3) (- (exp (* b eps)) 1)))) (* 1/2 (* (pow eps 2) (- (exp (* b eps)) 1))))) (* eps (- (exp (* b eps)) 1))))","(* a (+ (* a (+ (* 1/2 (* (pow eps 2) (- (exp (* b eps)) 1))) (* a (+ (* 1/24 (* a (* (pow eps 4) (- (exp (* b eps)) 1)))) (* 1/6 (* (pow eps 3) (- (exp (* b eps)) 1))))))) (* eps (- (exp (* b eps)) 1))))","(* -1 (* eps (- (exp (* b eps)) 1)))","(+ (* -1 (* a (* (pow eps 2) (exp (* b eps))))) (* -1 (* eps (- (exp (* b eps)) 1))))","(+ (* -1 (* eps (- (exp (* b eps)) 1))) (* a (+ (* -1 (* (pow eps 2) (exp (* b eps)))) (* -1/2 (* a (* (pow eps 3) (exp (* b eps))))))))","(+ (* -1 (* eps (- (exp (* b eps)) 1))) (* a (+ (* -1 (* (pow eps 2) (exp (* b eps)))) (* a (+ (* -1/2 (* (pow eps 3) (exp (* b eps)))) (* -1/6 (* a (* (pow eps 4) (exp (* b eps))))))))))","(- (exp (* b eps)) 1)","(- (+ (exp (* b eps)) (* a (* eps (exp (* b eps))))) 1)","(- (+ (exp (* b eps)) (* a (+ (* 1/2 (* a (* (pow eps 2) (exp (* b eps))))) (* eps (exp (* b eps)))))) 1)","(- (+ (exp (* b eps)) (* a (+ (* a (+ (* 1/6 (* a (* (pow eps 3) (exp (* b eps))))) (* 1/2 (* (pow eps 2) (exp (* b eps)))))) (* eps (exp (* b eps)))))) 1)","(* eps (- (exp (* b eps)) 1))","(+ (* a (* (pow eps 2) (exp (* b eps)))) (* eps (- (exp (* b eps)) 1)))","(+ (* a (+ (* 1/2 (* a (* (pow eps 3) (exp (* b eps))))) (* (pow eps 2) (exp (* b eps))))) (* eps (- (exp (* b eps)) 1)))","(+ (* a (+ (* a (+ (* 1/6 (* a (* (pow eps 4) (exp (* b eps))))) (* 1/2 (* (pow eps 3) (exp (* b eps)))))) (* (pow eps 2) (exp (* b eps))))) (* eps (- (exp (* b eps)) 1)))","(* b eps)","(+ (* a eps) (* b eps))","(/ (* eps (- (exp (* eps (+ a b))) 1)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)))","(* -1 (/ (* eps (- (exp (* eps (+ a b))) 1)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))))","(/ (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)) (* eps (- (exp (* eps (+ a b))) 1)))","(* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))","(* -1 (* eps (- (exp (* eps (+ a b))) 1)))","(- (exp (* eps (+ a b))) 1)","(* eps (- (exp (* eps (+ a b))) 1))","(* a eps)","(* a (+ eps (/ (* b eps) a)))","(/ (* eps (- (exp (* eps (- b (* -1 a)))) 1)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)))","(* -1 (/ (* eps (- (exp (* eps (- b (* -1 a)))) 1)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))))","(/ (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)) (* eps (- (exp (* eps (- b (* -1 a)))) 1)))","(* -1 (* eps (- (exp (* eps (- b (* -1 a)))) 1)))","(- (exp (* eps (- b (* -1 a)))) 1)","(* eps (- (exp (* eps (- b (* -1 a)))) 1))","(* -1 (* a (+ (* -1 eps) (* -1 (/ (* b eps) a)))))","(/ 1 b)","(/ (+ 1 (* b (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps)))) b)","(/ (+ 1 (* b (- (* b (- (* 1/2 (/ (* (pow eps 2) (exp (* a eps))) (- (exp (* a eps)) 1))) (+ (* 1/6 (pow eps 2)) (* 1/2 (* eps (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps))))))) (* -1 (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps)))))) b)","(/ (+ 1 (* b (- (* b (- (* b (- (* 1/6 (/ (* (pow eps 3) (exp (* a eps))) (- (exp (* a eps)) 1))) (+ (* 1/24 (pow eps 3)) (+ (* 1/6 (* (pow eps 2) (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps)))) (* 1/2 (* eps (- (* 1/2 (/ (* (pow eps 2) (exp (* a eps))) (- (exp (* a eps)) 1))) (+ (* 1/6 (pow eps 2)) (* 1/2 (* eps (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps)))))))))))) (* -1 (- (* 1/2 (/ (* (pow eps 2) (exp (* a eps))) (- (exp (* a eps)) 1))) (+ (* 1/6 (pow eps 2)) (* 1/2 (* eps (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps))))))))) (* -1 (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps)))))) b)","(/ -1 b)","(/ (- (* -1 (* b (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps)))) 1) b)","(/ (- (* b (+ (* -1 (* b (- (* 1/2 (/ (* (pow eps 2) (exp (* a eps))) (- (exp (* a eps)) 1))) (+ (* 1/6 (pow eps 2)) (* 1/2 (* eps (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps)))))))) (* -1 (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps))))) 1) b)","(/ (- (* b (+ (* -1 (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps))) (* b (+ (* -1 (* b (- (* 1/6 (/ (* (pow eps 3) (exp (* a eps))) (- (exp (* a eps)) 1))) (+ (* 1/24 (pow eps 3)) (+ (* 1/6 (* (pow eps 2) (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps)))) (* 1/2 (* eps (- (* 1/2 (/ (* (pow eps 2) (exp (* a eps))) (- (exp (* a eps)) 1))) (+ (* 1/6 (pow eps 2)) (* 1/2 (* eps (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps))))))))))))) (* -1 (- (* 1/2 (/ (* (pow eps 2) (exp (* a eps))) (- (exp (* a eps)) 1))) (+ (* 1/6 (pow eps 2)) (* 1/2 (* eps (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps))))))))))) 1) b)","b","(* b (+ 1 (* b (- (* 1/2 eps) (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1))))))","(* b (+ 1 (* b (- (+ (* 1/2 eps) (* b (- (* 1/6 (pow eps 2)) (+ (* 1/2 (/ (* (pow eps 2) (exp (* a eps))) (- (exp (* a eps)) 1))) (/ (* eps (* (exp (* a eps)) (- (* 1/2 eps) (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1))))) (- (exp (* a eps)) 1)))))) (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1))))))","(* b (+ 1 (* b (- (+ (* 1/2 eps) (* b (- (+ (* 1/6 (pow eps 2)) (* b (- (* 1/24 (pow eps 3)) (+ (* 1/6 (/ (* (pow eps 3) (exp (* a eps))) (- (exp (* a eps)) 1))) (+ (* 1/2 (/ (* (pow eps 2) (* (exp (* a eps)) (- (* 1/2 eps) (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1))))) (- (exp (* a eps)) 1))) (/ (* eps (* (exp (* a eps)) (- (* 1/6 (pow eps 2)) (+ (* 1/2 (/ (* (pow eps 2) (exp (* a eps))) (- (exp (* a eps)) 1))) (/ (* eps (* (exp (* a eps)) (- (* 1/2 eps) (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1))))) (- (exp (* a eps)) 1)))))) (- (exp (* a eps)) 1))))))) (+ (* 1/2 (/ (* (pow eps 2) (exp (* a eps))) (- (exp (* a eps)) 1))) (/ (* eps (* (exp (* a eps)) (- (* 1/2 eps) (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1))))) (- (exp (* a eps)) 1)))))) (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1))))))","(* b (* eps (- (exp (* a eps)) 1)))","(* b (+ (* 1/2 (* b (* (pow eps 2) (- (exp (* a eps)) 1)))) (* eps (- (exp (* a eps)) 1))))","(* b (+ (* b (+ (* 1/6 (* b (* (pow eps 3) (- (exp (* a eps)) 1)))) (* 1/2 (* (pow eps 2) (- (exp (* a eps)) 1))))) (* eps (- (exp (* a eps)) 1))))","(* b (+ (* b (+ (* 1/2 (* (pow eps 2) (- (exp (* a eps)) 1))) (* b (+ (* 1/24 (* b (* (pow eps 4) (- (exp (* a eps)) 1)))) (* 1/6 (* (pow eps 3) (- (exp (* a eps)) 1))))))) (* eps (- (exp (* a eps)) 1))))","(* -1 (* eps (- (exp (* a eps)) 1)))","(+ (* -1 (* b (* (pow eps 2) (exp (* a eps))))) (* -1 (* eps (- (exp (* a eps)) 1))))","(+ (* -1 (* eps (- (exp (* a eps)) 1))) (* b (+ (* -1 (* (pow eps 2) (exp (* a eps)))) (* -1/2 (* b (* (pow eps 3) (exp (* a eps))))))))","(+ (* -1 (* eps (- (exp (* a eps)) 1))) (* b (+ (* -1 (* (pow eps 2) (exp (* a eps)))) (* b (+ (* -1/2 (* (pow eps 3) (exp (* a eps)))) (* -1/6 (* b (* (pow eps 4) (exp (* a eps))))))))))","(- (exp (* a eps)) 1)","(- (+ (exp (* a eps)) (* b (* eps (exp (* a eps))))) 1)","(- (+ (exp (* a eps)) (* b (+ (* 1/2 (* b (* (pow eps 2) (exp (* a eps))))) (* eps (exp (* a eps)))))) 1)","(- (+ (exp (* a eps)) (* b (+ (* b (+ (* 1/6 (* b (* (pow eps 3) (exp (* a eps))))) (* 1/2 (* (pow eps 2) (exp (* a eps)))))) (* eps (exp (* a eps)))))) 1)","(* eps (- (exp (* a eps)) 1))","(+ (* b (* (pow eps 2) (exp (* a eps)))) (* eps (- (exp (* a eps)) 1)))","(+ (* b (+ (* 1/2 (* b (* (pow eps 3) (exp (* a eps))))) (* (pow eps 2) (exp (* a eps))))) (* eps (- (exp (* a eps)) 1)))","(+ (* b (+ (* b (+ (* 1/6 (* b (* (pow eps 4) (exp (* a eps))))) (* 1/2 (* (pow eps 3) (exp (* a eps)))))) (* (pow eps 2) (exp (* a eps))))) (* eps (- (exp (* a eps)) 1)))","(* b (+ eps (/ (* a eps) b)))","(/ (* eps (- (exp (* eps (- a (* -1 b)))) 1)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)))","(* -1 (/ (* eps (- (exp (* eps (- a (* -1 b)))) 1)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))))","(/ (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)) (* eps (- (exp (* eps (- a (* -1 b)))) 1)))","(* -1 (* eps (- (exp (* eps (- a (* -1 b)))) 1)))","(- (exp (* eps (- a (* -1 b)))) 1)","(* eps (- (exp (* eps (- a (* -1 b)))) 1))","(* -1 (* b (+ (* -1 eps) (* -1 (/ (* a eps) b)))))","(/ (+ a b) (* a b))","(- (* eps (- (* 1/2 (/ (pow (+ a b) 2) (* a b))) (/ (* (+ a b) (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b)))) (* (pow a 2) (pow b 2))))) (* -1 (/ (+ a b) (* a b))))","(- (* eps (- (* eps (- (* 1/6 (/ (pow (+ a b) 3) (* a b))) (+ (/ (* (+ a b) (+ (* 1/6 (* a (pow b 3))) (+ (* 1/6 (* (pow a 3) b)) (* 1/4 (* (pow a 2) (pow b 2)))))) (* (pow a 2) (pow b 2))) (/ (* (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b))) (- (* 1/2 (/ (pow (+ a b) 2) (* a b))) (/ (* (+ a b) (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b)))) (* (pow a 2) (pow b 2))))) (* a b))))) (* -1 (- (* 1/2 (/ (pow (+ a b) 2) (* a b))) (/ (* (+ a b) (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b)))) (* (pow a 2) (pow b 2))))))) (* -1 (/ (+ a b) (* a b))))","(- (* eps (- (* eps (- (* eps (- (* 1/24 (/ (pow (+ a b) 4) (* a b))) (+ (/ (* (+ a b) (+ (* 1/24 (* a (pow b 4))) (+ (* 1/24 (* (pow a 4) b)) (+ (* 1/12 (* (pow a 2) (pow b 3))) (* 1/12 (* (pow a 3) (pow b 2))))))) (* (pow a 2) (pow b 2))) (+ (/ (* (+ (* 1/6 (* a (pow b 3))) (+ (* 1/6 (* (pow a 3) b)) (* 1/4 (* (pow a 2) (pow b 2))))) (- (* 1/2 (/ (pow (+ a b) 2) (* a b))) (/ (* (+ a b) (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b)))) (* (pow a 2) (pow b 2))))) (* a b)) (/ (* (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b))) (- (* 1/6 (/ (pow (+ a b) 3) (* a b))) (+ (/ (* (+ a b) (+ (* 1/6 (* a (pow b 3))) (+ (* 1/6 (* (pow a 3) b)) (* 1/4 (* (pow a 2) (pow b 2)))))) (* (pow a 2) (pow b 2))) (/ (* (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b))) (- (* 1/2 (/ (pow (+ a b) 2) (* a b))) (/ (* (+ a b) (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b)))) (* (pow a 2) (pow b 2))))) (* a b))))) (* a b)))))) (* -1 (- (* 1/6 (/ (pow (+ a b) 3) (* a b))) (+ (/ (* (+ a b) (+ (* 1/6 (* a (pow b 3))) (+ (* 1/6 (* (pow a 3) b)) (* 1/4 (* (pow a 2) (pow b 2)))))) (* (pow a 2) (pow b 2))) (/ (* (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b))) (- (* 1/2 (/ (pow (+ a b) 2) (* a b))) (/ (* (+ a b) (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b)))) (* (pow a 2) (pow b 2))))) (* a b))))))) (* -1 (- (* 1/2 (/ (pow (+ a b) 2) (* a b))) (/ (* (+ a b) (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b)))) (* (pow a 2) (pow b 2))))))) (* -1 (/ (+ a b) (* a b))))","(* -1 (/ (+ a b) (* a b)))","(+ (* -1 (* eps (- (* 1/2 (/ (pow (+ a b) 2) (* a b))) (/ (* (+ a b) (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b)))) (* (pow a 2) (pow b 2)))))) (* -1 (/ (+ a b) (* a b))))","(+ (* -1 (/ (+ a b) (* a b))) (* eps (+ (* -1 (* eps (- (* 1/6 (/ (pow (+ a b) 3) (* a b))) (+ (/ (* (+ a b) (+ (* 1/6 (* a (pow b 3))) (+ (* 1/6 (* (pow a 3) b)) (* 1/4 (* (pow a 2) (pow b 2)))))) (* (pow a 2) (pow b 2))) (/ (* (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b))) (- (* 1/2 (/ (pow (+ a b) 2) (* a b))) (/ (* (+ a b) (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b)))) (* (pow a 2) (pow b 2))))) (* a b)))))) (* -1 (- (* 1/2 (/ (pow (+ a b) 2) (* a b))) (/ (* (+ a b) (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b)))) (* (pow a 2) (pow b 2))))))))","(+ (* -1 (/ (+ a b) (* a b))) (* eps (+ (* -1 (- (* 1/2 (/ (pow (+ a b) 2) (* a b))) (/ (* (+ a b) (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b)))) (* (pow a 2) (pow b 2))))) (* eps (+ (* -1 (* eps (- (* 1/24 (/ (pow (+ a b) 4) (* a b))) (+ (/ (* (+ a b) (+ (* 1/24 (* a (pow b 4))) (+ (* 1/24 (* (pow a 4) b)) (+ (* 1/12 (* (pow a 2) (pow b 3))) (* 1/12 (* (pow a 3) (pow b 2))))))) (* (pow a 2) (pow b 2))) (+ (/ (* (+ (* 1/6 (* a (pow b 3))) (+ (* 1/6 (* (pow a 3) b)) (* 1/4 (* (pow a 2) (pow b 2))))) (- (* 1/2 (/ (pow (+ a b) 2) (* a b))) (/ (* (+ a b) (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b)))) (* (pow a 2) (pow b 2))))) (* a b)) (/ (* (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b))) (- (* 1/6 (/ (pow (+ a b) 3) (* a b))) (+ (/ (* (+ a b) (+ (* 1/6 (* a (pow b 3))) (+ (* 1/6 (* (pow a 3) b)) (* 1/4 (* (pow a 2) (pow b 2)))))) (* (pow a 2) (pow b 2))) (/ (* (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b))) (- (* 1/2 (/ (pow (+ a b) 2) (* a b))) (/ (* (+ a b) (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b)))) (* (pow a 2) (pow b 2))))) (* a b))))) (* a b))))))) (* -1 (- (* 1/6 (/ (pow (+ a b) 3) (* a b))) (+ (/ (* (+ a b) (+ (* 1/6 (* a (pow b 3))) (+ (* 1/6 (* (pow a 3) b)) (* 1/4 (* (pow a 2) (pow b 2)))))) (* (pow a 2) (pow b 2))) (/ (* (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b))) (- (* 1/2 (/ (pow (+ a b) 2) (* a b))) (/ (* (+ a b) (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b)))) (* (pow a 2) (pow b 2))))) (* a b))))))))))","(/ (* a b) (+ a b))","(+ (* eps (- (+ (* 1/2 (/ (* a (pow b 2)) (+ a b))) (* 1/2 (/ (* (pow a 2) b) (+ a b)))) (* 1/2 (* a b)))) (/ (* a b) (+ a b)))","(+ (* eps (- (+ (* 1/2 (/ (* a (pow b 2)) (+ a b))) (+ (* 1/2 (/ (* (pow a 2) b) (+ a b))) (* eps (- (+ (* 1/6 (/ (* a (pow b 3)) (+ a b))) (+ (* 1/6 (/ (* (pow a 3) b) (+ a b))) (* 1/4 (/ (* (pow a 2) (pow b 2)) (+ a b))))) (+ (* 1/6 (* a (* b (+ a b)))) (* 1/2 (* (+ a b) (- (+ (* 1/2 (/ (* a (pow b 2)) (+ a b))) (* 1/2 (/ (* (pow a 2) b) (+ a b)))) (* 1/2 (* a b)))))))))) (* 1/2 (* a b)))) (/ (* a b) (+ a b)))","(+ (* eps (- (+ (* 1/2 (/ (* a (pow b 2)) (+ a b))) (+ (* 1/2 (/ (* (pow a 2) b) (+ a b))) (* eps (- (+ (* 1/6 (/ (* a (pow b 3)) (+ a b))) (+ (* 1/6 (/ (* (pow a 3) b) (+ a b))) (+ (* 1/4 (/ (* (pow a 2) (pow b 2)) (+ a b))) (* eps (- (+ (* 1/24 (/ (* a (pow b 4)) (+ a b))) (+ (* 1/24 (/ (* (pow a 4) b) (+ a b))) (+ (* 1/12 (/ (* (pow a 2) (pow b 3)) (+ a b))) (* 1/12 (/ (* (pow a 3) (pow b 2)) (+ a b)))))) (+ (* 1/24 (* a (* b (pow (+ a b) 2)))) (+ (* 1/6 (* (pow (+ a b) 2) (- (+ (* 1/2 (/ (* a (pow b 2)) (+ a b))) (* 1/2 (/ (* (pow a 2) b) (+ a b)))) (* 1/2 (* a b))))) (* 1/2 (* (+ a b) (- (+ (* 1/6 (/ (* a (pow b 3)) (+ a b))) (+ (* 1/6 (/ (* (pow a 3) b) (+ a b))) (* 1/4 (/ (* (pow a 2) (pow b 2)) (+ a b))))) (+ (* 1/6 (* a (* b (+ a b)))) (* 1/2 (* (+ a b) (- (+ (* 1/2 (/ (* a (pow b 2)) (+ a b))) (* 1/2 (/ (* (pow a 2) b) (+ a b)))) (* 1/2 (* a b)))))))))))))))) (+ (* 1/6 (* a (* b (+ a b)))) (* 1/2 (* (+ a b) (- (+ (* 1/2 (/ (* a (pow b 2)) (+ a b))) (* 1/2 (/ (* (pow a 2) b) (+ a b)))) (* 1/2 (* a b)))))))))) (* 1/2 (* a b)))) (/ (* a b) (+ a b)))","(* a (* b (pow eps 2)))","(* (pow eps 2) (+ (* a b) (* eps (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b))))))","(* (pow eps 2) (+ (* a b) (* eps (+ (* 1/2 (* a (pow b 2))) (+ (* 1/2 (* (pow a 2) b)) (* eps (+ (* 1/6 (* a (pow b 3))) (+ (* 1/6 (* (pow a 3) b)) (* 1/4 (* (pow a 2) (pow b 2)))))))))))","(* (pow eps 2) (+ (* a b) (* eps (+ (* 1/2 (* a (pow b 2))) (+ (* 1/2 (* (pow a 2) b)) (* eps (+ (* 1/6 (* a (pow b 3))) (+ (* 1/6 (* (pow a 3) b)) (+ (* 1/4 (* (pow a 2) (pow b 2))) (* eps (+ (* 1/24 (* a (pow b 4))) (+ (* 1/24 (* (pow a 4) b)) (+ (* 1/12 (* (pow a 2) (pow b 3))) (* 1/12 (* (pow a 3) (pow b 2))))))))))))))))","(* -1 (* (pow eps 2) (+ a b)))","(* (pow eps 2) (+ (* -1 (+ a b)) (* -1/2 (* eps (pow (+ a b) 2)))))","(* (pow eps 2) (+ (* -1 (+ a b)) (* eps (+ (* -1/2 (pow (+ a b) 2)) (* -1/6 (* eps (pow (+ a b) 3)))))))","(* (pow eps 2) (+ (* -1 (+ a b)) (* eps (+ (* -1/2 (pow (+ a b) 2)) (* eps (+ (* -1/6 (pow (+ a b) 3)) (* -1/24 (* eps (pow (+ a b) 4)))))))))","(* eps (+ a b))","(* eps (+ a (+ b (* 1/2 (* eps (pow (+ a b) 2))))))","(* eps (+ a (+ b (* eps (+ (* 1/6 (* eps (pow (+ a b) 3))) (* 1/2 (pow (+ a b) 2)))))))","(* eps (+ a (+ b (* eps (+ (* 1/2 (pow (+ a b) 2)) (* eps (+ (* 1/24 (* eps (pow (+ a b) 4))) (* 1/6 (pow (+ a b) 3)))))))))","(* (pow eps 2) (+ a b))","(* (pow eps 2) (+ a (+ b (* 1/2 (* eps (pow (+ a b) 2))))))","(* (pow eps 2) (+ a (+ b (* eps (+ (* 1/6 (* eps (pow (+ a b) 3))) (* 1/2 (pow (+ a b) 2)))))))","(* (pow eps 2) (+ a (+ b (* eps (+ (* 1/2 (pow (+ a b) 2)) (* eps (+ (* 1/24 (* eps (pow (+ a b) 4))) (* 1/6 (pow (+ a b) 3)))))))))","(* -1 (* eps (- (/ 1 (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))) (/ (exp (* eps (+ a b))) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))))))"]],"memory":[[2963344,10535568]],"method":["egg-herbie"],"outputs":[[]],"time":193.135009765625,"type":"simplify"},{"count":[[10,150]],"inputs":[["(neg.f64 (/.f64 #s(literal -1 binary64) (/.f64 (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))) (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps))))))","(/.f64 #s(literal -1 binary64) (/.f64 (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))) (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps)))))","(/.f64 (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))) (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps))))","(*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))","(neg.f64 (/.f64 (*.f64 (expm1.f64 (*.f64 (+.f64 a b) eps)) (neg.f64 eps)) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))))","(/.f64 (*.f64 (expm1.f64 (*.f64 (+.f64 a b) eps)) (neg.f64 eps)) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))))","(*.f64 (expm1.f64 (*.f64 (+.f64 a b) eps)) (neg.f64 eps))","(expm1.f64 (*.f64 (+.f64 a b) eps))","(*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps)))","(*.f64 (+.f64 a b) eps)"]],"memory":[[-4964576,36373376]],"outputs":[["(neg.f64 (/.f64 (*.f64 (expm1.f64 (*.f64 (+.f64 a b) eps)) (neg.f64 eps)) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))))","(+.f64 (/.f64 (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps))) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))) #s(literal 0 binary64))","(+.f64 #s(literal 0 binary64) (/.f64 (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps))) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))))","(+.f64 (*.f64 (/.f64 eps (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))) (exp.f64 (*.f64 (+.f64 a b) eps))) (/.f64 (neg.f64 eps) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))))","(+.f64 (*.f64 (/.f64 #s(literal 1 binary64) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))) (*.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) eps)) (/.f64 (neg.f64 eps) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))))","(+.f64 (*.f64 (/.f64 #s(literal -1 binary64) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))) (*.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) (neg.f64 eps))) (/.f64 (neg.f64 eps) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))))","(+.f64 (*.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) (/.f64 eps (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))))) (/.f64 (neg.f64 eps) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))))","(+.f64 (*.f64 (*.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) eps) (/.f64 #s(literal 1 binary64) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))))) (/.f64 (neg.f64 eps) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))))","(+.f64 (*.f64 (*.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) (neg.f64 eps)) (/.f64 #s(literal -1 binary64) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))))) (/.f64 (neg.f64 eps) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))))","(+.f64 (/.f64 (neg.f64 eps) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))) (*.f64 (/.f64 eps (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))) (exp.f64 (*.f64 (+.f64 a b) eps))))","(+.f64 (/.f64 (neg.f64 eps) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))) (*.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) (/.f64 eps (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))))))","(-.f64 (/.f64 #s(literal 0 binary64) #s(literal 1 binary64)) (/.f64 (*.f64 (expm1.f64 (*.f64 (+.f64 a b) eps)) (neg.f64 eps)) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))))","(-.f64 #s(literal 0 binary64) (/.f64 (*.f64 (expm1.f64 (*.f64 (+.f64 a b) eps)) (neg.f64 eps)) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))))","(-.f64 (/.f64 #s(literal 0 binary64) (/.f64 (*.f64 (expm1.f64 (*.f64 (+.f64 a b) eps)) (neg.f64 eps)) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))))) (/.f64 (*.f64 (expm1.f64 (*.f64 (+.f64 a b) eps)) (neg.f64 eps)) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))))","(-.f64 (/.f64 (/.f64 (exp.f64 (*.f64 (+.f64 a b) (+.f64 eps eps))) (+.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) #s(literal 1 binary64))) (/.f64 (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))) eps)) (/.f64 (/.f64 #s(literal 1 binary64) (+.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) #s(literal 1 binary64))) (/.f64 (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))) eps)))","(neg.f64 (/.f64 (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps))) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))))","(+.f64 (/.f64 (*.f64 (expm1.f64 (*.f64 (+.f64 a b) eps)) (neg.f64 eps)) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))) #s(literal 0 binary64))","(+.f64 #s(literal 0 binary64) (/.f64 (*.f64 (expm1.f64 (*.f64 (+.f64 a b) eps)) (neg.f64 eps)) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))))","(+.f64 (*.f64 (/.f64 (neg.f64 eps) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))) (exp.f64 (*.f64 (+.f64 a b) eps))) (*.f64 (/.f64 (neg.f64 eps) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))) #s(literal -1 binary64)))","(+.f64 (*.f64 (/.f64 (neg.f64 eps) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))) #s(literal -1 binary64)) (*.f64 (/.f64 (neg.f64 eps) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))) (exp.f64 (*.f64 (+.f64 a b) eps))))","(+.f64 (*.f64 (/.f64 #s(literal -1 binary64) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))) (*.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) eps)) (/.f64 eps (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))))","(+.f64 (*.f64 (/.f64 #s(literal 1 binary64) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))) (*.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) (neg.f64 eps))) (/.f64 eps (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))))","(+.f64 (*.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) (/.f64 (neg.f64 eps) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))))) (/.f64 eps (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))))","(+.f64 (*.f64 (*.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) eps) (/.f64 #s(literal -1 binary64) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))))) (/.f64 eps (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))))","(+.f64 (*.f64 (*.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) (neg.f64 eps)) (/.f64 #s(literal 1 binary64) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))))) (/.f64 eps (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))))","(+.f64 (/.f64 eps (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))) (*.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) (/.f64 (neg.f64 eps) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))))))","(+.f64 (*.f64 (/.f64 (*.f64 (expm1.f64 (*.f64 (+.f64 a b) eps)) (neg.f64 eps)) (*.f64 (expm1.f64 (*.f64 (*.f64 b eps) #s(literal 3 binary64))) (expm1.f64 (*.f64 a eps)))) (exp.f64 (*.f64 b (+.f64 eps eps)))) (*.f64 (/.f64 (*.f64 (expm1.f64 (*.f64 (+.f64 a b) eps)) (neg.f64 eps)) (*.f64 (expm1.f64 (*.f64 (*.f64 b eps) #s(literal 3 binary64))) (expm1.f64 (*.f64 a eps)))) (+.f64 (exp.f64 (*.f64 b eps)) #s(literal 1 binary64))))","(+.f64 (*.f64 (/.f64 (*.f64 (expm1.f64 (*.f64 (+.f64 a b) eps)) (neg.f64 eps)) (*.f64 (expm1.f64 (*.f64 (*.f64 b eps) #s(literal 3 binary64))) (expm1.f64 (*.f64 a eps)))) (+.f64 (exp.f64 (*.f64 b (+.f64 eps eps))) #s(literal 1 binary64))) (*.f64 (/.f64 (*.f64 (expm1.f64 (*.f64 (+.f64 a b) eps)) (neg.f64 eps)) (*.f64 (expm1.f64 (*.f64 (*.f64 b eps) #s(literal 3 binary64))) (expm1.f64 (*.f64 a eps)))) (exp.f64 (*.f64 b eps))))","(+.f64 (*.f64 (/.f64 (*.f64 (expm1.f64 (*.f64 (+.f64 a b) eps)) (neg.f64 eps)) (*.f64 (expm1.f64 (*.f64 (*.f64 b eps) #s(literal 3 binary64))) (expm1.f64 (*.f64 a eps)))) (+.f64 (exp.f64 (*.f64 b eps)) #s(literal 1 binary64))) (*.f64 (/.f64 (*.f64 (expm1.f64 (*.f64 (+.f64 a b) eps)) (neg.f64 eps)) (*.f64 (expm1.f64 (*.f64 (*.f64 b eps) #s(literal 3 binary64))) (expm1.f64 (*.f64 a eps)))) (exp.f64 (*.f64 b (+.f64 eps eps)))))","(+.f64 (*.f64 (/.f64 (*.f64 (expm1.f64 (*.f64 (+.f64 a b) eps)) (neg.f64 eps)) (*.f64 (expm1.f64 (*.f64 b (+.f64 eps eps))) (expm1.f64 (*.f64 a eps)))) #s(literal 1 binary64)) (*.f64 (/.f64 (*.f64 (expm1.f64 (*.f64 (+.f64 a b) eps)) (neg.f64 eps)) (*.f64 (expm1.f64 (*.f64 b (+.f64 eps eps))) (expm1.f64 (*.f64 a eps)))) (exp.f64 (*.f64 b eps))))","(neg.f64 (/.f64 (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))) (*.f64 (expm1.f64 (*.f64 (+.f64 a b) eps)) (neg.f64 eps))))","(+.f64 (*.f64 (/.f64 #s(literal 1 binary64) (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps)))) (*.f64 (exp.f64 (*.f64 b eps)) (expm1.f64 (*.f64 a eps)))) (*.f64 (/.f64 #s(literal 1 binary64) (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps)))) (neg.f64 (expm1.f64 (*.f64 a eps)))))","(+.f64 (*.f64 (/.f64 #s(literal 1 binary64) (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps)))) (*.f64 (exp.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))) (*.f64 (/.f64 #s(literal 1 binary64) (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps)))) (neg.f64 (expm1.f64 (*.f64 b eps)))))","(+.f64 (*.f64 (*.f64 (exp.f64 (*.f64 b eps)) (expm1.f64 (*.f64 a eps))) (/.f64 #s(literal 1 binary64) (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps))))) (*.f64 (neg.f64 (expm1.f64 (*.f64 a eps))) (/.f64 #s(literal 1 binary64) (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps))))))","(+.f64 (*.f64 (/.f64 (expm1.f64 (*.f64 b eps)) (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps)))) (exp.f64 (*.f64 a eps))) (/.f64 (neg.f64 (expm1.f64 (*.f64 b eps))) (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps)))))","(+.f64 (*.f64 (exp.f64 (*.f64 a eps)) (/.f64 (expm1.f64 (*.f64 b eps)) (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps))))) (/.f64 (neg.f64 (expm1.f64 (*.f64 b eps))) (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps)))))","(+.f64 (*.f64 (*.f64 (exp.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))) (/.f64 #s(literal 1 binary64) (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps))))) (/.f64 (neg.f64 (expm1.f64 (*.f64 b eps))) (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps)))))","(+.f64 (/.f64 (neg.f64 (expm1.f64 (*.f64 b eps))) (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps)))) (*.f64 (/.f64 (expm1.f64 (*.f64 b eps)) (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps)))) (exp.f64 (*.f64 a eps))))","(+.f64 (/.f64 (neg.f64 (expm1.f64 (*.f64 b eps))) (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps)))) (*.f64 (exp.f64 (*.f64 a eps)) (/.f64 (expm1.f64 (*.f64 b eps)) (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps))))))","(+.f64 (*.f64 (/.f64 (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))) (*.f64 (expm1.f64 (*.f64 (+.f64 a b) (+.f64 eps eps))) eps)) #s(literal 1 binary64)) (*.f64 (/.f64 (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))) (*.f64 (expm1.f64 (*.f64 (+.f64 a b) (+.f64 eps eps))) eps)) (exp.f64 (*.f64 (+.f64 a b) eps))))","(+.f64 (*.f64 (/.f64 (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))) (*.f64 (expm1.f64 (*.f64 (+.f64 a b) (+.f64 eps eps))) eps)) (exp.f64 (*.f64 (+.f64 a b) eps))) (*.f64 (/.f64 (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))) (*.f64 (expm1.f64 (*.f64 (+.f64 a b) (+.f64 eps eps))) eps)) #s(literal 1 binary64)))","(+.f64 (*.f64 (/.f64 (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))) (*.f64 (expm1.f64 (*.f64 (+.f64 a b) (*.f64 eps #s(literal 3 binary64)))) eps)) (exp.f64 (*.f64 (+.f64 a b) (+.f64 eps eps)))) (*.f64 (/.f64 (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))) (*.f64 (expm1.f64 (*.f64 (+.f64 a b) (*.f64 eps #s(literal 3 binary64)))) eps)) (+.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) #s(literal 1 binary64))))","(+.f64 (*.f64 (/.f64 (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))) (*.f64 (expm1.f64 (*.f64 (+.f64 a b) (*.f64 eps #s(literal 3 binary64)))) eps)) (+.f64 (exp.f64 (*.f64 (+.f64 a b) (+.f64 eps eps))) #s(literal 1 binary64))) (*.f64 (/.f64 (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))) (*.f64 (expm1.f64 (*.f64 (+.f64 a b) (*.f64 eps #s(literal 3 binary64)))) eps)) (exp.f64 (*.f64 (+.f64 a b) eps))))","(+.f64 (*.f64 (/.f64 (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))) (*.f64 (expm1.f64 (*.f64 (+.f64 a b) (*.f64 eps #s(literal 3 binary64)))) eps)) (+.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) #s(literal 1 binary64))) (*.f64 (/.f64 (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))) (*.f64 (expm1.f64 (*.f64 (+.f64 a b) (*.f64 eps #s(literal 3 binary64)))) eps)) (exp.f64 (*.f64 (+.f64 a b) (+.f64 eps eps)))))","(+.f64 (*.f64 #s(literal 1 binary64) (/.f64 (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))) (*.f64 (expm1.f64 (*.f64 (+.f64 a b) (+.f64 eps eps))) eps))) (*.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) (/.f64 (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))) (*.f64 (expm1.f64 (*.f64 (+.f64 a b) (+.f64 eps eps))) eps))))","(neg.f64 (*.f64 (neg.f64 (expm1.f64 (*.f64 a eps))) (expm1.f64 (*.f64 b eps))))","(+.f64 (*.f64 (exp.f64 (*.f64 b eps)) (expm1.f64 (*.f64 a eps))) (neg.f64 (expm1.f64 (*.f64 a eps))))","(+.f64 (*.f64 (exp.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))) (neg.f64 (expm1.f64 (*.f64 b eps))))","(+.f64 (neg.f64 (expm1.f64 (*.f64 a eps))) (*.f64 (exp.f64 (*.f64 b eps)) (expm1.f64 (*.f64 a eps))))","(+.f64 (neg.f64 (expm1.f64 (*.f64 b eps))) (*.f64 (exp.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))))","(-.f64 #s(literal 0 binary64) (*.f64 (neg.f64 (expm1.f64 (*.f64 a eps))) (expm1.f64 (*.f64 b eps))))","(*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))","(*.f64 (expm1.f64 (*.f64 b eps)) (expm1.f64 (*.f64 a eps)))","(*.f64 (neg.f64 (expm1.f64 (*.f64 a eps))) (neg.f64 (expm1.f64 (*.f64 b eps))))","(*.f64 (neg.f64 (expm1.f64 (*.f64 b eps))) (neg.f64 (expm1.f64 (*.f64 a eps))))","(*.f64 (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))) #s(literal 1 binary64))","(*.f64 (/.f64 (expm1.f64 (*.f64 a eps)) #s(literal 1 binary64)) (/.f64 (expm1.f64 (*.f64 b eps)) #s(literal 1 binary64)))","(*.f64 (/.f64 (expm1.f64 (*.f64 a eps)) #s(literal 1 binary64)) (expm1.f64 (*.f64 b eps)))","(*.f64 (/.f64 (expm1.f64 (*.f64 b eps)) #s(literal 1 binary64)) (/.f64 (expm1.f64 (*.f64 a eps)) #s(literal 1 binary64)))","(*.f64 (/.f64 (expm1.f64 (*.f64 b eps)) #s(literal 1 binary64)) (expm1.f64 (*.f64 a eps)))","(neg.f64 (/.f64 (*.f64 (expm1.f64 (*.f64 (+.f64 a b) eps)) (neg.f64 eps)) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))))","(+.f64 (/.f64 (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps))) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))) #s(literal 0 binary64))","(+.f64 #s(literal 0 binary64) (/.f64 (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps))) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))))","(+.f64 (*.f64 (/.f64 eps (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))) (exp.f64 (*.f64 (+.f64 a b) eps))) (/.f64 (neg.f64 eps) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))))","(+.f64 (*.f64 (/.f64 #s(literal 1 binary64) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))) (*.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) eps)) (/.f64 (neg.f64 eps) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))))","(+.f64 (*.f64 (/.f64 #s(literal -1 binary64) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))) (*.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) (neg.f64 eps))) (/.f64 (neg.f64 eps) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))))","(+.f64 (*.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) (/.f64 eps (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))))) (/.f64 (neg.f64 eps) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))))","(+.f64 (*.f64 (*.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) eps) (/.f64 #s(literal 1 binary64) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))))) (/.f64 (neg.f64 eps) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))))","(+.f64 (*.f64 (*.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) (neg.f64 eps)) (/.f64 #s(literal -1 binary64) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))))) (/.f64 (neg.f64 eps) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))))","(+.f64 (/.f64 (neg.f64 eps) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))) (*.f64 (/.f64 eps (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))) (exp.f64 (*.f64 (+.f64 a b) eps))))","(+.f64 (/.f64 (neg.f64 eps) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))) (*.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) (/.f64 eps (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))))))","(-.f64 (/.f64 #s(literal 0 binary64) #s(literal 1 binary64)) (/.f64 (*.f64 (expm1.f64 (*.f64 (+.f64 a b) eps)) (neg.f64 eps)) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))))","(-.f64 #s(literal 0 binary64) (/.f64 (*.f64 (expm1.f64 (*.f64 (+.f64 a b) eps)) (neg.f64 eps)) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))))","(-.f64 (/.f64 #s(literal 0 binary64) (/.f64 (*.f64 (expm1.f64 (*.f64 (+.f64 a b) eps)) (neg.f64 eps)) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))))) (/.f64 (*.f64 (expm1.f64 (*.f64 (+.f64 a b) eps)) (neg.f64 eps)) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))))","(-.f64 (/.f64 (/.f64 (exp.f64 (*.f64 (+.f64 a b) (+.f64 eps eps))) (+.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) #s(literal 1 binary64))) (/.f64 (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))) eps)) (/.f64 (/.f64 #s(literal 1 binary64) (+.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) #s(literal 1 binary64))) (/.f64 (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))) eps)))","(neg.f64 (/.f64 (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps))) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))))","(+.f64 (/.f64 (*.f64 (expm1.f64 (*.f64 (+.f64 a b) eps)) (neg.f64 eps)) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))) #s(literal 0 binary64))","(+.f64 #s(literal 0 binary64) (/.f64 (*.f64 (expm1.f64 (*.f64 (+.f64 a b) eps)) (neg.f64 eps)) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))))","(+.f64 (*.f64 (/.f64 (neg.f64 eps) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))) (exp.f64 (*.f64 (+.f64 a b) eps))) (*.f64 (/.f64 (neg.f64 eps) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))) #s(literal -1 binary64)))","(+.f64 (*.f64 (/.f64 (neg.f64 eps) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))) #s(literal -1 binary64)) (*.f64 (/.f64 (neg.f64 eps) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))) (exp.f64 (*.f64 (+.f64 a b) eps))))","(+.f64 (*.f64 (/.f64 #s(literal -1 binary64) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))) (*.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) eps)) (/.f64 eps (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))))","(+.f64 (*.f64 (/.f64 #s(literal 1 binary64) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))) (*.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) (neg.f64 eps))) (/.f64 eps (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))))","(+.f64 (*.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) (/.f64 (neg.f64 eps) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))))) (/.f64 eps (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))))","(+.f64 (*.f64 (*.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) eps) (/.f64 #s(literal -1 binary64) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))))) (/.f64 eps (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))))","(+.f64 (*.f64 (*.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) (neg.f64 eps)) (/.f64 #s(literal 1 binary64) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))))) (/.f64 eps (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))))","(+.f64 (/.f64 eps (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))) (*.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) (/.f64 (neg.f64 eps) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))))))","(+.f64 (*.f64 (/.f64 (*.f64 (expm1.f64 (*.f64 (+.f64 a b) eps)) (neg.f64 eps)) (*.f64 (expm1.f64 (*.f64 (*.f64 b eps) #s(literal 3 binary64))) (expm1.f64 (*.f64 a eps)))) (exp.f64 (*.f64 b (+.f64 eps eps)))) (*.f64 (/.f64 (*.f64 (expm1.f64 (*.f64 (+.f64 a b) eps)) (neg.f64 eps)) (*.f64 (expm1.f64 (*.f64 (*.f64 b eps) #s(literal 3 binary64))) (expm1.f64 (*.f64 a eps)))) (+.f64 (exp.f64 (*.f64 b eps)) #s(literal 1 binary64))))","(+.f64 (*.f64 (/.f64 (*.f64 (expm1.f64 (*.f64 (+.f64 a b) eps)) (neg.f64 eps)) (*.f64 (expm1.f64 (*.f64 (*.f64 b eps) #s(literal 3 binary64))) (expm1.f64 (*.f64 a eps)))) (+.f64 (exp.f64 (*.f64 b (+.f64 eps eps))) #s(literal 1 binary64))) (*.f64 (/.f64 (*.f64 (expm1.f64 (*.f64 (+.f64 a b) eps)) (neg.f64 eps)) (*.f64 (expm1.f64 (*.f64 (*.f64 b eps) #s(literal 3 binary64))) (expm1.f64 (*.f64 a eps)))) (exp.f64 (*.f64 b eps))))","(+.f64 (*.f64 (/.f64 (*.f64 (expm1.f64 (*.f64 (+.f64 a b) eps)) (neg.f64 eps)) (*.f64 (expm1.f64 (*.f64 (*.f64 b eps) #s(literal 3 binary64))) (expm1.f64 (*.f64 a eps)))) (+.f64 (exp.f64 (*.f64 b eps)) #s(literal 1 binary64))) (*.f64 (/.f64 (*.f64 (expm1.f64 (*.f64 (+.f64 a b) eps)) (neg.f64 eps)) (*.f64 (expm1.f64 (*.f64 (*.f64 b eps) #s(literal 3 binary64))) (expm1.f64 (*.f64 a eps)))) (exp.f64 (*.f64 b (+.f64 eps eps)))))","(+.f64 (*.f64 (/.f64 (*.f64 (expm1.f64 (*.f64 (+.f64 a b) eps)) (neg.f64 eps)) (*.f64 (expm1.f64 (*.f64 b (+.f64 eps eps))) (expm1.f64 (*.f64 a eps)))) #s(literal 1 binary64)) (*.f64 (/.f64 (*.f64 (expm1.f64 (*.f64 (+.f64 a b) eps)) (neg.f64 eps)) (*.f64 (expm1.f64 (*.f64 b (+.f64 eps eps))) (expm1.f64 (*.f64 a eps)))) (exp.f64 (*.f64 b eps))))","(neg.f64 (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps))))","(+.f64 (*.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) (neg.f64 eps)) eps)","(+.f64 #s(literal 0 binary64) (*.f64 (expm1.f64 (*.f64 (+.f64 a b) eps)) (neg.f64 eps)))","(+.f64 eps (*.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) (neg.f64 eps)))","(+.f64 (*.f64 (expm1.f64 (*.f64 (+.f64 a b) eps)) #s(literal 0 binary64)) (*.f64 (expm1.f64 (*.f64 (+.f64 a b) eps)) (neg.f64 eps)))","(+.f64 (*.f64 #s(literal 0 binary64) (expm1.f64 (*.f64 (+.f64 a b) eps))) (*.f64 (expm1.f64 (*.f64 (+.f64 a b) eps)) (neg.f64 eps)))","(-.f64 #s(literal 0 binary64) (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps))))","(-.f64 (-.f64 #s(literal 0 binary64) (*.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) eps)) (neg.f64 eps))","(*.f64 (expm1.f64 (*.f64 (+.f64 a b) eps)) (neg.f64 eps))","(*.f64 (neg.f64 (expm1.f64 (*.f64 (+.f64 a b) eps))) eps)","(*.f64 (*.f64 (expm1.f64 (*.f64 (+.f64 a b) eps)) (neg.f64 eps)) #s(literal 1 binary64))","(*.f64 (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps))) #s(literal -1 binary64))","(*.f64 #s(literal -1 binary64) (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps))))","(*.f64 #s(literal 1 binary64) (*.f64 (expm1.f64 (*.f64 (+.f64 a b) eps)) (neg.f64 eps)))","(*.f64 eps (neg.f64 (expm1.f64 (*.f64 (+.f64 a b) eps))))","(neg.f64 (neg.f64 (expm1.f64 (*.f64 (+.f64 a b) eps))))","(+.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) #s(literal -1 binary64))","(+.f64 #s(literal -1 binary64) (exp.f64 (*.f64 (+.f64 a b) eps)))","(+.f64 (/.f64 (exp.f64 (*.f64 (+.f64 a b) (+.f64 eps eps))) (+.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) #s(literal 1 binary64))) (neg.f64 (/.f64 #s(literal 1 binary64) (+.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) #s(literal 1 binary64)))))","(+.f64 (/.f64 (exp.f64 (*.f64 (+.f64 a b) (*.f64 eps #s(literal 3 binary64)))) (+.f64 (exp.f64 (*.f64 (+.f64 a b) (+.f64 eps eps))) (+.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) #s(literal 1 binary64)))) (neg.f64 (/.f64 #s(literal 1 binary64) (+.f64 (exp.f64 (*.f64 (+.f64 a b) (+.f64 eps eps))) (+.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) #s(literal 1 binary64))))))","(-.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) #s(literal 1 binary64))","(-.f64 (+.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) #s(literal 0 binary64)) #s(literal 1 binary64))","(-.f64 #s(literal 0 binary64) (neg.f64 (expm1.f64 (*.f64 (+.f64 a b) eps))))","(-.f64 (/.f64 (exp.f64 (*.f64 (+.f64 a b) (+.f64 eps eps))) (+.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) #s(literal 1 binary64))) (/.f64 #s(literal 1 binary64) (+.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) #s(literal 1 binary64))))","(-.f64 (/.f64 (exp.f64 (*.f64 (+.f64 a b) (*.f64 eps #s(literal 3 binary64)))) (+.f64 (exp.f64 (*.f64 (+.f64 a b) (+.f64 eps eps))) (+.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) #s(literal 1 binary64)))) (/.f64 #s(literal 1 binary64) (+.f64 (exp.f64 (*.f64 (+.f64 a b) (+.f64 eps eps))) (+.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) #s(literal 1 binary64)))))","(*.f64 (+.f64 (exp.f64 (*.f64 (+.f64 a b) (/.f64 eps #s(literal 2 binary64)))) #s(literal 1 binary64)) (expm1.f64 (*.f64 (+.f64 a b) (/.f64 eps #s(literal 2 binary64)))))","(*.f64 #s(literal 1 binary64) (expm1.f64 (*.f64 (+.f64 a b) eps)))","(*.f64 (neg.f64 (expm1.f64 (*.f64 (+.f64 a b) (+.f64 eps eps)))) (/.f64 #s(literal 1 binary64) (+.f64 (neg.f64 (exp.f64 (*.f64 (+.f64 a b) eps))) #s(literal -1 binary64))))","(*.f64 (/.f64 #s(literal 1 binary64) (+.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) #s(literal 1 binary64))) (expm1.f64 (*.f64 (+.f64 a b) (+.f64 eps eps))))","(*.f64 (/.f64 (expm1.f64 (*.f64 (+.f64 a b) (+.f64 eps eps))) (expm1.f64 (*.f64 (+.f64 a b) (+.f64 eps eps)))) (expm1.f64 (*.f64 (+.f64 a b) eps)))","(neg.f64 (*.f64 (expm1.f64 (*.f64 (+.f64 a b) eps)) (neg.f64 eps)))","(neg.f64 (/.f64 (*.f64 (expm1.f64 (*.f64 (+.f64 a b) eps)) (neg.f64 eps)) #s(literal 1 binary64)))","(+.f64 (*.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) eps) (neg.f64 eps))","(+.f64 #s(literal 0 binary64) (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps))))","(+.f64 (neg.f64 eps) (*.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) eps))","(+.f64 (*.f64 #s(literal -1 binary64) (*.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) (neg.f64 eps))) (neg.f64 eps))","(+.f64 (*.f64 (*.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) (neg.f64 eps)) #s(literal -1 binary64)) (neg.f64 eps))","(+.f64 (neg.f64 (*.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) (neg.f64 eps))) (neg.f64 eps))","(+.f64 (*.f64 (neg.f64 (expm1.f64 (*.f64 (+.f64 a b) eps))) #s(literal 0 binary64)) (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps))))","(+.f64 (*.f64 #s(literal 0 binary64) (neg.f64 (expm1.f64 (*.f64 (+.f64 a b) eps)))) (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps))))","(-.f64 #s(literal 0 binary64) (*.f64 (expm1.f64 (*.f64 (+.f64 a b) eps)) (neg.f64 eps)))","(-.f64 (-.f64 #s(literal 0 binary64) (*.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) (neg.f64 eps))) eps)","(-.f64 (/.f64 #s(literal 0 binary64) #s(literal 1 binary64)) (/.f64 (*.f64 (expm1.f64 (*.f64 (+.f64 a b) eps)) (neg.f64 eps)) #s(literal 1 binary64)))","(*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps)))","(*.f64 (expm1.f64 (*.f64 (+.f64 a b) eps)) eps)","(+.f64 (*.f64 a eps) (*.f64 b eps))","(+.f64 (*.f64 b eps) (*.f64 a eps))","(+.f64 (*.f64 (+.f64 a b) eps) #s(literal 0 binary64))","(+.f64 #s(literal 0 binary64) (*.f64 (+.f64 a b) eps))","(+.f64 (log.f64 (exp.f64 (*.f64 (+.f64 a b) (/.f64 eps #s(literal 2 binary64))))) (log.f64 (exp.f64 (*.f64 (+.f64 a b) (/.f64 eps #s(literal 2 binary64))))))","(*.f64 (+.f64 a b) eps)","(*.f64 eps (+.f64 a b))","(*.f64 (*.f64 (+.f64 a b) (-.f64 a b)) (/.f64 eps (-.f64 a b)))","(*.f64 (+.f64 a b) (log.f64 (exp.f64 eps)))","(*.f64 (*.f64 (fma.f64 (*.f64 a a) a (*.f64 (*.f64 b b) b)) eps) (/.f64 #s(literal 1 binary64) (fma.f64 (-.f64 b a) b (*.f64 a a))))","(*.f64 (*.f64 (*.f64 (+.f64 a b) eps) (-.f64 a b)) (/.f64 #s(literal 1 binary64) (-.f64 a b)))","(*.f64 (fma.f64 (*.f64 a a) a (*.f64 (*.f64 b b) b)) (/.f64 eps (fma.f64 (-.f64 b a) b (*.f64 a a))))","(*.f64 (*.f64 (+.f64 a b) (-.f64 a b)) (*.f64 (/.f64 #s(literal 1 binary64) (-.f64 a b)) eps))","(*.f64 (/.f64 (*.f64 (fma.f64 (*.f64 a a) a (*.f64 (*.f64 b b) b)) eps) (fma.f64 (*.f64 (*.f64 (-.f64 b a) b) (*.f64 (-.f64 b a) b)) (*.f64 (-.f64 b a) b) (*.f64 (*.f64 a a) (*.f64 (*.f64 a a) (*.f64 a a))))) (fma.f64 (*.f64 (-.f64 b a) b) (-.f64 (*.f64 (-.f64 b a) b) (*.f64 a a)) (*.f64 (*.f64 a a) (*.f64 a a))))","(*.f64 (/.f64 (*.f64 (fma.f64 (*.f64 a a) a (*.f64 (*.f64 b b) b)) eps) (*.f64 (fma.f64 (-.f64 b a) b (*.f64 a a)) (fma.f64 a a (*.f64 (neg.f64 b) (-.f64 b a))))) (fma.f64 a a (*.f64 (neg.f64 b) (-.f64 b a))))"]],"time":1999.472900390625,"type":"rewrite"},{"compiler":[[5103,688]],"memory":[[2293488,11177888]],"time":29.169189453125,"type":"eval"},{"alts":[["(+.f64 (/.f64 (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps))) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))) #s(literal 0 binary64))","next",58.21404842679292,"binary64"],["(neg.f64 (/.f64 (*.f64 (expm1.f64 (+.f64 (*.f64 b eps) (*.f64 a eps))) (neg.f64 eps)) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))))","next",58.21014217679292,"binary64"],["(neg.f64 (/.f64 (*.f64 (expm1.f64 (*.f64 (/.f64 (*.f64 (fma.f64 (*.f64 a a) a (*.f64 (*.f64 b b) b)) eps) (fma.f64 (*.f64 (*.f64 (-.f64 b a) b) (*.f64 (-.f64 b a) b)) (*.f64 (-.f64 b a) b) (*.f64 (*.f64 a a) (*.f64 (*.f64 a a) (*.f64 a a))))) (fma.f64 (*.f64 (-.f64 b a) b) (-.f64 (*.f64 (-.f64 b a) b) (*.f64 a a)) (*.f64 (*.f64 a a) (*.f64 a a))))) (neg.f64 eps)) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))))","next",59.23871517644599,"binary64"],["(neg.f64 (/.f64 (*.f64 (expm1.f64 (*.f64 (*.f64 (*.f64 (+.f64 a b) eps) (-.f64 a b)) (/.f64 #s(literal 1 binary64) (-.f64 a b)))) (neg.f64 eps)) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))))","next",58.22023968656153,"binary64"],["(neg.f64 (/.f64 #s(literal -1 binary64) (/.f64 (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))) (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps))))))","done",58.22186092679276,"binary64"],["(neg.f64 (/.f64 #s(literal -1 binary64) (/.f64 (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))) (*.f64 eps (expm1.f64 (*.f64 (*.f64 (+.f64 a b) (-.f64 a b)) (/.f64 eps (-.f64 a b))))))))","next",58.2358646865612,"binary64"],["(neg.f64 (/.f64 #s(literal -1 binary64) (+.f64 (*.f64 (*.f64 (exp.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))) (/.f64 #s(literal 1 binary64) (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps))))) (/.f64 (neg.f64 (expm1.f64 (*.f64 b eps))) (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps)))))))","fresh",63.63958522917689,"binary64"]],"compiler":[[20,15],[22,14],[79,28],[30,20],[21,16],[29,19],[38,21],[20,15],[22,14],[79,28],[30,20],[29,19],[38,21]],"count":[[167,7]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[165,6],"picked":[2,1]}],"memory":[[1155328,9230432]],"min-error":[[58.17926861583838,"binary64"]],"time":18.2548828125,"type":"prune"},{"inputs":[["(neg.f64 (/.f64 (*.f64 (expm1.f64 (+.f64 (*.f64 b eps) (*.f64 a eps))) (neg.f64 eps)) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))))","(/.f64 (*.f64 (expm1.f64 (+.f64 (*.f64 b eps) (*.f64 a eps))) (neg.f64 eps)) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))))","(*.f64 (expm1.f64 (+.f64 (*.f64 b eps) (*.f64 a eps))) (neg.f64 eps))","(expm1.f64 (+.f64 (*.f64 b eps) (*.f64 a eps)))","(+.f64 (*.f64 b eps) (*.f64 a eps))","(*.f64 b eps)","b","eps","(*.f64 a eps)","a","(neg.f64 eps)","(*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))","(expm1.f64 (*.f64 a eps))","(expm1.f64 (*.f64 b eps))","(+.f64 (/.f64 (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps))) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))) #s(literal 0 binary64))","(/.f64 (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps))) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))))","(*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps)))","eps","(expm1.f64 (*.f64 (+.f64 a b) eps))","(*.f64 (+.f64 a b) eps)","(+.f64 a b)","a","b","(*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))","(expm1.f64 (*.f64 a eps))","(*.f64 a eps)","(expm1.f64 (*.f64 b eps))","(*.f64 b eps)","#s(literal 0 binary64)","(neg.f64 (/.f64 (*.f64 (expm1.f64 (*.f64 (*.f64 (*.f64 (+.f64 a b) eps) (-.f64 a b)) (/.f64 #s(literal 1 binary64) (-.f64 a b)))) (neg.f64 eps)) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))))","(/.f64 (*.f64 (expm1.f64 (*.f64 (*.f64 (*.f64 (+.f64 a b) eps) (-.f64 a b)) (/.f64 #s(literal 1 binary64) (-.f64 a b)))) (neg.f64 eps)) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))))","(*.f64 (expm1.f64 (*.f64 (*.f64 (*.f64 (+.f64 a b) eps) (-.f64 a b)) (/.f64 #s(literal 1 binary64) (-.f64 a b)))) (neg.f64 eps))","(expm1.f64 (*.f64 (*.f64 (*.f64 (+.f64 a b) eps) (-.f64 a b)) (/.f64 #s(literal 1 binary64) (-.f64 a b))))","(*.f64 (*.f64 (*.f64 (+.f64 a b) eps) (-.f64 a b)) (/.f64 #s(literal 1 binary64) (-.f64 a b)))","(*.f64 (*.f64 (+.f64 a b) eps) (-.f64 a b))","(*.f64 (+.f64 a b) eps)","(+.f64 a b)","a","b","eps","(-.f64 a b)","(/.f64 #s(literal 1 binary64) (-.f64 a b))","#s(literal 1 binary64)","(neg.f64 eps)","(*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))","(expm1.f64 (*.f64 a eps))","(*.f64 a eps)","(expm1.f64 (*.f64 b eps))","(*.f64 b eps)","(neg.f64 (/.f64 #s(literal -1 binary64) (/.f64 (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))) (*.f64 eps (expm1.f64 (*.f64 (*.f64 (+.f64 a b) (-.f64 a b)) (/.f64 eps (-.f64 a b))))))))","(/.f64 #s(literal -1 binary64) (/.f64 (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))) (*.f64 eps (expm1.f64 (*.f64 (*.f64 (+.f64 a b) (-.f64 a b)) (/.f64 eps (-.f64 a b)))))))","#s(literal -1 binary64)","(/.f64 (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))) (*.f64 eps (expm1.f64 (*.f64 (*.f64 (+.f64 a b) (-.f64 a b)) (/.f64 eps (-.f64 a b))))))","(*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))","(expm1.f64 (*.f64 a eps))","(*.f64 a eps)","a","eps","(expm1.f64 (*.f64 b eps))","(*.f64 b eps)","b","(*.f64 eps (expm1.f64 (*.f64 (*.f64 (+.f64 a b) (-.f64 a b)) (/.f64 eps (-.f64 a b)))))","(expm1.f64 (*.f64 (*.f64 (+.f64 a b) (-.f64 a b)) (/.f64 eps (-.f64 a b))))","(*.f64 (*.f64 (+.f64 a b) (-.f64 a b)) (/.f64 eps (-.f64 a b)))","(*.f64 (+.f64 a b) (-.f64 a b))","(+.f64 a b)","(-.f64 a b)","(/.f64 eps (-.f64 a b))","(neg.f64 (/.f64 (*.f64 (expm1.f64 (*.f64 (/.f64 (*.f64 (fma.f64 (*.f64 a a) a (*.f64 (*.f64 b b) b)) eps) (fma.f64 (*.f64 (*.f64 (-.f64 b a) b) (*.f64 (-.f64 b a) b)) (*.f64 (-.f64 b a) b) (*.f64 (*.f64 a a) (*.f64 (*.f64 a a) (*.f64 a a))))) (fma.f64 (*.f64 (-.f64 b a) b) (-.f64 (*.f64 (-.f64 b a) b) (*.f64 a a)) (*.f64 (*.f64 a a) (*.f64 a a))))) (neg.f64 eps)) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))))","(/.f64 (*.f64 (expm1.f64 (*.f64 (/.f64 (*.f64 (fma.f64 (*.f64 a a) a (*.f64 (*.f64 b b) b)) eps) (fma.f64 (*.f64 (*.f64 (-.f64 b a) b) (*.f64 (-.f64 b a) b)) (*.f64 (-.f64 b a) b) (*.f64 (*.f64 a a) (*.f64 (*.f64 a a) (*.f64 a a))))) (fma.f64 (*.f64 (-.f64 b a) b) (-.f64 (*.f64 (-.f64 b a) b) (*.f64 a a)) (*.f64 (*.f64 a a) (*.f64 a a))))) (neg.f64 eps)) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))))","(*.f64 (expm1.f64 (*.f64 (/.f64 (*.f64 (fma.f64 (*.f64 a a) a (*.f64 (*.f64 b b) b)) eps) (fma.f64 (*.f64 (*.f64 (-.f64 b a) b) (*.f64 (-.f64 b a) b)) (*.f64 (-.f64 b a) b) (*.f64 (*.f64 a a) (*.f64 (*.f64 a a) (*.f64 a a))))) (fma.f64 (*.f64 (-.f64 b a) b) (-.f64 (*.f64 (-.f64 b a) b) (*.f64 a a)) (*.f64 (*.f64 a a) (*.f64 a a))))) (neg.f64 eps))","(expm1.f64 (*.f64 (/.f64 (*.f64 (fma.f64 (*.f64 a a) a (*.f64 (*.f64 b b) b)) eps) (fma.f64 (*.f64 (*.f64 (-.f64 b a) b) (*.f64 (-.f64 b a) b)) (*.f64 (-.f64 b a) b) (*.f64 (*.f64 a a) (*.f64 (*.f64 a a) (*.f64 a a))))) (fma.f64 (*.f64 (-.f64 b a) b) (-.f64 (*.f64 (-.f64 b a) b) (*.f64 a a)) (*.f64 (*.f64 a a) (*.f64 a a)))))","(*.f64 (/.f64 (*.f64 (fma.f64 (*.f64 a a) a (*.f64 (*.f64 b b) b)) eps) (fma.f64 (*.f64 (*.f64 (-.f64 b a) b) (*.f64 (-.f64 b a) b)) (*.f64 (-.f64 b a) b) (*.f64 (*.f64 a a) (*.f64 (*.f64 a a) (*.f64 a a))))) (fma.f64 (*.f64 (-.f64 b a) b) (-.f64 (*.f64 (-.f64 b a) b) (*.f64 a a)) (*.f64 (*.f64 a a) (*.f64 a a))))","(/.f64 (*.f64 (fma.f64 (*.f64 a a) a (*.f64 (*.f64 b b) b)) eps) (fma.f64 (*.f64 (*.f64 (-.f64 b a) b) (*.f64 (-.f64 b a) b)) (*.f64 (-.f64 b a) b) (*.f64 (*.f64 a a) (*.f64 (*.f64 a a) (*.f64 a a)))))","(*.f64 (fma.f64 (*.f64 a a) a (*.f64 (*.f64 b b) b)) eps)","(fma.f64 (*.f64 a a) a (*.f64 (*.f64 b b) b))","(*.f64 a a)","a","(*.f64 (*.f64 b b) b)","(*.f64 b b)","b","eps","(fma.f64 (*.f64 (*.f64 (-.f64 b a) b) (*.f64 (-.f64 b a) b)) (*.f64 (-.f64 b a) b) (*.f64 (*.f64 a a) (*.f64 (*.f64 a a) (*.f64 a a))))","(*.f64 (*.f64 (-.f64 b a) b) (*.f64 (-.f64 b a) b))","(*.f64 (-.f64 b a) b)","(-.f64 b a)","(*.f64 (*.f64 a a) (*.f64 (*.f64 a a) (*.f64 a a)))","(*.f64 (*.f64 a a) (*.f64 a a))","(fma.f64 (*.f64 (-.f64 b a) b) (-.f64 (*.f64 (-.f64 b a) b) (*.f64 a a)) (*.f64 (*.f64 a a) (*.f64 a a)))","(-.f64 (*.f64 (-.f64 b a) b) (*.f64 a a))","(neg.f64 eps)","(*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))","(expm1.f64 (*.f64 a eps))","(*.f64 a eps)","(expm1.f64 (*.f64 b eps))","(*.f64 b eps)"]],"locations":[["(expm1.f64 (*.f64 (/.f64 (*.f64 (fma.f64 (*.f64 a a) a (*.f64 (*.f64 b b) b)) eps) (fma.f64 (*.f64 (*.f64 (-.f64 b a) b) (*.f64 (-.f64 b a) b)) (*.f64 (-.f64 b a) b) (*.f64 (*.f64 a a) (*.f64 (*.f64 a a) (*.f64 a a))))) (fma.f64 (*.f64 (-.f64 b a) b) (-.f64 (*.f64 (-.f64 b a) b) (*.f64 a a)) (*.f64 (*.f64 a a) (*.f64 a a)))))","cost-diff",0],["(*.f64 (expm1.f64 (*.f64 (/.f64 (*.f64 (fma.f64 (*.f64 a a) a (*.f64 (*.f64 b b) b)) eps) (fma.f64 (*.f64 (*.f64 (-.f64 b a) b) (*.f64 (-.f64 b a) b)) (*.f64 (-.f64 b a) b) (*.f64 (*.f64 a a) (*.f64 (*.f64 a a) (*.f64 a a))))) (fma.f64 (*.f64 (-.f64 b a) b) (-.f64 (*.f64 (-.f64 b a) b) (*.f64 a a)) (*.f64 (*.f64 a a) (*.f64 a a))))) (neg.f64 eps))","cost-diff",0],["(/.f64 (*.f64 (expm1.f64 (*.f64 (/.f64 (*.f64 (fma.f64 (*.f64 a a) a (*.f64 (*.f64 b b) b)) eps) (fma.f64 (*.f64 (*.f64 (-.f64 b a) b) (*.f64 (-.f64 b a) b)) (*.f64 (-.f64 b a) b) (*.f64 (*.f64 a a) (*.f64 (*.f64 a a) (*.f64 a a))))) (fma.f64 (*.f64 (-.f64 b a) b) (-.f64 (*.f64 (-.f64 b a) b) (*.f64 a a)) (*.f64 (*.f64 a a) (*.f64 a a))))) (neg.f64 eps)) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))))","cost-diff",0],["(neg.f64 (/.f64 (*.f64 (expm1.f64 (*.f64 (/.f64 (*.f64 (fma.f64 (*.f64 a a) a (*.f64 (*.f64 b b) b)) eps) (fma.f64 (*.f64 (*.f64 (-.f64 b a) b) (*.f64 (-.f64 b a) b)) (*.f64 (-.f64 b a) b) (*.f64 (*.f64 a a) (*.f64 (*.f64 a a) (*.f64 a a))))) (fma.f64 (*.f64 (-.f64 b a) b) (-.f64 (*.f64 (-.f64 b a) b) (*.f64 a a)) (*.f64 (*.f64 a a) (*.f64 a a))))) (neg.f64 eps)) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))))","cost-diff",2],["(/.f64 (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))) (*.f64 eps (expm1.f64 (*.f64 (*.f64 (+.f64 a b) (-.f64 a b)) (/.f64 eps (-.f64 a b))))))","cost-diff",0],["(/.f64 #s(literal -1 binary64) (/.f64 (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))) (*.f64 eps (expm1.f64 (*.f64 (*.f64 (+.f64 a b) (-.f64 a b)) (/.f64 eps (-.f64 a b)))))))","cost-diff",1],["(neg.f64 (/.f64 #s(literal -1 binary64) (/.f64 (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))) (*.f64 eps (expm1.f64 (*.f64 (*.f64 (+.f64 a b) (-.f64 a b)) (/.f64 eps (-.f64 a b))))))))","cost-diff",2],["(*.f64 (*.f64 (+.f64 a b) (-.f64 a b)) (/.f64 eps (-.f64 a b)))","cost-diff",8],["(*.f64 (expm1.f64 (*.f64 (*.f64 (*.f64 (+.f64 a b) eps) (-.f64 a b)) (/.f64 #s(literal 1 binary64) (-.f64 a b)))) (neg.f64 eps))","cost-diff",0],["(/.f64 (*.f64 (expm1.f64 (*.f64 (*.f64 (*.f64 (+.f64 a b) eps) (-.f64 a b)) (/.f64 #s(literal 1 binary64) (-.f64 a b)))) (neg.f64 eps)) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))))","cost-diff",0],["(neg.f64 (/.f64 (*.f64 (expm1.f64 (*.f64 (*.f64 (*.f64 (+.f64 a b) eps) (-.f64 a b)) (/.f64 #s(literal 1 binary64) (-.f64 a b)))) (neg.f64 eps)) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))))","cost-diff",2],["(*.f64 (*.f64 (*.f64 (+.f64 a b) eps) (-.f64 a b)) (/.f64 #s(literal 1 binary64) (-.f64 a b)))","cost-diff",10],["(expm1.f64 (*.f64 (+.f64 a b) eps))","cost-diff",0],["(*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps)))","cost-diff",0],["(/.f64 (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps))) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))))","cost-diff",0],["(+.f64 (/.f64 (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps))) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))) #s(literal 0 binary64))","cost-diff",2],["(*.f64 (expm1.f64 (+.f64 (*.f64 b eps) (*.f64 a eps))) (neg.f64 eps))","cost-diff",0],["(/.f64 (*.f64 (expm1.f64 (+.f64 (*.f64 b eps) (*.f64 a eps))) (neg.f64 eps)) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))))","cost-diff",0],["(+.f64 (*.f64 b eps) (*.f64 a eps))","cost-diff",2],["(neg.f64 (/.f64 (*.f64 (expm1.f64 (+.f64 (*.f64 b eps) (*.f64 a eps))) (neg.f64 eps)) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))))","cost-diff",2]],"memory":[[-6034144,19947376]],"method":["egg-herbie"],"outputs":[["(neg.f64 (/.f64 (*.f64 (expm1.f64 (+.f64 (*.f64 b eps) (*.f64 a eps))) (neg.f64 eps)) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))))","(/.f64 (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps))) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))))","(/.f64 (*.f64 (expm1.f64 (+.f64 (*.f64 b eps) (*.f64 a eps))) (neg.f64 eps)) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))))","(/.f64 (*.f64 (expm1.f64 (*.f64 (+.f64 a b) eps)) (neg.f64 eps)) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))))","(*.f64 (expm1.f64 (+.f64 (*.f64 b eps) (*.f64 a eps))) (neg.f64 eps))","(*.f64 (expm1.f64 (*.f64 (+.f64 a b) eps)) (neg.f64 eps))","(expm1.f64 (+.f64 (*.f64 b eps) (*.f64 a eps)))","(expm1.f64 (*.f64 (+.f64 a b) eps))","(+.f64 (*.f64 b eps) (*.f64 a eps))","(*.f64 (+.f64 a b) eps)","(*.f64 b eps)","b","eps","(*.f64 a eps)","a","(neg.f64 eps)","(*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))","(expm1.f64 (*.f64 a eps))","(expm1.f64 (*.f64 b eps))","(+.f64 (/.f64 (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps))) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))) #s(literal 0 binary64))","(/.f64 (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps))) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))))","(/.f64 (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps))) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))))","(*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps)))","eps","(expm1.f64 (*.f64 (+.f64 a b) eps))","(*.f64 (+.f64 a b) eps)","(+.f64 a b)","a","b","(*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))","(expm1.f64 (*.f64 a eps))","(*.f64 a eps)","(expm1.f64 (*.f64 b eps))","(*.f64 b eps)","#s(literal 0 binary64)","(neg.f64 (/.f64 (*.f64 (expm1.f64 (*.f64 (*.f64 (*.f64 (+.f64 a b) eps) (-.f64 a b)) (/.f64 #s(literal 1 binary64) (-.f64 a b)))) (neg.f64 eps)) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))))","(/.f64 (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps))) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))))","(/.f64 (*.f64 (expm1.f64 (*.f64 (*.f64 (*.f64 (+.f64 a b) eps) (-.f64 a b)) (/.f64 #s(literal 1 binary64) (-.f64 a b)))) (neg.f64 eps)) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))))","(/.f64 (*.f64 (expm1.f64 (*.f64 (+.f64 a b) eps)) (neg.f64 eps)) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))))","(*.f64 (expm1.f64 (*.f64 (*.f64 (*.f64 (+.f64 a b) eps) (-.f64 a b)) (/.f64 #s(literal 1 binary64) (-.f64 a b)))) (neg.f64 eps))","(*.f64 (expm1.f64 (*.f64 (+.f64 a b) eps)) (neg.f64 eps))","(expm1.f64 (*.f64 (*.f64 (*.f64 (+.f64 a b) eps) (-.f64 a b)) (/.f64 #s(literal 1 binary64) (-.f64 a b))))","(expm1.f64 (*.f64 (+.f64 a b) eps))","(*.f64 (*.f64 (*.f64 (+.f64 a b) eps) (-.f64 a b)) (/.f64 #s(literal 1 binary64) (-.f64 a b)))","(*.f64 (+.f64 a b) eps)","(*.f64 (*.f64 (+.f64 a b) eps) (-.f64 a b))","(*.f64 (+.f64 a b) eps)","(+.f64 a b)","a","b","eps","(-.f64 a b)","(/.f64 #s(literal 1 binary64) (-.f64 a b))","#s(literal 1 binary64)","(neg.f64 eps)","(*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))","(expm1.f64 (*.f64 a eps))","(*.f64 a eps)","(expm1.f64 (*.f64 b eps))","(*.f64 b eps)","(neg.f64 (/.f64 #s(literal -1 binary64) (/.f64 (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))) (*.f64 eps (expm1.f64 (*.f64 (*.f64 (+.f64 a b) (-.f64 a b)) (/.f64 eps (-.f64 a b))))))))","(/.f64 (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps))) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))))","(/.f64 #s(literal -1 binary64) (/.f64 (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))) (*.f64 eps (expm1.f64 (*.f64 (*.f64 (+.f64 a b) (-.f64 a b)) (/.f64 eps (-.f64 a b)))))))","(/.f64 (*.f64 (expm1.f64 (*.f64 (+.f64 a b) eps)) (neg.f64 eps)) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))))","#s(literal -1 binary64)","(/.f64 (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))) (*.f64 eps (expm1.f64 (*.f64 (*.f64 (+.f64 a b) (-.f64 a b)) (/.f64 eps (-.f64 a b))))))","(/.f64 (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))) (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps))))","(*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))","(expm1.f64 (*.f64 a eps))","(*.f64 a eps)","a","eps","(expm1.f64 (*.f64 b eps))","(*.f64 b eps)","b","(*.f64 eps (expm1.f64 (*.f64 (*.f64 (+.f64 a b) (-.f64 a b)) (/.f64 eps (-.f64 a b)))))","(*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps)))","(expm1.f64 (*.f64 (*.f64 (+.f64 a b) (-.f64 a b)) (/.f64 eps (-.f64 a b))))","(expm1.f64 (*.f64 (+.f64 a b) eps))","(*.f64 (*.f64 (+.f64 a b) (-.f64 a b)) (/.f64 eps (-.f64 a b)))","(*.f64 (+.f64 a b) eps)","(*.f64 (+.f64 a b) (-.f64 a b))","(+.f64 a b)","(-.f64 a b)","(/.f64 eps (-.f64 a b))","(neg.f64 (/.f64 (*.f64 (expm1.f64 (*.f64 (/.f64 (*.f64 (fma.f64 (*.f64 a a) a (*.f64 (*.f64 b b) b)) eps) (fma.f64 (*.f64 (*.f64 (-.f64 b a) b) (*.f64 (-.f64 b a) b)) (*.f64 (-.f64 b a) b) (*.f64 (*.f64 a a) (*.f64 (*.f64 a a) (*.f64 a a))))) (fma.f64 (*.f64 (-.f64 b a) b) (-.f64 (*.f64 (-.f64 b a) b) (*.f64 a a)) (*.f64 (*.f64 a a) (*.f64 a a))))) (neg.f64 eps)) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))))","(*.f64 (expm1.f64 (/.f64 (*.f64 (fma.f64 (*.f64 (-.f64 b a) b) (fma.f64 (neg.f64 a) a (*.f64 (-.f64 b a) b)) (*.f64 (*.f64 a a) (*.f64 a a))) (*.f64 (fma.f64 (*.f64 a a) a (*.f64 (*.f64 b b) b)) eps)) (fma.f64 (*.f64 (-.f64 b a) (-.f64 b a)) (*.f64 (*.f64 (*.f64 b b) b) (-.f64 b a)) (*.f64 (*.f64 a a) (*.f64 (*.f64 a a) (*.f64 a a)))))) (/.f64 eps (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))))","(/.f64 (*.f64 (expm1.f64 (*.f64 (/.f64 (*.f64 (fma.f64 (*.f64 a a) a (*.f64 (*.f64 b b) b)) eps) (fma.f64 (*.f64 (*.f64 (-.f64 b a) b) (*.f64 (-.f64 b a) b)) (*.f64 (-.f64 b a) b) (*.f64 (*.f64 a a) (*.f64 (*.f64 a a) (*.f64 a a))))) (fma.f64 (*.f64 (-.f64 b a) b) (-.f64 (*.f64 (-.f64 b a) b) (*.f64 a a)) (*.f64 (*.f64 a a) (*.f64 a a))))) (neg.f64 eps)) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))))","(*.f64 (expm1.f64 (/.f64 (*.f64 (fma.f64 (*.f64 (-.f64 b a) b) (fma.f64 (neg.f64 a) a (*.f64 (-.f64 b a) b)) (*.f64 (*.f64 a a) (*.f64 a a))) (*.f64 (fma.f64 (*.f64 a a) a (*.f64 (*.f64 b b) b)) eps)) (fma.f64 (*.f64 (-.f64 b a) (-.f64 b a)) (*.f64 (*.f64 (*.f64 b b) b) (-.f64 b a)) (*.f64 (*.f64 a a) (*.f64 (*.f64 a a) (*.f64 a a)))))) (/.f64 (neg.f64 eps) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))))","(*.f64 (expm1.f64 (*.f64 (/.f64 (*.f64 (fma.f64 (*.f64 a a) a (*.f64 (*.f64 b b) b)) eps) (fma.f64 (*.f64 (*.f64 (-.f64 b a) b) (*.f64 (-.f64 b a) b)) (*.f64 (-.f64 b a) b) (*.f64 (*.f64 a a) (*.f64 (*.f64 a a) (*.f64 a a))))) (fma.f64 (*.f64 (-.f64 b a) b) (-.f64 (*.f64 (-.f64 b a) b) (*.f64 a a)) (*.f64 (*.f64 a a) (*.f64 a a))))) (neg.f64 eps))","(*.f64 (expm1.f64 (/.f64 (*.f64 (fma.f64 (*.f64 (-.f64 b a) b) (fma.f64 (neg.f64 a) a (*.f64 (-.f64 b a) b)) (*.f64 (*.f64 a a) (*.f64 a a))) (*.f64 (fma.f64 (*.f64 a a) a (*.f64 (*.f64 b b) b)) eps)) (fma.f64 (*.f64 (-.f64 b a) (-.f64 b a)) (*.f64 (*.f64 (*.f64 b b) b) (-.f64 b a)) (*.f64 (*.f64 a a) (*.f64 (*.f64 a a) (*.f64 a a)))))) (neg.f64 eps))","(expm1.f64 (*.f64 (/.f64 (*.f64 (fma.f64 (*.f64 a a) a (*.f64 (*.f64 b b) b)) eps) (fma.f64 (*.f64 (*.f64 (-.f64 b a) b) (*.f64 (-.f64 b a) b)) (*.f64 (-.f64 b a) b) (*.f64 (*.f64 a a) (*.f64 (*.f64 a a) (*.f64 a a))))) (fma.f64 (*.f64 (-.f64 b a) b) (-.f64 (*.f64 (-.f64 b a) b) (*.f64 a a)) (*.f64 (*.f64 a a) (*.f64 a a)))))","(expm1.f64 (/.f64 (*.f64 (fma.f64 (*.f64 (-.f64 b a) b) (fma.f64 (neg.f64 a) a (*.f64 (-.f64 b a) b)) (*.f64 (*.f64 a a) (*.f64 a a))) (*.f64 (fma.f64 (*.f64 a a) a (*.f64 (*.f64 b b) b)) eps)) (fma.f64 (*.f64 (-.f64 b a) (-.f64 b a)) (*.f64 (*.f64 (*.f64 b b) b) (-.f64 b a)) (*.f64 (*.f64 a a) (*.f64 (*.f64 a a) (*.f64 a a))))))","(*.f64 (/.f64 (*.f64 (fma.f64 (*.f64 a a) a (*.f64 (*.f64 b b) b)) eps) (fma.f64 (*.f64 (*.f64 (-.f64 b a) b) (*.f64 (-.f64 b a) b)) (*.f64 (-.f64 b a) b) (*.f64 (*.f64 a a) (*.f64 (*.f64 a a) (*.f64 a a))))) (fma.f64 (*.f64 (-.f64 b a) b) (-.f64 (*.f64 (-.f64 b a) b) (*.f64 a a)) (*.f64 (*.f64 a a) (*.f64 a a))))","(/.f64 (*.f64 (fma.f64 (*.f64 (-.f64 b a) b) (fma.f64 (neg.f64 a) a (*.f64 (-.f64 b a) b)) (*.f64 (*.f64 a a) (*.f64 a a))) (*.f64 (fma.f64 (*.f64 a a) a (*.f64 (*.f64 b b) b)) eps)) (fma.f64 (*.f64 (-.f64 b a) (-.f64 b a)) (*.f64 (*.f64 (*.f64 b b) b) (-.f64 b a)) (*.f64 (*.f64 a a) (*.f64 (*.f64 a a) (*.f64 a a)))))","(/.f64 (*.f64 (fma.f64 (*.f64 a a) a (*.f64 (*.f64 b b) b)) eps) (fma.f64 (*.f64 (*.f64 (-.f64 b a) b) (*.f64 (-.f64 b a) b)) (*.f64 (-.f64 b a) b) (*.f64 (*.f64 a a) (*.f64 (*.f64 a a) (*.f64 a a)))))","(/.f64 (*.f64 (fma.f64 (*.f64 a a) a (*.f64 (*.f64 b b) b)) eps) (fma.f64 (*.f64 (-.f64 b a) (-.f64 b a)) (*.f64 (*.f64 (*.f64 b b) b) (-.f64 b a)) (*.f64 (*.f64 a a) (*.f64 (*.f64 a a) (*.f64 a a)))))","(*.f64 (fma.f64 (*.f64 a a) a (*.f64 (*.f64 b b) b)) eps)","(fma.f64 (*.f64 a a) a (*.f64 (*.f64 b b) b))","(*.f64 a a)","a","(*.f64 (*.f64 b b) b)","(*.f64 b b)","b","eps","(fma.f64 (*.f64 (*.f64 (-.f64 b a) b) (*.f64 (-.f64 b a) b)) (*.f64 (-.f64 b a) b) (*.f64 (*.f64 a a) (*.f64 (*.f64 a a) (*.f64 a a))))","(fma.f64 (*.f64 (-.f64 b a) (-.f64 b a)) (*.f64 (*.f64 (*.f64 b b) b) (-.f64 b a)) (*.f64 (*.f64 a a) (*.f64 (*.f64 a a) (*.f64 a a))))","(*.f64 (*.f64 (-.f64 b a) b) (*.f64 (-.f64 b a) b))","(*.f64 (-.f64 b a) b)","(-.f64 b a)","(*.f64 (*.f64 a a) (*.f64 (*.f64 a a) (*.f64 a a)))","(*.f64 (*.f64 a a) (*.f64 a a))","(fma.f64 (*.f64 (-.f64 b a) b) (-.f64 (*.f64 (-.f64 b a) b) (*.f64 a a)) (*.f64 (*.f64 a a) (*.f64 a a)))","(fma.f64 (*.f64 (-.f64 b a) b) (fma.f64 (neg.f64 a) a (*.f64 (-.f64 b a) b)) (*.f64 (*.f64 a a) (*.f64 a a)))","(-.f64 (*.f64 (-.f64 b a) b) (*.f64 a a))","(fma.f64 (neg.f64 a) a (*.f64 (-.f64 b a) b))","(neg.f64 eps)","(*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))","(expm1.f64 (*.f64 a eps))","(*.f64 a eps)","(expm1.f64 (*.f64 b eps))","(*.f64 b eps)"]],"time":2065.5458984375,"type":"simplify"},{"compiler":[[1219,63]],"locations":[["(*.f64 (*.f64 (-.f64 b a) b) (*.f64 (-.f64 b a) b))","accuracy",0.18359375],["(*.f64 (/.f64 (*.f64 (fma.f64 (*.f64 a a) a (*.f64 (*.f64 b b) b)) eps) (fma.f64 (*.f64 (*.f64 (-.f64 b a) b) (*.f64 (-.f64 b a) b)) (*.f64 (-.f64 b a) b) (*.f64 (*.f64 a a) (*.f64 (*.f64 a a) (*.f64 a a))))) (fma.f64 (*.f64 (-.f64 b a) b) (-.f64 (*.f64 (-.f64 b a) b) (*.f64 a a)) (*.f64 (*.f64 a a) (*.f64 a a))))","accuracy",17.998978155213486],["(/.f64 (*.f64 (fma.f64 (*.f64 a a) a (*.f64 (*.f64 b b) b)) eps) (fma.f64 (*.f64 (*.f64 (-.f64 b a) b) (*.f64 (-.f64 b a) b)) (*.f64 (-.f64 b a) b) (*.f64 (*.f64 a a) (*.f64 (*.f64 a a) (*.f64 a a)))))","accuracy",45.97646303822492],["(/.f64 (*.f64 (expm1.f64 (*.f64 (/.f64 (*.f64 (fma.f64 (*.f64 a a) a (*.f64 (*.f64 b b) b)) eps) (fma.f64 (*.f64 (*.f64 (-.f64 b a) b) (*.f64 (-.f64 b a) b)) (*.f64 (-.f64 b a) b) (*.f64 (*.f64 a a) (*.f64 (*.f64 a a) (*.f64 a a))))) (fma.f64 (*.f64 (-.f64 b a) b) (-.f64 (*.f64 (-.f64 b a) b) (*.f64 a a)) (*.f64 (*.f64 a a) (*.f64 a a))))) (neg.f64 eps)) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))))","accuracy",56.41712990977874],["(/.f64 #s(literal -1 binary64) (/.f64 (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))) (*.f64 eps (expm1.f64 (*.f64 (*.f64 (+.f64 a b) (-.f64 a b)) (/.f64 eps (-.f64 a b)))))))","accuracy",0.03125],["(*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))","accuracy",0.0390625],["(*.f64 (*.f64 (+.f64 a b) (-.f64 a b)) (/.f64 eps (-.f64 a b)))","accuracy",0.21484375],["(/.f64 (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))) (*.f64 eps (expm1.f64 (*.f64 (*.f64 (+.f64 a b) (-.f64 a b)) (/.f64 eps (-.f64 a b))))))","accuracy",57.357150942474696],["(/.f64 #s(literal 1 binary64) (-.f64 a b))","accuracy",0.0546875],["(*.f64 (*.f64 (+.f64 a b) eps) (-.f64 a b))","accuracy",0.1015625],["(*.f64 (*.f64 (*.f64 (+.f64 a b) eps) (-.f64 a b)) (/.f64 #s(literal 1 binary64) (-.f64 a b)))","accuracy",10.576223610693567],["(/.f64 (*.f64 (expm1.f64 (*.f64 (*.f64 (*.f64 (+.f64 a b) eps) (-.f64 a b)) (/.f64 #s(literal 1 binary64) (-.f64 a b)))) (neg.f64 eps)) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))))","accuracy",56.41712990977874],["(*.f64 (+.f64 a b) eps)","accuracy",0.015625],["(*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps)))","accuracy",0.02734375],["(*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))","accuracy",0.0390625],["(/.f64 (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps))) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))))","accuracy",56.457110456795874],["(+.f64 (*.f64 b eps) (*.f64 a eps))","accuracy",0.0078125],["(*.f64 (expm1.f64 (+.f64 (*.f64 b eps) (*.f64 a eps))) (neg.f64 eps))","accuracy",0.02734375],["(*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))","accuracy",0.0390625],["(/.f64 (*.f64 (expm1.f64 (+.f64 (*.f64 b eps) (*.f64 a eps))) (neg.f64 eps)) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))))","accuracy",56.41712990977874]],"memory":[[3162608,75270240]],"mixsample":[[16.15771484375,"ival-div",0],[7.87109375,"ival-add",0],[42.126708984375,"ival-mult",0],[10.698974609375,"ival-expm1",0],[0.196533203125,"ival-assert",0],[4.418701171875,"ival-sub",0],[0.357666015625,"ival-true",0],[0.509765625,"exact",0],[5.582275390625,"ival-neg",0]],"outcomes":[[132.7763671875,0,"valid",256]],"time":205.360107421875,"type":"localize"},{"count":[[27,257]],"inputs":[["(neg.f64 (/.f64 (*.f64 (expm1.f64 (+.f64 (*.f64 b eps) (*.f64 a eps))) (neg.f64 eps)) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))))","(+.f64 (*.f64 b eps) (*.f64 a eps))","(/.f64 (*.f64 (expm1.f64 (+.f64 (*.f64 b eps) (*.f64 a eps))) (neg.f64 eps)) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))))","(*.f64 (expm1.f64 (+.f64 (*.f64 b eps) (*.f64 a eps))) (neg.f64 eps))","(+.f64 (/.f64 (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps))) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))) #s(literal 0 binary64))","(/.f64 (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps))) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))))","(*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps)))","(expm1.f64 (*.f64 (+.f64 a b) eps))","(*.f64 (*.f64 (*.f64 (+.f64 a b) eps) (-.f64 a b)) (/.f64 #s(literal 1 binary64) (-.f64 a b)))","(neg.f64 (/.f64 (*.f64 (expm1.f64 (*.f64 (*.f64 (*.f64 (+.f64 a b) eps) (-.f64 a b)) (/.f64 #s(literal 1 binary64) (-.f64 a b)))) (neg.f64 eps)) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))))","(/.f64 (*.f64 (expm1.f64 (*.f64 (*.f64 (*.f64 (+.f64 a b) eps) (-.f64 a b)) (/.f64 #s(literal 1 binary64) (-.f64 a b)))) (neg.f64 eps)) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))))","(*.f64 (expm1.f64 (*.f64 (*.f64 (*.f64 (+.f64 a b) eps) (-.f64 a b)) (/.f64 #s(literal 1 binary64) (-.f64 a b)))) (neg.f64 eps))","(*.f64 (*.f64 (+.f64 a b) (-.f64 a b)) (/.f64 eps (-.f64 a b)))","(neg.f64 (/.f64 #s(literal -1 binary64) (/.f64 (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))) (*.f64 eps (expm1.f64 (*.f64 (*.f64 (+.f64 a b) (-.f64 a b)) (/.f64 eps (-.f64 a b))))))))","(/.f64 #s(literal -1 binary64) (/.f64 (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))) (*.f64 eps (expm1.f64 (*.f64 (*.f64 (+.f64 a b) (-.f64 a b)) (/.f64 eps (-.f64 a b)))))))","(/.f64 (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))) (*.f64 eps (expm1.f64 (*.f64 (*.f64 (+.f64 a b) (-.f64 a b)) (/.f64 eps (-.f64 a b))))))","(neg.f64 (/.f64 (*.f64 (expm1.f64 (*.f64 (/.f64 (*.f64 (fma.f64 (*.f64 a a) a (*.f64 (*.f64 b b) b)) eps) (fma.f64 (*.f64 (*.f64 (-.f64 b a) b) (*.f64 (-.f64 b a) b)) (*.f64 (-.f64 b a) b) (*.f64 (*.f64 a a) (*.f64 (*.f64 a a) (*.f64 a a))))) (fma.f64 (*.f64 (-.f64 b a) b) (-.f64 (*.f64 (-.f64 b a) b) (*.f64 a a)) (*.f64 (*.f64 a a) (*.f64 a a))))) (neg.f64 eps)) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))))","(/.f64 (*.f64 (expm1.f64 (*.f64 (/.f64 (*.f64 (fma.f64 (*.f64 a a) a (*.f64 (*.f64 b b) b)) eps) (fma.f64 (*.f64 (*.f64 (-.f64 b a) b) (*.f64 (-.f64 b a) b)) (*.f64 (-.f64 b a) b) (*.f64 (*.f64 a a) (*.f64 (*.f64 a a) (*.f64 a a))))) (fma.f64 (*.f64 (-.f64 b a) b) (-.f64 (*.f64 (-.f64 b a) b) (*.f64 a a)) (*.f64 (*.f64 a a) (*.f64 a a))))) (neg.f64 eps)) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))))","(*.f64 (expm1.f64 (*.f64 (/.f64 (*.f64 (fma.f64 (*.f64 a a) a (*.f64 (*.f64 b b) b)) eps) (fma.f64 (*.f64 (*.f64 (-.f64 b a) b) (*.f64 (-.f64 b a) b)) (*.f64 (-.f64 b a) b) (*.f64 (*.f64 a a) (*.f64 (*.f64 a a) (*.f64 a a))))) (fma.f64 (*.f64 (-.f64 b a) b) (-.f64 (*.f64 (-.f64 b a) b) (*.f64 a a)) (*.f64 (*.f64 a a) (*.f64 a a))))) (neg.f64 eps))","(expm1.f64 (*.f64 (/.f64 (*.f64 (fma.f64 (*.f64 a a) a (*.f64 (*.f64 b b) b)) eps) (fma.f64 (*.f64 (*.f64 (-.f64 b a) b) (*.f64 (-.f64 b a) b)) (*.f64 (-.f64 b a) b) (*.f64 (*.f64 a a) (*.f64 (*.f64 a a) (*.f64 a a))))) (fma.f64 (*.f64 (-.f64 b a) b) (-.f64 (*.f64 (-.f64 b a) b) (*.f64 a a)) (*.f64 (*.f64 a a) (*.f64 a a)))))","(*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))","(*.f64 (+.f64 a b) eps)","(*.f64 (*.f64 (+.f64 a b) eps) (-.f64 a b))","(/.f64 #s(literal 1 binary64) (-.f64 a b))","(/.f64 (*.f64 (fma.f64 (*.f64 a a) a (*.f64 (*.f64 b b) b)) eps) (fma.f64 (*.f64 (*.f64 (-.f64 b a) b) (*.f64 (-.f64 b a) b)) (*.f64 (-.f64 b a) b) (*.f64 (*.f64 a a) (*.f64 (*.f64 a a) (*.f64 a a)))))","(*.f64 (/.f64 (*.f64 (fma.f64 (*.f64 a a) a (*.f64 (*.f64 b b) b)) eps) (fma.f64 (*.f64 (*.f64 (-.f64 b a) b) (*.f64 (-.f64 b a) b)) (*.f64 (-.f64 b a) b) (*.f64 (*.f64 a a) (*.f64 (*.f64 a a) (*.f64 a a))))) (fma.f64 (*.f64 (-.f64 b a) b) (-.f64 (*.f64 (-.f64 b a) b) (*.f64 a a)) (*.f64 (*.f64 a a) (*.f64 a a))))","(*.f64 (*.f64 (-.f64 b a) b) (*.f64 (-.f64 b a) b))"]],"memory":[[5200640,47094672]],"outputs":[["(/ 1 a)","(/ (+ 1 (* a (- (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1)) (* 1/2 eps)))) a)","(/ (+ 1 (* a (- (* a (- (* 1/2 (/ (* (pow eps 2) (exp (* b eps))) (- (exp (* b eps)) 1))) (+ (* 1/6 (pow eps 2)) (* 1/2 (* eps (- (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1)) (* 1/2 eps))))))) (* -1 (- (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1)) (* 1/2 eps)))))) a)","(/ (+ 1 (* a (- (* a (- (* a (- (* 1/6 (/ (* (pow eps 3) (exp (* b eps))) (- (exp (* b eps)) 1))) (+ (* 1/24 (pow eps 3)) (+ (* 1/6 (* (pow eps 2) (- (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1)) (* 1/2 eps)))) (* 1/2 (* eps (- (* 1/2 (/ (* (pow eps 2) (exp (* b eps))) (- (exp (* b eps)) 1))) (+ (* 1/6 (pow eps 2)) (* 1/2 (* eps (- (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1)) (* 1/2 eps)))))))))))) (* -1 (- (* 1/2 (/ (* (pow eps 2) (exp (* b eps))) (- (exp (* b eps)) 1))) (+ (* 1/6 (pow eps 2)) (* 1/2 (* eps (- (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1)) (* 1/2 eps))))))))) (* -1 (- (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1)) (* 1/2 eps)))))) a)","(* b eps)","(+ (* a eps) (* b eps))","(/ -1 a)","(/ (- (* -1 (* a (- (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1)) (* 1/2 eps)))) 1) a)","(/ (- (* a (+ (* -1 (* a (- (* 1/2 (/ (* (pow eps 2) (exp (* b eps))) (- (exp (* b eps)) 1))) (+ (* 1/6 (pow eps 2)) (* 1/2 (* eps (- (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1)) (* 1/2 eps)))))))) (* -1 (- (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1)) (* 1/2 eps))))) 1) a)","(/ (- (* a (+ (* -1 (- (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1)) (* 1/2 eps))) (* a (+ (* -1 (* a (- (* 1/6 (/ (* (pow eps 3) (exp (* b eps))) (- (exp (* b eps)) 1))) (+ (* 1/24 (pow eps 3)) (+ (* 1/6 (* (pow eps 2) (- (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1)) (* 1/2 eps)))) (* 1/2 (* eps (- (* 1/2 (/ (* (pow eps 2) (exp (* b eps))) (- (exp (* b eps)) 1))) (+ (* 1/6 (pow eps 2)) (* 1/2 (* eps (- (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1)) (* 1/2 eps))))))))))))) (* -1 (- (* 1/2 (/ (* (pow eps 2) (exp (* b eps))) (- (exp (* b eps)) 1))) (+ (* 1/6 (pow eps 2)) (* 1/2 (* eps (- (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1)) (* 1/2 eps))))))))))) 1) a)","(* -1 (* eps (- (exp (* b eps)) 1)))","(+ (* -1 (* a (* (pow eps 2) (exp (* b eps))))) (* -1 (* eps (- (exp (* b eps)) 1))))","(+ (* -1 (* eps (- (exp (* b eps)) 1))) (* a (+ (* -1 (* (pow eps 2) (exp (* b eps)))) (* -1/2 (* a (* (pow eps 3) (exp (* b eps))))))))","(+ (* -1 (* eps (- (exp (* b eps)) 1))) (* a (+ (* -1 (* (pow eps 2) (exp (* b eps)))) (* a (+ (* -1/2 (* (pow eps 3) (exp (* b eps)))) (* -1/6 (* a (* (pow eps 4) (exp (* b eps))))))))))","(/ (+ 1 (* a (- (+ (* a (- (* 1/2 (/ (* (pow eps 2) (exp (* b eps))) (- (exp (* b eps)) 1))) (+ (* 1/6 (pow eps 2)) (* 1/2 (* eps (- (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1)) (* 1/2 eps))))))) (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1))) (* 1/2 eps)))) a)","(/ (+ 1 (* a (- (+ (* a (- (+ (* 1/2 (/ (* (pow eps 2) (exp (* b eps))) (- (exp (* b eps)) 1))) (* a (- (* 1/6 (/ (* (pow eps 3) (exp (* b eps))) (- (exp (* b eps)) 1))) (+ (* 1/24 (pow eps 3)) (+ (* 1/6 (* (pow eps 2) (- (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1)) (* 1/2 eps)))) (* 1/2 (* eps (- (* 1/2 (/ (* (pow eps 2) (exp (* b eps))) (- (exp (* b eps)) 1))) (+ (* 1/6 (pow eps 2)) (* 1/2 (* eps (- (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1)) (* 1/2 eps))))))))))))) (+ (* 1/6 (pow eps 2)) (* 1/2 (* eps (- (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1)) (* 1/2 eps))))))) (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1))) (* 1/2 eps)))) a)","(* eps (- (exp (* b eps)) 1))","(+ (* a (* (pow eps 2) (exp (* b eps)))) (* eps (- (exp (* b eps)) 1)))","(+ (* a (+ (* 1/2 (* a (* (pow eps 3) (exp (* b eps))))) (* (pow eps 2) (exp (* b eps))))) (* eps (- (exp (* b eps)) 1)))","(+ (* a (+ (* a (+ (* 1/6 (* a (* (pow eps 4) (exp (* b eps))))) (* 1/2 (* (pow eps 3) (exp (* b eps)))))) (* (pow eps 2) (exp (* b eps))))) (* eps (- (exp (* b eps)) 1)))","(- (exp (* b eps)) 1)","(- (+ (exp (* b eps)) (* a (* eps (exp (* b eps))))) 1)","(- (+ (exp (* b eps)) (* a (+ (* 1/2 (* a (* (pow eps 2) (exp (* b eps))))) (* eps (exp (* b eps)))))) 1)","(- (+ (exp (* b eps)) (* a (+ (* a (+ (* 1/6 (* a (* (pow eps 3) (exp (* b eps))))) (* 1/2 (* (pow eps 2) (exp (* b eps)))))) (* eps (exp (* b eps)))))) 1)","a","(* a (+ 1 (* a (- (* 1/2 eps) (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1))))))","(* a (+ 1 (* a (- (+ (* 1/2 eps) (* a (- (* 1/6 (pow eps 2)) (+ (* 1/2 (/ (* (pow eps 2) (exp (* b eps))) (- (exp (* b eps)) 1))) (/ (* eps (* (exp (* b eps)) (- (* 1/2 eps) (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1))))) (- (exp (* b eps)) 1)))))) (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1))))))","(* a (+ 1 (* a (- (+ (* 1/2 eps) (* a (- (+ (* 1/6 (pow eps 2)) (* a (- (* 1/24 (pow eps 3)) (+ (* 1/6 (/ (* (pow eps 3) (exp (* b eps))) (- (exp (* b eps)) 1))) (+ (* 1/2 (/ (* (pow eps 2) (* (exp (* b eps)) (- (* 1/2 eps) (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1))))) (- (exp (* b eps)) 1))) (/ (* eps (* (exp (* b eps)) (- (* 1/6 (pow eps 2)) (+ (* 1/2 (/ (* (pow eps 2) (exp (* b eps))) (- (exp (* b eps)) 1))) (/ (* eps (* (exp (* b eps)) (- (* 1/2 eps) (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1))))) (- (exp (* b eps)) 1)))))) (- (exp (* b eps)) 1))))))) (+ (* 1/2 (/ (* (pow eps 2) (exp (* b eps))) (- (exp (* b eps)) 1))) (/ (* eps (* (exp (* b eps)) (- (* 1/2 eps) (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1))))) (- (exp (* b eps)) 1)))))) (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1))))))","(/ (+ 1 (* a (- (/ (* (exp (* b eps)) (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2)))) (- (exp (* b eps)) 1)) (* 1/2 eps)))) a)","(/ (+ 1 (* a (- (* a (- (/ (* (exp (* b eps)) (- (+ (* 1/2 (pow (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2))) 2)) (/ (* eps (+ b (* -1 b))) (pow b 2))) (+ (/ (* eps (+ b (* 2 b))) (pow b 2)) (/ (* (+ (* -2 (pow b 2)) (* -1 (pow b 2))) (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2)))) (pow b 3))))) (- (exp (* b eps)) 1)) (+ (* 1/6 (pow eps 2)) (* 1/2 (* eps (- (/ (* (exp (* b eps)) (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2)))) (- (exp (* b eps)) 1)) (* 1/2 eps))))))) (* -1 (- (/ (* (exp (* b eps)) (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2)))) (- (exp (* b eps)) 1)) (* 1/2 eps)))))) a)","(/ (+ 1 (* a (- (* a (- (* a (- (/ (* (exp (* b eps)) (- (+ (* 1/6 (pow (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2))) 3)) (+ (* 2 (/ eps (pow b 2))) (* (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2))) (- (/ (* eps (+ b (* -1 b))) (pow b 2)) (+ (/ (* eps (+ b (* 2 b))) (pow b 2)) (/ (* (+ (* -2 (pow b 2)) (* -1 (pow b 2))) (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2)))) (pow b 3))))))) (+ (* -1 (/ eps (pow b 2))) (+ (/ (* (+ b (* 2 b)) (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2)))) (pow b 3)) (/ (* (+ (* -2 (pow b 2)) (* -1 (pow b 2))) (- (/ (* eps (+ b (* -1 b))) (pow b 2)) (+ (/ (* eps (+ b (* 2 b))) (pow b 2)) (/ (* (+ (* -2 (pow b 2)) (* -1 (pow b 2))) (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2)))) (pow b 3))))) (pow b 3)))))) (- (exp (* b eps)) 1)) (+ (* 1/24 (pow eps 3)) (+ (* 1/6 (* (pow eps 2) (- (/ (* (exp (* b eps)) (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2)))) (- (exp (* b eps)) 1)) (* 1/2 eps)))) (* 1/2 (* eps (- (/ (* (exp (* b eps)) (- (+ (* 1/2 (pow (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2))) 2)) (/ (* eps (+ b (* -1 b))) (pow b 2))) (+ (/ (* eps (+ b (* 2 b))) (pow b 2)) (/ (* (+ (* -2 (pow b 2)) (* -1 (pow b 2))) (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2)))) (pow b 3))))) (- (exp (* b eps)) 1)) (+ (* 1/6 (pow eps 2)) (* 1/2 (* eps (- (/ (* (exp (* b eps)) (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2)))) (- (exp (* b eps)) 1)) (* 1/2 eps)))))))))))) (* -1 (- (/ (* (exp (* b eps)) (- (+ (* 1/2 (pow (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2))) 2)) (/ (* eps (+ b (* -1 b))) (pow b 2))) (+ (/ (* eps (+ b (* 2 b))) (pow b 2)) (/ (* (+ (* -2 (pow b 2)) (* -1 (pow b 2))) (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2)))) (pow b 3))))) (- (exp (* b eps)) 1)) (+ (* 1/6 (pow eps 2)) (* 1/2 (* eps (- (/ (* (exp (* b eps)) (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2)))) (- (exp (* b eps)) 1)) (* 1/2 eps))))))))) (* -1 (- (/ (* (exp (* b eps)) (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2)))) (- (exp (* b eps)) 1)) (* 1/2 eps)))))) a)","(/ (- (* -1 (* a (- (/ (* (exp (* b eps)) (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2)))) (- (exp (* b eps)) 1)) (* 1/2 eps)))) 1) a)","(/ (- (* a (+ (* -1 (* a (- (/ (* (exp (* b eps)) (- (+ (* 1/2 (pow (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2))) 2)) (/ (* eps (+ b (* -1 b))) (pow b 2))) (+ (/ (* eps (+ b (* 2 b))) (pow b 2)) (/ (* (+ (* -2 (pow b 2)) (* -1 (pow b 2))) (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2)))) (pow b 3))))) (- (exp (* b eps)) 1)) (+ (* 1/6 (pow eps 2)) (* 1/2 (* eps (- (/ (* (exp (* b eps)) (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2)))) (- (exp (* b eps)) 1)) (* 1/2 eps)))))))) (* -1 (- (/ (* (exp (* b eps)) (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2)))) (- (exp (* b eps)) 1)) (* 1/2 eps))))) 1) a)","(/ (- (* a (+ (* -1 (- (/ (* (exp (* b eps)) (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2)))) (- (exp (* b eps)) 1)) (* 1/2 eps))) (* a (+ (* -1 (* a (- (/ (* (exp (* b eps)) (- (+ (* 1/6 (pow (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2))) 3)) (+ (* 2 (/ eps (pow b 2))) (* (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2))) (- (/ (* eps (+ b (* -1 b))) (pow b 2)) (+ (/ (* eps (+ b (* 2 b))) (pow b 2)) (/ (* (+ (* -2 (pow b 2)) (* -1 (pow b 2))) (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2)))) (pow b 3))))))) (+ (* -1 (/ eps (pow b 2))) (+ (/ (* (+ b (* 2 b)) (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2)))) (pow b 3)) (/ (* (+ (* -2 (pow b 2)) (* -1 (pow b 2))) (- (/ (* eps (+ b (* -1 b))) (pow b 2)) (+ (/ (* eps (+ b (* 2 b))) (pow b 2)) (/ (* (+ (* -2 (pow b 2)) (* -1 (pow b 2))) (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2)))) (pow b 3))))) (pow b 3)))))) (- (exp (* b eps)) 1)) (+ (* 1/24 (pow eps 3)) (+ (* 1/6 (* (pow eps 2) (- (/ (* (exp (* b eps)) (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2)))) (- (exp (* b eps)) 1)) (* 1/2 eps)))) (* 1/2 (* eps (- (/ (* (exp (* b eps)) (- (+ (* 1/2 (pow (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2))) 2)) (/ (* eps (+ b (* -1 b))) (pow b 2))) (+ (/ (* eps (+ b (* 2 b))) (pow b 2)) (/ (* (+ (* -2 (pow b 2)) (* -1 (pow b 2))) (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2)))) (pow b 3))))) (- (exp (* b eps)) 1)) (+ (* 1/6 (pow eps 2)) (* 1/2 (* eps (- (/ (* (exp (* b eps)) (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2)))) (- (exp (* b eps)) 1)) (* 1/2 eps))))))))))))) (* -1 (- (/ (* (exp (* b eps)) (- (+ (* 1/2 (pow (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2))) 2)) (/ (* eps (+ b (* -1 b))) (pow b 2))) (+ (/ (* eps (+ b (* 2 b))) (pow b 2)) (/ (* (+ (* -2 (pow b 2)) (* -1 (pow b 2))) (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2)))) (pow b 3))))) (- (exp (* b eps)) 1)) (+ (* 1/6 (pow eps 2)) (* 1/2 (* eps (- (/ (* (exp (* b eps)) (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2)))) (- (exp (* b eps)) 1)) (* 1/2 eps))))))))))) 1) a)","(+ (* -1 (* a (* eps (* (exp (* b eps)) (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2))))))) (* -1 (* eps (- (exp (* b eps)) 1))))","(+ (* -1 (* eps (- (exp (* b eps)) 1))) (* a (+ (* -1 (* a (* eps (* (exp (* b eps)) (- (+ (* 1/2 (pow (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2))) 2)) (/ (* eps (+ b (* -1 b))) (pow b 2))) (+ (/ (* eps (+ b (* 2 b))) (pow b 2)) (/ (* (+ (* -2 (pow b 2)) (* -1 (pow b 2))) (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2)))) (pow b 3)))))))) (* -1 (* eps (* (exp (* b eps)) (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2)))))))))","(+ (* -1 (* eps (- (exp (* b eps)) 1))) (* a (+ (* -1 (* eps (* (exp (* b eps)) (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2)))))) (* a (+ (* -1 (* a (* eps (* (exp (* b eps)) (- (+ (* 1/6 (pow (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2))) 3)) (+ (* 2 (/ eps (pow b 2))) (* (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2))) (- (/ (* eps (+ b (* -1 b))) (pow b 2)) (+ (/ (* eps (+ b (* 2 b))) (pow b 2)) (/ (* (+ (* -2 (pow b 2)) (* -1 (pow b 2))) (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2)))) (pow b 3))))))) (+ (* -1 (/ eps (pow b 2))) (+ (/ (* (+ b (* 2 b)) (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2)))) (pow b 3)) (/ (* (+ (* -2 (pow b 2)) (* -1 (pow b 2))) (- (/ (* eps (+ b (* -1 b))) (pow b 2)) (+ (/ (* eps (+ b (* 2 b))) (pow b 2)) (/ (* (+ (* -2 (pow b 2)) (* -1 (pow b 2))) (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2)))) (pow b 3))))) (pow b 3))))))))) (* -1 (* eps (* (exp (* b eps)) (- (+ (* 1/2 (pow (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2))) 2)) (/ (* eps (+ b (* -1 b))) (pow b 2))) (+ (/ (* eps (+ b (* 2 b))) (pow b 2)) (/ (* (+ (* -2 (pow b 2)) (* -1 (pow b 2))) (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2)))) (pow b 3))))))))))))","(- (+ (exp (* b eps)) (* a (* (exp (* b eps)) (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2)))))) 1)","(- (+ (exp (* b eps)) (* a (+ (* a (* (exp (* b eps)) (- (+ (* 1/2 (pow (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2))) 2)) (/ (* eps (+ b (* -1 b))) (pow b 2))) (+ (/ (* eps (+ b (* 2 b))) (pow b 2)) (/ (* (+ (* -2 (pow b 2)) (* -1 (pow b 2))) (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2)))) (pow b 3)))))) (* (exp (* b eps)) (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2))))))) 1)","(- (+ (exp (* b eps)) (* a (+ (* a (+ (* a (* (exp (* b eps)) (- (+ (* 1/6 (pow (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2))) 3)) (+ (* 2 (/ eps (pow b 2))) (* (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2))) (- (/ (* eps (+ b (* -1 b))) (pow b 2)) (+ (/ (* eps (+ b (* 2 b))) (pow b 2)) (/ (* (+ (* -2 (pow b 2)) (* -1 (pow b 2))) (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2)))) (pow b 3))))))) (+ (* -1 (/ eps (pow b 2))) (+ (/ (* (+ b (* 2 b)) (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2)))) (pow b 3)) (/ (* (+ (* -2 (pow b 2)) (* -1 (pow b 2))) (- (/ (* eps (+ b (* -1 b))) (pow b 2)) (+ (/ (* eps (+ b (* 2 b))) (pow b 2)) (/ (* (+ (* -2 (pow b 2)) (* -1 (pow b 2))) (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2)))) (pow b 3))))) (pow b 3))))))) (* (exp (* b eps)) (- (+ (* 1/2 (pow (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2))) 2)) (/ (* eps (+ b (* -1 b))) (pow b 2))) (+ (/ (* eps (+ b (* 2 b))) (pow b 2)) (/ (* (+ (* -2 (pow b 2)) (* -1 (pow b 2))) (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2)))) (pow b 3))))))) (* (exp (* b eps)) (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2))))))) 1)","(* a (* eps (- (exp (* b eps)) 1)))","(* a (+ (* 1/2 (* a (* (pow eps 2) (- (exp (* b eps)) 1)))) (* eps (- (exp (* b eps)) 1))))","(* a (+ (* a (+ (* 1/6 (* a (* (pow eps 3) (- (exp (* b eps)) 1)))) (* 1/2 (* (pow eps 2) (- (exp (* b eps)) 1))))) (* eps (- (exp (* b eps)) 1))))","(* a (+ (* a (+ (* 1/2 (* (pow eps 2) (- (exp (* b eps)) 1))) (* a (+ (* 1/24 (* a (* (pow eps 4) (- (exp (* b eps)) 1)))) (* 1/6 (* (pow eps 3) (- (exp (* b eps)) 1))))))) (* eps (- (exp (* b eps)) 1))))","(* -1 (* (pow b 2) eps))","(+ (* -1 (* (pow b 2) eps)) (* a (* eps (+ b (* -1 b)))))","(+ (* -1 (* (pow b 2) eps)) (* a (+ (* a eps) (* eps (+ b (* -1 b))))))","(/ -1 b)","(- (* -1 (/ a (pow b 2))) (/ 1 b))","(- (* a (- (* -1 (/ a (pow b 3))) (/ 1 (pow b 2)))) (/ 1 b))","(- (* a (- (* a (- (* -1 (/ a (pow b 4))) (/ 1 (pow b 3)))) (/ 1 (pow b 2)))) (/ 1 b))","(/ eps (pow b 3))","(+ (* -1 (/ (* a (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2))))) (pow b 6))) (/ eps (pow b 3)))","(+ (* a (- (* -1 (* a (+ (* -1 (/ (* eps (pow (+ (* -2 (pow b 2)) (* -1 (pow b 2))) 2)) (pow b 9))) (/ (* eps (+ b (* 2 b))) (pow b 6))))) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 6)))) (/ eps (pow b 3)))","(+ (* a (- (* a (- (* a (- (/ eps (pow b 6)) (+ (* -1 (/ eps (pow b 6))) (+ (* -1 (/ (* eps (* (+ b (* 2 b)) (+ (* -2 (pow b 2)) (* -1 (pow b 2))))) (pow b 9))) (* -1 (/ (* (+ (* -2 (pow b 2)) (* -1 (pow b 2))) (+ (* -1 (/ (* eps (pow (+ (* -2 (pow b 2)) (* -1 (pow b 2))) 2)) (pow b 9))) (/ (* eps (+ b (* 2 b))) (pow b 6)))) (pow b 3))))))) (+ (* -1 (/ (* eps (pow (+ (* -2 (pow b 2)) (* -1 (pow b 2))) 2)) (pow b 9))) (/ (* eps (+ b (* 2 b))) (pow b 6))))) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 6)))) (/ eps (pow b 3)))","(+ (* a (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2)))) (* b eps))","(+ (* a (- (+ (* -2 eps) (* a (- (/ (* eps (+ b (* -1 b))) (pow b 2)) (+ (/ (* eps (+ b (* 2 b))) (pow b 2)) (/ (* (+ (* -2 (pow b 2)) (* -1 (pow b 2))) (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2)))) (pow b 3)))))) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2)))) (* b eps))","(+ (* a (- (+ (* -2 eps) (* a (- (+ (* a (- (* 2 (/ eps (pow b 2))) (+ (* -1 (/ eps (pow b 2))) (+ (/ (* (+ b (* 2 b)) (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2)))) (pow b 3)) (/ (* (+ (* -2 (pow b 2)) (* -1 (pow b 2))) (- (/ (* eps (+ b (* -1 b))) (pow b 2)) (+ (/ (* eps (+ b (* 2 b))) (pow b 2)) (/ (* (+ (* -2 (pow b 2)) (* -1 (pow b 2))) (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2)))) (pow b 3))))) (pow b 3)))))) (/ (* eps (+ b (* -1 b))) (pow b 2))) (+ (/ (* eps (+ b (* 2 b))) (pow b 2)) (/ (* (+ (* -2 (pow b 2)) (* -1 (pow b 2))) (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2)))) (pow b 3)))))) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2)))) (* b eps))","(pow b 4)","(+ (* -2 (* a (pow b 3))) (pow b 4))","(+ (* a (+ (* -2 (pow b 3)) (* a (pow b 2)))) (pow b 4))","(/ (* eps (- (exp (+ (* a eps) (* b eps))) 1)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)))","(* a eps)","(* a (+ eps (/ (* b eps) a)))","(* -1 (/ (* eps (- (exp (+ (* a eps) (* b eps))) 1)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))))","(* -1 (* eps (- (exp (+ (* a eps) (* b eps))) 1)))","(/ (* eps (- (exp (* eps (+ a b))) 1)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)))","(* eps (- (exp (* eps (+ a b))) 1))","(- (exp (* eps (+ a b))) 1)","(* -1 (/ (* eps (- (exp (* eps (+ a b))) 1)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))))","(* -1 (* eps (- (exp (* eps (+ a b))) 1)))","(/ (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)) (* eps (- (exp (* eps (+ a b))) 1)))","(/ (* eps (- (exp (/ (* eps (* (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) (+ (pow a 3) (pow b 3)))) (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)))) 1)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)))","(* -1 (/ (* eps (- (exp (/ (* eps (* (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) (+ (pow a 3) (pow b 3)))) (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)))) 1)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))))","(* -1 (* eps (- (exp (/ (* eps (* (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) (+ (pow a 3) (pow b 3)))) (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)))) 1)))","(- (exp (/ (* eps (* (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) (+ (pow a 3) (pow b 3)))) (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)))) 1)","(* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))","(* (pow a 2) eps)","(* (pow a 2) (+ eps (/ (* eps (+ b (* -1 b))) a)))","(* (pow a 2) (+ eps (+ (* -1 (/ (* (pow b 2) eps) (pow a 2))) (/ (* eps (+ b (* -1 b))) a))))","(/ (+ 1 (/ b a)) a)","(/ (- (+ 1 (/ (pow b 2) (pow a 2))) (* -1 (/ b a))) a)","(/ (- (+ 1 (/ (pow b 3) (pow a 3))) (+ (* -1 (/ b a)) (* -1 (/ (pow b 2) (pow a 2))))) a)","(/ eps (pow a 3))","(/ (- (+ eps (/ (* (pow b 3) eps) (pow a 3))) (* -1 (/ (* (pow b 3) eps) (pow a 3)))) (pow a 3))","(/ (- (+ eps (+ (* -1 (/ (* (pow b 3) (* eps (+ b (* 2 b)))) (pow a 4))) (/ (* (pow b 3) eps) (pow a 3)))) (* -1 (/ (* (pow b 3) eps) (pow a 3)))) (pow a 3))","(/ (- (+ eps (+ (* -1 (/ (* (pow b 3) (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2))))) (pow a 5))) (/ (* (pow b 3) eps) (pow a 3)))) (+ (* -1 (/ (* (pow b 3) eps) (pow a 3))) (/ (* (pow b 3) (* eps (+ b (* 2 b)))) (pow a 4)))) (pow a 3))","(* a (+ eps (+ (/ (* b eps) a) (/ (* b (* eps (+ b (* -1 b)))) (pow a 2)))))","(* a (- (+ eps (+ (/ (* b eps) a) (+ (/ (* b (* eps (+ b (* -1 b)))) (pow a 2)) (/ (* eps (+ (* -2 (pow b 3)) (pow b 3))) (pow a 3))))) (* -1 (/ (* (pow b 3) eps) (pow a 3)))))","(* (pow a 2) (pow b 2))","(* (pow a 2) (+ (* -2 (/ (pow b 3) a)) (pow b 2)))","(* (pow a 2) (+ (* -2 (/ (pow b 3) a)) (+ (/ (pow b 4) (pow a 2)) (pow b 2))))","(* -1 (* a (+ (* -1 eps) (* -1 (/ (* b eps) a)))))","(/ (* eps (- (exp (* eps (- b (* -1 a)))) 1)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)))","(* eps (- (exp (* eps (- b (* -1 a)))) 1))","(- (exp (* eps (- b (* -1 a)))) 1)","(* -1 (/ (* eps (- (exp (* eps (- b (* -1 a)))) 1)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))))","(* -1 (* eps (- (exp (* eps (- b (* -1 a)))) 1)))","(/ (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)) (* eps (- (exp (* eps (- b (* -1 a)))) 1)))","(/ (* eps (- (exp (/ (* eps (* (+ (* b (* (+ b (* -1 a)) (- (* b (+ b (* -1 a))) (pow a 2)))) (pow a 4)) (- (pow b 3) (* -1 (pow a 3))))) (+ (* (pow b 3) (pow (+ b (* -1 a)) 3)) (pow a 6)))) 1)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)))","(* -1 (/ (* eps (- (exp (/ (* eps (* (+ (* b (* (+ b (* -1 a)) (- (* b (+ b (* -1 a))) (pow a 2)))) (pow a 4)) (- (pow b 3) (* -1 (pow a 3))))) (+ (* (pow b 3) (pow (+ b (* -1 a)) 3)) (pow a 6)))) 1)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))))","(* -1 (* eps (- (exp (/ (* eps (* (+ (* b (* (+ b (* -1 a)) (- (* b (+ b (* -1 a))) (pow a 2)))) (pow a 4)) (- (pow b 3) (* -1 (pow a 3))))) (+ (* (pow b 3) (pow (+ b (* -1 a)) 3)) (pow a 6)))) 1)))","(- (exp (/ (* eps (* (+ (* b (* (+ b (* -1 a)) (- (* b (+ b (* -1 a))) (pow a 2)))) (pow a 4)) (- (pow b 3) (* -1 (pow a 3))))) (+ (* (pow b 3) (pow (+ b (* -1 a)) 3)) (pow a 6)))) 1)","(* (pow a 2) (+ eps (* -1 (/ (+ (* -1 (* eps (+ b (* -1 b)))) (/ (* (pow b 2) eps) a)) a))))","(* -1 (/ (- (* -1 (/ b a)) 1) a))","(* -1 (/ (- (* -1 (/ (- (/ (pow b 2) a) (* -1 b)) a)) 1) a))","(* -1 (/ (- (* -1 (/ (- (* -1 (/ (- (* -1 (/ (pow b 3) a)) (pow b 2)) a)) (* -1 b)) a)) 1) a))","(* -1 (/ (+ (* -1 eps) (* -1 (/ (- (* (pow b 3) eps) (* -1 (* (pow b 3) eps))) (pow a 3)))) (pow a 3)))","(* -1 (/ (+ (* -1 eps) (* -1 (/ (- (+ (* -1 (/ (* (pow b 3) (* eps (+ b (* 2 b)))) a)) (* (pow b 3) eps)) (* -1 (* (pow b 3) eps))) (pow a 3)))) (pow a 3)))","(* -1 (/ (+ (* -1 eps) (* -1 (/ (- (+ (* -1 (/ (- (* -1 (/ (* (pow b 3) (* eps (+ (* 2 (pow b 2)) (pow b 2)))) a)) (* -1 (* (pow b 3) (* eps (+ b (* 2 b)))))) a)) (* (pow b 3) eps)) (* -1 (* (pow b 3) eps))) (pow a 3)))) (pow a 3)))","(* -1 (* a (+ (* -1 eps) (* -1 (/ (+ (* b eps) (/ (* b (* eps (+ b (* -1 b)))) a)) a)))))","(* -1 (* a (+ (* -1 eps) (* -1 (/ (+ (* -1 (/ (+ (* -1 (* b (* eps (+ b (* -1 b))))) (* -1 (/ (- (* eps (+ (* -2 (pow b 3)) (pow b 3))) (* -1 (* (pow b 3) eps))) a))) a)) (* b eps)) a)))))","(* (pow a 2) (+ (* -1 (/ (+ (* -1 (/ (pow b 4) a)) (* 2 (pow b 3))) a)) (pow b 2)))","(/ 1 b)","(/ (+ 1 (* b (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps)))) b)","(/ (+ 1 (* b (- (* b (- (* 1/2 (/ (* (pow eps 2) (exp (* a eps))) (- (exp (* a eps)) 1))) (+ (* 1/6 (pow eps 2)) (* 1/2 (* eps (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps))))))) (* -1 (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps)))))) b)","(/ (+ 1 (* b (- (* b (- (* b (- (* 1/6 (/ (* (pow eps 3) (exp (* a eps))) (- (exp (* a eps)) 1))) (+ (* 1/24 (pow eps 3)) (+ (* 1/6 (* (pow eps 2) (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps)))) (* 1/2 (* eps (- (* 1/2 (/ (* (pow eps 2) (exp (* a eps))) (- (exp (* a eps)) 1))) (+ (* 1/6 (pow eps 2)) (* 1/2 (* eps (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps)))))))))))) (* -1 (- (* 1/2 (/ (* (pow eps 2) (exp (* a eps))) (- (exp (* a eps)) 1))) (+ (* 1/6 (pow eps 2)) (* 1/2 (* eps (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps))))))))) (* -1 (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps)))))) b)","(/ (- (* -1 (* b (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps)))) 1) b)","(/ (- (* b (+ (* -1 (* b (- (* 1/2 (/ (* (pow eps 2) (exp (* a eps))) (- (exp (* a eps)) 1))) (+ (* 1/6 (pow eps 2)) (* 1/2 (* eps (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps)))))))) (* -1 (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps))))) 1) b)","(/ (- (* b (+ (* -1 (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps))) (* b (+ (* -1 (* b (- (* 1/6 (/ (* (pow eps 3) (exp (* a eps))) (- (exp (* a eps)) 1))) (+ (* 1/24 (pow eps 3)) (+ (* 1/6 (* (pow eps 2) (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps)))) (* 1/2 (* eps (- (* 1/2 (/ (* (pow eps 2) (exp (* a eps))) (- (exp (* a eps)) 1))) (+ (* 1/6 (pow eps 2)) (* 1/2 (* eps (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps))))))))))))) (* -1 (- (* 1/2 (/ (* (pow eps 2) (exp (* a eps))) (- (exp (* a eps)) 1))) (+ (* 1/6 (pow eps 2)) (* 1/2 (* eps (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps))))))))))) 1) b)","(* -1 (* eps (- (exp (* a eps)) 1)))","(+ (* -1 (* b (* (pow eps 2) (exp (* a eps))))) (* -1 (* eps (- (exp (* a eps)) 1))))","(+ (* -1 (* eps (- (exp (* a eps)) 1))) (* b (+ (* -1 (* (pow eps 2) (exp (* a eps)))) (* -1/2 (* b (* (pow eps 3) (exp (* a eps))))))))","(+ (* -1 (* eps (- (exp (* a eps)) 1))) (* b (+ (* -1 (* (pow eps 2) (exp (* a eps)))) (* b (+ (* -1/2 (* (pow eps 3) (exp (* a eps)))) (* -1/6 (* b (* (pow eps 4) (exp (* a eps))))))))))","(/ (+ 1 (* b (- (+ (* b (- (* 1/2 (/ (* (pow eps 2) (exp (* a eps))) (- (exp (* a eps)) 1))) (+ (* 1/6 (pow eps 2)) (* 1/2 (* eps (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps))))))) (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1))) (* 1/2 eps)))) b)","(/ (+ 1 (* b (- (+ (* b (- (+ (* 1/2 (/ (* (pow eps 2) (exp (* a eps))) (- (exp (* a eps)) 1))) (* b (- (* 1/6 (/ (* (pow eps 3) (exp (* a eps))) (- (exp (* a eps)) 1))) (+ (* 1/24 (pow eps 3)) (+ (* 1/6 (* (pow eps 2) (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps)))) (* 1/2 (* eps (- (* 1/2 (/ (* (pow eps 2) (exp (* a eps))) (- (exp (* a eps)) 1))) (+ (* 1/6 (pow eps 2)) (* 1/2 (* eps (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps))))))))))))) (+ (* 1/6 (pow eps 2)) (* 1/2 (* eps (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps))))))) (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1))) (* 1/2 eps)))) b)","(* eps (- (exp (* a eps)) 1))","(+ (* b (* (pow eps 2) (exp (* a eps)))) (* eps (- (exp (* a eps)) 1)))","(+ (* b (+ (* 1/2 (* b (* (pow eps 3) (exp (* a eps))))) (* (pow eps 2) (exp (* a eps))))) (* eps (- (exp (* a eps)) 1)))","(+ (* b (+ (* b (+ (* 1/6 (* b (* (pow eps 4) (exp (* a eps))))) (* 1/2 (* (pow eps 3) (exp (* a eps)))))) (* (pow eps 2) (exp (* a eps))))) (* eps (- (exp (* a eps)) 1)))","(- (exp (* a eps)) 1)","(- (+ (exp (* a eps)) (* b (* eps (exp (* a eps))))) 1)","(- (+ (exp (* a eps)) (* b (+ (* 1/2 (* b (* (pow eps 2) (exp (* a eps))))) (* eps (exp (* a eps)))))) 1)","(- (+ (exp (* a eps)) (* b (+ (* b (+ (* 1/6 (* b (* (pow eps 3) (exp (* a eps))))) (* 1/2 (* (pow eps 2) (exp (* a eps)))))) (* eps (exp (* a eps)))))) 1)","b","(* b (+ 1 (* b (- (* 1/2 eps) (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1))))))","(* b (+ 1 (* b (- (+ (* 1/2 eps) (* b (- (* 1/6 (pow eps 2)) (+ (* 1/2 (/ (* (pow eps 2) (exp (* a eps))) (- (exp (* a eps)) 1))) (/ (* eps (* (exp (* a eps)) (- (* 1/2 eps) (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1))))) (- (exp (* a eps)) 1)))))) (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1))))))","(* b (+ 1 (* b (- (+ (* 1/2 eps) (* b (- (+ (* 1/6 (pow eps 2)) (* b (- (* 1/24 (pow eps 3)) (+ (* 1/6 (/ (* (pow eps 3) (exp (* a eps))) (- (exp (* a eps)) 1))) (+ (* 1/2 (/ (* (pow eps 2) (* (exp (* a eps)) (- (* 1/2 eps) (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1))))) (- (exp (* a eps)) 1))) (/ (* eps (* (exp (* a eps)) (- (* 1/6 (pow eps 2)) (+ (* 1/2 (/ (* (pow eps 2) (exp (* a eps))) (- (exp (* a eps)) 1))) (/ (* eps (* (exp (* a eps)) (- (* 1/2 eps) (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1))))) (- (exp (* a eps)) 1)))))) (- (exp (* a eps)) 1))))))) (+ (* 1/2 (/ (* (pow eps 2) (exp (* a eps))) (- (exp (* a eps)) 1))) (/ (* eps (* (exp (* a eps)) (- (* 1/2 eps) (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1))))) (- (exp (* a eps)) 1)))))) (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1))))))","(/ (+ 1 (* b (- (* b (- (/ (* (exp (* a eps)) (+ (* 1/2 (pow eps 2)) (/ (* eps (+ (* -1 (pow a 2)) (pow a 2))) (pow a 3)))) (- (exp (* a eps)) 1)) (+ (* 1/6 (pow eps 2)) (* 1/2 (* eps (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps))))))) (* -1 (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps)))))) b)","(/ (+ 1 (* b (- (* b (- (* b (- (/ (* (exp (* a eps)) (- (+ (* 1/6 (pow eps 3)) (+ (/ (* eps (+ (* -2 (pow a 4)) (pow a 4))) (pow a 6)) (/ (* (pow eps 2) (+ (* -1 (pow a 2)) (pow a 2))) (pow a 3)))) (* -1 (/ eps (pow a 2))))) (- (exp (* a eps)) 1)) (+ (* 1/24 (pow eps 3)) (+ (* 1/6 (* (pow eps 2) (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps)))) (* 1/2 (* eps (- (/ (* (exp (* a eps)) (+ (* 1/2 (pow eps 2)) (/ (* eps (+ (* -1 (pow a 2)) (pow a 2))) (pow a 3)))) (- (exp (* a eps)) 1)) (+ (* 1/6 (pow eps 2)) (* 1/2 (* eps (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps)))))))))))) (* -1 (- (/ (* (exp (* a eps)) (+ (* 1/2 (pow eps 2)) (/ (* eps (+ (* -1 (pow a 2)) (pow a 2))) (pow a 3)))) (- (exp (* a eps)) 1)) (+ (* 1/6 (pow eps 2)) (* 1/2 (* eps (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps))))))))) (* -1 (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps)))))) b)","(/ (- (* b (+ (* -1 (* b (- (/ (* (exp (* a eps)) (+ (* 1/2 (pow eps 2)) (/ (* eps (+ (* -1 (pow a 2)) (pow a 2))) (pow a 3)))) (- (exp (* a eps)) 1)) (+ (* 1/6 (pow eps 2)) (* 1/2 (* eps (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps)))))))) (* -1 (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps))))) 1) b)","(/ (- (* b (+ (* -1 (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps))) (* b (+ (* -1 (* b (- (/ (* (exp (* a eps)) (- (+ (* 1/6 (pow eps 3)) (+ (/ (* eps (+ (* -2 (pow a 4)) (pow a 4))) (pow a 6)) (/ (* (pow eps 2) (+ (* -1 (pow a 2)) (pow a 2))) (pow a 3)))) (* -1 (/ eps (pow a 2))))) (- (exp (* a eps)) 1)) (+ (* 1/24 (pow eps 3)) (+ (* 1/6 (* (pow eps 2) (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps)))) (* 1/2 (* eps (- (/ (* (exp (* a eps)) (+ (* 1/2 (pow eps 2)) (/ (* eps (+ (* -1 (pow a 2)) (pow a 2))) (pow a 3)))) (- (exp (* a eps)) 1)) (+ (* 1/6 (pow eps 2)) (* 1/2 (* eps (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps))))))))))))) (* -1 (- (/ (* (exp (* a eps)) (+ (* 1/2 (pow eps 2)) (/ (* eps (+ (* -1 (pow a 2)) (pow a 2))) (pow a 3)))) (- (exp (* a eps)) 1)) (+ (* 1/6 (pow eps 2)) (* 1/2 (* eps (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps))))))))))) 1) b)","(+ (* -1 (* eps (- (exp (* a eps)) 1))) (* b (+ (* -1 (* b (* eps (* (exp (* a eps)) (+ (* 1/2 (pow eps 2)) (/ (* eps (+ (* -1 (pow a 2)) (pow a 2))) (pow a 3))))))) (* -1 (* (pow eps 2) (exp (* a eps)))))))","(+ (* -1 (* eps (- (exp (* a eps)) 1))) (* b (+ (* -1 (* (pow eps 2) (exp (* a eps)))) (* b (+ (* -1 (* b (* eps (* (exp (* a eps)) (- (+ (* 1/6 (pow eps 3)) (+ (/ (* eps (+ (* -2 (pow a 4)) (pow a 4))) (pow a 6)) (/ (* (pow eps 2) (+ (* -1 (pow a 2)) (pow a 2))) (pow a 3)))) (* -1 (/ eps (pow a 2)))))))) (* -1 (* eps (* (exp (* a eps)) (+ (* 1/2 (pow eps 2)) (/ (* eps (+ (* -1 (pow a 2)) (pow a 2))) (pow a 3)))))))))))","(- (+ (exp (* a eps)) (* b (+ (* b (* (exp (* a eps)) (+ (* 1/2 (pow eps 2)) (/ (* eps (+ (* -1 (pow a 2)) (pow a 2))) (pow a 3))))) (* eps (exp (* a eps)))))) 1)","(- (+ (exp (* a eps)) (* b (+ (* b (+ (* b (* (exp (* a eps)) (- (+ (* 1/6 (pow eps 3)) (+ (/ (* eps (+ (* -2 (pow a 4)) (pow a 4))) (pow a 6)) (/ (* (pow eps 2) (+ (* -1 (pow a 2)) (pow a 2))) (pow a 3)))) (* -1 (/ eps (pow a 2)))))) (* (exp (* a eps)) (+ (* 1/2 (pow eps 2)) (/ (* eps (+ (* -1 (pow a 2)) (pow a 2))) (pow a 3)))))) (* eps (exp (* a eps)))))) 1)","(* b (* eps (- (exp (* a eps)) 1)))","(* b (+ (* 1/2 (* b (* (pow eps 2) (- (exp (* a eps)) 1)))) (* eps (- (exp (* a eps)) 1))))","(* b (+ (* b (+ (* 1/6 (* b (* (pow eps 3) (- (exp (* a eps)) 1)))) (* 1/2 (* (pow eps 2) (- (exp (* a eps)) 1))))) (* eps (- (exp (* a eps)) 1))))","(* b (+ (* b (+ (* 1/2 (* (pow eps 2) (- (exp (* a eps)) 1))) (* b (+ (* 1/24 (* b (* (pow eps 4) (- (exp (* a eps)) 1)))) (* 1/6 (* (pow eps 3) (- (exp (* a eps)) 1))))))) (* eps (- (exp (* a eps)) 1))))","(+ (* b (* eps (+ a (* -1 a)))) (* (pow a 2) eps))","(+ (* b (+ (* -1 (* b eps)) (* eps (+ a (* -1 a))))) (* (pow a 2) eps))","(+ (/ 1 a) (/ b (pow a 2)))","(+ (* b (+ (/ 1 (pow a 2)) (/ b (pow a 3)))) (/ 1 a))","(+ (* b (+ (* b (+ (/ 1 (pow a 3)) (/ b (pow a 4)))) (/ 1 (pow a 2)))) (/ 1 a))","(+ (* (pow b 3) (- (/ eps (pow a 6)) (* -1 (/ eps (pow a 6))))) (/ eps (pow a 3)))","(+ (* (pow b 3) (- (+ (* -1 (/ (* b (* eps (+ (* 2 (pow a 2)) (pow a 2)))) (pow a 9))) (/ eps (pow a 6))) (* -1 (/ eps (pow a 6))))) (/ eps (pow a 3)))","(+ (* (pow b 3) (- (+ (* b (- (* -1 (/ (* b (* eps (+ (* -2 a) (* -1 a)))) (pow a 9))) (/ (* eps (+ (* 2 (pow a 2)) (pow a 2))) (pow a 9)))) (/ eps (pow a 6))) (* -1 (/ eps (pow a 6))))) (/ eps (pow a 3)))","(+ (* a eps) (* b (+ eps (/ (* b (* eps (+ (* -1 (pow a 2)) (pow a 2)))) (pow a 3)))))","(+ (* a eps) (* b (+ eps (* b (+ (* b (- (/ (* eps (+ (* -2 (pow a 4)) (pow a 4))) (pow a 6)) (* -1 (/ eps (pow a 2))))) (/ (* eps (+ (* -1 (pow a 2)) (pow a 2))) (pow a 3)))))))","(* (pow b 2) (+ (* -2 (* a b)) (pow a 2)))","(* (pow b 2) (+ (* b (+ b (* -2 a))) (pow a 2)))","(* b (+ eps (/ (* a eps) b)))","(/ (* eps (- (exp (/ (* eps (* (+ (* b (* (- b a) (- (pow b 2) (+ (* a b) (pow a 2))))) (pow a 4)) (+ (pow a 3) (pow b 3)))) (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)))) 1)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)))","(* -1 (/ (* eps (- (exp (/ (* eps (* (+ (* b (* (- b a) (- (pow b 2) (+ (* a b) (pow a 2))))) (pow a 4)) (+ (pow a 3) (pow b 3)))) (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)))) 1)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))))","(* -1 (* eps (- (exp (/ (* eps (* (+ (* b (* (- b a) (- (pow b 2) (+ (* a b) (pow a 2))))) (pow a 4)) (+ (pow a 3) (pow b 3)))) (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)))) 1)))","(- (exp (/ (* eps (* (+ (* b (* (- b a) (- (pow b 2) (+ (* a b) (pow a 2))))) (pow a 4)) (+ (pow a 3) (pow b 3)))) (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)))) 1)","(* (pow b 2) (+ (* -1 eps) (/ (* eps (+ a (* -1 a))) b)))","(* (pow b 2) (+ (* -1 eps) (+ (/ (* eps (+ a (* -1 a))) b) (/ (* (pow a 2) eps) (pow b 2)))))","(/ (- (* -1 (/ a b)) 1) b)","(/ (- (* -1 (/ (pow a 2) (pow b 2))) (+ 1 (/ a b))) b)","(/ (- (* -1 (/ (pow a 3) (pow b 3))) (+ 1 (+ (/ a b) (/ (pow a 2) (pow b 2))))) b)","(/ (+ eps (* -1 (/ (* eps (+ (* -2 a) (* -1 a))) b))) (pow b 3))","(/ (- (+ eps (* -1 (/ (+ (* -1 (* eps (pow (+ (* -2 a) (* -1 a)) 2))) (* eps (+ (* 2 (pow a 2)) (pow a 2)))) (pow b 2)))) (/ (* eps (+ (* -2 a) (* -1 a))) b)) (pow b 3))","(/ (- (+ eps (/ (* (pow a 3) eps) (pow b 3))) (+ (* -1 (/ (* eps (* (+ (* -2 a) (* -1 a)) (+ (* 2 (pow a 2)) (pow a 2)))) (pow b 3))) (+ (* -1 (/ (* eps (pow (+ (* -2 a) (* -1 a)) 2)) (pow b 2))) (+ (* -1 (/ (* (+ (* -2 a) (* -1 a)) (+ (* -1 (* eps (pow (+ (* -2 a) (* -1 a)) 2))) (* eps (+ (* 2 (pow a 2)) (pow a 2))))) (pow b 3))) (+ (* -1 (/ (* (pow a 3) eps) (pow b 3))) (+ (/ (* eps (+ (* -2 a) (* -1 a))) b) (/ (* eps (+ (* 2 (pow a 2)) (pow a 2))) (pow b 2)))))))) (pow b 3))","(* b (- (+ eps (* -2 (/ (* a eps) b))) (/ (* eps (+ (* -2 a) (* -1 a))) b)))","(* b (- (+ eps (+ (* -2 (/ (* a eps) b)) (/ (* eps (+ (* -1 (pow a 2)) (pow a 2))) (pow b 2)))) (+ (/ (* eps (+ (* -2 a) (* -1 a))) b) (+ (/ (* eps (+ (* 2 (pow a 2)) (pow a 2))) (pow b 2)) (/ (* (+ (* -2 a) (* -1 a)) (- (* -2 (* a eps)) (* eps (+ (* -2 a) (* -1 a))))) (pow b 2))))))","(* b (- (+ eps (+ (* -2 (/ (* a eps) b)) (+ (* 2 (/ (* (pow a 3) eps) (pow b 3))) (/ (* eps (+ (* -1 (pow a 2)) (pow a 2))) (pow b 2))))) (+ (* -1 (/ (* (pow a 3) eps) (pow b 3))) (+ (/ (* eps (+ (* -2 a) (* -1 a))) b) (+ (/ (* eps (+ (* 2 (pow a 2)) (pow a 2))) (pow b 2)) (+ (/ (* (+ (* -2 a) (* -1 a)) (- (* -2 (* a eps)) (* eps (+ (* -2 a) (* -1 a))))) (pow b 2)) (+ (/ (* (+ (* -2 a) (* -1 a)) (- (* eps (+ (* -1 (pow a 2)) (pow a 2))) (+ (* eps (+ (* 2 (pow a 2)) (pow a 2))) (* (+ (* -2 a) (* -1 a)) (- (* -2 (* a eps)) (* eps (+ (* -2 a) (* -1 a)))))))) (pow b 3)) (/ (* (+ (* 2 (pow a 2)) (pow a 2)) (- (* -2 (* a eps)) (* eps (+ (* -2 a) (* -1 a))))) (pow b 3)))))))))","(* (pow b 4) (+ 1 (* -2 (/ a b))))","(* (pow b 4) (+ 1 (+ (* -2 (/ a b)) (/ (pow a 2) (pow b 2)))))","(* -1 (* b (+ (* -1 eps) (* -1 (/ (* a eps) b)))))","(/ (* eps (- (exp (* eps (- a (* -1 b)))) 1)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)))","(* eps (- (exp (* eps (- a (* -1 b)))) 1))","(- (exp (* eps (- a (* -1 b)))) 1)","(* -1 (/ (* eps (- (exp (* eps (- a (* -1 b)))) 1)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))))","(* -1 (* eps (- (exp (* eps (- a (* -1 b)))) 1)))","(/ (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)) (* eps (- (exp (* eps (- a (* -1 b)))) 1)))","(/ (* eps (- (exp (/ (* eps (* (+ (* -1 (* b (* (+ a (* -1 b)) (- (+ (* -1 (* a b)) (pow b 2)) (pow a 2))))) (pow a 4)) (- (pow a 3) (* -1 (pow b 3))))) (+ (* -1 (* (pow b 3) (pow (+ a (* -1 b)) 3))) (pow a 6)))) 1)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)))","(* -1 (/ (* eps (- (exp (/ (* eps (* (+ (* -1 (* b (* (+ a (* -1 b)) (- (+ (* -1 (* a b)) (pow b 2)) (pow a 2))))) (pow a 4)) (- (pow a 3) (* -1 (pow b 3))))) (+ (* -1 (* (pow b 3) (pow (+ a (* -1 b)) 3))) (pow a 6)))) 1)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))))","(* -1 (* eps (- (exp (/ (* eps (* (+ (* -1 (* b (* (+ a (* -1 b)) (- (+ (* -1 (* a b)) (pow b 2)) (pow a 2))))) (pow a 4)) (- (pow a 3) (* -1 (pow b 3))))) (+ (* -1 (* (pow b 3) (pow (+ a (* -1 b)) 3))) (pow a 6)))) 1)))","(- (exp (/ (* eps (* (+ (* -1 (* b (* (+ a (* -1 b)) (- (+ (* -1 (* a b)) (pow b 2)) (pow a 2))))) (pow a 4)) (- (pow a 3) (* -1 (pow b 3))))) (+ (* -1 (* (pow b 3) (pow (+ a (* -1 b)) 3))) (pow a 6)))) 1)","(* (pow b 2) (+ (* -1 eps) (* -1 (/ (* eps (+ a (* -1 a))) b))))","(* (pow b 2) (+ (* -1 eps) (* -1 (/ (+ (* -1 (/ (* (pow a 2) eps) b)) (* eps (+ a (* -1 a)))) b))))","(* -1 (/ (+ 1 (/ a b)) b))","(* -1 (/ (+ 1 (* -1 (/ (- (* -1 (/ (pow a 2) b)) a) b))) b))","(* -1 (/ (+ 1 (* -1 (/ (- (* -1 (/ (- (/ (pow a 3) b) (* -1 (pow a 2))) b)) a) b))) b))","(* -1 (/ (+ (* -1 eps) (* -1 (/ (* eps (+ a (* 2 a))) b))) (pow b 3)))","(* -1 (/ (+ (* -1 eps) (* -1 (/ (- (+ (* -1 (/ (* eps (+ (* 2 (pow a 2)) (pow a 2))) b)) (/ (* eps (pow (+ a (* 2 a)) 2)) b)) (* -1 (* eps (+ a (* 2 a))))) b))) (pow b 3)))","(* -1 (/ (+ (* -1 eps) (* -1 (/ (- (* -1 (/ (- (* -1 (/ (- (* (pow a 3) eps) (+ (* -1 (* (+ a (* 2 a)) (+ (* -1 (* eps (+ (* 2 (pow a 2)) (pow a 2)))) (* eps (pow (+ a (* 2 a)) 2))))) (+ (* -1 (* (pow a 3) eps)) (* eps (* (+ a (* 2 a)) (+ (* 2 (pow a 2)) (pow a 2))))))) b)) (+ (* -1 (* eps (+ (* 2 (pow a 2)) (pow a 2)))) (* eps (pow (+ a (* 2 a)) 2)))) b)) (* -1 (* eps (+ a (* 2 a))))) b))) (pow b 3)))","(* -1 (* b (+ (* -1 eps) (* -1 (/ (- (* -2 (* a eps)) (* -1 (* eps (+ a (* 2 a))))) b)))))","(* -1 (* b (+ (* -1 eps) (* -1 (/ (- (+ (* -2 (* a eps)) (* -1 (/ (- (* -1 (* eps (+ (* -1 (pow a 2)) (pow a 2)))) (+ (* -1 (* eps (+ (* 2 (pow a 2)) (pow a 2)))) (* (+ a (* 2 a)) (- (* -2 (* a eps)) (* -1 (* eps (+ a (* 2 a)))))))) b))) (* -1 (* eps (+ a (* 2 a))))) b)))))","(* -1 (* b (+ (* -1 eps) (* -1 (/ (- (+ (* -2 (* a eps)) (* -1 (/ (- (+ (* -1 (* eps (+ (* -1 (pow a 2)) (pow a 2)))) (* -1 (/ (- (* 2 (* (pow a 3) eps)) (+ (* -1 (* (pow a 3) eps)) (+ (* (+ a (* 2 a)) (- (* -1 (* eps (+ (* -1 (pow a 2)) (pow a 2)))) (+ (* -1 (* eps (+ (* 2 (pow a 2)) (pow a 2)))) (* (+ a (* 2 a)) (- (* -2 (* a eps)) (* -1 (* eps (+ a (* 2 a))))))))) (* (+ (* 2 (pow a 2)) (pow a 2)) (- (* -2 (* a eps)) (* -1 (* eps (+ a (* 2 a))))))))) b))) (+ (* -1 (* eps (+ (* 2 (pow a 2)) (pow a 2)))) (* (+ a (* 2 a)) (- (* -2 (* a eps)) (* -1 (* eps (+ a (* 2 a)))))))) b))) (* -1 (* eps (+ a (* 2 a))))) b)))))","(* (pow b 4) (+ 1 (* -1 (/ (+ (* -1 (/ (pow a 2) b)) (* 2 a)) b))))","(/ (+ a b) (* a b))","(- (* eps (- (* 1/2 (/ (pow (+ a b) 2) (* a b))) (/ (* (+ a b) (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b)))) (* (pow a 2) (pow b 2))))) (* -1 (/ (+ a b) (* a b))))","(- (* eps (- (* eps (- (* 1/6 (/ (pow (+ a b) 3) (* a b))) (+ (/ (* (+ a b) (+ (* 1/6 (* a (pow b 3))) (+ (* 1/6 (* (pow a 3) b)) (* 1/4 (* (pow a 2) (pow b 2)))))) (* (pow a 2) (pow b 2))) (/ (* (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b))) (- (* 1/2 (/ (pow (+ a b) 2) (* a b))) (/ (* (+ a b) (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b)))) (* (pow a 2) (pow b 2))))) (* a b))))) (* -1 (- (* 1/2 (/ (pow (+ a b) 2) (* a b))) (/ (* (+ a b) (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b)))) (* (pow a 2) (pow b 2))))))) (* -1 (/ (+ a b) (* a b))))","(- (* eps (- (* eps (- (* eps (- (* 1/24 (/ (pow (+ a b) 4) (* a b))) (+ (/ (* (+ a b) (+ (* 1/24 (* a (pow b 4))) (+ (* 1/24 (* (pow a 4) b)) (+ (* 1/12 (* (pow a 2) (pow b 3))) (* 1/12 (* (pow a 3) (pow b 2))))))) (* (pow a 2) (pow b 2))) (+ (/ (* (+ (* 1/6 (* a (pow b 3))) (+ (* 1/6 (* (pow a 3) b)) (* 1/4 (* (pow a 2) (pow b 2))))) (- (* 1/2 (/ (pow (+ a b) 2) (* a b))) (/ (* (+ a b) (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b)))) (* (pow a 2) (pow b 2))))) (* a b)) (/ (* (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b))) (- (* 1/6 (/ (pow (+ a b) 3) (* a b))) (+ (/ (* (+ a b) (+ (* 1/6 (* a (pow b 3))) (+ (* 1/6 (* (pow a 3) b)) (* 1/4 (* (pow a 2) (pow b 2)))))) (* (pow a 2) (pow b 2))) (/ (* (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b))) (- (* 1/2 (/ (pow (+ a b) 2) (* a b))) (/ (* (+ a b) (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b)))) (* (pow a 2) (pow b 2))))) (* a b))))) (* a b)))))) (* -1 (- (* 1/6 (/ (pow (+ a b) 3) (* a b))) (+ (/ (* (+ a b) (+ (* 1/6 (* a (pow b 3))) (+ (* 1/6 (* (pow a 3) b)) (* 1/4 (* (pow a 2) (pow b 2)))))) (* (pow a 2) (pow b 2))) (/ (* (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b))) (- (* 1/2 (/ (pow (+ a b) 2) (* a b))) (/ (* (+ a b) (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b)))) (* (pow a 2) (pow b 2))))) (* a b))))))) (* -1 (- (* 1/2 (/ (pow (+ a b) 2) (* a b))) (/ (* (+ a b) (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b)))) (* (pow a 2) (pow b 2))))))) (* -1 (/ (+ a b) (* a b))))","(* eps (+ a b))","(* -1 (/ (+ a b) (* a b)))","(+ (* -1 (* eps (- (* 1/2 (/ (pow (+ a b) 2) (* a b))) (/ (* (+ a b) (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b)))) (* (pow a 2) (pow b 2)))))) (* -1 (/ (+ a b) (* a b))))","(+ (* -1 (/ (+ a b) (* a b))) (* eps (+ (* -1 (* eps (- (* 1/6 (/ (pow (+ a b) 3) (* a b))) (+ (/ (* (+ a b) (+ (* 1/6 (* a (pow b 3))) (+ (* 1/6 (* (pow a 3) b)) (* 1/4 (* (pow a 2) (pow b 2)))))) (* (pow a 2) (pow b 2))) (/ (* (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b))) (- (* 1/2 (/ (pow (+ a b) 2) (* a b))) (/ (* (+ a b) (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b)))) (* (pow a 2) (pow b 2))))) (* a b)))))) (* -1 (- (* 1/2 (/ (pow (+ a b) 2) (* a b))) (/ (* (+ a b) (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b)))) (* (pow a 2) (pow b 2))))))))","(+ (* -1 (/ (+ a b) (* a b))) (* eps (+ (* -1 (- (* 1/2 (/ (pow (+ a b) 2) (* a b))) (/ (* (+ a b) (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b)))) (* (pow a 2) (pow b 2))))) (* eps (+ (* -1 (* eps (- (* 1/24 (/ (pow (+ a b) 4) (* a b))) (+ (/ (* (+ a b) (+ (* 1/24 (* a (pow b 4))) (+ (* 1/24 (* (pow a 4) b)) (+ (* 1/12 (* (pow a 2) (pow b 3))) (* 1/12 (* (pow a 3) (pow b 2))))))) (* (pow a 2) (pow b 2))) (+ (/ (* (+ (* 1/6 (* a (pow b 3))) (+ (* 1/6 (* (pow a 3) b)) (* 1/4 (* (pow a 2) (pow b 2))))) (- (* 1/2 (/ (pow (+ a b) 2) (* a b))) (/ (* (+ a b) (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b)))) (* (pow a 2) (pow b 2))))) (* a b)) (/ (* (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b))) (- (* 1/6 (/ (pow (+ a b) 3) (* a b))) (+ (/ (* (+ a b) (+ (* 1/6 (* a (pow b 3))) (+ (* 1/6 (* (pow a 3) b)) (* 1/4 (* (pow a 2) (pow b 2)))))) (* (pow a 2) (pow b 2))) (/ (* (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b))) (- (* 1/2 (/ (pow (+ a b) 2) (* a b))) (/ (* (+ a b) (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b)))) (* (pow a 2) (pow b 2))))) (* a b))))) (* a b))))))) (* -1 (- (* 1/6 (/ (pow (+ a b) 3) (* a b))) (+ (/ (* (+ a b) (+ (* 1/6 (* a (pow b 3))) (+ (* 1/6 (* (pow a 3) b)) (* 1/4 (* (pow a 2) (pow b 2)))))) (* (pow a 2) (pow b 2))) (/ (* (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b))) (- (* 1/2 (/ (pow (+ a b) 2) (* a b))) (/ (* (+ a b) (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b)))) (* (pow a 2) (pow b 2))))) (* a b))))))))))","(* -1 (* (pow eps 2) (+ a b)))","(* (pow eps 2) (+ (* -1 (+ a b)) (* -1/2 (* eps (pow (+ a b) 2)))))","(* (pow eps 2) (+ (* -1 (+ a b)) (* eps (+ (* -1/2 (pow (+ a b) 2)) (* -1/6 (* eps (pow (+ a b) 3)))))))","(* (pow eps 2) (+ (* -1 (+ a b)) (* eps (+ (* -1/2 (pow (+ a b) 2)) (* eps (+ (* -1/6 (pow (+ a b) 3)) (* -1/24 (* eps (pow (+ a b) 4)))))))))","(+ (* eps (- (* 1/2 (/ (pow (+ a b) 2) (* a b))) (/ (* (+ a b) (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b)))) (* (pow a 2) (pow b 2))))) (+ (/ 1 a) (/ 1 b)))","(+ (* eps (- (+ (* 1/2 (/ (pow (+ a b) 2) (* a b))) (* eps (- (* 1/6 (/ (pow (+ a b) 3) (* a b))) (+ (/ (* (+ a b) (+ (* 1/6 (* a (pow b 3))) (+ (* 1/6 (* (pow a 3) b)) (* 1/4 (* (pow a 2) (pow b 2)))))) (* (pow a 2) (pow b 2))) (/ (* (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b))) (- (* 1/2 (/ (pow (+ a b) 2) (* a b))) (/ (* (+ a b) (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b)))) (* (pow a 2) (pow b 2))))) (* a b)))))) (/ (* (+ a b) (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b)))) (* (pow a 2) (pow b 2))))) (+ (/ 1 a) (/ 1 b)))","(+ (* eps (- (+ (* 1/2 (/ (pow (+ a b) 2) (* a b))) (* eps (- (+ (* 1/6 (/ (pow (+ a b) 3) (* a b))) (* eps (- (* 1/24 (/ (pow (+ a b) 4) (* a b))) (+ (/ (* (+ a b) (+ (* 1/24 (* a (pow b 4))) (+ (* 1/24 (* (pow a 4) b)) (+ (* 1/12 (* (pow a 2) (pow b 3))) (* 1/12 (* (pow a 3) (pow b 2))))))) (* (pow a 2) (pow b 2))) (+ (/ (* (+ (* 1/6 (* a (pow b 3))) (+ (* 1/6 (* (pow a 3) b)) (* 1/4 (* (pow a 2) (pow b 2))))) (- (* 1/2 (/ (pow (+ a b) 2) (* a b))) (/ (* (+ a b) (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b)))) (* (pow a 2) (pow b 2))))) (* a b)) (/ (* (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b))) (- (* 1/6 (/ (pow (+ a b) 3) (* a b))) (+ (/ (* (+ a b) (+ (* 1/6 (* a (pow b 3))) (+ (* 1/6 (* (pow a 3) b)) (* 1/4 (* (pow a 2) (pow b 2)))))) (* (pow a 2) (pow b 2))) (/ (* (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b))) (- (* 1/2 (/ (pow (+ a b) 2) (* a b))) (/ (* (+ a b) (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b)))) (* (pow a 2) (pow b 2))))) (* a b))))) (* a b))))))) (+ (/ (* (+ a b) (+ (* 1/6 (* a (pow b 3))) (+ (* 1/6 (* (pow a 3) b)) (* 1/4 (* (pow a 2) (pow b 2)))))) (* (pow a 2) (pow b 2))) (/ (* (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b))) (- (* 1/2 (/ (pow (+ a b) 2) (* a b))) (/ (* (+ a b) (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b)))) (* (pow a 2) (pow b 2))))) (* a b)))))) (/ (* (+ a b) (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b)))) (* (pow a 2) (pow b 2))))) (+ (/ 1 a) (/ 1 b)))","(* (pow eps 2) (+ a b))","(* (pow eps 2) (+ a (+ b (* 1/2 (* eps (pow (+ a b) 2))))))","(* (pow eps 2) (+ a (+ b (* eps (+ (* 1/6 (* eps (pow (+ a b) 3))) (* 1/2 (pow (+ a b) 2)))))))","(* (pow eps 2) (+ a (+ b (* eps (+ (* 1/2 (pow (+ a b) 2)) (* eps (+ (* 1/24 (* eps (pow (+ a b) 4))) (* 1/6 (pow (+ a b) 3)))))))))","(* eps (+ a (+ b (* 1/2 (* eps (pow (+ a b) 2))))))","(* eps (+ a (+ b (* eps (+ (* 1/6 (* eps (pow (+ a b) 3))) (* 1/2 (pow (+ a b) 2)))))))","(* eps (+ a (+ b (* eps (+ (* 1/2 (pow (+ a b) 2)) (* eps (+ (* 1/24 (* eps (pow (+ a b) 4))) (* 1/6 (pow (+ a b) 3)))))))))","(/ (* a b) (+ a b))","(+ (* eps (- (+ (* 1/2 (/ (* a (pow b 2)) (+ a b))) (* 1/2 (/ (* (pow a 2) b) (+ a b)))) (* 1/2 (* a b)))) (/ (* a b) (+ a b)))","(+ (* eps (- (+ (* 1/2 (/ (* a (pow b 2)) (+ a b))) (+ (* 1/2 (/ (* (pow a 2) b) (+ a b))) (* eps (- (+ (* 1/6 (/ (* a (pow b 3)) (+ a b))) (+ (* 1/6 (/ (* (pow a 3) b) (+ a b))) (* 1/4 (/ (* (pow a 2) (pow b 2)) (+ a b))))) (+ (* 1/6 (* a (* b (+ a b)))) (* 1/2 (* (+ a b) (- (+ (* 1/2 (/ (* a (pow b 2)) (+ a b))) (* 1/2 (/ (* (pow a 2) b) (+ a b)))) (* 1/2 (* a b)))))))))) (* 1/2 (* a b)))) (/ (* a b) (+ a b)))","(+ (* eps (- (+ (* 1/2 (/ (* a (pow b 2)) (+ a b))) (+ (* 1/2 (/ (* (pow a 2) b) (+ a b))) (* eps (- (+ (* 1/6 (/ (* a (pow b 3)) (+ a b))) (+ (* 1/6 (/ (* (pow a 3) b) (+ a b))) (+ (* 1/4 (/ (* (pow a 2) (pow b 2)) (+ a b))) (* eps (- (+ (* 1/24 (/ (* a (pow b 4)) (+ a b))) (+ (* 1/24 (/ (* (pow a 4) b) (+ a b))) (+ (* 1/12 (/ (* (pow a 2) (pow b 3)) (+ a b))) (* 1/12 (/ (* (pow a 3) (pow b 2)) (+ a b)))))) (+ (* 1/24 (* a (* b (pow (+ a b) 2)))) (+ (* 1/6 (* (pow (+ a b) 2) (- (+ (* 1/2 (/ (* a (pow b 2)) (+ a b))) (* 1/2 (/ (* (pow a 2) b) (+ a b)))) (* 1/2 (* a b))))) (* 1/2 (* (+ a b) (- (+ (* 1/6 (/ (* a (pow b 3)) (+ a b))) (+ (* 1/6 (/ (* (pow a 3) b) (+ a b))) (* 1/4 (/ (* (pow a 2) (pow b 2)) (+ a b))))) (+ (* 1/6 (* a (* b (+ a b)))) (* 1/2 (* (+ a b) (- (+ (* 1/2 (/ (* a (pow b 2)) (+ a b))) (* 1/2 (/ (* (pow a 2) b) (+ a b)))) (* 1/2 (* a b)))))))))))))))) (+ (* 1/6 (* a (* b (+ a b)))) (* 1/2 (* (+ a b) (- (+ (* 1/2 (/ (* a (pow b 2)) (+ a b))) (* 1/2 (/ (* (pow a 2) b) (+ a b)))) (* 1/2 (* a b)))))))))) (* 1/2 (* a b)))) (/ (* a b) (+ a b)))","(/ (* (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) (+ (pow a 3) (pow b 3))) (* a (* b (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)))))","(- (* eps (- (* 1/2 (/ (* (pow (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) 2) (pow (+ (pow a 3) (pow b 3)) 2)) (* a (* b (pow (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)) 2))))) (/ (* (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b))) (* (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) (+ (pow a 3) (pow b 3)))) (* (pow a 2) (* (pow b 2) (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6))))))) (* -1 (/ (* (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) (+ (pow a 3) (pow b 3))) (* a (* b (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)))))))","(- (* eps (- (* eps (- (* 1/6 (/ (* (pow (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) 3) (pow (+ (pow a 3) (pow b 3)) 3)) (* a (* b (pow (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)) 3))))) (+ (/ (* (+ (* 1/6 (* a (pow b 3))) (+ (* 1/6 (* (pow a 3) b)) (* 1/4 (* (pow a 2) (pow b 2))))) (* (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) (+ (pow a 3) (pow b 3)))) (* (pow a 2) (* (pow b 2) (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6))))) (/ (* (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b))) (- (* 1/2 (/ (* (pow (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) 2) (pow (+ (pow a 3) (pow b 3)) 2)) (* a (* b (pow (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)) 2))))) (/ (* (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b))) (* (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) (+ (pow a 3) (pow b 3)))) (* (pow a 2) (* (pow b 2) (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6))))))) (* a b))))) (* -1 (- (* 1/2 (/ (* (pow (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) 2) (pow (+ (pow a 3) (pow b 3)) 2)) (* a (* b (pow (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)) 2))))) (/ (* (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b))) (* (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) (+ (pow a 3) (pow b 3)))) (* (pow a 2) (* (pow b 2) (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6))))))))) (* -1 (/ (* (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) (+ (pow a 3) (pow b 3))) (* a (* b (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)))))))","(- (* eps (- (* eps (- (* eps (- (* 1/24 (/ (* (pow (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) 4) (pow (+ (pow a 3) (pow b 3)) 4)) (* a (* b (pow (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)) 4))))) (+ (/ (* (+ (* 1/24 (* a (pow b 4))) (+ (* 1/24 (* (pow a 4) b)) (+ (* 1/12 (* (pow a 2) (pow b 3))) (* 1/12 (* (pow a 3) (pow b 2)))))) (* (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) (+ (pow a 3) (pow b 3)))) (* (pow a 2) (* (pow b 2) (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6))))) (+ (/ (* (+ (* 1/6 (* a (pow b 3))) (+ (* 1/6 (* (pow a 3) b)) (* 1/4 (* (pow a 2) (pow b 2))))) (- (* 1/2 (/ (* (pow (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) 2) (pow (+ (pow a 3) (pow b 3)) 2)) (* a (* b (pow (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)) 2))))) (/ (* (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b))) (* (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) (+ (pow a 3) (pow b 3)))) (* (pow a 2) (* (pow b 2) (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6))))))) (* a b)) (/ (* (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b))) (- (* 1/6 (/ (* (pow (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) 3) (pow (+ (pow a 3) (pow b 3)) 3)) (* a (* b (pow (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)) 3))))) (+ (/ (* (+ (* 1/6 (* a (pow b 3))) (+ (* 1/6 (* (pow a 3) b)) (* 1/4 (* (pow a 2) (pow b 2))))) (* (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) (+ (pow a 3) (pow b 3)))) (* (pow a 2) (* (pow b 2) (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6))))) (/ (* (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b))) (- (* 1/2 (/ (* (pow (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) 2) (pow (+ (pow a 3) (pow b 3)) 2)) (* a (* b (pow (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)) 2))))) (/ (* (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b))) (* (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) (+ (pow a 3) (pow b 3)))) (* (pow a 2) (* (pow b 2) (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6))))))) (* a b))))) (* a b)))))) (* -1 (- (* 1/6 (/ (* (pow (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) 3) (pow (+ (pow a 3) (pow b 3)) 3)) (* a (* b (pow (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)) 3))))) (+ (/ (* (+ (* 1/6 (* a (pow b 3))) (+ (* 1/6 (* (pow a 3) b)) (* 1/4 (* (pow a 2) (pow b 2))))) (* (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) (+ (pow a 3) (pow b 3)))) (* (pow a 2) (* (pow b 2) (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6))))) (/ (* (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b))) (- (* 1/2 (/ (* (pow (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) 2) (pow (+ (pow a 3) (pow b 3)) 2)) (* a (* b (pow (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)) 2))))) (/ (* (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b))) (* (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) (+ (pow a 3) (pow b 3)))) (* (pow a 2) (* (pow b 2) (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6))))))) (* a b))))))) (* -1 (- (* 1/2 (/ (* (pow (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) 2) (pow (+ (pow a 3) (pow b 3)) 2)) (* a (* b (pow (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)) 2))))) (/ (* (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b))) (* (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) (+ (pow a 3) (pow b 3)))) (* (pow a 2) (* (pow b 2) (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6))))))))) (* -1 (/ (* (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) (+ (pow a 3) (pow b 3))) (* a (* b (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)))))))","(* -1 (/ (* (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) (+ (pow a 3) (pow b 3))) (* a (* b (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6))))))","(+ (* -1 (* eps (- (* 1/2 (/ (* (pow (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) 2) (pow (+ (pow a 3) (pow b 3)) 2)) (* a (* b (pow (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)) 2))))) (/ (* (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b))) (* (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) (+ (pow a 3) (pow b 3)))) (* (pow a 2) (* (pow b 2) (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)))))))) (* -1 (/ (* (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) (+ (pow a 3) (pow b 3))) (* a (* b (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)))))))","(+ (* -1 (/ (* (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) (+ (pow a 3) (pow b 3))) (* a (* b (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)))))) (* eps (+ (* -1 (* eps (- (* 1/6 (/ (* (pow (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) 3) (pow (+ (pow a 3) (pow b 3)) 3)) (* a (* b (pow (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)) 3))))) (+ (/ (* (+ (* 1/6 (* a (pow b 3))) (+ (* 1/6 (* (pow a 3) b)) (* 1/4 (* (pow a 2) (pow b 2))))) (* (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) (+ (pow a 3) (pow b 3)))) (* (pow a 2) (* (pow b 2) (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6))))) (/ (* (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b))) (- (* 1/2 (/ (* (pow (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) 2) (pow (+ (pow a 3) (pow b 3)) 2)) (* a (* b (pow (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)) 2))))) (/ (* (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b))) (* (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) (+ (pow a 3) (pow b 3)))) (* (pow a 2) (* (pow b 2) (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6))))))) (* a b)))))) (* -1 (- (* 1/2 (/ (* (pow (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) 2) (pow (+ (pow a 3) (pow b 3)) 2)) (* a (* b (pow (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)) 2))))) (/ (* (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b))) (* (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) (+ (pow a 3) (pow b 3)))) (* (pow a 2) (* (pow b 2) (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6))))))))))","(+ (* -1 (/ (* (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) (+ (pow a 3) (pow b 3))) (* a (* b (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)))))) (* eps (+ (* -1 (- (* 1/2 (/ (* (pow (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) 2) (pow (+ (pow a 3) (pow b 3)) 2)) (* a (* b (pow (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)) 2))))) (/ (* (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b))) (* (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) (+ (pow a 3) (pow b 3)))) (* (pow a 2) (* (pow b 2) (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6))))))) (* eps (+ (* -1 (* eps (- (* 1/24 (/ (* (pow (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) 4) (pow (+ (pow a 3) (pow b 3)) 4)) (* a (* b (pow (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)) 4))))) (+ (/ (* (+ (* 1/24 (* a (pow b 4))) (+ (* 1/24 (* (pow a 4) b)) (+ (* 1/12 (* (pow a 2) (pow b 3))) (* 1/12 (* (pow a 3) (pow b 2)))))) (* (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) (+ (pow a 3) (pow b 3)))) (* (pow a 2) (* (pow b 2) (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6))))) (+ (/ (* (+ (* 1/6 (* a (pow b 3))) (+ (* 1/6 (* (pow a 3) b)) (* 1/4 (* (pow a 2) (pow b 2))))) (- (* 1/2 (/ (* (pow (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) 2) (pow (+ (pow a 3) (pow b 3)) 2)) (* a (* b (pow (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)) 2))))) (/ (* (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b))) (* (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) (+ (pow a 3) (pow b 3)))) (* (pow a 2) (* (pow b 2) (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6))))))) (* a b)) (/ (* (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b))) (- (* 1/6 (/ (* (pow (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) 3) (pow (+ (pow a 3) (pow b 3)) 3)) (* a (* b (pow (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)) 3))))) (+ (/ (* (+ (* 1/6 (* a (pow b 3))) (+ (* 1/6 (* (pow a 3) b)) (* 1/4 (* (pow a 2) (pow b 2))))) (* (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) (+ (pow a 3) (pow b 3)))) (* (pow a 2) (* (pow b 2) (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6))))) (/ (* (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b))) (- (* 1/2 (/ (* (pow (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) 2) (pow (+ (pow a 3) (pow b 3)) 2)) (* a (* b (pow (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)) 2))))) (/ (* (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b))) (* (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) (+ (pow a 3) (pow b 3)))) (* (pow a 2) (* (pow b 2) (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6))))))) (* a b))))) (* a b))))))) (* -1 (- (* 1/6 (/ (* (pow (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) 3) (pow (+ (pow a 3) (pow b 3)) 3)) (* a (* b (pow (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)) 3))))) (+ (/ (* (+ (* 1/6 (* a (pow b 3))) (+ (* 1/6 (* (pow a 3) b)) (* 1/4 (* (pow a 2) (pow b 2))))) (* (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) (+ (pow a 3) (pow b 3)))) (* (pow a 2) (* (pow b 2) (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6))))) (/ (* (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b))) (- (* 1/2 (/ (* (pow (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) 2) (pow (+ (pow a 3) (pow b 3)) 2)) (* a (* b (pow (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)) 2))))) (/ (* (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b))) (* (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) (+ (pow a 3) (pow b 3)))) (* (pow a 2) (* (pow b 2) (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6))))))) (* a b))))))))))","(* -1 (/ (* (pow eps 2) (* (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) (+ (pow a 3) (pow b 3)))) (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6))))","(* (pow eps 2) (+ (* -1 (/ (* (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) (+ (pow a 3) (pow b 3))) (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)))) (* -1/2 (/ (* eps (* (pow (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) 2) (pow (+ (pow a 3) (pow b 3)) 2))) (pow (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)) 2)))))","(* (pow eps 2) (+ (* -1 (/ (* (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) (+ (pow a 3) (pow b 3))) (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)))) (* eps (+ (* -1/2 (/ (* (pow (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) 2) (pow (+ (pow a 3) (pow b 3)) 2)) (pow (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)) 2))) (* -1/6 (/ (* eps (* (pow (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) 3) (pow (+ (pow a 3) (pow b 3)) 3))) (pow (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)) 3)))))))","(* (pow eps 2) (+ (* -1 (/ (* (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) (+ (pow a 3) (pow b 3))) (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)))) (* eps (+ (* -1/2 (/ (* (pow (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) 2) (pow (+ (pow a 3) (pow b 3)) 2)) (pow (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)) 2))) (* eps (+ (* -1/6 (/ (* (pow (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) 3) (pow (+ (pow a 3) (pow b 3)) 3)) (pow (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)) 3))) (* -1/24 (/ (* eps (* (pow (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) 4) (pow (+ (pow a 3) (pow b 3)) 4))) (pow (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)) 4)))))))))","(/ (* eps (* (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) (+ (pow a 3) (pow b 3)))) (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)))","(* eps (+ (* 1/2 (/ (* eps (* (pow (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) 2) (pow (+ (pow a 3) (pow b 3)) 2))) (pow (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)) 2))) (/ (* (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) (+ (pow a 3) (pow b 3))) (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)))))","(* eps (+ (* eps (+ (* 1/6 (/ (* eps (* (pow (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) 3) (pow (+ (pow a 3) (pow b 3)) 3))) (pow (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)) 3))) (* 1/2 (/ (* (pow (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) 2) (pow (+ (pow a 3) (pow b 3)) 2)) (pow (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)) 2))))) (/ (* (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) (+ (pow a 3) (pow b 3))) (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)))))","(* eps (+ (* eps (+ (* 1/2 (/ (* (pow (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) 2) (pow (+ (pow a 3) (pow b 3)) 2)) (pow (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)) 2))) (* eps (+ (* 1/24 (/ (* eps (* (pow (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) 4) (pow (+ (pow a 3) (pow b 3)) 4))) (pow (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)) 4))) (* 1/6 (/ (* (pow (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) 3) (pow (+ (pow a 3) (pow b 3)) 3)) (pow (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)) 3))))))) (/ (* (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) (+ (pow a 3) (pow b 3))) (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)))))","(* a (* b (pow eps 2)))","(* (pow eps 2) (+ (* a b) (* eps (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b))))))","(* (pow eps 2) (+ (* a b) (* eps (+ (* 1/2 (* a (pow b 2))) (+ (* 1/2 (* (pow a 2) b)) (* eps (+ (* 1/6 (* a (pow b 3))) (+ (* 1/6 (* (pow a 3) b)) (* 1/4 (* (pow a 2) (pow b 2)))))))))))","(* (pow eps 2) (+ (* a b) (* eps (+ (* 1/2 (* a (pow b 2))) (+ (* 1/2 (* (pow a 2) b)) (* eps (+ (* 1/6 (* a (pow b 3))) (+ (* 1/6 (* (pow a 3) b)) (+ (* 1/4 (* (pow a 2) (pow b 2))) (* eps (+ (* 1/24 (* a (pow b 4))) (+ (* 1/24 (* (pow a 4) b)) (+ (* 1/12 (* (pow a 2) (pow b 3))) (* 1/12 (* (pow a 3) (pow b 2))))))))))))))))","(* eps (* (+ a b) (- a b)))","(/ (* eps (+ (pow a 3) (pow b 3))) (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)))","(* eps (- (/ (exp (* eps (+ a b))) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))) (/ 1 (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)))))","(* -1 (* eps (- (/ 1 (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))) (/ (exp (+ (* a eps) (* b eps))) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))))))","(* -1 (* eps (+ (* -1 a) (* -1 b))))","(* -1 (* eps (- (/ 1 (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))) (/ (exp (* eps (+ a b))) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))))))","(* -1 (* eps (- (/ 1 (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))) (/ (exp (/ (* eps (* (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) (+ (pow a 3) (pow b 3)))) (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)))) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))))))"]],"series":[[15.97705078125,"((neg (/ (* (- (exp (+ (* b eps) (* a eps))) 1) (neg eps)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)))) (+ (* b eps) (* a eps)) (/ (* (- (exp (+ (* b eps) (* a eps))) 1) (neg eps)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))) (* (- (exp (+ (* b eps) (* a eps))) 1) (neg eps)) (+ (/ (* eps (- (exp (* (+ a b) eps)) 1)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))) 0) (/ (* eps (- (exp (* (+ a b) eps)) 1)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))) (* eps (- (exp (* (+ a b) eps)) 1)) (- (exp (* (+ a b) eps)) 1) (* (* (* (+ a b) eps) (- a b)) (/ 1 (- a b))) (neg (/ (* (- (exp (* (* (* (+ a b) eps) (- a b)) (/ 1 (- a b)))) 1) (neg eps)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)))) (/ (* (- (exp (* (* (* (+ a b) eps) (- a b)) (/ 1 (- a b)))) 1) (neg eps)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))) (* (- (exp (* (* (* (+ a b) eps) (- a b)) (/ 1 (- a b)))) 1) (neg eps)) (* (* (+ a b) (- a b)) (/ eps (- a b))) (neg (/ -1 (/ (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)) (* eps (- (exp (* (* (+ a b) (- a b)) (/ eps (- a b)))) 1))))) (/ -1 (/ (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)) (* eps (- (exp (* (* (+ a b) (- a b)) (/ eps (- a b)))) 1)))) (/ (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)) (* eps (- (exp (* (* (+ a b) (- a b)) (/ eps (- a b)))) 1))) (neg (/ (* (- (exp (* (/ (* (+ (* (* a a) a) (* (* b b) b)) eps) (+ (* (* (* (- b a) b) (* (- b a) b)) (* (- b a) b)) (* (* a a) (* (* a a) (* a a))))) (+ (* (* (- b a) b) (- (* (- b a) b) (* a a))) (* (* a a) (* a a))))) 1) (neg eps)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)))) (/ (* (- (exp (* (/ (* (+ (* (* a a) a) (* (* b b) b)) eps) (+ (* (* (* (- b a) b) (* (- b a) b)) (* (- b a) b)) (* (* a a) (* (* a a) (* a a))))) (+ (* (* (- b a) b) (- (* (- b a) b) (* a a))) (* (* a a) (* a a))))) 1) (neg eps)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))) (* (- (exp (* (/ (* (+ (* (* a a) a) (* (* b b) b)) eps) (+ (* (* (* (- b a) b) (* (- b a) b)) (* (- b a) b)) (* (* a a) (* (* a a) (* a a))))) (+ (* (* (- b a) b) (- (* (- b a) b) (* a a))) (* (* a a) (* a a))))) 1) (neg eps)) (- (exp (* (/ (* (+ (* (* a a) a) (* (* b b) b)) eps) (+ (* (* (* (- b a) b) (* (- b a) b)) (* (- b a) b)) (* (* a a) (* (* a a) (* a a))))) (+ (* (* (- b a) b) (- (* (- b a) b) (* a a))) (* (* a a) (* a a))))) 1) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)) (* (+ a b) eps) (* (* (+ a b) eps) (- a b)) (/ 1 (- a b)) (/ (* (+ (* (* a a) a) (* (* b b) b)) eps) (+ (* (* (* (- b a) b) (* (- b a) b)) (* (- b a) b)) (* (* a a) (* (* a a) (* a a))))) (* (/ (* (+ (* (* a a) a) (* (* b b) b)) eps) (+ (* (* (* (- b a) b) (* (- b a) b)) (* (- b a) b)) (* (* a a) (* (* a a) (* a a))))) (+ (* (* (- b a) b) (- (* (- b a) b) (* a a))) (* (* a a) (* a a)))) (* (* (- b a) b) (* (- b a) b)))","eps","-inf"],[37.409912109375,"((neg (/ (* (- (exp (+ (* b eps) (* a eps))) 1) (neg eps)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)))) (+ (* b eps) (* a eps)) (/ (* (- (exp (+ (* b eps) (* a eps))) 1) (neg eps)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))) (* (- (exp (+ (* b eps) (* a eps))) 1) (neg eps)) (+ (/ (* eps (- (exp (* (+ a b) eps)) 1)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))) 0) (/ (* eps (- (exp (* (+ a b) eps)) 1)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))) (* eps (- (exp (* (+ a b) eps)) 1)) (- (exp (* (+ a b) eps)) 1) (* (* (* (+ a b) eps) (- a b)) (/ 1 (- a b))) (neg (/ (* (- (exp (* (* (* (+ a b) eps) (- a b)) (/ 1 (- a b)))) 1) (neg eps)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)))) (/ (* (- (exp (* (* (* (+ a b) eps) (- a b)) (/ 1 (- a b)))) 1) (neg eps)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))) (* (- (exp (* (* (* (+ a b) eps) (- a b)) (/ 1 (- a b)))) 1) (neg eps)) (* (* (+ a b) (- a b)) (/ eps (- a b))) (neg (/ -1 (/ (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)) (* eps (- (exp (* (* (+ a b) (- a b)) (/ eps (- a b)))) 1))))) (/ -1 (/ (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)) (* eps (- (exp (* (* (+ a b) (- a b)) (/ eps (- a b)))) 1)))) (/ (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)) (* eps (- (exp (* (* (+ a b) (- a b)) (/ eps (- a b)))) 1))) (neg (/ (* (- (exp (* (/ (* (+ (* (* a a) a) (* (* b b) b)) eps) (+ (* (* (* (- b a) b) (* (- b a) b)) (* (- b a) b)) (* (* a a) (* (* a a) (* a a))))) (+ (* (* (- b a) b) (- (* (- b a) b) (* a a))) (* (* a a) (* a a))))) 1) (neg eps)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)))) (/ (* (- (exp (* (/ (* (+ (* (* a a) a) (* (* b b) b)) eps) (+ (* (* (* (- b a) b) (* (- b a) b)) (* (- b a) b)) (* (* a a) (* (* a a) (* a a))))) (+ (* (* (- b a) b) (- (* (- b a) b) (* a a))) (* (* a a) (* a a))))) 1) (neg eps)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))) (* (- (exp (* (/ (* (+ (* (* a a) a) (* (* b b) b)) eps) (+ (* (* (* (- b a) b) (* (- b a) b)) (* (- b a) b)) (* (* a a) (* (* a a) (* a a))))) (+ (* (* (- b a) b) (- (* (- b a) b) (* a a))) (* (* a a) (* a a))))) 1) (neg eps)) (- (exp (* (/ (* (+ (* (* a a) a) (* (* b b) b)) eps) (+ (* (* (* (- b a) b) (* (- b a) b)) (* (- b a) b)) (* (* a a) (* (* a a) (* a a))))) (+ (* (* (- b a) b) (- (* (- b a) b) (* a a))) (* (* a a) (* a a))))) 1) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)) (* (+ a b) eps) (* (* (+ a b) eps) (- a b)) (/ 1 (- a b)) (/ (* (+ (* (* a a) a) (* (* b b) b)) eps) (+ (* (* (* (- b a) b) (* (- b a) b)) (* (- b a) b)) (* (* a a) (* (* a a) (* a a))))) (* (/ (* (+ (* (* a a) a) (* (* b b) b)) eps) (+ (* (* (* (- b a) b) (* (- b a) b)) (* (- b a) b)) (* (* a a) (* (* a a) (* a a))))) (+ (* (* (- b a) b) (- (* (- b a) b) (* a a))) (* (* a a) (* a a)))) (* (* (- b a) b) (* (- b a) b)))","eps","inf"],[24.556884765625,"((neg (/ (* (- (exp (+ (* b eps) (* a eps))) 1) (neg eps)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)))) (+ (* b eps) (* a eps)) (/ (* (- (exp (+ (* b eps) (* a eps))) 1) (neg eps)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))) (* (- (exp (+ (* b eps) (* a eps))) 1) (neg eps)) (+ (/ (* eps (- (exp (* (+ a b) eps)) 1)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))) 0) (/ (* eps (- (exp (* (+ a b) eps)) 1)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))) (* eps (- (exp (* (+ a b) eps)) 1)) (- (exp (* (+ a b) eps)) 1) (* (* (* (+ a b) eps) (- a b)) (/ 1 (- a b))) (neg (/ (* (- (exp (* (* (* (+ a b) eps) (- a b)) (/ 1 (- a b)))) 1) (neg eps)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)))) (/ (* (- (exp (* (* (* (+ a b) eps) (- a b)) (/ 1 (- a b)))) 1) (neg eps)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))) (* (- (exp (* (* (* (+ a b) eps) (- a b)) (/ 1 (- a b)))) 1) (neg eps)) (* (* (+ a b) (- a b)) (/ eps (- a b))) (neg (/ -1 (/ (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)) (* eps (- (exp (* (* (+ a b) (- a b)) (/ eps (- a b)))) 1))))) (/ -1 (/ (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)) (* eps (- (exp (* (* (+ a b) (- a b)) (/ eps (- a b)))) 1)))) (/ (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)) (* eps (- (exp (* (* (+ a b) (- a b)) (/ eps (- a b)))) 1))) (neg (/ (* (- (exp (* (/ (* (+ (* (* a a) a) (* (* b b) b)) eps) (+ (* (* (* (- b a) b) (* (- b a) b)) (* (- b a) b)) (* (* a a) (* (* a a) (* a a))))) (+ (* (* (- b a) b) (- (* (- b a) b) (* a a))) (* (* a a) (* a a))))) 1) (neg eps)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)))) (/ (* (- (exp (* (/ (* (+ (* (* a a) a) (* (* b b) b)) eps) (+ (* (* (* (- b a) b) (* (- b a) b)) (* (- b a) b)) (* (* a a) (* (* a a) (* a a))))) (+ (* (* (- b a) b) (- (* (- b a) b) (* a a))) (* (* a a) (* a a))))) 1) (neg eps)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))) (* (- (exp (* (/ (* (+ (* (* a a) a) (* (* b b) b)) eps) (+ (* (* (* (- b a) b) (* (- b a) b)) (* (- b a) b)) (* (* a a) (* (* a a) (* a a))))) (+ (* (* (- b a) b) (- (* (- b a) b) (* a a))) (* (* a a) (* a a))))) 1) (neg eps)) (- (exp (* (/ (* (+ (* (* a a) a) (* (* b b) b)) eps) (+ (* (* (* (- b a) b) (* (- b a) b)) (* (- b a) b)) (* (* a a) (* (* a a) (* a a))))) (+ (* (* (- b a) b) (- (* (- b a) b) (* a a))) (* (* a a) (* a a))))) 1) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)) (* (+ a b) eps) (* (* (+ a b) eps) (- a b)) (/ 1 (- a b)) (/ (* (+ (* (* a a) a) (* (* b b) b)) eps) (+ (* (* (* (- b a) b) (* (- b a) b)) (* (- b a) b)) (* (* a a) (* (* a a) (* a a))))) (* (/ (* (+ (* (* a a) a) (* (* b b) b)) eps) (+ (* (* (* (- b a) b) (* (- b a) b)) (* (- b a) b)) (* (* a a) (* (* a a) (* a a))))) (+ (* (* (- b a) b) (- (* (- b a) b) (* a a))) (* (* a a) (* a a)))) (* (* (- b a) b) (* (- b a) b)))","eps","0"],[11.217041015625,"((neg (/ (* (- (exp (+ (* b eps) (* a eps))) 1) (neg eps)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)))) (+ (* b eps) (* a eps)) (/ (* (- (exp (+ (* b eps) (* a eps))) 1) (neg eps)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))) (* (- (exp (+ (* b eps) (* a eps))) 1) (neg eps)) (+ (/ (* eps (- (exp (* (+ a b) eps)) 1)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))) 0) (/ (* eps (- (exp (* (+ a b) eps)) 1)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))) (* eps (- (exp (* (+ a b) eps)) 1)) (- (exp (* (+ a b) eps)) 1) (* (* (* (+ a b) eps) (- a b)) (/ 1 (- a b))) (neg (/ (* (- (exp (* (* (* (+ a b) eps) (- a b)) (/ 1 (- a b)))) 1) (neg eps)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)))) (/ (* (- (exp (* (* (* (+ a b) eps) (- a b)) (/ 1 (- a b)))) 1) (neg eps)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))) (* (- (exp (* (* (* (+ a b) eps) (- a b)) (/ 1 (- a b)))) 1) (neg eps)) (* (* (+ a b) (- a b)) (/ eps (- a b))) (neg (/ -1 (/ (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)) (* eps (- (exp (* (* (+ a b) (- a b)) (/ eps (- a b)))) 1))))) (/ -1 (/ (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)) (* eps (- (exp (* (* (+ a b) (- a b)) (/ eps (- a b)))) 1)))) (/ (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)) (* eps (- (exp (* (* (+ a b) (- a b)) (/ eps (- a b)))) 1))) (neg (/ (* (- (exp (* (/ (* (+ (* (* a a) a) (* (* b b) b)) eps) (+ (* (* (* (- b a) b) (* (- b a) b)) (* (- b a) b)) (* (* a a) (* (* a a) (* a a))))) (+ (* (* (- b a) b) (- (* (- b a) b) (* a a))) (* (* a a) (* a a))))) 1) (neg eps)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)))) (/ (* (- (exp (* (/ (* (+ (* (* a a) a) (* (* b b) b)) eps) (+ (* (* (* (- b a) b) (* (- b a) b)) (* (- b a) b)) (* (* a a) (* (* a a) (* a a))))) (+ (* (* (- b a) b) (- (* (- b a) b) (* a a))) (* (* a a) (* a a))))) 1) (neg eps)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))) (* (- (exp (* (/ (* (+ (* (* a a) a) (* (* b b) b)) eps) (+ (* (* (* (- b a) b) (* (- b a) b)) (* (- b a) b)) (* (* a a) (* (* a a) (* a a))))) (+ (* (* (- b a) b) (- (* (- b a) b) (* a a))) (* (* a a) (* a a))))) 1) (neg eps)) (- (exp (* (/ (* (+ (* (* a a) a) (* (* b b) b)) eps) (+ (* (* (* (- b a) b) (* (- b a) b)) (* (- b a) b)) (* (* a a) (* (* a a) (* a a))))) (+ (* (* (- b a) b) (- (* (- b a) b) (* a a))) (* (* a a) (* a a))))) 1) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)) (* (+ a b) eps) (* (* (+ a b) eps) (- a b)) (/ 1 (- a b)) (/ (* (+ (* (* a a) a) (* (* b b) b)) eps) (+ (* (* (* (- b a) b) (* (- b a) b)) (* (- b a) b)) (* (* a a) (* (* a a) (* a a))))) (* (/ (* (+ (* (* a a) a) (* (* b b) b)) eps) (+ (* (* (* (- b a) b) (* (- b a) b)) (* (- b a) b)) (* (* a a) (* (* a a) (* a a))))) (+ (* (* (- b a) b) (- (* (- b a) b) (* a a))) (* (* a a) (* a a)))) (* (* (- b a) b) (* (- b a) b)))","b","-inf"],[14.797119140625,"((neg (/ (* (- (exp (+ (* b eps) (* a eps))) 1) (neg eps)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)))) (+ (* b eps) (* a eps)) (/ (* (- (exp (+ (* b eps) (* a eps))) 1) (neg eps)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))) (* (- (exp (+ (* b eps) (* a eps))) 1) (neg eps)) (+ (/ (* eps (- (exp (* (+ a b) eps)) 1)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))) 0) (/ (* eps (- (exp (* (+ a b) eps)) 1)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))) (* eps (- (exp (* (+ a b) eps)) 1)) (- (exp (* (+ a b) eps)) 1) (* (* (* (+ a b) eps) (- a b)) (/ 1 (- a b))) (neg (/ (* (- (exp (* (* (* (+ a b) eps) (- a b)) (/ 1 (- a b)))) 1) (neg eps)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)))) (/ (* (- (exp (* (* (* (+ a b) eps) (- a b)) (/ 1 (- a b)))) 1) (neg eps)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))) (* (- (exp (* (* (* (+ a b) eps) (- a b)) (/ 1 (- a b)))) 1) (neg eps)) (* (* (+ a b) (- a b)) (/ eps (- a b))) (neg (/ -1 (/ (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)) (* eps (- (exp (* (* (+ a b) (- a b)) (/ eps (- a b)))) 1))))) (/ -1 (/ (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)) (* eps (- (exp (* (* (+ a b) (- a b)) (/ eps (- a b)))) 1)))) (/ (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)) (* eps (- (exp (* (* (+ a b) (- a b)) (/ eps (- a b)))) 1))) (neg (/ (* (- (exp (* (/ (* (+ (* (* a a) a) (* (* b b) b)) eps) (+ (* (* (* (- b a) b) (* (- b a) b)) (* (- b a) b)) (* (* a a) (* (* a a) (* a a))))) (+ (* (* (- b a) b) (- (* (- b a) b) (* a a))) (* (* a a) (* a a))))) 1) (neg eps)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)))) (/ (* (- (exp (* (/ (* (+ (* (* a a) a) (* (* b b) b)) eps) (+ (* (* (* (- b a) b) (* (- b a) b)) (* (- b a) b)) (* (* a a) (* (* a a) (* a a))))) (+ (* (* (- b a) b) (- (* (- b a) b) (* a a))) (* (* a a) (* a a))))) 1) (neg eps)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))) (* (- (exp (* (/ (* (+ (* (* a a) a) (* (* b b) b)) eps) (+ (* (* (* (- b a) b) (* (- b a) b)) (* (- b a) b)) (* (* a a) (* (* a a) (* a a))))) (+ (* (* (- b a) b) (- (* (- b a) b) (* a a))) (* (* a a) (* a a))))) 1) (neg eps)) (- (exp (* (/ (* (+ (* (* a a) a) (* (* b b) b)) eps) (+ (* (* (* (- b a) b) (* (- b a) b)) (* (- b a) b)) (* (* a a) (* (* a a) (* a a))))) (+ (* (* (- b a) b) (- (* (- b a) b) (* a a))) (* (* a a) (* a a))))) 1) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)) (* (+ a b) eps) (* (* (+ a b) eps) (- a b)) (/ 1 (- a b)) (/ (* (+ (* (* a a) a) (* (* b b) b)) eps) (+ (* (* (* (- b a) b) (* (- b a) b)) (* (- b a) b)) (* (* a a) (* (* a a) (* a a))))) (* (/ (* (+ (* (* a a) a) (* (* b b) b)) eps) (+ (* (* (* (- b a) b) (* (- b a) b)) (* (- b a) b)) (* (* a a) (* (* a a) (* a a))))) (+ (* (* (- b a) b) (- (* (- b a) b) (* a a))) (* (* a a) (* a a)))) (* (* (- b a) b) (* (- b a) b)))","b","inf"],[8.052001953125,"((neg (/ (* (- (exp (+ (* b eps) (* a eps))) 1) (neg eps)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)))) (+ (* b eps) (* a eps)) (/ (* (- (exp (+ (* b eps) (* a eps))) 1) (neg eps)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))) (* (- (exp (+ (* b eps) (* a eps))) 1) (neg eps)) (+ (/ (* eps (- (exp (* (+ a b) eps)) 1)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))) 0) (/ (* eps (- (exp (* (+ a b) eps)) 1)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))) (* eps (- (exp (* (+ a b) eps)) 1)) (- (exp (* (+ a b) eps)) 1) (* (* (* (+ a b) eps) (- a b)) (/ 1 (- a b))) (neg (/ (* (- (exp (* (* (* (+ a b) eps) (- a b)) (/ 1 (- a b)))) 1) (neg eps)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)))) (/ (* (- (exp (* (* (* (+ a b) eps) (- a b)) (/ 1 (- a b)))) 1) (neg eps)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))) (* (- (exp (* (* (* (+ a b) eps) (- a b)) (/ 1 (- a b)))) 1) (neg eps)) (* (* (+ a b) (- a b)) (/ eps (- a b))) (neg (/ -1 (/ (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)) (* eps (- (exp (* (* (+ a b) (- a b)) (/ eps (- a b)))) 1))))) (/ -1 (/ (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)) (* eps (- (exp (* (* (+ a b) (- a b)) (/ eps (- a b)))) 1)))) (/ (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)) (* eps (- (exp (* (* (+ a b) (- a b)) (/ eps (- a b)))) 1))) (neg (/ (* (- (exp (* (/ (* (+ (* (* a a) a) (* (* b b) b)) eps) (+ (* (* (* (- b a) b) (* (- b a) b)) (* (- b a) b)) (* (* a a) (* (* a a) (* a a))))) (+ (* (* (- b a) b) (- (* (- b a) b) (* a a))) (* (* a a) (* a a))))) 1) (neg eps)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)))) (/ (* (- (exp (* (/ (* (+ (* (* a a) a) (* (* b b) b)) eps) (+ (* (* (* (- b a) b) (* (- b a) b)) (* (- b a) b)) (* (* a a) (* (* a a) (* a a))))) (+ (* (* (- b a) b) (- (* (- b a) b) (* a a))) (* (* a a) (* a a))))) 1) (neg eps)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))) (* (- (exp (* (/ (* (+ (* (* a a) a) (* (* b b) b)) eps) (+ (* (* (* (- b a) b) (* (- b a) b)) (* (- b a) b)) (* (* a a) (* (* a a) (* a a))))) (+ (* (* (- b a) b) (- (* (- b a) b) (* a a))) (* (* a a) (* a a))))) 1) (neg eps)) (- (exp (* (/ (* (+ (* (* a a) a) (* (* b b) b)) eps) (+ (* (* (* (- b a) b) (* (- b a) b)) (* (- b a) b)) (* (* a a) (* (* a a) (* a a))))) (+ (* (* (- b a) b) (- (* (- b a) b) (* a a))) (* (* a a) (* a a))))) 1) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)) (* (+ a b) eps) (* (* (+ a b) eps) (- a b)) (/ 1 (- a b)) (/ (* (+ (* (* a a) a) (* (* b b) b)) eps) (+ (* (* (* (- b a) b) (* (- b a) b)) (* (- b a) b)) (* (* a a) (* (* a a) (* a a))))) (* (/ (* (+ (* (* a a) a) (* (* b b) b)) eps) (+ (* (* (* (- b a) b) (* (- b a) b)) (* (- b a) b)) (* (* a a) (* (* a a) (* a a))))) (+ (* (* (- b a) b) (- (* (- b a) b) (* a a))) (* (* a a) (* a a)))) (* (* (- b a) b) (* (- b a) b)))","b","0"],[18.802001953125,"((neg (/ (* (- (exp (+ (* b eps) (* a eps))) 1) (neg eps)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)))) (+ (* b eps) (* a eps)) (/ (* (- (exp (+ (* b eps) (* a eps))) 1) (neg eps)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))) (* (- (exp (+ (* b eps) (* a eps))) 1) (neg eps)) (+ (/ (* eps (- (exp (* (+ a b) eps)) 1)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))) 0) (/ (* eps (- (exp (* (+ a b) eps)) 1)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))) (* eps (- (exp (* (+ a b) eps)) 1)) (- (exp (* (+ a b) eps)) 1) (* (* (* (+ a b) eps) (- a b)) (/ 1 (- a b))) (neg (/ (* (- (exp (* (* (* (+ a b) eps) (- a b)) (/ 1 (- a b)))) 1) (neg eps)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)))) (/ (* (- (exp (* (* (* (+ a b) eps) (- a b)) (/ 1 (- a b)))) 1) (neg eps)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))) (* (- (exp (* (* (* (+ a b) eps) (- a b)) (/ 1 (- a b)))) 1) (neg eps)) (* (* (+ a b) (- a b)) (/ eps (- a b))) (neg (/ -1 (/ (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)) (* eps (- (exp (* (* (+ a b) (- a b)) (/ eps (- a b)))) 1))))) (/ -1 (/ (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)) (* eps (- (exp (* (* (+ a b) (- a b)) (/ eps (- a b)))) 1)))) (/ (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)) (* eps (- (exp (* (* (+ a b) (- a b)) (/ eps (- a b)))) 1))) (neg (/ (* (- (exp (* (/ (* (+ (* (* a a) a) (* (* b b) b)) eps) (+ (* (* (* (- b a) b) (* (- b a) b)) (* (- b a) b)) (* (* a a) (* (* a a) (* a a))))) (+ (* (* (- b a) b) (- (* (- b a) b) (* a a))) (* (* a a) (* a a))))) 1) (neg eps)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)))) (/ (* (- (exp (* (/ (* (+ (* (* a a) a) (* (* b b) b)) eps) (+ (* (* (* (- b a) b) (* (- b a) b)) (* (- b a) b)) (* (* a a) (* (* a a) (* a a))))) (+ (* (* (- b a) b) (- (* (- b a) b) (* a a))) (* (* a a) (* a a))))) 1) (neg eps)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))) (* (- (exp (* (/ (* (+ (* (* a a) a) (* (* b b) b)) eps) (+ (* (* (* (- b a) b) (* (- b a) b)) (* (- b a) b)) (* (* a a) (* (* a a) (* a a))))) (+ (* (* (- b a) b) (- (* (- b a) b) (* a a))) (* (* a a) (* a a))))) 1) (neg eps)) (- (exp (* (/ (* (+ (* (* a a) a) (* (* b b) b)) eps) (+ (* (* (* (- b a) b) (* (- b a) b)) (* (- b a) b)) (* (* a a) (* (* a a) (* a a))))) (+ (* (* (- b a) b) (- (* (- b a) b) (* a a))) (* (* a a) (* a a))))) 1) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)) (* (+ a b) eps) (* (* (+ a b) eps) (- a b)) (/ 1 (- a b)) (/ (* (+ (* (* a a) a) (* (* b b) b)) eps) (+ (* (* (* (- b a) b) (* (- b a) b)) (* (- b a) b)) (* (* a a) (* (* a a) (* a a))))) (* (/ (* (+ (* (* a a) a) (* (* b b) b)) eps) (+ (* (* (* (- b a) b) (* (- b a) b)) (* (- b a) b)) (* (* a a) (* (* a a) (* a a))))) (+ (* (* (- b a) b) (- (* (- b a) b) (* a a))) (* (* a a) (* a a)))) (* (* (- b a) b) (* (- b a) b)))","a","-inf"],[20.981201171875,"((neg (/ (* (- (exp (+ (* b eps) (* a eps))) 1) (neg eps)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)))) (+ (* b eps) (* a eps)) (/ (* (- (exp (+ (* b eps) (* a eps))) 1) (neg eps)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))) (* (- (exp (+ (* b eps) (* a eps))) 1) (neg eps)) (+ (/ (* eps (- (exp (* (+ a b) eps)) 1)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))) 0) (/ (* eps (- (exp (* (+ a b) eps)) 1)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))) (* eps (- (exp (* (+ a b) eps)) 1)) (- (exp (* (+ a b) eps)) 1) (* (* (* (+ a b) eps) (- a b)) (/ 1 (- a b))) (neg (/ (* (- (exp (* (* (* (+ a b) eps) (- a b)) (/ 1 (- a b)))) 1) (neg eps)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)))) (/ (* (- (exp (* (* (* (+ a b) eps) (- a b)) (/ 1 (- a b)))) 1) (neg eps)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))) (* (- (exp (* (* (* (+ a b) eps) (- a b)) (/ 1 (- a b)))) 1) (neg eps)) (* (* (+ a b) (- a b)) (/ eps (- a b))) (neg (/ -1 (/ (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)) (* eps (- (exp (* (* (+ a b) (- a b)) (/ eps (- a b)))) 1))))) (/ -1 (/ (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)) (* eps (- (exp (* (* (+ a b) (- a b)) (/ eps (- a b)))) 1)))) (/ (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)) (* eps (- (exp (* (* (+ a b) (- a b)) (/ eps (- a b)))) 1))) (neg (/ (* (- (exp (* (/ (* (+ (* (* a a) a) (* (* b b) b)) eps) (+ (* (* (* (- b a) b) (* (- b a) b)) (* (- b a) b)) (* (* a a) (* (* a a) (* a a))))) (+ (* (* (- b a) b) (- (* (- b a) b) (* a a))) (* (* a a) (* a a))))) 1) (neg eps)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)))) (/ (* (- (exp (* (/ (* (+ (* (* a a) a) (* (* b b) b)) eps) (+ (* (* (* (- b a) b) (* (- b a) b)) (* (- b a) b)) (* (* a a) (* (* a a) (* a a))))) (+ (* (* (- b a) b) (- (* (- b a) b) (* a a))) (* (* a a) (* a a))))) 1) (neg eps)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))) (* (- (exp (* (/ (* (+ (* (* a a) a) (* (* b b) b)) eps) (+ (* (* (* (- b a) b) (* (- b a) b)) (* (- b a) b)) (* (* a a) (* (* a a) (* a a))))) (+ (* (* (- b a) b) (- (* (- b a) b) (* a a))) (* (* a a) (* a a))))) 1) (neg eps)) (- (exp (* (/ (* (+ (* (* a a) a) (* (* b b) b)) eps) (+ (* (* (* (- b a) b) (* (- b a) b)) (* (- b a) b)) (* (* a a) (* (* a a) (* a a))))) (+ (* (* (- b a) b) (- (* (- b a) b) (* a a))) (* (* a a) (* a a))))) 1) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)) (* (+ a b) eps) (* (* (+ a b) eps) (- a b)) (/ 1 (- a b)) (/ (* (+ (* (* a a) a) (* (* b b) b)) eps) (+ (* (* (* (- b a) b) (* (- b a) b)) (* (- b a) b)) (* (* a a) (* (* a a) (* a a))))) (* (/ (* (+ (* (* a a) a) (* (* b b) b)) eps) (+ (* (* (* (- b a) b) (* (- b a) b)) (* (- b a) b)) (* (* a a) (* (* a a) (* a a))))) (+ (* (* (- b a) b) (- (* (- b a) b) (* a a))) (* (* a a) (* a a)))) (* (* (- b a) b) (* (- b a) b)))","a","inf"],[12.333984375,"((neg (/ (* (- (exp (+ (* b eps) (* a eps))) 1) (neg eps)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)))) (+ (* b eps) (* a eps)) (/ (* (- (exp (+ (* b eps) (* a eps))) 1) (neg eps)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))) (* (- (exp (+ (* b eps) (* a eps))) 1) (neg eps)) (+ (/ (* eps (- (exp (* (+ a b) eps)) 1)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))) 0) (/ (* eps (- (exp (* (+ a b) eps)) 1)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))) (* eps (- (exp (* (+ a b) eps)) 1)) (- (exp (* (+ a b) eps)) 1) (* (* (* (+ a b) eps) (- a b)) (/ 1 (- a b))) (neg (/ (* (- (exp (* (* (* (+ a b) eps) (- a b)) (/ 1 (- a b)))) 1) (neg eps)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)))) (/ (* (- (exp (* (* (* (+ a b) eps) (- a b)) (/ 1 (- a b)))) 1) (neg eps)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))) (* (- (exp (* (* (* (+ a b) eps) (- a b)) (/ 1 (- a b)))) 1) (neg eps)) (* (* (+ a b) (- a b)) (/ eps (- a b))) (neg (/ -1 (/ (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)) (* eps (- (exp (* (* (+ a b) (- a b)) (/ eps (- a b)))) 1))))) (/ -1 (/ (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)) (* eps (- (exp (* (* (+ a b) (- a b)) (/ eps (- a b)))) 1)))) (/ (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)) (* eps (- (exp (* (* (+ a b) (- a b)) (/ eps (- a b)))) 1))) (neg (/ (* (- (exp (* (/ (* (+ (* (* a a) a) (* (* b b) b)) eps) (+ (* (* (* (- b a) b) (* (- b a) b)) (* (- b a) b)) (* (* a a) (* (* a a) (* a a))))) (+ (* (* (- b a) b) (- (* (- b a) b) (* a a))) (* (* a a) (* a a))))) 1) (neg eps)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)))) (/ (* (- (exp (* (/ (* (+ (* (* a a) a) (* (* b b) b)) eps) (+ (* (* (* (- b a) b) (* (- b a) b)) (* (- b a) b)) (* (* a a) (* (* a a) (* a a))))) (+ (* (* (- b a) b) (- (* (- b a) b) (* a a))) (* (* a a) (* a a))))) 1) (neg eps)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))) (* (- (exp (* (/ (* (+ (* (* a a) a) (* (* b b) b)) eps) (+ (* (* (* (- b a) b) (* (- b a) b)) (* (- b a) b)) (* (* a a) (* (* a a) (* a a))))) (+ (* (* (- b a) b) (- (* (- b a) b) (* a a))) (* (* a a) (* a a))))) 1) (neg eps)) (- (exp (* (/ (* (+ (* (* a a) a) (* (* b b) b)) eps) (+ (* (* (* (- b a) b) (* (- b a) b)) (* (- b a) b)) (* (* a a) (* (* a a) (* a a))))) (+ (* (* (- b a) b) (- (* (- b a) b) (* a a))) (* (* a a) (* a a))))) 1) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)) (* (+ a b) eps) (* (* (+ a b) eps) (- a b)) (/ 1 (- a b)) (/ (* (+ (* (* a a) a) (* (* b b) b)) eps) (+ (* (* (* (- b a) b) (* (- b a) b)) (* (- b a) b)) (* (* a a) (* (* a a) (* a a))))) (* (/ (* (+ (* (* a a) a) (* (* b b) b)) eps) (+ (* (* (* (- b a) b) (* (- b a) b)) (* (- b a) b)) (* (* a a) (* (* a a) (* a a))))) (+ (* (* (- b a) b) (- (* (- b a) b) (* a a))) (* (* a a) (* a a)))) (* (* (- b a) b) (* (- b a) b)))","a","0"]],"time":179.18798828125,"type":"series"},{"count":[[257,0]],"inputs":[["(/ 1 a)","(/ (+ 1 (* a (- (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1)) (* 1/2 eps)))) a)","(/ (+ 1 (* a (- (* a (- (* 1/2 (/ (* (pow eps 2) (exp (* b eps))) (- (exp (* b eps)) 1))) (+ (* 1/6 (pow eps 2)) (* 1/2 (* eps (- (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1)) (* 1/2 eps))))))) (* -1 (- (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1)) (* 1/2 eps)))))) a)","(/ (+ 1 (* a (- (* a (- (* a (- (* 1/6 (/ (* (pow eps 3) (exp (* b eps))) (- (exp (* b eps)) 1))) (+ (* 1/24 (pow eps 3)) (+ (* 1/6 (* (pow eps 2) (- (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1)) (* 1/2 eps)))) (* 1/2 (* eps (- (* 1/2 (/ (* (pow eps 2) (exp (* b eps))) (- (exp (* b eps)) 1))) (+ (* 1/6 (pow eps 2)) (* 1/2 (* eps (- (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1)) (* 1/2 eps)))))))))))) (* -1 (- (* 1/2 (/ (* (pow eps 2) (exp (* b eps))) (- (exp (* b eps)) 1))) (+ (* 1/6 (pow eps 2)) (* 1/2 (* eps (- (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1)) (* 1/2 eps))))))))) (* -1 (- (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1)) (* 1/2 eps)))))) a)","(* b eps)","(+ (* a eps) (* b eps))","(/ -1 a)","(/ (- (* -1 (* a (- (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1)) (* 1/2 eps)))) 1) a)","(/ (- (* a (+ (* -1 (* a (- (* 1/2 (/ (* (pow eps 2) (exp (* b eps))) (- (exp (* b eps)) 1))) (+ (* 1/6 (pow eps 2)) (* 1/2 (* eps (- (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1)) (* 1/2 eps)))))))) (* -1 (- (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1)) (* 1/2 eps))))) 1) a)","(/ (- (* a (+ (* -1 (- (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1)) (* 1/2 eps))) (* a (+ (* -1 (* a (- (* 1/6 (/ (* (pow eps 3) (exp (* b eps))) (- (exp (* b eps)) 1))) (+ (* 1/24 (pow eps 3)) (+ (* 1/6 (* (pow eps 2) (- (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1)) (* 1/2 eps)))) (* 1/2 (* eps (- (* 1/2 (/ (* (pow eps 2) (exp (* b eps))) (- (exp (* b eps)) 1))) (+ (* 1/6 (pow eps 2)) (* 1/2 (* eps (- (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1)) (* 1/2 eps))))))))))))) (* -1 (- (* 1/2 (/ (* (pow eps 2) (exp (* b eps))) (- (exp (* b eps)) 1))) (+ (* 1/6 (pow eps 2)) (* 1/2 (* eps (- (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1)) (* 1/2 eps))))))))))) 1) a)","(* -1 (* eps (- (exp (* b eps)) 1)))","(+ (* -1 (* a (* (pow eps 2) (exp (* b eps))))) (* -1 (* eps (- (exp (* b eps)) 1))))","(+ (* -1 (* eps (- (exp (* b eps)) 1))) (* a (+ (* -1 (* (pow eps 2) (exp (* b eps)))) (* -1/2 (* a (* (pow eps 3) (exp (* b eps))))))))","(+ (* -1 (* eps (- (exp (* b eps)) 1))) (* a (+ (* -1 (* (pow eps 2) (exp (* b eps)))) (* a (+ (* -1/2 (* (pow eps 3) (exp (* b eps)))) (* -1/6 (* a (* (pow eps 4) (exp (* b eps))))))))))","(/ (+ 1 (* a (- (+ (* a (- (* 1/2 (/ (* (pow eps 2) (exp (* b eps))) (- (exp (* b eps)) 1))) (+ (* 1/6 (pow eps 2)) (* 1/2 (* eps (- (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1)) (* 1/2 eps))))))) (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1))) (* 1/2 eps)))) a)","(/ (+ 1 (* a (- (+ (* a (- (+ (* 1/2 (/ (* (pow eps 2) (exp (* b eps))) (- (exp (* b eps)) 1))) (* a (- (* 1/6 (/ (* (pow eps 3) (exp (* b eps))) (- (exp (* b eps)) 1))) (+ (* 1/24 (pow eps 3)) (+ (* 1/6 (* (pow eps 2) (- (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1)) (* 1/2 eps)))) (* 1/2 (* eps (- (* 1/2 (/ (* (pow eps 2) (exp (* b eps))) (- (exp (* b eps)) 1))) (+ (* 1/6 (pow eps 2)) (* 1/2 (* eps (- (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1)) (* 1/2 eps))))))))))))) (+ (* 1/6 (pow eps 2)) (* 1/2 (* eps (- (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1)) (* 1/2 eps))))))) (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1))) (* 1/2 eps)))) a)","(* eps (- (exp (* b eps)) 1))","(+ (* a (* (pow eps 2) (exp (* b eps)))) (* eps (- (exp (* b eps)) 1)))","(+ (* a (+ (* 1/2 (* a (* (pow eps 3) (exp (* b eps))))) (* (pow eps 2) (exp (* b eps))))) (* eps (- (exp (* b eps)) 1)))","(+ (* a (+ (* a (+ (* 1/6 (* a (* (pow eps 4) (exp (* b eps))))) (* 1/2 (* (pow eps 3) (exp (* b eps)))))) (* (pow eps 2) (exp (* b eps))))) (* eps (- (exp (* b eps)) 1)))","(- (exp (* b eps)) 1)","(- (+ (exp (* b eps)) (* a (* eps (exp (* b eps))))) 1)","(- (+ (exp (* b eps)) (* a (+ (* 1/2 (* a (* (pow eps 2) (exp (* b eps))))) (* eps (exp (* b eps)))))) 1)","(- (+ (exp (* b eps)) (* a (+ (* a (+ (* 1/6 (* a (* (pow eps 3) (exp (* b eps))))) (* 1/2 (* (pow eps 2) (exp (* b eps)))))) (* eps (exp (* b eps)))))) 1)","a","(* a (+ 1 (* a (- (* 1/2 eps) (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1))))))","(* a (+ 1 (* a (- (+ (* 1/2 eps) (* a (- (* 1/6 (pow eps 2)) (+ (* 1/2 (/ (* (pow eps 2) (exp (* b eps))) (- (exp (* b eps)) 1))) (/ (* eps (* (exp (* b eps)) (- (* 1/2 eps) (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1))))) (- (exp (* b eps)) 1)))))) (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1))))))","(* a (+ 1 (* a (- (+ (* 1/2 eps) (* a (- (+ (* 1/6 (pow eps 2)) (* a (- (* 1/24 (pow eps 3)) (+ (* 1/6 (/ (* (pow eps 3) (exp (* b eps))) (- (exp (* b eps)) 1))) (+ (* 1/2 (/ (* (pow eps 2) (* (exp (* b eps)) (- (* 1/2 eps) (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1))))) (- (exp (* b eps)) 1))) (/ (* eps (* (exp (* b eps)) (- (* 1/6 (pow eps 2)) (+ (* 1/2 (/ (* (pow eps 2) (exp (* b eps))) (- (exp (* b eps)) 1))) (/ (* eps (* (exp (* b eps)) (- (* 1/2 eps) (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1))))) (- (exp (* b eps)) 1)))))) (- (exp (* b eps)) 1))))))) (+ (* 1/2 (/ (* (pow eps 2) (exp (* b eps))) (- (exp (* b eps)) 1))) (/ (* eps (* (exp (* b eps)) (- (* 1/2 eps) (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1))))) (- (exp (* b eps)) 1)))))) (/ (* eps (exp (* b eps))) (- (exp (* b eps)) 1))))))","(/ (+ 1 (* a (- (/ (* (exp (* b eps)) (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2)))) (- (exp (* b eps)) 1)) (* 1/2 eps)))) a)","(/ (+ 1 (* a (- (* a (- (/ (* (exp (* b eps)) (- (+ (* 1/2 (pow (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2))) 2)) (/ (* eps (+ b (* -1 b))) (pow b 2))) (+ (/ (* eps (+ b (* 2 b))) (pow b 2)) (/ (* (+ (* -2 (pow b 2)) (* -1 (pow b 2))) (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2)))) (pow b 3))))) (- (exp (* b eps)) 1)) (+ (* 1/6 (pow eps 2)) (* 1/2 (* eps (- (/ (* (exp (* b eps)) (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2)))) (- (exp (* b eps)) 1)) (* 1/2 eps))))))) (* -1 (- (/ (* (exp (* b eps)) (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2)))) (- (exp (* b eps)) 1)) (* 1/2 eps)))))) a)","(/ (+ 1 (* a (- (* a (- (* a (- (/ (* (exp (* b eps)) (- (+ (* 1/6 (pow (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2))) 3)) (+ (* 2 (/ eps (pow b 2))) (* (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2))) (- (/ (* eps (+ b (* -1 b))) (pow b 2)) (+ (/ (* eps (+ b (* 2 b))) (pow b 2)) (/ (* (+ (* -2 (pow b 2)) (* -1 (pow b 2))) (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2)))) (pow b 3))))))) (+ (* -1 (/ eps (pow b 2))) (+ (/ (* (+ b (* 2 b)) (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2)))) (pow b 3)) (/ (* (+ (* -2 (pow b 2)) (* -1 (pow b 2))) (- (/ (* eps (+ b (* -1 b))) (pow b 2)) (+ (/ (* eps (+ b (* 2 b))) (pow b 2)) (/ (* (+ (* -2 (pow b 2)) (* -1 (pow b 2))) (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2)))) (pow b 3))))) (pow b 3)))))) (- (exp (* b eps)) 1)) (+ (* 1/24 (pow eps 3)) (+ (* 1/6 (* (pow eps 2) (- (/ (* (exp (* b eps)) (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2)))) (- (exp (* b eps)) 1)) (* 1/2 eps)))) (* 1/2 (* eps (- (/ (* (exp (* b eps)) (- (+ (* 1/2 (pow (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2))) 2)) (/ (* eps (+ b (* -1 b))) (pow b 2))) (+ (/ (* eps (+ b (* 2 b))) (pow b 2)) (/ (* (+ (* -2 (pow b 2)) (* -1 (pow b 2))) (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2)))) (pow b 3))))) (- (exp (* b eps)) 1)) (+ (* 1/6 (pow eps 2)) (* 1/2 (* eps (- (/ (* (exp (* b eps)) (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2)))) (- (exp (* b eps)) 1)) (* 1/2 eps)))))))))))) (* -1 (- (/ (* (exp (* b eps)) (- (+ (* 1/2 (pow (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2))) 2)) (/ (* eps (+ b (* -1 b))) (pow b 2))) (+ (/ (* eps (+ b (* 2 b))) (pow b 2)) (/ (* (+ (* -2 (pow b 2)) (* -1 (pow b 2))) (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2)))) (pow b 3))))) (- (exp (* b eps)) 1)) (+ (* 1/6 (pow eps 2)) (* 1/2 (* eps (- (/ (* (exp (* b eps)) (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2)))) (- (exp (* b eps)) 1)) (* 1/2 eps))))))))) (* -1 (- (/ (* (exp (* b eps)) (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2)))) (- (exp (* b eps)) 1)) (* 1/2 eps)))))) a)","(/ (- (* -1 (* a (- (/ (* (exp (* b eps)) (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2)))) (- (exp (* b eps)) 1)) (* 1/2 eps)))) 1) a)","(/ (- (* a (+ (* -1 (* a (- (/ (* (exp (* b eps)) (- (+ (* 1/2 (pow (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2))) 2)) (/ (* eps (+ b (* -1 b))) (pow b 2))) (+ (/ (* eps (+ b (* 2 b))) (pow b 2)) (/ (* (+ (* -2 (pow b 2)) (* -1 (pow b 2))) (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2)))) (pow b 3))))) (- (exp (* b eps)) 1)) (+ (* 1/6 (pow eps 2)) (* 1/2 (* eps (- (/ (* (exp (* b eps)) (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2)))) (- (exp (* b eps)) 1)) (* 1/2 eps)))))))) (* -1 (- (/ (* (exp (* b eps)) (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2)))) (- (exp (* b eps)) 1)) (* 1/2 eps))))) 1) a)","(/ (- (* a (+ (* -1 (- (/ (* (exp (* b eps)) (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2)))) (- (exp (* b eps)) 1)) (* 1/2 eps))) (* a (+ (* -1 (* a (- (/ (* (exp (* b eps)) (- (+ (* 1/6 (pow (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2))) 3)) (+ (* 2 (/ eps (pow b 2))) (* (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2))) (- (/ (* eps (+ b (* -1 b))) (pow b 2)) (+ (/ (* eps (+ b (* 2 b))) (pow b 2)) (/ (* (+ (* -2 (pow b 2)) (* -1 (pow b 2))) (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2)))) (pow b 3))))))) (+ (* -1 (/ eps (pow b 2))) (+ (/ (* (+ b (* 2 b)) (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2)))) (pow b 3)) (/ (* (+ (* -2 (pow b 2)) (* -1 (pow b 2))) (- (/ (* eps (+ b (* -1 b))) (pow b 2)) (+ (/ (* eps (+ b (* 2 b))) (pow b 2)) (/ (* (+ (* -2 (pow b 2)) (* -1 (pow b 2))) (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2)))) (pow b 3))))) (pow b 3)))))) (- (exp (* b eps)) 1)) (+ (* 1/24 (pow eps 3)) (+ (* 1/6 (* (pow eps 2) (- (/ (* (exp (* b eps)) (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2)))) (- (exp (* b eps)) 1)) (* 1/2 eps)))) (* 1/2 (* eps (- (/ (* (exp (* b eps)) (- (+ (* 1/2 (pow (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2))) 2)) (/ (* eps (+ b (* -1 b))) (pow b 2))) (+ (/ (* eps (+ b (* 2 b))) (pow b 2)) (/ (* (+ (* -2 (pow b 2)) (* -1 (pow b 2))) (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2)))) (pow b 3))))) (- (exp (* b eps)) 1)) (+ (* 1/6 (pow eps 2)) (* 1/2 (* eps (- (/ (* (exp (* b eps)) (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2)))) (- (exp (* b eps)) 1)) (* 1/2 eps))))))))))))) (* -1 (- (/ (* (exp (* b eps)) (- (+ (* 1/2 (pow (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2))) 2)) (/ (* eps (+ b (* -1 b))) (pow b 2))) (+ (/ (* eps (+ b (* 2 b))) (pow b 2)) (/ (* (+ (* -2 (pow b 2)) (* -1 (pow b 2))) (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2)))) (pow b 3))))) (- (exp (* b eps)) 1)) (+ (* 1/6 (pow eps 2)) (* 1/2 (* eps (- (/ (* (exp (* b eps)) (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2)))) (- (exp (* b eps)) 1)) (* 1/2 eps))))))))))) 1) a)","(+ (* -1 (* a (* eps (* (exp (* b eps)) (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2))))))) (* -1 (* eps (- (exp (* b eps)) 1))))","(+ (* -1 (* eps (- (exp (* b eps)) 1))) (* a (+ (* -1 (* a (* eps (* (exp (* b eps)) (- (+ (* 1/2 (pow (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2))) 2)) (/ (* eps (+ b (* -1 b))) (pow b 2))) (+ (/ (* eps (+ b (* 2 b))) (pow b 2)) (/ (* (+ (* -2 (pow b 2)) (* -1 (pow b 2))) (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2)))) (pow b 3)))))))) (* -1 (* eps (* (exp (* b eps)) (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2)))))))))","(+ (* -1 (* eps (- (exp (* b eps)) 1))) (* a (+ (* -1 (* eps (* (exp (* b eps)) (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2)))))) (* a (+ (* -1 (* a (* eps (* (exp (* b eps)) (- (+ (* 1/6 (pow (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2))) 3)) (+ (* 2 (/ eps (pow b 2))) (* (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2))) (- (/ (* eps (+ b (* -1 b))) (pow b 2)) (+ (/ (* eps (+ b (* 2 b))) (pow b 2)) (/ (* (+ (* -2 (pow b 2)) (* -1 (pow b 2))) (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2)))) (pow b 3))))))) (+ (* -1 (/ eps (pow b 2))) (+ (/ (* (+ b (* 2 b)) (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2)))) (pow b 3)) (/ (* (+ (* -2 (pow b 2)) (* -1 (pow b 2))) (- (/ (* eps (+ b (* -1 b))) (pow b 2)) (+ (/ (* eps (+ b (* 2 b))) (pow b 2)) (/ (* (+ (* -2 (pow b 2)) (* -1 (pow b 2))) (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2)))) (pow b 3))))) (pow b 3))))))))) (* -1 (* eps (* (exp (* b eps)) (- (+ (* 1/2 (pow (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2))) 2)) (/ (* eps (+ b (* -1 b))) (pow b 2))) (+ (/ (* eps (+ b (* 2 b))) (pow b 2)) (/ (* (+ (* -2 (pow b 2)) (* -1 (pow b 2))) (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2)))) (pow b 3))))))))))))","(- (+ (exp (* b eps)) (* a (* (exp (* b eps)) (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2)))))) 1)","(- (+ (exp (* b eps)) (* a (+ (* a (* (exp (* b eps)) (- (+ (* 1/2 (pow (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2))) 2)) (/ (* eps (+ b (* -1 b))) (pow b 2))) (+ (/ (* eps (+ b (* 2 b))) (pow b 2)) (/ (* (+ (* -2 (pow b 2)) (* -1 (pow b 2))) (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2)))) (pow b 3)))))) (* (exp (* b eps)) (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2))))))) 1)","(- (+ (exp (* b eps)) (* a (+ (* a (+ (* a (* (exp (* b eps)) (- (+ (* 1/6 (pow (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2))) 3)) (+ (* 2 (/ eps (pow b 2))) (* (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2))) (- (/ (* eps (+ b (* -1 b))) (pow b 2)) (+ (/ (* eps (+ b (* 2 b))) (pow b 2)) (/ (* (+ (* -2 (pow b 2)) (* -1 (pow b 2))) (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2)))) (pow b 3))))))) (+ (* -1 (/ eps (pow b 2))) (+ (/ (* (+ b (* 2 b)) (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2)))) (pow b 3)) (/ (* (+ (* -2 (pow b 2)) (* -1 (pow b 2))) (- (/ (* eps (+ b (* -1 b))) (pow b 2)) (+ (/ (* eps (+ b (* 2 b))) (pow b 2)) (/ (* (+ (* -2 (pow b 2)) (* -1 (pow b 2))) (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2)))) (pow b 3))))) (pow b 3))))))) (* (exp (* b eps)) (- (+ (* 1/2 (pow (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2))) 2)) (/ (* eps (+ b (* -1 b))) (pow b 2))) (+ (/ (* eps (+ b (* 2 b))) (pow b 2)) (/ (* (+ (* -2 (pow b 2)) (* -1 (pow b 2))) (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2)))) (pow b 3))))))) (* (exp (* b eps)) (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2))))))) 1)","(* a (* eps (- (exp (* b eps)) 1)))","(* a (+ (* 1/2 (* a (* (pow eps 2) (- (exp (* b eps)) 1)))) (* eps (- (exp (* b eps)) 1))))","(* a (+ (* a (+ (* 1/6 (* a (* (pow eps 3) (- (exp (* b eps)) 1)))) (* 1/2 (* (pow eps 2) (- (exp (* b eps)) 1))))) (* eps (- (exp (* b eps)) 1))))","(* a (+ (* a (+ (* 1/2 (* (pow eps 2) (- (exp (* b eps)) 1))) (* a (+ (* 1/24 (* a (* (pow eps 4) (- (exp (* b eps)) 1)))) (* 1/6 (* (pow eps 3) (- (exp (* b eps)) 1))))))) (* eps (- (exp (* b eps)) 1))))","(* -1 (* (pow b 2) eps))","(+ (* -1 (* (pow b 2) eps)) (* a (* eps (+ b (* -1 b)))))","(+ (* -1 (* (pow b 2) eps)) (* a (+ (* a eps) (* eps (+ b (* -1 b))))))","(/ -1 b)","(- (* -1 (/ a (pow b 2))) (/ 1 b))","(- (* a (- (* -1 (/ a (pow b 3))) (/ 1 (pow b 2)))) (/ 1 b))","(- (* a (- (* a (- (* -1 (/ a (pow b 4))) (/ 1 (pow b 3)))) (/ 1 (pow b 2)))) (/ 1 b))","(/ eps (pow b 3))","(+ (* -1 (/ (* a (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2))))) (pow b 6))) (/ eps (pow b 3)))","(+ (* a (- (* -1 (* a (+ (* -1 (/ (* eps (pow (+ (* -2 (pow b 2)) (* -1 (pow b 2))) 2)) (pow b 9))) (/ (* eps (+ b (* 2 b))) (pow b 6))))) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 6)))) (/ eps (pow b 3)))","(+ (* a (- (* a (- (* a (- (/ eps (pow b 6)) (+ (* -1 (/ eps (pow b 6))) (+ (* -1 (/ (* eps (* (+ b (* 2 b)) (+ (* -2 (pow b 2)) (* -1 (pow b 2))))) (pow b 9))) (* -1 (/ (* (+ (* -2 (pow b 2)) (* -1 (pow b 2))) (+ (* -1 (/ (* eps (pow (+ (* -2 (pow b 2)) (* -1 (pow b 2))) 2)) (pow b 9))) (/ (* eps (+ b (* 2 b))) (pow b 6)))) (pow b 3))))))) (+ (* -1 (/ (* eps (pow (+ (* -2 (pow b 2)) (* -1 (pow b 2))) 2)) (pow b 9))) (/ (* eps (+ b (* 2 b))) (pow b 6))))) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 6)))) (/ eps (pow b 3)))","(+ (* a (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2)))) (* b eps))","(+ (* a (- (+ (* -2 eps) (* a (- (/ (* eps (+ b (* -1 b))) (pow b 2)) (+ (/ (* eps (+ b (* 2 b))) (pow b 2)) (/ (* (+ (* -2 (pow b 2)) (* -1 (pow b 2))) (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2)))) (pow b 3)))))) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2)))) (* b eps))","(+ (* a (- (+ (* -2 eps) (* a (- (+ (* a (- (* 2 (/ eps (pow b 2))) (+ (* -1 (/ eps (pow b 2))) (+ (/ (* (+ b (* 2 b)) (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2)))) (pow b 3)) (/ (* (+ (* -2 (pow b 2)) (* -1 (pow b 2))) (- (/ (* eps (+ b (* -1 b))) (pow b 2)) (+ (/ (* eps (+ b (* 2 b))) (pow b 2)) (/ (* (+ (* -2 (pow b 2)) (* -1 (pow b 2))) (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2)))) (pow b 3))))) (pow b 3)))))) (/ (* eps (+ b (* -1 b))) (pow b 2))) (+ (/ (* eps (+ b (* 2 b))) (pow b 2)) (/ (* (+ (* -2 (pow b 2)) (* -1 (pow b 2))) (- (* -2 eps) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2)))) (pow b 3)))))) (/ (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2)))) (pow b 2)))) (* b eps))","(pow b 4)","(+ (* -2 (* a (pow b 3))) (pow b 4))","(+ (* a (+ (* -2 (pow b 3)) (* a (pow b 2)))) (pow b 4))","(/ (* eps (- (exp (+ (* a eps) (* b eps))) 1)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)))","(* a eps)","(* a (+ eps (/ (* b eps) a)))","(* -1 (/ (* eps (- (exp (+ (* a eps) (* b eps))) 1)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))))","(* -1 (* eps (- (exp (+ (* a eps) (* b eps))) 1)))","(/ (* eps (- (exp (* eps (+ a b))) 1)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)))","(* eps (- (exp (* eps (+ a b))) 1))","(- (exp (* eps (+ a b))) 1)","(* -1 (/ (* eps (- (exp (* eps (+ a b))) 1)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))))","(* -1 (* eps (- (exp (* eps (+ a b))) 1)))","(/ (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)) (* eps (- (exp (* eps (+ a b))) 1)))","(/ (* eps (- (exp (/ (* eps (* (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) (+ (pow a 3) (pow b 3)))) (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)))) 1)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)))","(* -1 (/ (* eps (- (exp (/ (* eps (* (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) (+ (pow a 3) (pow b 3)))) (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)))) 1)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))))","(* -1 (* eps (- (exp (/ (* eps (* (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) (+ (pow a 3) (pow b 3)))) (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)))) 1)))","(- (exp (/ (* eps (* (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) (+ (pow a 3) (pow b 3)))) (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)))) 1)","(* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))","(* (pow a 2) eps)","(* (pow a 2) (+ eps (/ (* eps (+ b (* -1 b))) a)))","(* (pow a 2) (+ eps (+ (* -1 (/ (* (pow b 2) eps) (pow a 2))) (/ (* eps (+ b (* -1 b))) a))))","(/ (+ 1 (/ b a)) a)","(/ (- (+ 1 (/ (pow b 2) (pow a 2))) (* -1 (/ b a))) a)","(/ (- (+ 1 (/ (pow b 3) (pow a 3))) (+ (* -1 (/ b a)) (* -1 (/ (pow b 2) (pow a 2))))) a)","(/ eps (pow a 3))","(/ (- (+ eps (/ (* (pow b 3) eps) (pow a 3))) (* -1 (/ (* (pow b 3) eps) (pow a 3)))) (pow a 3))","(/ (- (+ eps (+ (* -1 (/ (* (pow b 3) (* eps (+ b (* 2 b)))) (pow a 4))) (/ (* (pow b 3) eps) (pow a 3)))) (* -1 (/ (* (pow b 3) eps) (pow a 3)))) (pow a 3))","(/ (- (+ eps (+ (* -1 (/ (* (pow b 3) (* eps (+ (* -2 (pow b 2)) (* -1 (pow b 2))))) (pow a 5))) (/ (* (pow b 3) eps) (pow a 3)))) (+ (* -1 (/ (* (pow b 3) eps) (pow a 3))) (/ (* (pow b 3) (* eps (+ b (* 2 b)))) (pow a 4)))) (pow a 3))","(* a (+ eps (+ (/ (* b eps) a) (/ (* b (* eps (+ b (* -1 b)))) (pow a 2)))))","(* a (- (+ eps (+ (/ (* b eps) a) (+ (/ (* b (* eps (+ b (* -1 b)))) (pow a 2)) (/ (* eps (+ (* -2 (pow b 3)) (pow b 3))) (pow a 3))))) (* -1 (/ (* (pow b 3) eps) (pow a 3)))))","(* (pow a 2) (pow b 2))","(* (pow a 2) (+ (* -2 (/ (pow b 3) a)) (pow b 2)))","(* (pow a 2) (+ (* -2 (/ (pow b 3) a)) (+ (/ (pow b 4) (pow a 2)) (pow b 2))))","(* -1 (* a (+ (* -1 eps) (* -1 (/ (* b eps) a)))))","(/ (* eps (- (exp (* eps (- b (* -1 a)))) 1)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)))","(* eps (- (exp (* eps (- b (* -1 a)))) 1))","(- (exp (* eps (- b (* -1 a)))) 1)","(* -1 (/ (* eps (- (exp (* eps (- b (* -1 a)))) 1)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))))","(* -1 (* eps (- (exp (* eps (- b (* -1 a)))) 1)))","(/ (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)) (* eps (- (exp (* eps (- b (* -1 a)))) 1)))","(/ (* eps (- (exp (/ (* eps (* (+ (* b (* (+ b (* -1 a)) (- (* b (+ b (* -1 a))) (pow a 2)))) (pow a 4)) (- (pow b 3) (* -1 (pow a 3))))) (+ (* (pow b 3) (pow (+ b (* -1 a)) 3)) (pow a 6)))) 1)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)))","(* -1 (/ (* eps (- (exp (/ (* eps (* (+ (* b (* (+ b (* -1 a)) (- (* b (+ b (* -1 a))) (pow a 2)))) (pow a 4)) (- (pow b 3) (* -1 (pow a 3))))) (+ (* (pow b 3) (pow (+ b (* -1 a)) 3)) (pow a 6)))) 1)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))))","(* -1 (* eps (- (exp (/ (* eps (* (+ (* b (* (+ b (* -1 a)) (- (* b (+ b (* -1 a))) (pow a 2)))) (pow a 4)) (- (pow b 3) (* -1 (pow a 3))))) (+ (* (pow b 3) (pow (+ b (* -1 a)) 3)) (pow a 6)))) 1)))","(- (exp (/ (* eps (* (+ (* b (* (+ b (* -1 a)) (- (* b (+ b (* -1 a))) (pow a 2)))) (pow a 4)) (- (pow b 3) (* -1 (pow a 3))))) (+ (* (pow b 3) (pow (+ b (* -1 a)) 3)) (pow a 6)))) 1)","(* (pow a 2) (+ eps (* -1 (/ (+ (* -1 (* eps (+ b (* -1 b)))) (/ (* (pow b 2) eps) a)) a))))","(* -1 (/ (- (* -1 (/ b a)) 1) a))","(* -1 (/ (- (* -1 (/ (- (/ (pow b 2) a) (* -1 b)) a)) 1) a))","(* -1 (/ (- (* -1 (/ (- (* -1 (/ (- (* -1 (/ (pow b 3) a)) (pow b 2)) a)) (* -1 b)) a)) 1) a))","(* -1 (/ (+ (* -1 eps) (* -1 (/ (- (* (pow b 3) eps) (* -1 (* (pow b 3) eps))) (pow a 3)))) (pow a 3)))","(* -1 (/ (+ (* -1 eps) (* -1 (/ (- (+ (* -1 (/ (* (pow b 3) (* eps (+ b (* 2 b)))) a)) (* (pow b 3) eps)) (* -1 (* (pow b 3) eps))) (pow a 3)))) (pow a 3)))","(* -1 (/ (+ (* -1 eps) (* -1 (/ (- (+ (* -1 (/ (- (* -1 (/ (* (pow b 3) (* eps (+ (* 2 (pow b 2)) (pow b 2)))) a)) (* -1 (* (pow b 3) (* eps (+ b (* 2 b)))))) a)) (* (pow b 3) eps)) (* -1 (* (pow b 3) eps))) (pow a 3)))) (pow a 3)))","(* -1 (* a (+ (* -1 eps) (* -1 (/ (+ (* b eps) (/ (* b (* eps (+ b (* -1 b)))) a)) a)))))","(* -1 (* a (+ (* -1 eps) (* -1 (/ (+ (* -1 (/ (+ (* -1 (* b (* eps (+ b (* -1 b))))) (* -1 (/ (- (* eps (+ (* -2 (pow b 3)) (pow b 3))) (* -1 (* (pow b 3) eps))) a))) a)) (* b eps)) a)))))","(* (pow a 2) (+ (* -1 (/ (+ (* -1 (/ (pow b 4) a)) (* 2 (pow b 3))) a)) (pow b 2)))","(/ 1 b)","(/ (+ 1 (* b (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps)))) b)","(/ (+ 1 (* b (- (* b (- (* 1/2 (/ (* (pow eps 2) (exp (* a eps))) (- (exp (* a eps)) 1))) (+ (* 1/6 (pow eps 2)) (* 1/2 (* eps (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps))))))) (* -1 (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps)))))) b)","(/ (+ 1 (* b (- (* b (- (* b (- (* 1/6 (/ (* (pow eps 3) (exp (* a eps))) (- (exp (* a eps)) 1))) (+ (* 1/24 (pow eps 3)) (+ (* 1/6 (* (pow eps 2) (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps)))) (* 1/2 (* eps (- (* 1/2 (/ (* (pow eps 2) (exp (* a eps))) (- (exp (* a eps)) 1))) (+ (* 1/6 (pow eps 2)) (* 1/2 (* eps (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps)))))))))))) (* -1 (- (* 1/2 (/ (* (pow eps 2) (exp (* a eps))) (- (exp (* a eps)) 1))) (+ (* 1/6 (pow eps 2)) (* 1/2 (* eps (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps))))))))) (* -1 (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps)))))) b)","(/ (- (* -1 (* b (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps)))) 1) b)","(/ (- (* b (+ (* -1 (* b (- (* 1/2 (/ (* (pow eps 2) (exp (* a eps))) (- (exp (* a eps)) 1))) (+ (* 1/6 (pow eps 2)) (* 1/2 (* eps (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps)))))))) (* -1 (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps))))) 1) b)","(/ (- (* b (+ (* -1 (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps))) (* b (+ (* -1 (* b (- (* 1/6 (/ (* (pow eps 3) (exp (* a eps))) (- (exp (* a eps)) 1))) (+ (* 1/24 (pow eps 3)) (+ (* 1/6 (* (pow eps 2) (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps)))) (* 1/2 (* eps (- (* 1/2 (/ (* (pow eps 2) (exp (* a eps))) (- (exp (* a eps)) 1))) (+ (* 1/6 (pow eps 2)) (* 1/2 (* eps (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps))))))))))))) (* -1 (- (* 1/2 (/ (* (pow eps 2) (exp (* a eps))) (- (exp (* a eps)) 1))) (+ (* 1/6 (pow eps 2)) (* 1/2 (* eps (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps))))))))))) 1) b)","(* -1 (* eps (- (exp (* a eps)) 1)))","(+ (* -1 (* b (* (pow eps 2) (exp (* a eps))))) (* -1 (* eps (- (exp (* a eps)) 1))))","(+ (* -1 (* eps (- (exp (* a eps)) 1))) (* b (+ (* -1 (* (pow eps 2) (exp (* a eps)))) (* -1/2 (* b (* (pow eps 3) (exp (* a eps))))))))","(+ (* -1 (* eps (- (exp (* a eps)) 1))) (* b (+ (* -1 (* (pow eps 2) (exp (* a eps)))) (* b (+ (* -1/2 (* (pow eps 3) (exp (* a eps)))) (* -1/6 (* b (* (pow eps 4) (exp (* a eps))))))))))","(/ (+ 1 (* b (- (+ (* b (- (* 1/2 (/ (* (pow eps 2) (exp (* a eps))) (- (exp (* a eps)) 1))) (+ (* 1/6 (pow eps 2)) (* 1/2 (* eps (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps))))))) (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1))) (* 1/2 eps)))) b)","(/ (+ 1 (* b (- (+ (* b (- (+ (* 1/2 (/ (* (pow eps 2) (exp (* a eps))) (- (exp (* a eps)) 1))) (* b (- (* 1/6 (/ (* (pow eps 3) (exp (* a eps))) (- (exp (* a eps)) 1))) (+ (* 1/24 (pow eps 3)) (+ (* 1/6 (* (pow eps 2) (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps)))) (* 1/2 (* eps (- (* 1/2 (/ (* (pow eps 2) (exp (* a eps))) (- (exp (* a eps)) 1))) (+ (* 1/6 (pow eps 2)) (* 1/2 (* eps (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps))))))))))))) (+ (* 1/6 (pow eps 2)) (* 1/2 (* eps (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps))))))) (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1))) (* 1/2 eps)))) b)","(* eps (- (exp (* a eps)) 1))","(+ (* b (* (pow eps 2) (exp (* a eps)))) (* eps (- (exp (* a eps)) 1)))","(+ (* b (+ (* 1/2 (* b (* (pow eps 3) (exp (* a eps))))) (* (pow eps 2) (exp (* a eps))))) (* eps (- (exp (* a eps)) 1)))","(+ (* b (+ (* b (+ (* 1/6 (* b (* (pow eps 4) (exp (* a eps))))) (* 1/2 (* (pow eps 3) (exp (* a eps)))))) (* (pow eps 2) (exp (* a eps))))) (* eps (- (exp (* a eps)) 1)))","(- (exp (* a eps)) 1)","(- (+ (exp (* a eps)) (* b (* eps (exp (* a eps))))) 1)","(- (+ (exp (* a eps)) (* b (+ (* 1/2 (* b (* (pow eps 2) (exp (* a eps))))) (* eps (exp (* a eps)))))) 1)","(- (+ (exp (* a eps)) (* b (+ (* b (+ (* 1/6 (* b (* (pow eps 3) (exp (* a eps))))) (* 1/2 (* (pow eps 2) (exp (* a eps)))))) (* eps (exp (* a eps)))))) 1)","b","(* b (+ 1 (* b (- (* 1/2 eps) (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1))))))","(* b (+ 1 (* b (- (+ (* 1/2 eps) (* b (- (* 1/6 (pow eps 2)) (+ (* 1/2 (/ (* (pow eps 2) (exp (* a eps))) (- (exp (* a eps)) 1))) (/ (* eps (* (exp (* a eps)) (- (* 1/2 eps) (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1))))) (- (exp (* a eps)) 1)))))) (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1))))))","(* b (+ 1 (* b (- (+ (* 1/2 eps) (* b (- (+ (* 1/6 (pow eps 2)) (* b (- (* 1/24 (pow eps 3)) (+ (* 1/6 (/ (* (pow eps 3) (exp (* a eps))) (- (exp (* a eps)) 1))) (+ (* 1/2 (/ (* (pow eps 2) (* (exp (* a eps)) (- (* 1/2 eps) (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1))))) (- (exp (* a eps)) 1))) (/ (* eps (* (exp (* a eps)) (- (* 1/6 (pow eps 2)) (+ (* 1/2 (/ (* (pow eps 2) (exp (* a eps))) (- (exp (* a eps)) 1))) (/ (* eps (* (exp (* a eps)) (- (* 1/2 eps) (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1))))) (- (exp (* a eps)) 1)))))) (- (exp (* a eps)) 1))))))) (+ (* 1/2 (/ (* (pow eps 2) (exp (* a eps))) (- (exp (* a eps)) 1))) (/ (* eps (* (exp (* a eps)) (- (* 1/2 eps) (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1))))) (- (exp (* a eps)) 1)))))) (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1))))))","(/ (+ 1 (* b (- (* b (- (/ (* (exp (* a eps)) (+ (* 1/2 (pow eps 2)) (/ (* eps (+ (* -1 (pow a 2)) (pow a 2))) (pow a 3)))) (- (exp (* a eps)) 1)) (+ (* 1/6 (pow eps 2)) (* 1/2 (* eps (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps))))))) (* -1 (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps)))))) b)","(/ (+ 1 (* b (- (* b (- (* b (- (/ (* (exp (* a eps)) (- (+ (* 1/6 (pow eps 3)) (+ (/ (* eps (+ (* -2 (pow a 4)) (pow a 4))) (pow a 6)) (/ (* (pow eps 2) (+ (* -1 (pow a 2)) (pow a 2))) (pow a 3)))) (* -1 (/ eps (pow a 2))))) (- (exp (* a eps)) 1)) (+ (* 1/24 (pow eps 3)) (+ (* 1/6 (* (pow eps 2) (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps)))) (* 1/2 (* eps (- (/ (* (exp (* a eps)) (+ (* 1/2 (pow eps 2)) (/ (* eps (+ (* -1 (pow a 2)) (pow a 2))) (pow a 3)))) (- (exp (* a eps)) 1)) (+ (* 1/6 (pow eps 2)) (* 1/2 (* eps (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps)))))))))))) (* -1 (- (/ (* (exp (* a eps)) (+ (* 1/2 (pow eps 2)) (/ (* eps (+ (* -1 (pow a 2)) (pow a 2))) (pow a 3)))) (- (exp (* a eps)) 1)) (+ (* 1/6 (pow eps 2)) (* 1/2 (* eps (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps))))))))) (* -1 (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps)))))) b)","(/ (- (* b (+ (* -1 (* b (- (/ (* (exp (* a eps)) (+ (* 1/2 (pow eps 2)) (/ (* eps (+ (* -1 (pow a 2)) (pow a 2))) (pow a 3)))) (- (exp (* a eps)) 1)) (+ (* 1/6 (pow eps 2)) (* 1/2 (* eps (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps)))))))) (* -1 (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps))))) 1) b)","(/ (- (* b (+ (* -1 (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps))) (* b (+ (* -1 (* b (- (/ (* (exp (* a eps)) (- (+ (* 1/6 (pow eps 3)) (+ (/ (* eps (+ (* -2 (pow a 4)) (pow a 4))) (pow a 6)) (/ (* (pow eps 2) (+ (* -1 (pow a 2)) (pow a 2))) (pow a 3)))) (* -1 (/ eps (pow a 2))))) (- (exp (* a eps)) 1)) (+ (* 1/24 (pow eps 3)) (+ (* 1/6 (* (pow eps 2) (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps)))) (* 1/2 (* eps (- (/ (* (exp (* a eps)) (+ (* 1/2 (pow eps 2)) (/ (* eps (+ (* -1 (pow a 2)) (pow a 2))) (pow a 3)))) (- (exp (* a eps)) 1)) (+ (* 1/6 (pow eps 2)) (* 1/2 (* eps (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps))))))))))))) (* -1 (- (/ (* (exp (* a eps)) (+ (* 1/2 (pow eps 2)) (/ (* eps (+ (* -1 (pow a 2)) (pow a 2))) (pow a 3)))) (- (exp (* a eps)) 1)) (+ (* 1/6 (pow eps 2)) (* 1/2 (* eps (- (/ (* eps (exp (* a eps))) (- (exp (* a eps)) 1)) (* 1/2 eps))))))))))) 1) b)","(+ (* -1 (* eps (- (exp (* a eps)) 1))) (* b (+ (* -1 (* b (* eps (* (exp (* a eps)) (+ (* 1/2 (pow eps 2)) (/ (* eps (+ (* -1 (pow a 2)) (pow a 2))) (pow a 3))))))) (* -1 (* (pow eps 2) (exp (* a eps)))))))","(+ (* -1 (* eps (- (exp (* a eps)) 1))) (* b (+ (* -1 (* (pow eps 2) (exp (* a eps)))) (* b (+ (* -1 (* b (* eps (* (exp (* a eps)) (- (+ (* 1/6 (pow eps 3)) (+ (/ (* eps (+ (* -2 (pow a 4)) (pow a 4))) (pow a 6)) (/ (* (pow eps 2) (+ (* -1 (pow a 2)) (pow a 2))) (pow a 3)))) (* -1 (/ eps (pow a 2)))))))) (* -1 (* eps (* (exp (* a eps)) (+ (* 1/2 (pow eps 2)) (/ (* eps (+ (* -1 (pow a 2)) (pow a 2))) (pow a 3)))))))))))","(- (+ (exp (* a eps)) (* b (+ (* b (* (exp (* a eps)) (+ (* 1/2 (pow eps 2)) (/ (* eps (+ (* -1 (pow a 2)) (pow a 2))) (pow a 3))))) (* eps (exp (* a eps)))))) 1)","(- (+ (exp (* a eps)) (* b (+ (* b (+ (* b (* (exp (* a eps)) (- (+ (* 1/6 (pow eps 3)) (+ (/ (* eps (+ (* -2 (pow a 4)) (pow a 4))) (pow a 6)) (/ (* (pow eps 2) (+ (* -1 (pow a 2)) (pow a 2))) (pow a 3)))) (* -1 (/ eps (pow a 2)))))) (* (exp (* a eps)) (+ (* 1/2 (pow eps 2)) (/ (* eps (+ (* -1 (pow a 2)) (pow a 2))) (pow a 3)))))) (* eps (exp (* a eps)))))) 1)","(* b (* eps (- (exp (* a eps)) 1)))","(* b (+ (* 1/2 (* b (* (pow eps 2) (- (exp (* a eps)) 1)))) (* eps (- (exp (* a eps)) 1))))","(* b (+ (* b (+ (* 1/6 (* b (* (pow eps 3) (- (exp (* a eps)) 1)))) (* 1/2 (* (pow eps 2) (- (exp (* a eps)) 1))))) (* eps (- (exp (* a eps)) 1))))","(* b (+ (* b (+ (* 1/2 (* (pow eps 2) (- (exp (* a eps)) 1))) (* b (+ (* 1/24 (* b (* (pow eps 4) (- (exp (* a eps)) 1)))) (* 1/6 (* (pow eps 3) (- (exp (* a eps)) 1))))))) (* eps (- (exp (* a eps)) 1))))","(+ (* b (* eps (+ a (* -1 a)))) (* (pow a 2) eps))","(+ (* b (+ (* -1 (* b eps)) (* eps (+ a (* -1 a))))) (* (pow a 2) eps))","(+ (/ 1 a) (/ b (pow a 2)))","(+ (* b (+ (/ 1 (pow a 2)) (/ b (pow a 3)))) (/ 1 a))","(+ (* b (+ (* b (+ (/ 1 (pow a 3)) (/ b (pow a 4)))) (/ 1 (pow a 2)))) (/ 1 a))","(+ (* (pow b 3) (- (/ eps (pow a 6)) (* -1 (/ eps (pow a 6))))) (/ eps (pow a 3)))","(+ (* (pow b 3) (- (+ (* -1 (/ (* b (* eps (+ (* 2 (pow a 2)) (pow a 2)))) (pow a 9))) (/ eps (pow a 6))) (* -1 (/ eps (pow a 6))))) (/ eps (pow a 3)))","(+ (* (pow b 3) (- (+ (* b (- (* -1 (/ (* b (* eps (+ (* -2 a) (* -1 a)))) (pow a 9))) (/ (* eps (+ (* 2 (pow a 2)) (pow a 2))) (pow a 9)))) (/ eps (pow a 6))) (* -1 (/ eps (pow a 6))))) (/ eps (pow a 3)))","(+ (* a eps) (* b (+ eps (/ (* b (* eps (+ (* -1 (pow a 2)) (pow a 2)))) (pow a 3)))))","(+ (* a eps) (* b (+ eps (* b (+ (* b (- (/ (* eps (+ (* -2 (pow a 4)) (pow a 4))) (pow a 6)) (* -1 (/ eps (pow a 2))))) (/ (* eps (+ (* -1 (pow a 2)) (pow a 2))) (pow a 3)))))))","(* (pow b 2) (+ (* -2 (* a b)) (pow a 2)))","(* (pow b 2) (+ (* b (+ b (* -2 a))) (pow a 2)))","(* b (+ eps (/ (* a eps) b)))","(/ (* eps (- (exp (/ (* eps (* (+ (* b (* (- b a) (- (pow b 2) (+ (* a b) (pow a 2))))) (pow a 4)) (+ (pow a 3) (pow b 3)))) (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)))) 1)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)))","(* -1 (/ (* eps (- (exp (/ (* eps (* (+ (* b (* (- b a) (- (pow b 2) (+ (* a b) (pow a 2))))) (pow a 4)) (+ (pow a 3) (pow b 3)))) (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)))) 1)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))))","(* -1 (* eps (- (exp (/ (* eps (* (+ (* b (* (- b a) (- (pow b 2) (+ (* a b) (pow a 2))))) (pow a 4)) (+ (pow a 3) (pow b 3)))) (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)))) 1)))","(- (exp (/ (* eps (* (+ (* b (* (- b a) (- (pow b 2) (+ (* a b) (pow a 2))))) (pow a 4)) (+ (pow a 3) (pow b 3)))) (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)))) 1)","(* (pow b 2) (+ (* -1 eps) (/ (* eps (+ a (* -1 a))) b)))","(* (pow b 2) (+ (* -1 eps) (+ (/ (* eps (+ a (* -1 a))) b) (/ (* (pow a 2) eps) (pow b 2)))))","(/ (- (* -1 (/ a b)) 1) b)","(/ (- (* -1 (/ (pow a 2) (pow b 2))) (+ 1 (/ a b))) b)","(/ (- (* -1 (/ (pow a 3) (pow b 3))) (+ 1 (+ (/ a b) (/ (pow a 2) (pow b 2))))) b)","(/ (+ eps (* -1 (/ (* eps (+ (* -2 a) (* -1 a))) b))) (pow b 3))","(/ (- (+ eps (* -1 (/ (+ (* -1 (* eps (pow (+ (* -2 a) (* -1 a)) 2))) (* eps (+ (* 2 (pow a 2)) (pow a 2)))) (pow b 2)))) (/ (* eps (+ (* -2 a) (* -1 a))) b)) (pow b 3))","(/ (- (+ eps (/ (* (pow a 3) eps) (pow b 3))) (+ (* -1 (/ (* eps (* (+ (* -2 a) (* -1 a)) (+ (* 2 (pow a 2)) (pow a 2)))) (pow b 3))) (+ (* -1 (/ (* eps (pow (+ (* -2 a) (* -1 a)) 2)) (pow b 2))) (+ (* -1 (/ (* (+ (* -2 a) (* -1 a)) (+ (* -1 (* eps (pow (+ (* -2 a) (* -1 a)) 2))) (* eps (+ (* 2 (pow a 2)) (pow a 2))))) (pow b 3))) (+ (* -1 (/ (* (pow a 3) eps) (pow b 3))) (+ (/ (* eps (+ (* -2 a) (* -1 a))) b) (/ (* eps (+ (* 2 (pow a 2)) (pow a 2))) (pow b 2)))))))) (pow b 3))","(* b (- (+ eps (* -2 (/ (* a eps) b))) (/ (* eps (+ (* -2 a) (* -1 a))) b)))","(* b (- (+ eps (+ (* -2 (/ (* a eps) b)) (/ (* eps (+ (* -1 (pow a 2)) (pow a 2))) (pow b 2)))) (+ (/ (* eps (+ (* -2 a) (* -1 a))) b) (+ (/ (* eps (+ (* 2 (pow a 2)) (pow a 2))) (pow b 2)) (/ (* (+ (* -2 a) (* -1 a)) (- (* -2 (* a eps)) (* eps (+ (* -2 a) (* -1 a))))) (pow b 2))))))","(* b (- (+ eps (+ (* -2 (/ (* a eps) b)) (+ (* 2 (/ (* (pow a 3) eps) (pow b 3))) (/ (* eps (+ (* -1 (pow a 2)) (pow a 2))) (pow b 2))))) (+ (* -1 (/ (* (pow a 3) eps) (pow b 3))) (+ (/ (* eps (+ (* -2 a) (* -1 a))) b) (+ (/ (* eps (+ (* 2 (pow a 2)) (pow a 2))) (pow b 2)) (+ (/ (* (+ (* -2 a) (* -1 a)) (- (* -2 (* a eps)) (* eps (+ (* -2 a) (* -1 a))))) (pow b 2)) (+ (/ (* (+ (* -2 a) (* -1 a)) (- (* eps (+ (* -1 (pow a 2)) (pow a 2))) (+ (* eps (+ (* 2 (pow a 2)) (pow a 2))) (* (+ (* -2 a) (* -1 a)) (- (* -2 (* a eps)) (* eps (+ (* -2 a) (* -1 a)))))))) (pow b 3)) (/ (* (+ (* 2 (pow a 2)) (pow a 2)) (- (* -2 (* a eps)) (* eps (+ (* -2 a) (* -1 a))))) (pow b 3)))))))))","(* (pow b 4) (+ 1 (* -2 (/ a b))))","(* (pow b 4) (+ 1 (+ (* -2 (/ a b)) (/ (pow a 2) (pow b 2)))))","(* -1 (* b (+ (* -1 eps) (* -1 (/ (* a eps) b)))))","(/ (* eps (- (exp (* eps (- a (* -1 b)))) 1)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)))","(* eps (- (exp (* eps (- a (* -1 b)))) 1))","(- (exp (* eps (- a (* -1 b)))) 1)","(* -1 (/ (* eps (- (exp (* eps (- a (* -1 b)))) 1)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))))","(* -1 (* eps (- (exp (* eps (- a (* -1 b)))) 1)))","(/ (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)) (* eps (- (exp (* eps (- a (* -1 b)))) 1)))","(/ (* eps (- (exp (/ (* eps (* (+ (* -1 (* b (* (+ a (* -1 b)) (- (+ (* -1 (* a b)) (pow b 2)) (pow a 2))))) (pow a 4)) (- (pow a 3) (* -1 (pow b 3))))) (+ (* -1 (* (pow b 3) (pow (+ a (* -1 b)) 3))) (pow a 6)))) 1)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)))","(* -1 (/ (* eps (- (exp (/ (* eps (* (+ (* -1 (* b (* (+ a (* -1 b)) (- (+ (* -1 (* a b)) (pow b 2)) (pow a 2))))) (pow a 4)) (- (pow a 3) (* -1 (pow b 3))))) (+ (* -1 (* (pow b 3) (pow (+ a (* -1 b)) 3))) (pow a 6)))) 1)) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))))","(* -1 (* eps (- (exp (/ (* eps (* (+ (* -1 (* b (* (+ a (* -1 b)) (- (+ (* -1 (* a b)) (pow b 2)) (pow a 2))))) (pow a 4)) (- (pow a 3) (* -1 (pow b 3))))) (+ (* -1 (* (pow b 3) (pow (+ a (* -1 b)) 3))) (pow a 6)))) 1)))","(- (exp (/ (* eps (* (+ (* -1 (* b (* (+ a (* -1 b)) (- (+ (* -1 (* a b)) (pow b 2)) (pow a 2))))) (pow a 4)) (- (pow a 3) (* -1 (pow b 3))))) (+ (* -1 (* (pow b 3) (pow (+ a (* -1 b)) 3))) (pow a 6)))) 1)","(* (pow b 2) (+ (* -1 eps) (* -1 (/ (* eps (+ a (* -1 a))) b))))","(* (pow b 2) (+ (* -1 eps) (* -1 (/ (+ (* -1 (/ (* (pow a 2) eps) b)) (* eps (+ a (* -1 a)))) b))))","(* -1 (/ (+ 1 (/ a b)) b))","(* -1 (/ (+ 1 (* -1 (/ (- (* -1 (/ (pow a 2) b)) a) b))) b))","(* -1 (/ (+ 1 (* -1 (/ (- (* -1 (/ (- (/ (pow a 3) b) (* -1 (pow a 2))) b)) a) b))) b))","(* -1 (/ (+ (* -1 eps) (* -1 (/ (* eps (+ a (* 2 a))) b))) (pow b 3)))","(* -1 (/ (+ (* -1 eps) (* -1 (/ (- (+ (* -1 (/ (* eps (+ (* 2 (pow a 2)) (pow a 2))) b)) (/ (* eps (pow (+ a (* 2 a)) 2)) b)) (* -1 (* eps (+ a (* 2 a))))) b))) (pow b 3)))","(* -1 (/ (+ (* -1 eps) (* -1 (/ (- (* -1 (/ (- (* -1 (/ (- (* (pow a 3) eps) (+ (* -1 (* (+ a (* 2 a)) (+ (* -1 (* eps (+ (* 2 (pow a 2)) (pow a 2)))) (* eps (pow (+ a (* 2 a)) 2))))) (+ (* -1 (* (pow a 3) eps)) (* eps (* (+ a (* 2 a)) (+ (* 2 (pow a 2)) (pow a 2))))))) b)) (+ (* -1 (* eps (+ (* 2 (pow a 2)) (pow a 2)))) (* eps (pow (+ a (* 2 a)) 2)))) b)) (* -1 (* eps (+ a (* 2 a))))) b))) (pow b 3)))","(* -1 (* b (+ (* -1 eps) (* -1 (/ (- (* -2 (* a eps)) (* -1 (* eps (+ a (* 2 a))))) b)))))","(* -1 (* b (+ (* -1 eps) (* -1 (/ (- (+ (* -2 (* a eps)) (* -1 (/ (- (* -1 (* eps (+ (* -1 (pow a 2)) (pow a 2)))) (+ (* -1 (* eps (+ (* 2 (pow a 2)) (pow a 2)))) (* (+ a (* 2 a)) (- (* -2 (* a eps)) (* -1 (* eps (+ a (* 2 a)))))))) b))) (* -1 (* eps (+ a (* 2 a))))) b)))))","(* -1 (* b (+ (* -1 eps) (* -1 (/ (- (+ (* -2 (* a eps)) (* -1 (/ (- (+ (* -1 (* eps (+ (* -1 (pow a 2)) (pow a 2)))) (* -1 (/ (- (* 2 (* (pow a 3) eps)) (+ (* -1 (* (pow a 3) eps)) (+ (* (+ a (* 2 a)) (- (* -1 (* eps (+ (* -1 (pow a 2)) (pow a 2)))) (+ (* -1 (* eps (+ (* 2 (pow a 2)) (pow a 2)))) (* (+ a (* 2 a)) (- (* -2 (* a eps)) (* -1 (* eps (+ a (* 2 a))))))))) (* (+ (* 2 (pow a 2)) (pow a 2)) (- (* -2 (* a eps)) (* -1 (* eps (+ a (* 2 a))))))))) b))) (+ (* -1 (* eps (+ (* 2 (pow a 2)) (pow a 2)))) (* (+ a (* 2 a)) (- (* -2 (* a eps)) (* -1 (* eps (+ a (* 2 a)))))))) b))) (* -1 (* eps (+ a (* 2 a))))) b)))))","(* (pow b 4) (+ 1 (* -1 (/ (+ (* -1 (/ (pow a 2) b)) (* 2 a)) b))))","(/ (+ a b) (* a b))","(- (* eps (- (* 1/2 (/ (pow (+ a b) 2) (* a b))) (/ (* (+ a b) (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b)))) (* (pow a 2) (pow b 2))))) (* -1 (/ (+ a b) (* a b))))","(- (* eps (- (* eps (- (* 1/6 (/ (pow (+ a b) 3) (* a b))) (+ (/ (* (+ a b) (+ (* 1/6 (* a (pow b 3))) (+ (* 1/6 (* (pow a 3) b)) (* 1/4 (* (pow a 2) (pow b 2)))))) (* (pow a 2) (pow b 2))) (/ (* (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b))) (- (* 1/2 (/ (pow (+ a b) 2) (* a b))) (/ (* (+ a b) (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b)))) (* (pow a 2) (pow b 2))))) (* a b))))) (* -1 (- (* 1/2 (/ (pow (+ a b) 2) (* a b))) (/ (* (+ a b) (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b)))) (* (pow a 2) (pow b 2))))))) (* -1 (/ (+ a b) (* a b))))","(- (* eps (- (* eps (- (* eps (- (* 1/24 (/ (pow (+ a b) 4) (* a b))) (+ (/ (* (+ a b) (+ (* 1/24 (* a (pow b 4))) (+ (* 1/24 (* (pow a 4) b)) (+ (* 1/12 (* (pow a 2) (pow b 3))) (* 1/12 (* (pow a 3) (pow b 2))))))) (* (pow a 2) (pow b 2))) (+ (/ (* (+ (* 1/6 (* a (pow b 3))) (+ (* 1/6 (* (pow a 3) b)) (* 1/4 (* (pow a 2) (pow b 2))))) (- (* 1/2 (/ (pow (+ a b) 2) (* a b))) (/ (* (+ a b) (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b)))) (* (pow a 2) (pow b 2))))) (* a b)) (/ (* (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b))) (- (* 1/6 (/ (pow (+ a b) 3) (* a b))) (+ (/ (* (+ a b) (+ (* 1/6 (* a (pow b 3))) (+ (* 1/6 (* (pow a 3) b)) (* 1/4 (* (pow a 2) (pow b 2)))))) (* (pow a 2) (pow b 2))) (/ (* (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b))) (- (* 1/2 (/ (pow (+ a b) 2) (* a b))) (/ (* (+ a b) (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b)))) (* (pow a 2) (pow b 2))))) (* a b))))) (* a b)))))) (* -1 (- (* 1/6 (/ (pow (+ a b) 3) (* a b))) (+ (/ (* (+ a b) (+ (* 1/6 (* a (pow b 3))) (+ (* 1/6 (* (pow a 3) b)) (* 1/4 (* (pow a 2) (pow b 2)))))) (* (pow a 2) (pow b 2))) (/ (* (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b))) (- (* 1/2 (/ (pow (+ a b) 2) (* a b))) (/ (* (+ a b) (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b)))) (* (pow a 2) (pow b 2))))) (* a b))))))) (* -1 (- (* 1/2 (/ (pow (+ a b) 2) (* a b))) (/ (* (+ a b) (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b)))) (* (pow a 2) (pow b 2))))))) (* -1 (/ (+ a b) (* a b))))","(* eps (+ a b))","(* -1 (/ (+ a b) (* a b)))","(+ (* -1 (* eps (- (* 1/2 (/ (pow (+ a b) 2) (* a b))) (/ (* (+ a b) (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b)))) (* (pow a 2) (pow b 2)))))) (* -1 (/ (+ a b) (* a b))))","(+ (* -1 (/ (+ a b) (* a b))) (* eps (+ (* -1 (* eps (- (* 1/6 (/ (pow (+ a b) 3) (* a b))) (+ (/ (* (+ a b) (+ (* 1/6 (* a (pow b 3))) (+ (* 1/6 (* (pow a 3) b)) (* 1/4 (* (pow a 2) (pow b 2)))))) (* (pow a 2) (pow b 2))) (/ (* (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b))) (- (* 1/2 (/ (pow (+ a b) 2) (* a b))) (/ (* (+ a b) (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b)))) (* (pow a 2) (pow b 2))))) (* a b)))))) (* -1 (- (* 1/2 (/ (pow (+ a b) 2) (* a b))) (/ (* (+ a b) (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b)))) (* (pow a 2) (pow b 2))))))))","(+ (* -1 (/ (+ a b) (* a b))) (* eps (+ (* -1 (- (* 1/2 (/ (pow (+ a b) 2) (* a b))) (/ (* (+ a b) (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b)))) (* (pow a 2) (pow b 2))))) (* eps (+ (* -1 (* eps (- (* 1/24 (/ (pow (+ a b) 4) (* a b))) (+ (/ (* (+ a b) (+ (* 1/24 (* a (pow b 4))) (+ (* 1/24 (* (pow a 4) b)) (+ (* 1/12 (* (pow a 2) (pow b 3))) (* 1/12 (* (pow a 3) (pow b 2))))))) (* (pow a 2) (pow b 2))) (+ (/ (* (+ (* 1/6 (* a (pow b 3))) (+ (* 1/6 (* (pow a 3) b)) (* 1/4 (* (pow a 2) (pow b 2))))) (- (* 1/2 (/ (pow (+ a b) 2) (* a b))) (/ (* (+ a b) (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b)))) (* (pow a 2) (pow b 2))))) (* a b)) (/ (* (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b))) (- (* 1/6 (/ (pow (+ a b) 3) (* a b))) (+ (/ (* (+ a b) (+ (* 1/6 (* a (pow b 3))) (+ (* 1/6 (* (pow a 3) b)) (* 1/4 (* (pow a 2) (pow b 2)))))) (* (pow a 2) (pow b 2))) (/ (* (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b))) (- (* 1/2 (/ (pow (+ a b) 2) (* a b))) (/ (* (+ a b) (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b)))) (* (pow a 2) (pow b 2))))) (* a b))))) (* a b))))))) (* -1 (- (* 1/6 (/ (pow (+ a b) 3) (* a b))) (+ (/ (* (+ a b) (+ (* 1/6 (* a (pow b 3))) (+ (* 1/6 (* (pow a 3) b)) (* 1/4 (* (pow a 2) (pow b 2)))))) (* (pow a 2) (pow b 2))) (/ (* (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b))) (- (* 1/2 (/ (pow (+ a b) 2) (* a b))) (/ (* (+ a b) (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b)))) (* (pow a 2) (pow b 2))))) (* a b))))))))))","(* -1 (* (pow eps 2) (+ a b)))","(* (pow eps 2) (+ (* -1 (+ a b)) (* -1/2 (* eps (pow (+ a b) 2)))))","(* (pow eps 2) (+ (* -1 (+ a b)) (* eps (+ (* -1/2 (pow (+ a b) 2)) (* -1/6 (* eps (pow (+ a b) 3)))))))","(* (pow eps 2) (+ (* -1 (+ a b)) (* eps (+ (* -1/2 (pow (+ a b) 2)) (* eps (+ (* -1/6 (pow (+ a b) 3)) (* -1/24 (* eps (pow (+ a b) 4)))))))))","(+ (* eps (- (* 1/2 (/ (pow (+ a b) 2) (* a b))) (/ (* (+ a b) (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b)))) (* (pow a 2) (pow b 2))))) (+ (/ 1 a) (/ 1 b)))","(+ (* eps (- (+ (* 1/2 (/ (pow (+ a b) 2) (* a b))) (* eps (- (* 1/6 (/ (pow (+ a b) 3) (* a b))) (+ (/ (* (+ a b) (+ (* 1/6 (* a (pow b 3))) (+ (* 1/6 (* (pow a 3) b)) (* 1/4 (* (pow a 2) (pow b 2)))))) (* (pow a 2) (pow b 2))) (/ (* (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b))) (- (* 1/2 (/ (pow (+ a b) 2) (* a b))) (/ (* (+ a b) (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b)))) (* (pow a 2) (pow b 2))))) (* a b)))))) (/ (* (+ a b) (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b)))) (* (pow a 2) (pow b 2))))) (+ (/ 1 a) (/ 1 b)))","(+ (* eps (- (+ (* 1/2 (/ (pow (+ a b) 2) (* a b))) (* eps (- (+ (* 1/6 (/ (pow (+ a b) 3) (* a b))) (* eps (- (* 1/24 (/ (pow (+ a b) 4) (* a b))) (+ (/ (* (+ a b) (+ (* 1/24 (* a (pow b 4))) (+ (* 1/24 (* (pow a 4) b)) (+ (* 1/12 (* (pow a 2) (pow b 3))) (* 1/12 (* (pow a 3) (pow b 2))))))) (* (pow a 2) (pow b 2))) (+ (/ (* (+ (* 1/6 (* a (pow b 3))) (+ (* 1/6 (* (pow a 3) b)) (* 1/4 (* (pow a 2) (pow b 2))))) (- (* 1/2 (/ (pow (+ a b) 2) (* a b))) (/ (* (+ a b) (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b)))) (* (pow a 2) (pow b 2))))) (* a b)) (/ (* (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b))) (- (* 1/6 (/ (pow (+ a b) 3) (* a b))) (+ (/ (* (+ a b) (+ (* 1/6 (* a (pow b 3))) (+ (* 1/6 (* (pow a 3) b)) (* 1/4 (* (pow a 2) (pow b 2)))))) (* (pow a 2) (pow b 2))) (/ (* (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b))) (- (* 1/2 (/ (pow (+ a b) 2) (* a b))) (/ (* (+ a b) (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b)))) (* (pow a 2) (pow b 2))))) (* a b))))) (* a b))))))) (+ (/ (* (+ a b) (+ (* 1/6 (* a (pow b 3))) (+ (* 1/6 (* (pow a 3) b)) (* 1/4 (* (pow a 2) (pow b 2)))))) (* (pow a 2) (pow b 2))) (/ (* (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b))) (- (* 1/2 (/ (pow (+ a b) 2) (* a b))) (/ (* (+ a b) (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b)))) (* (pow a 2) (pow b 2))))) (* a b)))))) (/ (* (+ a b) (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b)))) (* (pow a 2) (pow b 2))))) (+ (/ 1 a) (/ 1 b)))","(* (pow eps 2) (+ a b))","(* (pow eps 2) (+ a (+ b (* 1/2 (* eps (pow (+ a b) 2))))))","(* (pow eps 2) (+ a (+ b (* eps (+ (* 1/6 (* eps (pow (+ a b) 3))) (* 1/2 (pow (+ a b) 2)))))))","(* (pow eps 2) (+ a (+ b (* eps (+ (* 1/2 (pow (+ a b) 2)) (* eps (+ (* 1/24 (* eps (pow (+ a b) 4))) (* 1/6 (pow (+ a b) 3)))))))))","(* eps (+ a (+ b (* 1/2 (* eps (pow (+ a b) 2))))))","(* eps (+ a (+ b (* eps (+ (* 1/6 (* eps (pow (+ a b) 3))) (* 1/2 (pow (+ a b) 2)))))))","(* eps (+ a (+ b (* eps (+ (* 1/2 (pow (+ a b) 2)) (* eps (+ (* 1/24 (* eps (pow (+ a b) 4))) (* 1/6 (pow (+ a b) 3)))))))))","(/ (* a b) (+ a b))","(+ (* eps (- (+ (* 1/2 (/ (* a (pow b 2)) (+ a b))) (* 1/2 (/ (* (pow a 2) b) (+ a b)))) (* 1/2 (* a b)))) (/ (* a b) (+ a b)))","(+ (* eps (- (+ (* 1/2 (/ (* a (pow b 2)) (+ a b))) (+ (* 1/2 (/ (* (pow a 2) b) (+ a b))) (* eps (- (+ (* 1/6 (/ (* a (pow b 3)) (+ a b))) (+ (* 1/6 (/ (* (pow a 3) b) (+ a b))) (* 1/4 (/ (* (pow a 2) (pow b 2)) (+ a b))))) (+ (* 1/6 (* a (* b (+ a b)))) (* 1/2 (* (+ a b) (- (+ (* 1/2 (/ (* a (pow b 2)) (+ a b))) (* 1/2 (/ (* (pow a 2) b) (+ a b)))) (* 1/2 (* a b)))))))))) (* 1/2 (* a b)))) (/ (* a b) (+ a b)))","(+ (* eps (- (+ (* 1/2 (/ (* a (pow b 2)) (+ a b))) (+ (* 1/2 (/ (* (pow a 2) b) (+ a b))) (* eps (- (+ (* 1/6 (/ (* a (pow b 3)) (+ a b))) (+ (* 1/6 (/ (* (pow a 3) b) (+ a b))) (+ (* 1/4 (/ (* (pow a 2) (pow b 2)) (+ a b))) (* eps (- (+ (* 1/24 (/ (* a (pow b 4)) (+ a b))) (+ (* 1/24 (/ (* (pow a 4) b) (+ a b))) (+ (* 1/12 (/ (* (pow a 2) (pow b 3)) (+ a b))) (* 1/12 (/ (* (pow a 3) (pow b 2)) (+ a b)))))) (+ (* 1/24 (* a (* b (pow (+ a b) 2)))) (+ (* 1/6 (* (pow (+ a b) 2) (- (+ (* 1/2 (/ (* a (pow b 2)) (+ a b))) (* 1/2 (/ (* (pow a 2) b) (+ a b)))) (* 1/2 (* a b))))) (* 1/2 (* (+ a b) (- (+ (* 1/6 (/ (* a (pow b 3)) (+ a b))) (+ (* 1/6 (/ (* (pow a 3) b) (+ a b))) (* 1/4 (/ (* (pow a 2) (pow b 2)) (+ a b))))) (+ (* 1/6 (* a (* b (+ a b)))) (* 1/2 (* (+ a b) (- (+ (* 1/2 (/ (* a (pow b 2)) (+ a b))) (* 1/2 (/ (* (pow a 2) b) (+ a b)))) (* 1/2 (* a b)))))))))))))))) (+ (* 1/6 (* a (* b (+ a b)))) (* 1/2 (* (+ a b) (- (+ (* 1/2 (/ (* a (pow b 2)) (+ a b))) (* 1/2 (/ (* (pow a 2) b) (+ a b)))) (* 1/2 (* a b)))))))))) (* 1/2 (* a b)))) (/ (* a b) (+ a b)))","(/ (* (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) (+ (pow a 3) (pow b 3))) (* a (* b (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)))))","(- (* eps (- (* 1/2 (/ (* (pow (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) 2) (pow (+ (pow a 3) (pow b 3)) 2)) (* a (* b (pow (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)) 2))))) (/ (* (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b))) (* (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) (+ (pow a 3) (pow b 3)))) (* (pow a 2) (* (pow b 2) (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6))))))) (* -1 (/ (* (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) (+ (pow a 3) (pow b 3))) (* a (* b (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)))))))","(- (* eps (- (* eps (- (* 1/6 (/ (* (pow (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) 3) (pow (+ (pow a 3) (pow b 3)) 3)) (* a (* b (pow (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)) 3))))) (+ (/ (* (+ (* 1/6 (* a (pow b 3))) (+ (* 1/6 (* (pow a 3) b)) (* 1/4 (* (pow a 2) (pow b 2))))) (* (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) (+ (pow a 3) (pow b 3)))) (* (pow a 2) (* (pow b 2) (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6))))) (/ (* (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b))) (- (* 1/2 (/ (* (pow (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) 2) (pow (+ (pow a 3) (pow b 3)) 2)) (* a (* b (pow (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)) 2))))) (/ (* (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b))) (* (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) (+ (pow a 3) (pow b 3)))) (* (pow a 2) (* (pow b 2) (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6))))))) (* a b))))) (* -1 (- (* 1/2 (/ (* (pow (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) 2) (pow (+ (pow a 3) (pow b 3)) 2)) (* a (* b (pow (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)) 2))))) (/ (* (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b))) (* (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) (+ (pow a 3) (pow b 3)))) (* (pow a 2) (* (pow b 2) (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6))))))))) (* -1 (/ (* (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) (+ (pow a 3) (pow b 3))) (* a (* b (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)))))))","(- (* eps (- (* eps (- (* eps (- (* 1/24 (/ (* (pow (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) 4) (pow (+ (pow a 3) (pow b 3)) 4)) (* a (* b (pow (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)) 4))))) (+ (/ (* (+ (* 1/24 (* a (pow b 4))) (+ (* 1/24 (* (pow a 4) b)) (+ (* 1/12 (* (pow a 2) (pow b 3))) (* 1/12 (* (pow a 3) (pow b 2)))))) (* (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) (+ (pow a 3) (pow b 3)))) (* (pow a 2) (* (pow b 2) (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6))))) (+ (/ (* (+ (* 1/6 (* a (pow b 3))) (+ (* 1/6 (* (pow a 3) b)) (* 1/4 (* (pow a 2) (pow b 2))))) (- (* 1/2 (/ (* (pow (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) 2) (pow (+ (pow a 3) (pow b 3)) 2)) (* a (* b (pow (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)) 2))))) (/ (* (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b))) (* (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) (+ (pow a 3) (pow b 3)))) (* (pow a 2) (* (pow b 2) (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6))))))) (* a b)) (/ (* (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b))) (- (* 1/6 (/ (* (pow (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) 3) (pow (+ (pow a 3) (pow b 3)) 3)) (* a (* b (pow (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)) 3))))) (+ (/ (* (+ (* 1/6 (* a (pow b 3))) (+ (* 1/6 (* (pow a 3) b)) (* 1/4 (* (pow a 2) (pow b 2))))) (* (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) (+ (pow a 3) (pow b 3)))) (* (pow a 2) (* (pow b 2) (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6))))) (/ (* (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b))) (- (* 1/2 (/ (* (pow (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) 2) (pow (+ (pow a 3) (pow b 3)) 2)) (* a (* b (pow (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)) 2))))) (/ (* (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b))) (* (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) (+ (pow a 3) (pow b 3)))) (* (pow a 2) (* (pow b 2) (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6))))))) (* a b))))) (* a b)))))) (* -1 (- (* 1/6 (/ (* (pow (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) 3) (pow (+ (pow a 3) (pow b 3)) 3)) (* a (* b (pow (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)) 3))))) (+ (/ (* (+ (* 1/6 (* a (pow b 3))) (+ (* 1/6 (* (pow a 3) b)) (* 1/4 (* (pow a 2) (pow b 2))))) (* (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) (+ (pow a 3) (pow b 3)))) (* (pow a 2) (* (pow b 2) (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6))))) (/ (* (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b))) (- (* 1/2 (/ (* (pow (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) 2) (pow (+ (pow a 3) (pow b 3)) 2)) (* a (* b (pow (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)) 2))))) (/ (* (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b))) (* (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) (+ (pow a 3) (pow b 3)))) (* (pow a 2) (* (pow b 2) (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6))))))) (* a b))))))) (* -1 (- (* 1/2 (/ (* (pow (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) 2) (pow (+ (pow a 3) (pow b 3)) 2)) (* a (* b (pow (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)) 2))))) (/ (* (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b))) (* (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) (+ (pow a 3) (pow b 3)))) (* (pow a 2) (* (pow b 2) (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6))))))))) (* -1 (/ (* (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) (+ (pow a 3) (pow b 3))) (* a (* b (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)))))))","(* -1 (/ (* (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) (+ (pow a 3) (pow b 3))) (* a (* b (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6))))))","(+ (* -1 (* eps (- (* 1/2 (/ (* (pow (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) 2) (pow (+ (pow a 3) (pow b 3)) 2)) (* a (* b (pow (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)) 2))))) (/ (* (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b))) (* (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) (+ (pow a 3) (pow b 3)))) (* (pow a 2) (* (pow b 2) (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)))))))) (* -1 (/ (* (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) (+ (pow a 3) (pow b 3))) (* a (* b (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)))))))","(+ (* -1 (/ (* (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) (+ (pow a 3) (pow b 3))) (* a (* b (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)))))) (* eps (+ (* -1 (* eps (- (* 1/6 (/ (* (pow (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) 3) (pow (+ (pow a 3) (pow b 3)) 3)) (* a (* b (pow (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)) 3))))) (+ (/ (* (+ (* 1/6 (* a (pow b 3))) (+ (* 1/6 (* (pow a 3) b)) (* 1/4 (* (pow a 2) (pow b 2))))) (* (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) (+ (pow a 3) (pow b 3)))) (* (pow a 2) (* (pow b 2) (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6))))) (/ (* (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b))) (- (* 1/2 (/ (* (pow (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) 2) (pow (+ (pow a 3) (pow b 3)) 2)) (* a (* b (pow (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)) 2))))) (/ (* (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b))) (* (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) (+ (pow a 3) (pow b 3)))) (* (pow a 2) (* (pow b 2) (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6))))))) (* a b)))))) (* -1 (- (* 1/2 (/ (* (pow (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) 2) (pow (+ (pow a 3) (pow b 3)) 2)) (* a (* b (pow (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)) 2))))) (/ (* (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b))) (* (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) (+ (pow a 3) (pow b 3)))) (* (pow a 2) (* (pow b 2) (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6))))))))))","(+ (* -1 (/ (* (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) (+ (pow a 3) (pow b 3))) (* a (* b (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)))))) (* eps (+ (* -1 (- (* 1/2 (/ (* (pow (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) 2) (pow (+ (pow a 3) (pow b 3)) 2)) (* a (* b (pow (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)) 2))))) (/ (* (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b))) (* (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) (+ (pow a 3) (pow b 3)))) (* (pow a 2) (* (pow b 2) (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6))))))) (* eps (+ (* -1 (* eps (- (* 1/24 (/ (* (pow (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) 4) (pow (+ (pow a 3) (pow b 3)) 4)) (* a (* b (pow (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)) 4))))) (+ (/ (* (+ (* 1/24 (* a (pow b 4))) (+ (* 1/24 (* (pow a 4) b)) (+ (* 1/12 (* (pow a 2) (pow b 3))) (* 1/12 (* (pow a 3) (pow b 2)))))) (* (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) (+ (pow a 3) (pow b 3)))) (* (pow a 2) (* (pow b 2) (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6))))) (+ (/ (* (+ (* 1/6 (* a (pow b 3))) (+ (* 1/6 (* (pow a 3) b)) (* 1/4 (* (pow a 2) (pow b 2))))) (- (* 1/2 (/ (* (pow (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) 2) (pow (+ (pow a 3) (pow b 3)) 2)) (* a (* b (pow (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)) 2))))) (/ (* (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b))) (* (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) (+ (pow a 3) (pow b 3)))) (* (pow a 2) (* (pow b 2) (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6))))))) (* a b)) (/ (* (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b))) (- (* 1/6 (/ (* (pow (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) 3) (pow (+ (pow a 3) (pow b 3)) 3)) (* a (* b (pow (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)) 3))))) (+ (/ (* (+ (* 1/6 (* a (pow b 3))) (+ (* 1/6 (* (pow a 3) b)) (* 1/4 (* (pow a 2) (pow b 2))))) (* (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) (+ (pow a 3) (pow b 3)))) (* (pow a 2) (* (pow b 2) (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6))))) (/ (* (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b))) (- (* 1/2 (/ (* (pow (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) 2) (pow (+ (pow a 3) (pow b 3)) 2)) (* a (* b (pow (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)) 2))))) (/ (* (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b))) (* (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) (+ (pow a 3) (pow b 3)))) (* (pow a 2) (* (pow b 2) (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6))))))) (* a b))))) (* a b))))))) (* -1 (- (* 1/6 (/ (* (pow (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) 3) (pow (+ (pow a 3) (pow b 3)) 3)) (* a (* b (pow (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)) 3))))) (+ (/ (* (+ (* 1/6 (* a (pow b 3))) (+ (* 1/6 (* (pow a 3) b)) (* 1/4 (* (pow a 2) (pow b 2))))) (* (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) (+ (pow a 3) (pow b 3)))) (* (pow a 2) (* (pow b 2) (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6))))) (/ (* (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b))) (- (* 1/2 (/ (* (pow (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) 2) (pow (+ (pow a 3) (pow b 3)) 2)) (* a (* b (pow (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)) 2))))) (/ (* (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b))) (* (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) (+ (pow a 3) (pow b 3)))) (* (pow a 2) (* (pow b 2) (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6))))))) (* a b))))))))))","(* -1 (/ (* (pow eps 2) (* (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) (+ (pow a 3) (pow b 3)))) (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6))))","(* (pow eps 2) (+ (* -1 (/ (* (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) (+ (pow a 3) (pow b 3))) (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)))) (* -1/2 (/ (* eps (* (pow (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) 2) (pow (+ (pow a 3) (pow b 3)) 2))) (pow (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)) 2)))))","(* (pow eps 2) (+ (* -1 (/ (* (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) (+ (pow a 3) (pow b 3))) (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)))) (* eps (+ (* -1/2 (/ (* (pow (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) 2) (pow (+ (pow a 3) (pow b 3)) 2)) (pow (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)) 2))) (* -1/6 (/ (* eps (* (pow (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) 3) (pow (+ (pow a 3) (pow b 3)) 3))) (pow (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)) 3)))))))","(* (pow eps 2) (+ (* -1 (/ (* (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) (+ (pow a 3) (pow b 3))) (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)))) (* eps (+ (* -1/2 (/ (* (pow (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) 2) (pow (+ (pow a 3) (pow b 3)) 2)) (pow (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)) 2))) (* eps (+ (* -1/6 (/ (* (pow (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) 3) (pow (+ (pow a 3) (pow b 3)) 3)) (pow (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)) 3))) (* -1/24 (/ (* eps (* (pow (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) 4) (pow (+ (pow a 3) (pow b 3)) 4))) (pow (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)) 4)))))))))","(/ (* eps (* (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) (+ (pow a 3) (pow b 3)))) (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)))","(* eps (+ (* 1/2 (/ (* eps (* (pow (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) 2) (pow (+ (pow a 3) (pow b 3)) 2))) (pow (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)) 2))) (/ (* (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) (+ (pow a 3) (pow b 3))) (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)))))","(* eps (+ (* eps (+ (* 1/6 (/ (* eps (* (pow (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) 3) (pow (+ (pow a 3) (pow b 3)) 3))) (pow (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)) 3))) (* 1/2 (/ (* (pow (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) 2) (pow (+ (pow a 3) (pow b 3)) 2)) (pow (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)) 2))))) (/ (* (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) (+ (pow a 3) (pow b 3))) (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)))))","(* eps (+ (* eps (+ (* 1/2 (/ (* (pow (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) 2) (pow (+ (pow a 3) (pow b 3)) 2)) (pow (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)) 2))) (* eps (+ (* 1/24 (/ (* eps (* (pow (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) 4) (pow (+ (pow a 3) (pow b 3)) 4))) (pow (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)) 4))) (* 1/6 (/ (* (pow (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) 3) (pow (+ (pow a 3) (pow b 3)) 3)) (pow (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)) 3))))))) (/ (* (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) (+ (pow a 3) (pow b 3))) (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)))))","(* a (* b (pow eps 2)))","(* (pow eps 2) (+ (* a b) (* eps (+ (* 1/2 (* a (pow b 2))) (* 1/2 (* (pow a 2) b))))))","(* (pow eps 2) (+ (* a b) (* eps (+ (* 1/2 (* a (pow b 2))) (+ (* 1/2 (* (pow a 2) b)) (* eps (+ (* 1/6 (* a (pow b 3))) (+ (* 1/6 (* (pow a 3) b)) (* 1/4 (* (pow a 2) (pow b 2)))))))))))","(* (pow eps 2) (+ (* a b) (* eps (+ (* 1/2 (* a (pow b 2))) (+ (* 1/2 (* (pow a 2) b)) (* eps (+ (* 1/6 (* a (pow b 3))) (+ (* 1/6 (* (pow a 3) b)) (+ (* 1/4 (* (pow a 2) (pow b 2))) (* eps (+ (* 1/24 (* a (pow b 4))) (+ (* 1/24 (* (pow a 4) b)) (+ (* 1/12 (* (pow a 2) (pow b 3))) (* 1/12 (* (pow a 3) (pow b 2))))))))))))))))","(* eps (* (+ a b) (- a b)))","(/ (* eps (+ (pow a 3) (pow b 3))) (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)))","(* eps (- (/ (exp (* eps (+ a b))) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))) (/ 1 (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1)))))","(* -1 (* eps (- (/ 1 (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))) (/ (exp (+ (* a eps) (* b eps))) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))))))","(* -1 (* eps (+ (* -1 a) (* -1 b))))","(* -1 (* eps (- (/ 1 (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))) (/ (exp (* eps (+ a b))) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))))))","(* -1 (* eps (- (/ 1 (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))) (/ (exp (/ (* eps (* (+ (* b (* (- b a) (- (* b (- b a)) (pow a 2)))) (pow a 4)) (+ (pow a 3) (pow b 3)))) (+ (* (pow b 3) (pow (- b a) 3)) (pow a 6)))) (* (- (exp (* a eps)) 1) (- (exp (* b eps)) 1))))))"]],"memory":[[-2171120,14178640]],"method":["egg-herbie"],"outputs":[[]],"time":149.405029296875,"type":"simplify"},{"count":[[27,405]],"inputs":[["(neg.f64 (/.f64 (*.f64 (expm1.f64 (+.f64 (*.f64 b eps) (*.f64 a eps))) (neg.f64 eps)) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))))","(+.f64 (*.f64 b eps) (*.f64 a eps))","(/.f64 (*.f64 (expm1.f64 (+.f64 (*.f64 b eps) (*.f64 a eps))) (neg.f64 eps)) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))))","(*.f64 (expm1.f64 (+.f64 (*.f64 b eps) (*.f64 a eps))) (neg.f64 eps))","(+.f64 (/.f64 (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps))) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))) #s(literal 0 binary64))","(/.f64 (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps))) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))))","(*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps)))","(expm1.f64 (*.f64 (+.f64 a b) eps))","(*.f64 (*.f64 (*.f64 (+.f64 a b) eps) (-.f64 a b)) (/.f64 #s(literal 1 binary64) (-.f64 a b)))","(neg.f64 (/.f64 (*.f64 (expm1.f64 (*.f64 (*.f64 (*.f64 (+.f64 a b) eps) (-.f64 a b)) (/.f64 #s(literal 1 binary64) (-.f64 a b)))) (neg.f64 eps)) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))))","(/.f64 (*.f64 (expm1.f64 (*.f64 (*.f64 (*.f64 (+.f64 a b) eps) (-.f64 a b)) (/.f64 #s(literal 1 binary64) (-.f64 a b)))) (neg.f64 eps)) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))))","(*.f64 (expm1.f64 (*.f64 (*.f64 (*.f64 (+.f64 a b) eps) (-.f64 a b)) (/.f64 #s(literal 1 binary64) (-.f64 a b)))) (neg.f64 eps))","(*.f64 (*.f64 (+.f64 a b) (-.f64 a b)) (/.f64 eps (-.f64 a b)))","(neg.f64 (/.f64 #s(literal -1 binary64) (/.f64 (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))) (*.f64 eps (expm1.f64 (*.f64 (*.f64 (+.f64 a b) (-.f64 a b)) (/.f64 eps (-.f64 a b))))))))","(/.f64 #s(literal -1 binary64) (/.f64 (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))) (*.f64 eps (expm1.f64 (*.f64 (*.f64 (+.f64 a b) (-.f64 a b)) (/.f64 eps (-.f64 a b)))))))","(/.f64 (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))) (*.f64 eps (expm1.f64 (*.f64 (*.f64 (+.f64 a b) (-.f64 a b)) (/.f64 eps (-.f64 a b))))))","(neg.f64 (/.f64 (*.f64 (expm1.f64 (*.f64 (/.f64 (*.f64 (fma.f64 (*.f64 a a) a (*.f64 (*.f64 b b) b)) eps) (fma.f64 (*.f64 (*.f64 (-.f64 b a) b) (*.f64 (-.f64 b a) b)) (*.f64 (-.f64 b a) b) (*.f64 (*.f64 a a) (*.f64 (*.f64 a a) (*.f64 a a))))) (fma.f64 (*.f64 (-.f64 b a) b) (-.f64 (*.f64 (-.f64 b a) b) (*.f64 a a)) (*.f64 (*.f64 a a) (*.f64 a a))))) (neg.f64 eps)) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))))","(/.f64 (*.f64 (expm1.f64 (*.f64 (/.f64 (*.f64 (fma.f64 (*.f64 a a) a (*.f64 (*.f64 b b) b)) eps) (fma.f64 (*.f64 (*.f64 (-.f64 b a) b) (*.f64 (-.f64 b a) b)) (*.f64 (-.f64 b a) b) (*.f64 (*.f64 a a) (*.f64 (*.f64 a a) (*.f64 a a))))) (fma.f64 (*.f64 (-.f64 b a) b) (-.f64 (*.f64 (-.f64 b a) b) (*.f64 a a)) (*.f64 (*.f64 a a) (*.f64 a a))))) (neg.f64 eps)) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))))","(*.f64 (expm1.f64 (*.f64 (/.f64 (*.f64 (fma.f64 (*.f64 a a) a (*.f64 (*.f64 b b) b)) eps) (fma.f64 (*.f64 (*.f64 (-.f64 b a) b) (*.f64 (-.f64 b a) b)) (*.f64 (-.f64 b a) b) (*.f64 (*.f64 a a) (*.f64 (*.f64 a a) (*.f64 a a))))) (fma.f64 (*.f64 (-.f64 b a) b) (-.f64 (*.f64 (-.f64 b a) b) (*.f64 a a)) (*.f64 (*.f64 a a) (*.f64 a a))))) (neg.f64 eps))","(expm1.f64 (*.f64 (/.f64 (*.f64 (fma.f64 (*.f64 a a) a (*.f64 (*.f64 b b) b)) eps) (fma.f64 (*.f64 (*.f64 (-.f64 b a) b) (*.f64 (-.f64 b a) b)) (*.f64 (-.f64 b a) b) (*.f64 (*.f64 a a) (*.f64 (*.f64 a a) (*.f64 a a))))) (fma.f64 (*.f64 (-.f64 b a) b) (-.f64 (*.f64 (-.f64 b a) b) (*.f64 a a)) (*.f64 (*.f64 a a) (*.f64 a a)))))","(*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))","(*.f64 (+.f64 a b) eps)","(*.f64 (*.f64 (+.f64 a b) eps) (-.f64 a b))","(/.f64 #s(literal 1 binary64) (-.f64 a b))","(/.f64 (*.f64 (fma.f64 (*.f64 a a) a (*.f64 (*.f64 b b) b)) eps) (fma.f64 (*.f64 (*.f64 (-.f64 b a) b) (*.f64 (-.f64 b a) b)) (*.f64 (-.f64 b a) b) (*.f64 (*.f64 a a) (*.f64 (*.f64 a a) (*.f64 a a)))))","(*.f64 (/.f64 (*.f64 (fma.f64 (*.f64 a a) a (*.f64 (*.f64 b b) b)) eps) (fma.f64 (*.f64 (*.f64 (-.f64 b a) b) (*.f64 (-.f64 b a) b)) (*.f64 (-.f64 b a) b) (*.f64 (*.f64 a a) (*.f64 (*.f64 a a) (*.f64 a a))))) (fma.f64 (*.f64 (-.f64 b a) b) (-.f64 (*.f64 (-.f64 b a) b) (*.f64 a a)) (*.f64 (*.f64 a a) (*.f64 a a))))","(*.f64 (*.f64 (-.f64 b a) b) (*.f64 (-.f64 b a) b))"]],"memory":[[6523920,22191312]],"outputs":[["#s(literal 0 binary64)","#s(literal 1 binary64)","#s(literal -1 binary64)","#s(literal 2 binary64)","#s(literal 3 binary64)","#s(literal 4 binary64)","#s(literal 5 binary64)","#s(literal 6 binary64)","#s(literal -2 binary64)","#s(literal 9 binary64)","#s(literal -3 binary64)","#s(literal 8 binary64)","#s(literal 27 binary64)","#s(literal 7 binary64)","#s(literal 11 binary64)","#s(literal 0 binary64)","#s(literal 1 binary64)","#s(literal -1 binary64)","#s(literal 2 binary64)","#s(literal 3 binary64)","#s(literal 4 binary64)","#s(literal 5 binary64)","#s(literal 6 binary64)","#s(literal -2 binary64)","#s(literal 9 binary64)","#s(literal -3 binary64)","#s(literal 8 binary64)","#s(literal 27 binary64)","#s(literal 7 binary64)","#s(literal 11 binary64)","#s(literal 0 binary64)","#s(literal 1 binary64)","#s(literal -1 binary64)","#s(literal 2 binary64)","#s(literal 3 binary64)","#s(literal 4 binary64)","#s(literal 5 binary64)","#s(literal 6 binary64)","#s(literal -2 binary64)","#s(literal 9 binary64)","#s(literal -3 binary64)","#s(literal 8 binary64)","#s(literal 27 binary64)","#s(literal 7 binary64)","#s(literal 11 binary64)","#s(literal 0 binary64)","#s(literal 1 binary64)","#s(literal -1 binary64)","#s(literal 2 binary64)","#s(literal 3 binary64)","#s(literal 4 binary64)","#s(literal 5 binary64)","#s(literal 6 binary64)","#s(literal -2 binary64)","#s(literal 9 binary64)","#s(literal -3 binary64)","#s(literal 8 binary64)","#s(literal 27 binary64)","#s(literal 7 binary64)","#s(literal 11 binary64)","#s(literal 0 binary64)","#s(literal 1 binary64)","#s(literal -1 binary64)","#s(literal 2 binary64)","#s(literal 3 binary64)","#s(literal 4 binary64)","#s(literal 5 binary64)","#s(literal 6 binary64)","#s(literal -2 binary64)","#s(literal 9 binary64)","#s(literal -3 binary64)","#s(literal 8 binary64)","#s(literal 27 binary64)","#s(literal 7 binary64)","#s(literal 11 binary64)","#s(literal 0 binary64)","#s(literal 1 binary64)","#s(literal -1 binary64)","#s(literal 2 binary64)","#s(literal 3 binary64)","#s(literal 4 binary64)","#s(literal 5 binary64)","#s(literal 6 binary64)","#s(literal -2 binary64)","#s(literal 9 binary64)","#s(literal -3 binary64)","#s(literal 8 binary64)","#s(literal 27 binary64)","#s(literal 7 binary64)","#s(literal 11 binary64)","#s(literal 0 binary64)","#s(literal 1 binary64)","#s(literal -1 binary64)","#s(literal 2 binary64)","#s(literal 3 binary64)","#s(literal 4 binary64)","#s(literal 5 binary64)","#s(literal 6 binary64)","#s(literal -2 binary64)","#s(literal 9 binary64)","#s(literal -3 binary64)","#s(literal 8 binary64)","#s(literal 27 binary64)","#s(literal 7 binary64)","#s(literal 11 binary64)","#s(literal 0 binary64)","#s(literal 1 binary64)","#s(literal -1 binary64)","#s(literal 2 binary64)","#s(literal 3 binary64)","#s(literal 4 binary64)","#s(literal 5 binary64)","#s(literal 6 binary64)","#s(literal -2 binary64)","#s(literal 9 binary64)","#s(literal -3 binary64)","#s(literal 8 binary64)","#s(literal 27 binary64)","#s(literal 7 binary64)","#s(literal 11 binary64)","#s(literal 0 binary64)","#s(literal 1 binary64)","#s(literal -1 binary64)","#s(literal 2 binary64)","#s(literal 3 binary64)","#s(literal 4 binary64)","#s(literal 5 binary64)","#s(literal 6 binary64)","#s(literal -2 binary64)","#s(literal 9 binary64)","#s(literal -3 binary64)","#s(literal 8 binary64)","#s(literal 27 binary64)","#s(literal 7 binary64)","#s(literal 11 binary64)","#s(literal 0 binary64)","#s(literal 1 binary64)","#s(literal -1 binary64)","#s(literal 2 binary64)","#s(literal 3 binary64)","#s(literal 4 binary64)","#s(literal 5 binary64)","#s(literal 6 binary64)","#s(literal -2 binary64)","#s(literal 9 binary64)","#s(literal -3 binary64)","#s(literal 8 binary64)","#s(literal 27 binary64)","#s(literal 7 binary64)","#s(literal 11 binary64)","#s(literal 0 binary64)","#s(literal 1 binary64)","#s(literal -1 binary64)","#s(literal 2 binary64)","#s(literal 3 binary64)","#s(literal 4 binary64)","#s(literal 5 binary64)","#s(literal 6 binary64)","#s(literal -2 binary64)","#s(literal 9 binary64)","#s(literal -3 binary64)","#s(literal 8 binary64)","#s(literal 27 binary64)","#s(literal 7 binary64)","#s(literal 11 binary64)","#s(literal 0 binary64)","#s(literal 1 binary64)","#s(literal -1 binary64)","#s(literal 2 binary64)","#s(literal 3 binary64)","#s(literal 4 binary64)","#s(literal 5 binary64)","#s(literal 6 binary64)","#s(literal -2 binary64)","#s(literal 9 binary64)","#s(literal -3 binary64)","#s(literal 8 binary64)","#s(literal 27 binary64)","#s(literal 7 binary64)","#s(literal 11 binary64)","#s(literal 0 binary64)","#s(literal 1 binary64)","#s(literal -1 binary64)","#s(literal 2 binary64)","#s(literal 3 binary64)","#s(literal 4 binary64)","#s(literal 5 binary64)","#s(literal 6 binary64)","#s(literal -2 binary64)","#s(literal 9 binary64)","#s(literal -3 binary64)","#s(literal 8 binary64)","#s(literal 27 binary64)","#s(literal 7 binary64)","#s(literal 11 binary64)","#s(literal 0 binary64)","#s(literal 1 binary64)","#s(literal -1 binary64)","#s(literal 2 binary64)","#s(literal 3 binary64)","#s(literal 4 binary64)","#s(literal 5 binary64)","#s(literal 6 binary64)","#s(literal -2 binary64)","#s(literal 9 binary64)","#s(literal -3 binary64)","#s(literal 8 binary64)","#s(literal 27 binary64)","#s(literal 7 binary64)","#s(literal 11 binary64)","#s(literal 0 binary64)","#s(literal 1 binary64)","#s(literal -1 binary64)","#s(literal 2 binary64)","#s(literal 3 binary64)","#s(literal 4 binary64)","#s(literal 5 binary64)","#s(literal 6 binary64)","#s(literal -2 binary64)","#s(literal 9 binary64)","#s(literal -3 binary64)","#s(literal 8 binary64)","#s(literal 27 binary64)","#s(literal 7 binary64)","#s(literal 11 binary64)","#s(literal 0 binary64)","#s(literal 1 binary64)","#s(literal -1 binary64)","#s(literal 2 binary64)","#s(literal 3 binary64)","#s(literal 4 binary64)","#s(literal 5 binary64)","#s(literal 6 binary64)","#s(literal -2 binary64)","#s(literal 9 binary64)","#s(literal -3 binary64)","#s(literal 8 binary64)","#s(literal 27 binary64)","#s(literal 7 binary64)","#s(literal 11 binary64)","#s(literal 0 binary64)","#s(literal 1 binary64)","#s(literal -1 binary64)","#s(literal 2 binary64)","#s(literal 3 binary64)","#s(literal 4 binary64)","#s(literal 5 binary64)","#s(literal 6 binary64)","#s(literal -2 binary64)","#s(literal 9 binary64)","#s(literal -3 binary64)","#s(literal 8 binary64)","#s(literal 27 binary64)","#s(literal 7 binary64)","#s(literal 11 binary64)","#s(literal 0 binary64)","#s(literal 1 binary64)","#s(literal -1 binary64)","#s(literal 2 binary64)","#s(literal 3 binary64)","#s(literal 4 binary64)","#s(literal 5 binary64)","#s(literal 6 binary64)","#s(literal -2 binary64)","#s(literal 9 binary64)","#s(literal -3 binary64)","#s(literal 8 binary64)","#s(literal 27 binary64)","#s(literal 7 binary64)","#s(literal 11 binary64)","#s(literal 0 binary64)","#s(literal 1 binary64)","#s(literal -1 binary64)","#s(literal 2 binary64)","#s(literal 3 binary64)","#s(literal 4 binary64)","#s(literal 5 binary64)","#s(literal 6 binary64)","#s(literal -2 binary64)","#s(literal 9 binary64)","#s(literal -3 binary64)","#s(literal 8 binary64)","#s(literal 27 binary64)","#s(literal 7 binary64)","#s(literal 11 binary64)","#s(literal 0 binary64)","#s(literal 1 binary64)","#s(literal -1 binary64)","#s(literal 2 binary64)","#s(literal 3 binary64)","#s(literal 4 binary64)","#s(literal 5 binary64)","#s(literal 6 binary64)","#s(literal -2 binary64)","#s(literal 9 binary64)","#s(literal -3 binary64)","#s(literal 8 binary64)","#s(literal 27 binary64)","#s(literal 7 binary64)","#s(literal 11 binary64)","#s(literal 0 binary64)","#s(literal 1 binary64)","#s(literal -1 binary64)","#s(literal 2 binary64)","#s(literal 3 binary64)","#s(literal 4 binary64)","#s(literal 5 binary64)","#s(literal 6 binary64)","#s(literal -2 binary64)","#s(literal 9 binary64)","#s(literal -3 binary64)","#s(literal 8 binary64)","#s(literal 27 binary64)","#s(literal 7 binary64)","#s(literal 11 binary64)","#s(literal 0 binary64)","#s(literal 1 binary64)","#s(literal -1 binary64)","#s(literal 2 binary64)","#s(literal 3 binary64)","#s(literal 4 binary64)","#s(literal 5 binary64)","#s(literal 6 binary64)","#s(literal -2 binary64)","#s(literal 9 binary64)","#s(literal -3 binary64)","#s(literal 8 binary64)","#s(literal 27 binary64)","#s(literal 7 binary64)","#s(literal 11 binary64)","#s(literal 0 binary64)","#s(literal 1 binary64)","#s(literal -1 binary64)","#s(literal 2 binary64)","#s(literal 3 binary64)","#s(literal 4 binary64)","#s(literal 5 binary64)","#s(literal 6 binary64)","#s(literal -2 binary64)","#s(literal 9 binary64)","#s(literal -3 binary64)","#s(literal 8 binary64)","#s(literal 27 binary64)","#s(literal 7 binary64)","#s(literal 11 binary64)","#s(literal 0 binary64)","#s(literal 1 binary64)","#s(literal -1 binary64)","#s(literal 2 binary64)","#s(literal 3 binary64)","#s(literal 4 binary64)","#s(literal 5 binary64)","#s(literal 6 binary64)","#s(literal -2 binary64)","#s(literal 9 binary64)","#s(literal -3 binary64)","#s(literal 8 binary64)","#s(literal 27 binary64)","#s(literal 7 binary64)","#s(literal 11 binary64)","#s(literal 0 binary64)","#s(literal 1 binary64)","#s(literal -1 binary64)","#s(literal 2 binary64)","#s(literal 3 binary64)","#s(literal 4 binary64)","#s(literal 5 binary64)","#s(literal 6 binary64)","#s(literal -2 binary64)","#s(literal 9 binary64)","#s(literal -3 binary64)","#s(literal 8 binary64)","#s(literal 27 binary64)","#s(literal 7 binary64)","#s(literal 11 binary64)","#s(literal 0 binary64)","#s(literal 1 binary64)","#s(literal -1 binary64)","#s(literal 2 binary64)","#s(literal 3 binary64)","#s(literal 4 binary64)","#s(literal 5 binary64)","#s(literal 6 binary64)","#s(literal -2 binary64)","#s(literal 9 binary64)","#s(literal -3 binary64)","#s(literal 8 binary64)","#s(literal 27 binary64)","#s(literal 7 binary64)","#s(literal 11 binary64)","#s(literal 0 binary64)","#s(literal 1 binary64)","#s(literal -1 binary64)","#s(literal 2 binary64)","#s(literal 3 binary64)","#s(literal 4 binary64)","#s(literal 5 binary64)","#s(literal 6 binary64)","#s(literal -2 binary64)","#s(literal 9 binary64)","#s(literal -3 binary64)","#s(literal 8 binary64)","#s(literal 27 binary64)","#s(literal 7 binary64)","#s(literal 11 binary64)"]],"time":726.884033203125,"type":"rewrite"},{"compiler":[[15,18]],"memory":[[-6763072,1399440]],"time":4.280029296875,"type":"eval"},{"alts":[["(+.f64 (/.f64 (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps))) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))) #s(literal 0 binary64))","done",58.21404842679292,"binary64"],["(neg.f64 (/.f64 (*.f64 (expm1.f64 (+.f64 (*.f64 b eps) (*.f64 a eps))) (neg.f64 eps)) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))))","done",58.21014217679292,"binary64"],["(neg.f64 (/.f64 (*.f64 (expm1.f64 (*.f64 (*.f64 (*.f64 (+.f64 a b) eps) (-.f64 a b)) (/.f64 #s(literal 1 binary64) (-.f64 a b)))) (neg.f64 eps)) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))))","done",58.22023968656153,"binary64"],["(neg.f64 (/.f64 #s(literal -1 binary64) (/.f64 (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))) (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps))))))","done",58.22186092679276,"binary64"],["(neg.f64 (/.f64 #s(literal -1 binary64) (/.f64 (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))) (*.f64 eps (expm1.f64 (*.f64 (*.f64 (+.f64 a b) (-.f64 a b)) (/.f64 eps (-.f64 a b))))))))","done",58.2358646865612,"binary64"],["#s(literal 27 binary64)","next",62.24403906330756,"binary64"],["#s(literal -3 binary64)","next",62.33412955796487,"binary64"]],"compiler":[[20,15],[22,14],[30,20],[21,16],[29,19],[1,4],[1,4]],"count":[[22,7]],"kept":[{"done":[1,1],"fresh":[1,0],"new":[15,2],"picked":[5,4]}],"memory":[[2052048,2052048]],"min-error":[[55.99884292099075,"binary64"]],"time":6.785888671875,"type":"prune"},{"inputs":[["#s(literal -3 binary64)","#s(literal 27 binary64)"]],"memory":[[-430304,9836960]],"method":["egg-herbie"],"outputs":[["#s(literal -3 binary64)","#s(literal 27 binary64)"]],"time":185.611083984375,"type":"simplify"},{"compiler":[[4,7]],"memory":[[3985888,3985888]],"mixsample":[[0.373779296875,"ival-true",0],[0.387451171875,"exact",0],[0.166015625,"ival-assert",0]],"outcomes":[[11.749755859375,0,"valid",256]],"time":18.69189453125,"type":"localize"},{"count":[[0,0]],"inputs":[[]],"memory":[[74496,74496]],"outputs":[[]],"series":[[0.0068359375,"()","eps","-inf"],[0.004150390625,"()","eps","inf"],[0.0078125,"()","eps","0"],[0.00390625,"()","b","-inf"],[0.008056640625,"()","b","inf"],[0.006103515625,"()","b","0"],[0.007080078125,"()","a","-inf"],[0.008056640625,"()","a","inf"],[0.0458984375,"()","a","0"]],"time":0.296142578125,"type":"series"},{"count":[[0,0]],"inputs":[[]],"memory":[[-6491168,9522528]],"method":["egg-herbie"],"outputs":[[]],"time":177.225830078125,"type":"simplify"},{"count":[[0,0]],"inputs":[[]],"memory":[[4434992,12660800]],"outputs":[[]],"time":186.3720703125,"type":"rewrite"},{"compiler":[[0,3]],"memory":[[55360,55360]],"time":0.2900390625,"type":"eval"},{"alts":[["(+.f64 (/.f64 (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps))) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))) #s(literal 0 binary64))","done",58.21404842679292,"binary64"],["(neg.f64 (/.f64 (*.f64 (expm1.f64 (+.f64 (*.f64 b eps) (*.f64 a eps))) (neg.f64 eps)) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))))","done",58.21014217679292,"binary64"],["(neg.f64 (/.f64 (*.f64 (expm1.f64 (*.f64 (*.f64 (*.f64 (+.f64 a b) eps) (-.f64 a b)) (/.f64 #s(literal 1 binary64) (-.f64 a b)))) (neg.f64 eps)) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))))","done",58.22023968656153,"binary64"],["(neg.f64 (/.f64 #s(literal -1 binary64) (/.f64 (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))) (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps))))))","done",58.22186092679276,"binary64"],["(neg.f64 (/.f64 #s(literal -1 binary64) (/.f64 (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))) (*.f64 eps (expm1.f64 (*.f64 (*.f64 (+.f64 a b) (-.f64 a b)) (/.f64 eps (-.f64 a b))))))))","done",58.2358646865612,"binary64"],["#s(literal 27 binary64)","done",62.24403906330756,"binary64"],["#s(literal -3 binary64)","done",62.33412955796487,"binary64"]],"compiler":[[285,83],[20,15],[22,14],[30,20],[21,16],[29,19],[1,4],[1,4]],"count":[[7,7]],"kept":[{"done":[5,5],"fresh":[0,0],"new":[0,0],"picked":[2,2]}],"memory":[[-5444208,3862064]],"min-error":[[55.99884292099075,"binary64"]],"time":9.39501953125,"type":"prune"},{"accuracy":[56.90262874066215],"baseline":[58.21014217679292],"branch":[["a",58.21014217679292,1,"binary64"],["b",58.210142176792914,1,"binary64"],["eps",56.90262874066215,2,"binary64"],["(/.f64 (*.f64 eps (-.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) #s(literal 1 binary64))) (*.f64 (-.f64 (exp.f64 (*.f64 a eps)) #s(literal 1 binary64)) (-.f64 (exp.f64 (*.f64 b eps)) #s(literal 1 binary64))))",58.21014217679292,1,"binary64"]],"compiler":[[1,3],[1,3],[1,3],[24,17]],"count":[[11,2]],"inputs":[["#s(literal -3 binary64)","#s(literal 27 binary64)","(+.f64 (/.f64 (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps))) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))) #s(literal 0 binary64))","(neg.f64 (/.f64 (*.f64 (expm1.f64 (*.f64 (+.f64 a b) eps)) (neg.f64 eps)) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))))","(neg.f64 (/.f64 (*.f64 (expm1.f64 (+.f64 (*.f64 b eps) (*.f64 a eps))) (neg.f64 eps)) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))))","(/.f64 (*.f64 eps (-.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) #s(literal 1 binary64))) (*.f64 (-.f64 (exp.f64 (*.f64 a eps)) #s(literal 1 binary64)) (-.f64 (exp.f64 (*.f64 b eps)) #s(literal 1 binary64))))","(neg.f64 (/.f64 #s(literal -1 binary64) (/.f64 (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))) (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps))))))","(neg.f64 (/.f64 (*.f64 (expm1.f64 (*.f64 (*.f64 (*.f64 (+.f64 a b) eps) (-.f64 a b)) (/.f64 #s(literal 1 binary64) (-.f64 a b)))) (neg.f64 eps)) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))))","(neg.f64 (/.f64 #s(literal -1 binary64) (/.f64 (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))) (*.f64 eps (expm1.f64 (*.f64 (*.f64 (+.f64 a b) (-.f64 a b)) (/.f64 eps (-.f64 a b))))))))","(neg.f64 (/.f64 (*.f64 (expm1.f64 (*.f64 (/.f64 (*.f64 (fma.f64 (*.f64 a a) a (*.f64 (*.f64 b b) b)) eps) (fma.f64 (*.f64 (*.f64 (-.f64 b a) b) (*.f64 (-.f64 b a) b)) (*.f64 (-.f64 b a) b) (*.f64 (*.f64 a a) (*.f64 (*.f64 a a) (*.f64 a a))))) (fma.f64 (*.f64 (-.f64 b a) b) (-.f64 (*.f64 (-.f64 b a) b) (*.f64 a a)) (*.f64 (*.f64 a a) (*.f64 a a))))) (neg.f64 eps)) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))))","(neg.f64 (/.f64 #s(literal -1 binary64) (+.f64 (*.f64 (*.f64 (exp.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))) (/.f64 #s(literal 1 binary64) (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps))))) (/.f64 (neg.f64 (expm1.f64 (*.f64 b eps))) (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps)))))))"]],"memory":[[1918368,10085008]],"oracle":[63.996154450740576],"outputs":[["#s(literal 27 binary64)","(neg.f64 (/.f64 (*.f64 (expm1.f64 (+.f64 (*.f64 b eps) (*.f64 a eps))) (neg.f64 eps)) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))))"]],"repr":["binary64"],"time":19.823974609375,"times":[[3.945068359375,"a"],[5.048828125,"b"],[4.885009765625,"eps"],[4.256103515625,"(/.f64 (*.f64 eps (-.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) #s(literal 1 binary64))) (*.f64 (-.f64 (exp.f64 (*.f64 a eps)) #s(literal 1 binary64)) (-.f64 (exp.f64 (*.f64 b eps)) #s(literal 1 binary64))))"]],"type":"regimes"},{"accuracy":[56.90653499066215],"baseline":[58.21404842679292],"branch":[["eps",56.90653499066215,2,"binary64"]],"compiler":[[1,3]],"count":[[4,2]],"inputs":[["#s(literal -3 binary64)","#s(literal 27 binary64)","(+.f64 (/.f64 (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps))) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))) #s(literal 0 binary64))","(neg.f64 (/.f64 (*.f64 (expm1.f64 (*.f64 (+.f64 a b) eps)) (neg.f64 eps)) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))))"]],"memory":[[2145664,2145664]],"oracle":[63.86453891327315],"outputs":[["#s(literal 27 binary64)","(+.f64 (/.f64 (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps))) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))) #s(literal 0 binary64))"]],"repr":["binary64"],"time":3.041015625,"times":[[2.447998046875,"eps"]],"type":"regimes"},{"accuracy":[62.24403906330752],"baseline":[62.24403906330756],"branch":[["a",62.24403906330752,1,"binary64"],["(/.f64 (*.f64 eps (-.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) #s(literal 1 binary64))) (*.f64 (-.f64 (exp.f64 (*.f64 a eps)) #s(literal 1 binary64)) (-.f64 (exp.f64 (*.f64 b eps)) #s(literal 1 binary64))))",62.24403906330756,1,"binary64"],["b",62.24403906330755,1,"binary64"],["eps",62.24403906330757,1,"binary64"]],"compiler":[[1,3],[24,17],[1,3],[1,3]],"count":[[2,1]],"inputs":[["#s(literal -3 binary64)","#s(literal 27 binary64)"]],"memory":[[-1997072,6259808]],"oracle":[63.392797747063604],"outputs":[["#s(literal 27 binary64)"]],"repr":["binary64"],"time":7.52294921875,"times":[[1.64501953125,"a"],[1.779052734375,"(/.f64 (*.f64 eps (-.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) #s(literal 1 binary64))) (*.f64 (-.f64 (exp.f64 (*.f64 a eps)) #s(literal 1 binary64)) (-.f64 (exp.f64 (*.f64 b eps)) #s(literal 1 binary64))))"],[1.43896484375,"b"],[1.68798828125,"eps"]],"type":"regimes"},{"accuracy":[62.334129557964836],"baseline":[62.33412955796487],"branch":[["eps",62.33412955796487,1,"binary64"],["(/.f64 (*.f64 eps (-.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) #s(literal 1 binary64))) (*.f64 (-.f64 (exp.f64 (*.f64 a eps)) #s(literal 1 binary64)) (-.f64 (exp.f64 (*.f64 b eps)) #s(literal 1 binary64))))",62.33412955796487,1,"binary64"],["b",62.334129557964836,1,"binary64"],["a",62.33412955796484,1,"binary64"]],"compiler":[[1,3],[24,17],[1,3],[1,3]],"count":[[1,1]],"inputs":[["#s(literal -3 binary64)"]],"link":["."],"memory":[[5905952,5905952]],"name":["expq3 (problem 3.4.2)"],"oracle":[62.33412955796487],"outputs":[["#s(literal -3 binary64)"]],"repr":["binary64"],"time":6.2509765625,"times":[[1.554931640625,"eps"],[1.143798828125,"(/.f64 (*.f64 eps (-.f64 (exp.f64 (*.f64 (+.f64 a b) eps)) #s(literal 1 binary64))) (*.f64 (-.f64 (exp.f64 (*.f64 a eps)) #s(literal 1 binary64)) (-.f64 (exp.f64 (*.f64 b eps)) #s(literal 1 binary64))))"],[1.166015625,"b"],[1.510009765625,"a"]],"type":"regimes"},{"bstep":[[16.47509765625,1.0686194586367224e-107,2.2707904511721494e-105]],"compiler":[[22,15],[1,5],[22,15],[1,5],[22,15],[1,5],[22,15],[1,5],[22,15],[1,5],[22,15],[1,5],[22,15],[1,5],[26,16],[1,3]],"memory":[[-3201536,5097776]],"method":["binary-search"],"mixsample":[[0.891845703125,"ival-div",0],[0.1064453125,"ival-true",0],[0.864990234375,"ival-add",0],[4.217041015625,"ival-mult",0],[2.057861328125,"ival-expm1",0],[0.055419921875,"ival-assert",0]],"outcomes":[[11.743896484375,0,"valid",112]],"stop":[["narrow-enough",1]],"time":19.172119140625,"type":"bsearch"},{"bstep":[[1.1708984375,1.0686194586367224e-107,2.2707904511721494e-105]],"compiler":[[20,16],[1,5],[20,16],[1,5],[20,16],[1,5],[20,16],[1,5],[20,16],[1,5],[20,16],[1,5],[20,16],[1,5],[26,16],[1,3]],"memory":[[568816,568816]],"method":["binary-search"],"stop":[["narrow-enough",1]],"time":1.801025390625,"type":"bsearch"},{"inputs":[["(if (<=.f64 eps #s(literal 1917062309491721/165263992197562149737978827008192759957101170741070304821162198818601447809077836456297302609928821211897803006255839576064 binary64)) #s(literal 27 binary64) (neg.f64 (/.f64 (*.f64 (expm1.f64 (+.f64 (*.f64 b eps) (*.f64 a eps))) (neg.f64 eps)) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))))))","(if (<=.f64 eps #s(literal 1917062309491721/165263992197562149737978827008192759957101170741070304821162198818601447809077836456297302609928821211897803006255839576064 binary64)) #s(literal 27 binary64) (+.f64 (/.f64 (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps))) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))) #s(literal 0 binary64)))","#s(literal 27 binary64)","#s(literal -3 binary64)"]],"memory":[[-1308832,16152688]],"method":["egg-herbie"],"outputs":[["(if (<=.f64 eps #s(literal 1917062309491721/165263992197562149737978827008192759957101170741070304821162198818601447809077836456297302609928821211897803006255839576064 binary64)) #s(literal 27 binary64) (neg.f64 (/.f64 (*.f64 (expm1.f64 (+.f64 (*.f64 b eps) (*.f64 a eps))) (neg.f64 eps)) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps))))))","(if (<=.f64 eps #s(literal 1917062309491721/165263992197562149737978827008192759957101170741070304821162198818601447809077836456297302609928821211897803006255839576064 binary64)) #s(literal 27 binary64) (/.f64 (*.f64 (expm1.f64 (+.f64 (*.f64 b eps) (*.f64 a eps))) eps) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))))","(if (<=.f64 eps #s(literal 1917062309491721/165263992197562149737978827008192759957101170741070304821162198818601447809077836456297302609928821211897803006255839576064 binary64)) #s(literal 27 binary64) (+.f64 (/.f64 (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps))) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))) #s(literal 0 binary64)))","(if (<=.f64 eps #s(literal 1917062309491721/165263992197562149737978827008192759957101170741070304821162198818601447809077836456297302609928821211897803006255839576064 binary64)) #s(literal 27 binary64) (/.f64 (*.f64 eps (expm1.f64 (*.f64 (+.f64 a b) eps))) (*.f64 (expm1.f64 (*.f64 a eps)) (expm1.f64 (*.f64 b eps)))))","#s(literal 27 binary64)","#s(literal -3 binary64)"]],"time":184.955810546875,"type":"simplify"},{"compiler":[[50,23]],"memory":[[1283216,1283216]],"stop":[["done",1]],"time":2.715087890625,"type":"soundness"},{"compiler":[[50,23],[50,23],[7,7],[7,7],[24,17],[24,17],[25,16],[25,16]],"memory":[[320112,24532912]],"remove-preprocessing":[["(sort a b)"],[],[],[],[]],"time":41.989990234375,"type":"preprocess"},{"memory":[[2000,2000]],"time":0.013916015625,"type":"end"}]