[{"memory":[[15664,15664]],"time":0.06494140625,"type":"start"},{"compiler":[[15,10]],"memory":[[-5535328,51997952]],"method":["search"],"sampling":[[12,{"invalid":0.10146334208548069,"precondition":0.0009763240814208984,"unknown":0.41365824081003666,"valid":0.48390209302306175}],[11,{"invalid":0.10146334208548069,"precondition":0.0009763240814208984,"unknown":0.41365824081003666,"valid":0.48390209302306175}],[10,{"invalid":0.07804872468113899,"precondition":0.0009763240814208984,"unknown":0.45268260315060616,"valid":0.46829234808683395}],[9,{"invalid":0.07804872468113899,"precondition":0.0009763240814208984,"unknown":0.45268260315060616,"valid":0.46829234808683395}],[8,{"invalid":0.031219489872455597,"precondition":0.0009763240814208984,"unknown":0.5307313278317451,"valid":0.43707285821437836}],[7,{"invalid":0.031219489872455597,"precondition":0.0009763240814208984,"unknown":0.5307313278317451,"valid":0.43707285821437836}],[6,{"invalid":0.0,"precondition":0.0009763240814208984,"unknown":0.6243897974491119,"valid":0.37463387846946716}],[5,{"invalid":0.0,"precondition":0.0009763240814208984,"unknown":0.6243897974491119,"valid":0.37463387846946716}],[4,{"invalid":0.0,"precondition":0.0009763240814208984,"unknown":0.7492677569389343,"valid":0.24975591897964478}],[3,{"invalid":0.0,"precondition":0.0009763240814208984,"unknown":0.7492677569389343,"valid":0.24975591897964478}],[2,{"invalid":0.0,"precondition":0.0009763240814208984,"unknown":0.9990236759185791,"valid":0.0}],[1,{"invalid":0.0,"precondition":0.0009763240814208984,"unknown":0.9990236759185791,"valid":0.0}],[0,{"invalid":0.0,"precondition":0.0009763240814208984,"unknown":0.9990236759185791,"valid":0.0}]],"time":504.8349609375,"type":"analyze"},{"bogosity":[{"exit":0.46037696415014495,"infinite":0.0918741698643319,"invalid":0.10146334208548069,"precondition":0.0009763240814208984,"valid":0.3453091998186215}],"memory":[[39891648,1307669536]],"mixsample":[[0.006103515625,"ival-add",9600],[445.46435546875,"adjust",800],[2.26806640625,"ival-pow",5600],[316.147705078125,"ival-pow",2800],[166.98828125,"adjust",4000],[0.1015625,"ival-sub",400],[4.949951171875,"ival-pow",9200],[0.0,"exact",2000],[0.006103515625,"ival-add",5200],[22.561767578125,"ival-add",400],[15.22021484375,"ival-div",4000],[0.025146484375,"ival-add",2400],[18.890869140625,"ival-div",2400],[13.387451171875,"ival-add",1200],[14.3740234375,"ival-div",8400],[3.548095703125,"ival-pow",6400],[6.057861328125,"ival-pow",5200],[2.460205078125,"ival-pow",3600],[1073.85400390625,"ival-pow",2000],[2.307861328125,"ival-div",3200],[0.01123046875,"ival-add",4000],[12.81005859375,"ival-div",2800],[36.241455078125,"ival-div",1200],[3.480712890625,"ival-add",1600],[10.517822265625,"ival-div",8800],[643.267333984375,"ival-pow",4800],[0.005126953125,"ival-add",2800],[0.001953125,"ival-assert",400],[6.47119140625,"ival-div",3600],[21.328125,"ival-true",0],[0.524169921875,"ival-div",5200],[2367.193115234375,"ival-pow",4000],[0.048828125,"ival-div",6000],[0.0029296875,"ival-true",400],[1.05517578125,"ival-pow",6800],[0.009033203125,"ival-add",4400],[187.270751953125,"ival-div",0],[0.006103515625,"ival-add",9200],[0.005859375,"ival-add",4800],[27.566162109375,"ival-div",400],[189.15966796875,"adjust",4800],[1404.180419921875,"ival-pow",1600],[25.077392578125,"ival-div",1600],[9.381591796875,"ival-assert",0],[0.0,"ival-true",2000],[288.8330078125,"ival-sub",0],[1.65966796875,"ival-div",7200],[706.5224609375,"ival-pow",800],[13.585205078125,"ival-div",4800],[1357.59130859375,"ival-pow",0],[3.56591796875,"ival-pow",7600],[2.107666015625,"ival-div",9200],[166.342529296875,"ival-add",0],[0.051025390625,"ival-sub",800],[580.971923828125,"ival-pow",4400],[5.947998046875,"ival-div",7600],[3.272216796875,"ival-pow",3200],[174.406982421875,"adjust",2800],[0.0,"exact",3600],[39.016845703125,"ival-div",2000],[0.0,"exact",6800],[1540.519287109375,"ival-pow",400],[382.70263671875,"ival-pow",2400],[0.0009765625,"ival-assert",800],[0.0439453125,"ival-div",6400],[0.057373046875,"ival-div",9600],[0.0,"exact",2800],[0.005126953125,"ival-sub",2000],[17.236328125,"ival-div",4400],[14.131591796875,"ival-div",8000],[0.0009765625,"ival-true",800],[1.2919921875,"ival-pow",7200],[0.0009765625,"ival-assert",2000],[0.023193359375,"ival-div",6800],[0.0068359375,"ival-add",3200],[2.05712890625,"ival-pow",6000],[0.02099609375,"ival-div",5600],[264.244384765625,"adjust",2000],[3.73291015625,"ival-pow",9600],[254.43017578125,"ival-pow",1200],[0.0,"exact",4400],[0.430419921875,"ival-add",2000],[36.669189453125,"ival-div",800],[15.95751953125,"exact",0],[26.7724609375,"ival-add",800]],"outcomes":[[1095.819091796875,1,"valid",2831],[209.76513671875,0,"exit",1545],[5.7939453125,3,"exit",3],[510.444580078125,1,"exit",2257],[35.474609375,4,"exit",9],[1780.45263671875,2,"valid",2822],[10207.881591796875,5,"exit",4875],[340.568603515625,0,"valid",2603],[7.223876953125,2,"exit",5]],"time":15624.1162109375,"type":"sample"},{"compiler":[[13,8],[36,10],[36,10]],"confusion":[[117,0,58,81]],"explanations":[["pow.f64","(pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) n))","sensitivity",70,0,[],[[1]]],["-.f64","(-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) n)) (pow.f64 x (/.f64 #s(literal 1 binary64) n)))","cancellation",105,0,[],[[]]]],"fperrors":[["(-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) n)) (pow.f64 x (/.f64 #s(literal 1 binary64) n)))",105,0,false,0,false],["(pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) n))",34,36,[3.7093735007517913e-140,-0.00036530757346956295],0,false],["(+.f64 x #s(literal 1 binary64))",0,0,false,0,false],["(pow.f64 x (/.f64 #s(literal 1 binary64) n))",0,0,false,0,false],["n",0,0,false,0,false],["(/.f64 #s(literal 1 binary64) n)",0,0,false,0,false],["#s(literal 1 binary64)",0,0,false,0,false],["x",0,0,false,0,false]],"freqs":[[1,175],[0,81]],"maybe-confusion":[[117,0,0,58,0,81]],"memory":[[5521648,63878784]],"mixsample":[[0.376953125,"ival-add",1200],[5.05908203125,"ival-div",0],[11.189697265625,"adjust",800],[0.9970703125,"ival-div",400],[45.18701171875,"ival-pow",1600],[0.935302734375,"ival-div",1600],[0.273681640625,"ival-assert",0],[6.103271484375,"ival-sub",0],[0.012939453125,"ival-sub",400],[36.0478515625,"ival-pow",0],[4.2265625,"adjust",2000],[0.912353515625,"ival-div",1200],[3.5458984375,"ival-add",0],[0.066162109375,"ival-add",1600],[1.3125,"ival-div",800],[0.745849609375,"ival-add",400],[0.630615234375,"ival-true",0],[0.26611328125,"ival-div",2000],[42.248779296875,"ival-pow",400],[0.409423828125,"exact",0],[0.829833984375,"ival-add",800],[0.146240234375,"ival-div",2400]],"outcomes":[[84.8564453125,1,"valid",240],[93.390380859375,2,"valid",160],[12.1064453125,0,"valid",112]],"time":274.536865234375,"total-confusion":[[1,0,0,0,0,0]],"type":"explain"},{"compiler":[[13,8]],"inputs":[["(-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) n)) (pow.f64 x (/.f64 #s(literal 1 binary64) n)))"]],"memory":[[-3336944,22002608]],"method":["egg-herbie"],"outputs":[["(-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) n)) (pow.f64 x (/.f64 #s(literal 1 binary64) n)))"]],"symmetry":[[]],"time":307.80712890625,"type":"preprocess"},{"compiler":[[0,2]],"memory":[[45904,45904]],"time":0.06982421875,"type":"eval"},{"alts":[["(-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) n)) (pow.f64 x (/.f64 #s(literal 1 binary64) n)))","next",26.379112794158548,"binary64"]],"compiler":[[13,8]],"memory":[[317888,317888]],"time":0.51513671875,"type":"prune"},{"inputs":[["(-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) n)) (pow.f64 x (/.f64 #s(literal 1 binary64) n)))","(pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) n))","(+.f64 x #s(literal 1 binary64))","x","#s(literal 1 binary64)","(/.f64 #s(literal 1 binary64) n)","n","(pow.f64 x (/.f64 #s(literal 1 binary64) n))"]],"locations":[["(/.f64 #s(literal 1 binary64) n)","cost-diff",0],["(+.f64 x #s(literal 1 binary64))","cost-diff",0],["(pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) n))","cost-diff",0],["(-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) n)) (pow.f64 x (/.f64 #s(literal 1 binary64) n)))","cost-diff",0]],"memory":[[1856448,9822048]],"method":["egg-herbie"],"outputs":[["(-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) n)) (pow.f64 x (/.f64 #s(literal 1 binary64) n)))","(pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) n))","(+.f64 x #s(literal 1 binary64))","x","#s(literal 1 binary64)","(/.f64 #s(literal 1 binary64) n)","n","(pow.f64 x (/.f64 #s(literal 1 binary64) n))"]],"time":153.076904296875,"type":"simplify"},{"compiler":[[36,10]],"locations":[["(/.f64 #s(literal 1 binary64) n)","accuracy",0.0],["(+.f64 x #s(literal 1 binary64))","accuracy",0.0],["(pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) n))","accuracy",7.987922753181943],["(-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) n)) (pow.f64 x (/.f64 #s(literal 1 binary64) n)))","accuracy",23.62068660141691]],"memory":[[-3761088,13845504]],"mixsample":[[0.1904296875,"ival-add",1200],[2.3876953125,"ival-div",0],[5.858154296875,"adjust",800],[0.509033203125,"ival-div",400],[23.528564453125,"ival-pow",1600],[0.4482421875,"ival-div",1600],[0.12744140625,"ival-assert",0],[3.094482421875,"ival-sub",0],[0.006103515625,"ival-sub",400],[18.903564453125,"ival-pow",0],[2.33349609375,"adjust",2000],[0.429931640625,"ival-div",1200],[2.86328125,"ival-add",0],[0.049072265625,"ival-add",1600],[0.76416015625,"ival-div",800],[0.483642578125,"ival-add",400],[0.291259765625,"ival-true",0],[0.1318359375,"ival-div",2000],[22.265625,"ival-pow",400],[0.20849609375,"exact",0],[0.45068359375,"ival-add",800],[0.076416015625,"ival-div",2400]],"outcomes":[[46.160400390625,1,"valid",120],[48.184814453125,2,"valid",80],[6.1962890625,0,"valid",56]],"time":111.137939453125,"type":"localize"},{"count":[[4,43]],"inputs":[["(-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) n)) (pow.f64 x (/.f64 #s(literal 1 binary64) n)))","(pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) n))","(+.f64 x #s(literal 1 binary64))","(/.f64 #s(literal 1 binary64) n)"]],"memory":[[3120208,3120208]],"outputs":[["(- 1 (exp (/ (log x) n)))","(- (+ 1 (/ x n)) (exp (/ (log x) n)))","(- (+ 1 (* x (+ (* x (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (/ 1 n)))) (exp (/ (log x) n)))","(- (+ 1 (* x (+ (* x (- (+ (* 1/2 (/ 1 (pow n 2))) (* x (- (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))) (* 1/2 (/ 1 (pow n 2)))))) (* 1/2 (/ 1 n)))) (/ 1 n)))) (exp (/ (log x) n)))","1","(+ 1 (/ x n))","(+ 1 (* x (+ (* x (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (/ 1 n))))","(+ 1 (* x (+ (* x (- (+ (* 1/2 (/ 1 (pow n 2))) (* x (- (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))) (* 1/2 (/ 1 (pow n 2)))))) (* 1/2 (/ 1 n)))) (/ 1 n))))","(+ 1 x)","(/ (exp (* -1 (/ (log (/ 1 x)) n))) (* n x))","(/ (+ (/ (exp (* -1 (/ (log (/ 1 x)) n))) n) (/ (* (exp (* -1 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) x)) x)","(/ (+ (/ (exp (* -1 (/ (log (/ 1 x)) n))) n) (+ (/ (* (exp (* -1 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) x) (/ (* (exp (* -1 (/ (log (/ 1 x)) n))) (- (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))) (* 1/2 (/ 1 (pow n 2))))) (pow x 2)))) x)","(/ (+ (/ (exp (* -1 (/ (log (/ 1 x)) n))) n) (+ (/ (* (exp (* -1 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) x) (+ (/ (* (exp (* -1 (/ (log (/ 1 x)) n))) (- (+ (* 1/24 (/ 1 (pow n 4))) (* 11/24 (/ 1 (pow n 2)))) (+ (* 1/4 (/ 1 n)) (* 1/4 (/ 1 (pow n 3)))))) (pow x 3)) (/ (* (exp (* -1 (/ (log (/ 1 x)) n))) (- (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))) (* 1/2 (/ 1 (pow n 2))))) (pow x 2))))) x)","(exp (* -1 (/ (log (/ 1 x)) n)))","(+ (exp (* -1 (/ (log (/ 1 x)) n))) (/ (exp (* -1 (/ (log (/ 1 x)) n))) (* n x)))","(+ (exp (* -1 (/ (log (/ 1 x)) n))) (+ (/ (exp (* -1 (/ (log (/ 1 x)) n))) (* n x)) (/ (* (exp (* -1 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (pow x 2))))","(+ (exp (* -1 (/ (log (/ 1 x)) n))) (+ (/ (exp (* -1 (/ (log (/ 1 x)) n))) (* n x)) (+ (/ (* (exp (* -1 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (pow x 2)) (/ (* (exp (* -1 (/ (log (/ 1 x)) n))) (- (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))) (* 1/2 (/ 1 (pow n 2))))) (pow x 3)))))","x","(* x (+ 1 (/ 1 x)))","(/ (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)) (* n x))","(* -1 (/ (+ (* -1 (/ (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)) n)) (* -1 (/ (* (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) x))) x))","(* -1 (/ (+ (* -1 (/ (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)) n)) (* -1 (/ (+ (* -1 (/ (* (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)) (- (* 1/2 (/ 1 (pow n 2))) (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))))) x)) (* (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n))))) x))) x))","(* -1 (/ (+ (* -1 (/ (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)) n)) (* -1 (/ (+ (* -1 (/ (+ (* -1 (/ (* (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)) (- (+ (* 1/24 (/ 1 (pow n 4))) (* 11/24 (/ 1 (pow n 2)))) (+ (* 1/4 (/ 1 n)) (* 1/4 (/ 1 (pow n 3)))))) x)) (* (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)) (- (* 1/2 (/ 1 (pow n 2))) (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n)))))) x)) (* (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n))))) x))) x))","(exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))","(+ (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)) (/ (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)) (* n x)))","(+ (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)) (* -1 (/ (+ (* -1 (/ (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)) n)) (* -1 (/ (* (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) x))) x)))","(+ (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)) (* -1 (/ (+ (* -1 (/ (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)) n)) (* -1 (/ (+ (* -1 (/ (* (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)) (- (* 1/2 (/ 1 (pow n 2))) (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))))) x)) (* (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n))))) x))) x)))","(- (exp (/ (log (+ 1 x)) n)) (exp (/ (log x) n)))","(exp (/ (log (+ 1 x)) n))","(/ 1 n)","(/ (- (log (+ 1 x)) (log x)) n)","(/ (- (+ (log (+ 1 x)) (* 1/2 (/ (pow (log (+ 1 x)) 2) n))) (+ (log x) (* 1/2 (/ (pow (log x) 2) n)))) n)","(/ (- (+ (log (+ 1 x)) (+ (* 1/6 (/ (pow (log (+ 1 x)) 3) (pow n 2))) (* 1/2 (/ (pow (log (+ 1 x)) 2) n)))) (+ (log x) (+ (* 1/6 (/ (pow (log x) 3) (pow n 2))) (* 1/2 (/ (pow (log x) 2) n))))) n)","(/ (- (+ (log (+ 1 x)) (+ (* 1/24 (/ (pow (log (+ 1 x)) 4) (pow n 3))) (+ (* 1/6 (/ (pow (log (+ 1 x)) 3) (pow n 2))) (* 1/2 (/ (pow (log (+ 1 x)) 2) n))))) (+ (log x) (+ (* 1/24 (/ (pow (log x) 4) (pow n 3))) (+ (* 1/6 (/ (pow (log x) 3) (pow n 2))) (* 1/2 (/ (pow (log x) 2) n)))))) n)","(+ 1 (/ (log (+ 1 x)) n))","(+ 1 (+ (* 1/2 (/ (pow (log (+ 1 x)) 2) (pow n 2))) (/ (log (+ 1 x)) n)))","(+ 1 (+ (* 1/6 (/ (pow (log (+ 1 x)) 3) (pow n 3))) (+ (* 1/2 (/ (pow (log (+ 1 x)) 2) (pow n 2))) (/ (log (+ 1 x)) n))))","(* -1 (/ (- (* -1 (log (+ 1 x))) (* -1 (log x))) n))","(* -1 (/ (- (+ (* -1 (log (+ 1 x))) (* -1 (/ (- (* 1/2 (pow (log (+ 1 x)) 2)) (* 1/2 (pow (log x) 2))) n))) (* -1 (log x))) n))","(* -1 (/ (- (+ (* -1 (log (+ 1 x))) (* -1 (/ (- (+ (* -1 (/ (- (* -1/6 (pow (log (+ 1 x)) 3)) (* -1/6 (pow (log x) 3))) n)) (* 1/2 (pow (log (+ 1 x)) 2))) (* 1/2 (pow (log x) 2))) n))) (* -1 (log x))) n))","(* -1 (/ (- (+ (* -1 (log (+ 1 x))) (* -1 (/ (- (+ (* -1 (/ (- (+ (* -1 (/ (- (* 1/24 (pow (log (+ 1 x)) 4)) (* 1/24 (pow (log x) 4))) n)) (* -1/6 (pow (log (+ 1 x)) 3))) (* -1/6 (pow (log x) 3))) n)) (* 1/2 (pow (log (+ 1 x)) 2))) (* 1/2 (pow (log x) 2))) n))) (* -1 (log x))) n))","(+ 1 (* -1 (/ (+ (* -1 (log (+ 1 x))) (* -1/2 (/ (pow (log (+ 1 x)) 2) n))) n)))","(+ 1 (* -1 (/ (+ (* -1 (log (+ 1 x))) (* -1 (/ (+ (* 1/6 (/ (pow (log (+ 1 x)) 3) n)) (* 1/2 (pow (log (+ 1 x)) 2))) n))) n)))"]],"series":[[1.231201171875,"((- (pow (+ x 1) (/ 1 n)) (pow x (/ 1 n))) (pow (+ x 1) (/ 1 n)) (+ x 1) (/ 1 n))","n","-inf"],[1.47412109375,"((- (pow (+ x 1) (/ 1 n)) (pow x (/ 1 n))) (pow (+ x 1) (/ 1 n)) (+ x 1) (/ 1 n))","n","inf"],[0.35595703125,"((- (pow (+ x 1) (/ 1 n)) (pow x (/ 1 n))) (pow (+ x 1) (/ 1 n)) (+ x 1) (/ 1 n))","n","0"],[2.316162109375,"((- (pow (+ x 1) (/ 1 n)) (pow x (/ 1 n))) (pow (+ x 1) (/ 1 n)) (+ x 1) (/ 1 n))","x","-inf"],[2.06103515625,"((- (pow (+ x 1) (/ 1 n)) (pow x (/ 1 n))) (pow (+ x 1) (/ 1 n)) (+ x 1) (/ 1 n))","x","inf"],[1.1728515625,"((- (pow (+ x 1) (/ 1 n)) (pow x (/ 1 n))) (pow (+ x 1) (/ 1 n)) (+ x 1) (/ 1 n))","x","0"]],"time":10.006103515625,"type":"series"},{"count":[[43,0]],"inputs":[["(- 1 (exp (/ (log x) n)))","(- (+ 1 (/ x n)) (exp (/ (log x) n)))","(- (+ 1 (* x (+ (* x (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (/ 1 n)))) (exp (/ (log x) n)))","(- (+ 1 (* x (+ (* x (- (+ (* 1/2 (/ 1 (pow n 2))) (* x (- (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))) (* 1/2 (/ 1 (pow n 2)))))) (* 1/2 (/ 1 n)))) (/ 1 n)))) (exp (/ (log x) n)))","1","(+ 1 (/ x n))","(+ 1 (* x (+ (* x (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (/ 1 n))))","(+ 1 (* x (+ (* x (- (+ (* 1/2 (/ 1 (pow n 2))) (* x (- (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))) (* 1/2 (/ 1 (pow n 2)))))) (* 1/2 (/ 1 n)))) (/ 1 n))))","(+ 1 x)","(/ (exp (* -1 (/ (log (/ 1 x)) n))) (* n x))","(/ (+ (/ (exp (* -1 (/ (log (/ 1 x)) n))) n) (/ (* (exp (* -1 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) x)) x)","(/ (+ (/ (exp (* -1 (/ (log (/ 1 x)) n))) n) (+ (/ (* (exp (* -1 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) x) (/ (* (exp (* -1 (/ (log (/ 1 x)) n))) (- (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))) (* 1/2 (/ 1 (pow n 2))))) (pow x 2)))) x)","(/ (+ (/ (exp (* -1 (/ (log (/ 1 x)) n))) n) (+ (/ (* (exp (* -1 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) x) (+ (/ (* (exp (* -1 (/ (log (/ 1 x)) n))) (- (+ (* 1/24 (/ 1 (pow n 4))) (* 11/24 (/ 1 (pow n 2)))) (+ (* 1/4 (/ 1 n)) (* 1/4 (/ 1 (pow n 3)))))) (pow x 3)) (/ (* (exp (* -1 (/ (log (/ 1 x)) n))) (- (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))) (* 1/2 (/ 1 (pow n 2))))) (pow x 2))))) x)","(exp (* -1 (/ (log (/ 1 x)) n)))","(+ (exp (* -1 (/ (log (/ 1 x)) n))) (/ (exp (* -1 (/ (log (/ 1 x)) n))) (* n x)))","(+ (exp (* -1 (/ (log (/ 1 x)) n))) (+ (/ (exp (* -1 (/ (log (/ 1 x)) n))) (* n x)) (/ (* (exp (* -1 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (pow x 2))))","(+ (exp (* -1 (/ (log (/ 1 x)) n))) (+ (/ (exp (* -1 (/ (log (/ 1 x)) n))) (* n x)) (+ (/ (* (exp (* -1 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (pow x 2)) (/ (* (exp (* -1 (/ (log (/ 1 x)) n))) (- (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))) (* 1/2 (/ 1 (pow n 2))))) (pow x 3)))))","x","(* x (+ 1 (/ 1 x)))","(/ (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)) (* n x))","(* -1 (/ (+ (* -1 (/ (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)) n)) (* -1 (/ (* (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) x))) x))","(* -1 (/ (+ (* -1 (/ (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)) n)) (* -1 (/ (+ (* -1 (/ (* (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)) (- (* 1/2 (/ 1 (pow n 2))) (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))))) x)) (* (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n))))) x))) x))","(* -1 (/ (+ (* -1 (/ (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)) n)) (* -1 (/ (+ (* -1 (/ (+ (* -1 (/ (* (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)) (- (+ (* 1/24 (/ 1 (pow n 4))) (* 11/24 (/ 1 (pow n 2)))) (+ (* 1/4 (/ 1 n)) (* 1/4 (/ 1 (pow n 3)))))) x)) (* (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)) (- (* 1/2 (/ 1 (pow n 2))) (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n)))))) x)) (* (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n))))) x))) x))","(exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))","(+ (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)) (/ (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)) (* n x)))","(+ (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)) (* -1 (/ (+ (* -1 (/ (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)) n)) (* -1 (/ (* (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) x))) x)))","(+ (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)) (* -1 (/ (+ (* -1 (/ (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)) n)) (* -1 (/ (+ (* -1 (/ (* (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)) (- (* 1/2 (/ 1 (pow n 2))) (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))))) x)) (* (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n))))) x))) x)))","(- (exp (/ (log (+ 1 x)) n)) (exp (/ (log x) n)))","(exp (/ (log (+ 1 x)) n))","(/ 1 n)","(/ (- (log (+ 1 x)) (log x)) n)","(/ (- (+ (log (+ 1 x)) (* 1/2 (/ (pow (log (+ 1 x)) 2) n))) (+ (log x) (* 1/2 (/ (pow (log x) 2) n)))) n)","(/ (- (+ (log (+ 1 x)) (+ (* 1/6 (/ (pow (log (+ 1 x)) 3) (pow n 2))) (* 1/2 (/ (pow (log (+ 1 x)) 2) n)))) (+ (log x) (+ (* 1/6 (/ (pow (log x) 3) (pow n 2))) (* 1/2 (/ (pow (log x) 2) n))))) n)","(/ (- (+ (log (+ 1 x)) (+ (* 1/24 (/ (pow (log (+ 1 x)) 4) (pow n 3))) (+ (* 1/6 (/ (pow (log (+ 1 x)) 3) (pow n 2))) (* 1/2 (/ (pow (log (+ 1 x)) 2) n))))) (+ (log x) (+ (* 1/24 (/ (pow (log x) 4) (pow n 3))) (+ (* 1/6 (/ (pow (log x) 3) (pow n 2))) (* 1/2 (/ (pow (log x) 2) n)))))) n)","(+ 1 (/ (log (+ 1 x)) n))","(+ 1 (+ (* 1/2 (/ (pow (log (+ 1 x)) 2) (pow n 2))) (/ (log (+ 1 x)) n)))","(+ 1 (+ (* 1/6 (/ (pow (log (+ 1 x)) 3) (pow n 3))) (+ (* 1/2 (/ (pow (log (+ 1 x)) 2) (pow n 2))) (/ (log (+ 1 x)) n))))","(* -1 (/ (- (* -1 (log (+ 1 x))) (* -1 (log x))) n))","(* -1 (/ (- (+ (* -1 (log (+ 1 x))) (* -1 (/ (- (* 1/2 (pow (log (+ 1 x)) 2)) (* 1/2 (pow (log x) 2))) n))) (* -1 (log x))) n))","(* -1 (/ (- (+ (* -1 (log (+ 1 x))) (* -1 (/ (- (+ (* -1 (/ (- (* -1/6 (pow (log (+ 1 x)) 3)) (* -1/6 (pow (log x) 3))) n)) (* 1/2 (pow (log (+ 1 x)) 2))) (* 1/2 (pow (log x) 2))) n))) (* -1 (log x))) n))","(* -1 (/ (- (+ (* -1 (log (+ 1 x))) (* -1 (/ (- (+ (* -1 (/ (- (+ (* -1 (/ (- (* 1/24 (pow (log (+ 1 x)) 4)) (* 1/24 (pow (log x) 4))) n)) (* -1/6 (pow (log (+ 1 x)) 3))) (* -1/6 (pow (log x) 3))) n)) (* 1/2 (pow (log (+ 1 x)) 2))) (* 1/2 (pow (log x) 2))) n))) (* -1 (log x))) n))","(+ 1 (* -1 (/ (+ (* -1 (log (+ 1 x))) (* -1/2 (/ (pow (log (+ 1 x)) 2) n))) n)))","(+ 1 (* -1 (/ (+ (* -1 (log (+ 1 x))) (* -1 (/ (+ (* 1/6 (/ (pow (log (+ 1 x)) 3) n)) (* 1/2 (pow (log (+ 1 x)) 2))) n))) n)))"]],"memory":[[1917120,9789952]],"method":["egg-herbie"],"outputs":[[]],"time":131.62109375,"type":"simplify"},{"count":[[4,60]],"inputs":[["(-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) n)) (pow.f64 x (/.f64 #s(literal 1 binary64) n)))","(pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) n))","(+.f64 x #s(literal 1 binary64))","(/.f64 #s(literal 1 binary64) n)"]],"memory":[[-5763920,19718464]],"outputs":[["(neg.f64 (/.f64 (-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n)) (pow.f64 x (/.f64 #s(literal 2 binary64) n))) (neg.f64 (+.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) n)) (pow.f64 x (/.f64 #s(literal 1 binary64) n))))))","(neg.f64 (/.f64 (neg.f64 (-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 3 binary64) n)) (pow.f64 x (/.f64 #s(literal 3 binary64) n)))) (+.f64 (+.f64 (pow.f64 x (/.f64 #s(literal 2 binary64) n)) (pow.f64 (fma.f64 x x x) (/.f64 #s(literal 1 binary64) n))) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n)))))","(neg.f64 (/.f64 (+.f64 (neg.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n))) (pow.f64 x (/.f64 #s(literal 2 binary64) n))) (+.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) n)) (pow.f64 x (/.f64 #s(literal 1 binary64) n)))))","(neg.f64 (/.f64 (-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 3 binary64) n)) (pow.f64 x (/.f64 #s(literal 3 binary64) n))) (neg.f64 (+.f64 (+.f64 (pow.f64 x (/.f64 #s(literal 2 binary64) n)) (pow.f64 (fma.f64 x x x) (/.f64 #s(literal 1 binary64) n))) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n))))))","(+.f64 (neg.f64 (pow.f64 x (/.f64 #s(literal 1 binary64) n))) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) n)))","(+.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) n)) (neg.f64 (pow.f64 x (/.f64 #s(literal 1 binary64) n))))","(+.f64 (/.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n)) (+.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) n)) (pow.f64 x (/.f64 #s(literal 1 binary64) n)))) (neg.f64 (/.f64 (pow.f64 x (/.f64 #s(literal 2 binary64) n)) (+.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) n)) (pow.f64 x (/.f64 #s(literal 1 binary64) n))))))","(+.f64 (/.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 3 binary64) n)) (+.f64 (+.f64 (pow.f64 x (/.f64 #s(literal 2 binary64) n)) (pow.f64 (fma.f64 x x x) (/.f64 #s(literal 1 binary64) n))) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n)))) (neg.f64 (/.f64 (pow.f64 x (/.f64 #s(literal 3 binary64) n)) (+.f64 (+.f64 (pow.f64 x (/.f64 #s(literal 2 binary64) n)) (pow.f64 (fma.f64 x x x) (/.f64 #s(literal 1 binary64) n))) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n))))))","(-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) n)) (pow.f64 x (/.f64 #s(literal 1 binary64) n)))","(-.f64 (+.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) n)) #s(literal 0 binary64)) (pow.f64 x (/.f64 #s(literal 1 binary64) n)))","(-.f64 #s(literal 0 binary64) (-.f64 (pow.f64 x (/.f64 #s(literal 1 binary64) n)) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) n))))","(-.f64 (/.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n)) (+.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) n)) (pow.f64 x (/.f64 #s(literal 1 binary64) n)))) (/.f64 (pow.f64 x (/.f64 #s(literal 2 binary64) n)) (+.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) n)) (pow.f64 x (/.f64 #s(literal 1 binary64) n)))))","(-.f64 (/.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 3 binary64) n)) (+.f64 (+.f64 (pow.f64 x (/.f64 #s(literal 2 binary64) n)) (pow.f64 (fma.f64 x x x) (/.f64 #s(literal 1 binary64) n))) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n)))) (/.f64 (pow.f64 x (/.f64 #s(literal 3 binary64) n)) (+.f64 (+.f64 (pow.f64 x (/.f64 #s(literal 2 binary64) n)) (pow.f64 (fma.f64 x x x) (/.f64 #s(literal 1 binary64) n))) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n)))))","(*.f64 #s(literal 1 binary64) (-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) n)) (pow.f64 x (/.f64 #s(literal 1 binary64) n))))","(*.f64 (+.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal -1 binary64) (*.f64 #s(literal -2 binary64) n))) (pow.f64 x (/.f64 #s(literal -1 binary64) (*.f64 #s(literal -2 binary64) n)))) (-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal -1 binary64) (*.f64 #s(literal -2 binary64) n))) (pow.f64 x (/.f64 #s(literal -1 binary64) (*.f64 #s(literal -2 binary64) n)))))","(*.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal -1 binary64) (*.f64 #s(literal -2 binary64) n))) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal -1 binary64) (*.f64 #s(literal -2 binary64) n))))","(*.f64 (pow.f64 (fma.f64 x x #s(literal -1 binary64)) (/.f64 #s(literal 2 binary64) (*.f64 n #s(literal 2 binary64)))) (pow.f64 (/.f64 #s(literal -1 binary64) (-.f64 #s(literal 1 binary64) x)) (/.f64 #s(literal 2 binary64) (*.f64 n #s(literal 2 binary64)))))","(*.f64 (pow.f64 (fma.f64 x x #s(literal -1 binary64)) (/.f64 #s(literal 1 binary64) n)) (pow.f64 (/.f64 #s(literal -1 binary64) (-.f64 #s(literal 1 binary64) x)) (/.f64 #s(literal 1 binary64) n)))","(*.f64 (*.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal -1 binary64) (*.f64 #s(literal -2 binary64) n))) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal -1 binary64) (*.f64 #s(literal 2 binary64) (*.f64 #s(literal -2 binary64) n))))) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal -1 binary64) (*.f64 #s(literal 2 binary64) (*.f64 #s(literal -2 binary64) n)))))","(*.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 (/.f64 #s(literal 2 binary64) (*.f64 n #s(literal 2 binary64))) #s(literal 2 binary64))) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 (/.f64 #s(literal 2 binary64) (*.f64 n #s(literal 2 binary64))) #s(literal 2 binary64))))","(*.f64 (pow.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal -1 binary64) (*.f64 #s(literal -2 binary64) n))) (/.f64 #s(literal 2 binary64) #s(literal 2 binary64))) (pow.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal -1 binary64) (*.f64 #s(literal -2 binary64) n))) (/.f64 #s(literal 2 binary64) #s(literal 2 binary64))))","(*.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal -1 binary64) (*.f64 #s(literal 2 binary64) (*.f64 #s(literal -2 binary64) n)))) (*.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal -1 binary64) (*.f64 #s(literal 2 binary64) (*.f64 #s(literal -2 binary64) n)))) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal -1 binary64) (*.f64 #s(literal -2 binary64) n)))))","(*.f64 (pow.f64 (fma.f64 (*.f64 x x) x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) (*.f64 n #s(literal 2 binary64)))) (pow.f64 (/.f64 #s(literal 1 binary64) (fma.f64 x (+.f64 x #s(literal -1 binary64)) #s(literal 1 binary64))) (/.f64 #s(literal 2 binary64) (*.f64 n #s(literal 2 binary64)))))","(*.f64 (pow.f64 (fma.f64 (*.f64 x x) x #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) n)) (pow.f64 (/.f64 #s(literal 1 binary64) (fma.f64 x (+.f64 x #s(literal -1 binary64)) #s(literal 1 binary64))) (/.f64 #s(literal 1 binary64) n)))","(/.f64 #s(literal 1 binary64) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal -1 binary64) n)))","(exp.f64 (/.f64 (log1p.f64 x) n))","(exp.f64 (*.f64 (log1p.f64 x) (/.f64 #s(literal 2 binary64) (*.f64 n #s(literal 2 binary64)))))","(exp.f64 (*.f64 (/.f64 (log1p.f64 x) (*.f64 n #s(literal 2 binary64))) #s(literal 2 binary64)))","(exp.f64 (+.f64 (/.f64 (log1p.f64 x) (*.f64 n #s(literal 2 binary64))) (/.f64 (log1p.f64 x) (*.f64 n #s(literal 2 binary64)))))","(exp.f64 (*.f64 (log.f64 (*.f64 (+.f64 x #s(literal 1 binary64)) (+.f64 x #s(literal 1 binary64)))) (/.f64 #s(literal -1 binary64) (*.f64 #s(literal -2 binary64) n))))","(neg.f64 (/.f64 (fma.f64 x x #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) x)))","(neg.f64 (/.f64 (neg.f64 (fma.f64 x x #s(literal -1 binary64))) (+.f64 x #s(literal -1 binary64))))","(neg.f64 (/.f64 (fma.f64 (*.f64 x x) x #s(literal 1 binary64)) (neg.f64 (fma.f64 x (+.f64 x #s(literal -1 binary64)) #s(literal 1 binary64)))))","(neg.f64 (/.f64 (neg.f64 (fma.f64 (*.f64 x x) x #s(literal 1 binary64))) (fma.f64 x (+.f64 x #s(literal -1 binary64)) #s(literal 1 binary64))))","(+.f64 x #s(literal 1 binary64))","(+.f64 #s(literal 1 binary64) x)","(+.f64 (/.f64 (*.f64 x x) (+.f64 x #s(literal -1 binary64))) (neg.f64 (/.f64 #s(literal -1 binary64) (-.f64 #s(literal 1 binary64) x))))","(-.f64 (/.f64 (*.f64 x x) (+.f64 x #s(literal -1 binary64))) (/.f64 #s(literal -1 binary64) (-.f64 #s(literal 1 binary64) x)))","(-.f64 (/.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) x)) (/.f64 (*.f64 x x) (-.f64 #s(literal 1 binary64) x)))","(*.f64 (+.f64 x #s(literal 1 binary64)) #s(literal 1 binary64))","(*.f64 #s(literal 1 binary64) (+.f64 x #s(literal 1 binary64)))","(*.f64 (neg.f64 (fma.f64 x x #s(literal -1 binary64))) (/.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) x)))","(*.f64 (/.f64 (fma.f64 x x #s(literal -1 binary64)) (fma.f64 x x #s(literal -1 binary64))) (+.f64 x #s(literal 1 binary64)))","(*.f64 (/.f64 #s(literal -1 binary64) (-.f64 #s(literal 1 binary64) x)) (fma.f64 x x #s(literal -1 binary64)))","(*.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) #s(literal 2 binary64))) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) #s(literal 2 binary64))))","(neg.f64 (/.f64 #s(literal -1 binary64) n))","(-.f64 #s(literal 0 binary64) (/.f64 #s(literal -1 binary64) n))","(-.f64 (/.f64 #s(literal 0 binary64) (neg.f64 n)) (/.f64 #s(literal -1 binary64) n))","(*.f64 (/.f64 #s(literal 1 binary64) #s(literal -1 binary64)) (/.f64 #s(literal -1 binary64) n))","(*.f64 (/.f64 #s(literal -1 binary64) n) #s(literal -1 binary64))","(*.f64 (/.f64 #s(literal 1 binary64) n) #s(literal 1 binary64))","(*.f64 #s(literal -1 binary64) (/.f64 #s(literal -1 binary64) n))","(*.f64 #s(literal 1 binary64) (/.f64 #s(literal 1 binary64) n))","(*.f64 (pow.f64 n (/.f64 #s(literal -1 binary64) #s(literal 2 binary64))) (pow.f64 n (/.f64 #s(literal -1 binary64) #s(literal 2 binary64))))","(*.f64 (*.f64 #s(literal 1 binary64) (pow.f64 n (/.f64 #s(literal -1 binary64) #s(literal 2 binary64)))) (*.f64 #s(literal 1 binary64) (pow.f64 n (/.f64 #s(literal -1 binary64) #s(literal 2 binary64)))))","(*.f64 (*.f64 #s(literal 1 binary64) (pow.f64 n (/.f64 #s(literal -1 binary64) #s(literal 2 binary64)))) (pow.f64 n (/.f64 #s(literal -1 binary64) #s(literal 2 binary64))))","(*.f64 (*.f64 (pow.f64 n (/.f64 #s(literal -1 binary64) #s(literal 2 binary64))) #s(literal 1 binary64)) (*.f64 (pow.f64 n (/.f64 #s(literal -1 binary64) #s(literal 2 binary64))) #s(literal 1 binary64)))","(*.f64 (pow.f64 n (/.f64 #s(literal -1 binary64) #s(literal 2 binary64))) (*.f64 (pow.f64 n (/.f64 #s(literal -1 binary64) #s(literal 2 binary64))) #s(literal 1 binary64)))","(/.f64 #s(literal 1 binary64) n)","(/.f64 (/.f64 #s(literal 1 binary64) n) #s(literal 1 binary64))"]],"time":346.135986328125,"type":"rewrite"},{"compiler":[[1675,265]],"memory":[[7036032,7036032]],"time":8.85986328125,"type":"eval"},{"alts":[["(-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) n)) (pow.f64 x (/.f64 #s(literal 1 binary64) n)))","done",26.379112794158548,"binary64"],["(-.f64 (/.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 3 binary64) n)) (+.f64 (+.f64 (pow.f64 x (/.f64 #s(literal 2 binary64) n)) (pow.f64 (fma.f64 x x x) (/.f64 #s(literal 1 binary64) n))) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n)))) (/.f64 (pow.f64 x (/.f64 #s(literal 3 binary64) n)) (+.f64 (+.f64 (pow.f64 x (/.f64 #s(literal 2 binary64) n)) (pow.f64 (fma.f64 x x x) (/.f64 #s(literal 1 binary64) n))) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n)))))","fresh",47.110819177826635,"binary64"],["(-.f64 (/.f64 #s(literal 1 binary64) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal -1 binary64) n))) (pow.f64 x (/.f64 #s(literal 1 binary64) n)))","next",26.372546347291255,"binary64"],["(-.f64 (*.f64 (pow.f64 (fma.f64 x x #s(literal -1 binary64)) (/.f64 #s(literal 1 binary64) n)) (pow.f64 (/.f64 #s(literal -1 binary64) (-.f64 #s(literal 1 binary64) x)) (/.f64 #s(literal 1 binary64) n))) (pow.f64 x (/.f64 #s(literal 1 binary64) n)))","next",48.040867596378874,"binary64"],["(-.f64 (exp.f64 (/.f64 (log1p.f64 x) n)) (pow.f64 x (/.f64 #s(literal 1 binary64) n)))","next",23.62068660141691,"binary64"],["(*.f64 (+.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal -1 binary64) (*.f64 #s(literal -2 binary64) n))) (pow.f64 x (/.f64 #s(literal -1 binary64) (*.f64 #s(literal -2 binary64) n)))) (-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal -1 binary64) (*.f64 #s(literal -2 binary64) n))) (pow.f64 x (/.f64 #s(literal -1 binary64) (*.f64 #s(literal -2 binary64) n)))))","next",26.382971987288293,"binary64"],["(neg.f64 (/.f64 (-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 3 binary64) n)) (pow.f64 x (/.f64 #s(literal 3 binary64) n))) (neg.f64 (+.f64 (+.f64 (pow.f64 x (/.f64 #s(literal 2 binary64) n)) (pow.f64 (fma.f64 x x x) (/.f64 #s(literal 1 binary64) n))) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n))))))","fresh",47.071010483381436,"binary64"],["(neg.f64 (/.f64 (-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n)) (pow.f64 x (/.f64 #s(literal 2 binary64) n))) (neg.f64 (+.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) n)) (pow.f64 x (/.f64 #s(literal 1 binary64) n))))))","next",47.117247739693944,"binary64"]],"compiler":[[13,8],[59,20],[15,11],[24,13],[11,9],[35,13],[38,21],[29,16],[59,20],[15,11],[24,13],[11,9],[35,13],[38,21],[29,16]],"count":[[76,8]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[75,7],"picked":[1,1]}],"memory":[[-1651856,6422976]],"min-error":[[23.538422361408557,"binary64"]],"time":11.3740234375,"type":"prune"},{"inputs":[["(-.f64 (exp.f64 (/.f64 (log1p.f64 x) n)) (pow.f64 x (/.f64 #s(literal 1 binary64) n)))","(exp.f64 (/.f64 (log1p.f64 x) n))","(/.f64 (log1p.f64 x) n)","(log1p.f64 x)","x","n","(pow.f64 x (/.f64 #s(literal 1 binary64) n))","(/.f64 #s(literal 1 binary64) n)","#s(literal 1 binary64)","(-.f64 (/.f64 #s(literal 1 binary64) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal -1 binary64) n))) (pow.f64 x (/.f64 #s(literal 1 binary64) n)))","(/.f64 #s(literal 1 binary64) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal -1 binary64) n)))","#s(literal 1 binary64)","(pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal -1 binary64) n))","(+.f64 x #s(literal 1 binary64))","x","(/.f64 #s(literal -1 binary64) n)","#s(literal -1 binary64)","n","(pow.f64 x (/.f64 #s(literal 1 binary64) n))","(/.f64 #s(literal 1 binary64) n)","(-.f64 (*.f64 (pow.f64 (fma.f64 x x #s(literal -1 binary64)) (/.f64 #s(literal 1 binary64) n)) (pow.f64 (/.f64 #s(literal -1 binary64) (-.f64 #s(literal 1 binary64) x)) (/.f64 #s(literal 1 binary64) n))) (pow.f64 x (/.f64 #s(literal 1 binary64) n)))","(*.f64 (pow.f64 (fma.f64 x x #s(literal -1 binary64)) (/.f64 #s(literal 1 binary64) n)) (pow.f64 (/.f64 #s(literal -1 binary64) (-.f64 #s(literal 1 binary64) x)) (/.f64 #s(literal 1 binary64) n)))","(pow.f64 (fma.f64 x x #s(literal -1 binary64)) (/.f64 #s(literal 1 binary64) n))","(fma.f64 x x #s(literal -1 binary64))","x","#s(literal -1 binary64)","(/.f64 #s(literal 1 binary64) n)","#s(literal 1 binary64)","n","(pow.f64 (/.f64 #s(literal -1 binary64) (-.f64 #s(literal 1 binary64) x)) (/.f64 #s(literal 1 binary64) n))","(/.f64 #s(literal -1 binary64) (-.f64 #s(literal 1 binary64) x))","(-.f64 #s(literal 1 binary64) x)","(pow.f64 x (/.f64 #s(literal 1 binary64) n))","(neg.f64 (/.f64 (-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n)) (pow.f64 x (/.f64 #s(literal 2 binary64) n))) (neg.f64 (+.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) n)) (pow.f64 x (/.f64 #s(literal 1 binary64) n))))))","(/.f64 (-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n)) (pow.f64 x (/.f64 #s(literal 2 binary64) n))) (neg.f64 (+.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) n)) (pow.f64 x (/.f64 #s(literal 1 binary64) n)))))","(-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n)) (pow.f64 x (/.f64 #s(literal 2 binary64) n)))","(pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n))","(+.f64 x #s(literal 1 binary64))","x","#s(literal 1 binary64)","(/.f64 #s(literal 2 binary64) n)","#s(literal 2 binary64)","n","(pow.f64 x (/.f64 #s(literal 2 binary64) n))","(neg.f64 (+.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) n)) (pow.f64 x (/.f64 #s(literal 1 binary64) n))))","(+.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) n)) (pow.f64 x (/.f64 #s(literal 1 binary64) n)))","(pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) n))","(/.f64 #s(literal 1 binary64) n)","(pow.f64 x (/.f64 #s(literal 1 binary64) n))","(*.f64 (+.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal -1 binary64) (*.f64 #s(literal -2 binary64) n))) (pow.f64 x (/.f64 #s(literal -1 binary64) (*.f64 #s(literal -2 binary64) n)))) (-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal -1 binary64) (*.f64 #s(literal -2 binary64) n))) (pow.f64 x (/.f64 #s(literal -1 binary64) (*.f64 #s(literal -2 binary64) n)))))","(+.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal -1 binary64) (*.f64 #s(literal -2 binary64) n))) (pow.f64 x (/.f64 #s(literal -1 binary64) (*.f64 #s(literal -2 binary64) n))))","(pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal -1 binary64) (*.f64 #s(literal -2 binary64) n)))","(+.f64 x #s(literal 1 binary64))","x","#s(literal 1 binary64)","(/.f64 #s(literal -1 binary64) (*.f64 #s(literal -2 binary64) n))","#s(literal -1 binary64)","(*.f64 #s(literal -2 binary64) n)","#s(literal -2 binary64)","n","(pow.f64 x (/.f64 #s(literal -1 binary64) (*.f64 #s(literal -2 binary64) n)))","(-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal -1 binary64) (*.f64 #s(literal -2 binary64) n))) (pow.f64 x (/.f64 #s(literal -1 binary64) (*.f64 #s(literal -2 binary64) n))))"]],"locations":[["(+.f64 x #s(literal 1 binary64))","cost-diff",0],["(pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal -1 binary64) (*.f64 #s(literal -2 binary64) n)))","cost-diff",0],["(+.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal -1 binary64) (*.f64 #s(literal -2 binary64) n))) (pow.f64 x (/.f64 #s(literal -1 binary64) (*.f64 #s(literal -2 binary64) n))))","cost-diff",0],["(*.f64 (+.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal -1 binary64) (*.f64 #s(literal -2 binary64) n))) (pow.f64 x (/.f64 #s(literal -1 binary64) (*.f64 #s(literal -2 binary64) n)))) (-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal -1 binary64) (*.f64 #s(literal -2 binary64) n))) (pow.f64 x (/.f64 #s(literal -1 binary64) (*.f64 #s(literal -2 binary64) n)))))","cost-diff",0],["(pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n))","cost-diff",0],["(-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n)) (pow.f64 x (/.f64 #s(literal 2 binary64) n)))","cost-diff",0],["(/.f64 (-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n)) (pow.f64 x (/.f64 #s(literal 2 binary64) n))) (neg.f64 (+.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) n)) (pow.f64 x (/.f64 #s(literal 1 binary64) n)))))","cost-diff",1],["(neg.f64 (/.f64 (-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n)) (pow.f64 x (/.f64 #s(literal 2 binary64) n))) (neg.f64 (+.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) n)) (pow.f64 x (/.f64 #s(literal 1 binary64) n))))))","cost-diff",1],["(fma.f64 x x #s(literal -1 binary64))","cost-diff",0],["(pow.f64 (fma.f64 x x #s(literal -1 binary64)) (/.f64 #s(literal 1 binary64) n))","cost-diff",0],["(*.f64 (pow.f64 (fma.f64 x x #s(literal -1 binary64)) (/.f64 #s(literal 1 binary64) n)) (pow.f64 (/.f64 #s(literal -1 binary64) (-.f64 #s(literal 1 binary64) x)) (/.f64 #s(literal 1 binary64) n)))","cost-diff",0],["(-.f64 (*.f64 (pow.f64 (fma.f64 x x #s(literal -1 binary64)) (/.f64 #s(literal 1 binary64) n)) (pow.f64 (/.f64 #s(literal -1 binary64) (-.f64 #s(literal 1 binary64) x)) (/.f64 #s(literal 1 binary64) n))) (pow.f64 x (/.f64 #s(literal 1 binary64) n)))","cost-diff",0],["(+.f64 x #s(literal 1 binary64))","cost-diff",0],["(pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal -1 binary64) n))","cost-diff",0],["(/.f64 #s(literal 1 binary64) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal -1 binary64) n)))","cost-diff",0],["(-.f64 (/.f64 #s(literal 1 binary64) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal -1 binary64) n))) (pow.f64 x (/.f64 #s(literal 1 binary64) n)))","cost-diff",0],["(log1p.f64 x)","cost-diff",0],["(/.f64 (log1p.f64 x) n)","cost-diff",0],["(exp.f64 (/.f64 (log1p.f64 x) n))","cost-diff",0],["(-.f64 (exp.f64 (/.f64 (log1p.f64 x) n)) (pow.f64 x (/.f64 #s(literal 1 binary64) n)))","cost-diff",0]],"memory":[[-2193216,15133712]],"method":["egg-herbie"],"outputs":[["(-.f64 (exp.f64 (/.f64 (log1p.f64 x) n)) (pow.f64 x (/.f64 #s(literal 1 binary64) n)))","(exp.f64 (/.f64 (log1p.f64 x) n))","(/.f64 (log1p.f64 x) n)","(log1p.f64 x)","x","n","(pow.f64 x (/.f64 #s(literal 1 binary64) n))","(/.f64 #s(literal 1 binary64) n)","#s(literal 1 binary64)","(-.f64 (/.f64 #s(literal 1 binary64) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal -1 binary64) n))) (pow.f64 x (/.f64 #s(literal 1 binary64) n)))","(/.f64 #s(literal 1 binary64) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal -1 binary64) n)))","#s(literal 1 binary64)","(pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal -1 binary64) n))","(+.f64 x #s(literal 1 binary64))","x","(/.f64 #s(literal -1 binary64) n)","#s(literal -1 binary64)","n","(pow.f64 x (/.f64 #s(literal 1 binary64) n))","(/.f64 #s(literal 1 binary64) n)","(-.f64 (*.f64 (pow.f64 (fma.f64 x x #s(literal -1 binary64)) (/.f64 #s(literal 1 binary64) n)) (pow.f64 (/.f64 #s(literal -1 binary64) (-.f64 #s(literal 1 binary64) x)) (/.f64 #s(literal 1 binary64) n))) (pow.f64 x (/.f64 #s(literal 1 binary64) n)))","(fma.f64 (pow.f64 (/.f64 #s(literal -1 binary64) (-.f64 #s(literal 1 binary64) x)) (/.f64 #s(literal 1 binary64) n)) (pow.f64 (fma.f64 x x #s(literal -1 binary64)) (/.f64 #s(literal 1 binary64) n)) (neg.f64 (pow.f64 x (/.f64 #s(literal 1 binary64) n))))","(*.f64 (pow.f64 (fma.f64 x x #s(literal -1 binary64)) (/.f64 #s(literal 1 binary64) n)) (pow.f64 (/.f64 #s(literal -1 binary64) (-.f64 #s(literal 1 binary64) x)) (/.f64 #s(literal 1 binary64) n)))","(pow.f64 (fma.f64 x x #s(literal -1 binary64)) (/.f64 #s(literal 1 binary64) n))","(fma.f64 x x #s(literal -1 binary64))","x","#s(literal -1 binary64)","(/.f64 #s(literal 1 binary64) n)","#s(literal 1 binary64)","n","(pow.f64 (/.f64 #s(literal -1 binary64) (-.f64 #s(literal 1 binary64) x)) (/.f64 #s(literal 1 binary64) n))","(/.f64 #s(literal -1 binary64) (-.f64 #s(literal 1 binary64) x))","(-.f64 #s(literal 1 binary64) x)","(pow.f64 x (/.f64 #s(literal 1 binary64) n))","(neg.f64 (/.f64 (-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n)) (pow.f64 x (/.f64 #s(literal 2 binary64) n))) (neg.f64 (+.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) n)) (pow.f64 x (/.f64 #s(literal 1 binary64) n))))))","(/.f64 (-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n)) (pow.f64 x (/.f64 #s(literal 2 binary64) n))) (+.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) n)) (pow.f64 x (/.f64 #s(literal 1 binary64) n))))","(/.f64 (-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n)) (pow.f64 x (/.f64 #s(literal 2 binary64) n))) (neg.f64 (+.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) n)) (pow.f64 x (/.f64 #s(literal 1 binary64) n)))))","(/.f64 (-.f64 (pow.f64 x (/.f64 #s(literal 2 binary64) n)) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n))) (+.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) n)) (pow.f64 x (/.f64 #s(literal 1 binary64) n))))","(-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n)) (pow.f64 x (/.f64 #s(literal 2 binary64) n)))","(pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n))","(+.f64 x #s(literal 1 binary64))","x","#s(literal 1 binary64)","(/.f64 #s(literal 2 binary64) n)","#s(literal 2 binary64)","n","(pow.f64 x (/.f64 #s(literal 2 binary64) n))","(neg.f64 (+.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) n)) (pow.f64 x (/.f64 #s(literal 1 binary64) n))))","(-.f64 (neg.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) n))) (pow.f64 x (/.f64 #s(literal 1 binary64) n)))","(+.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) n)) (pow.f64 x (/.f64 #s(literal 1 binary64) n)))","(pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) n))","(/.f64 #s(literal 1 binary64) n)","(pow.f64 x (/.f64 #s(literal 1 binary64) n))","(*.f64 (+.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal -1 binary64) (*.f64 #s(literal -2 binary64) n))) (pow.f64 x (/.f64 #s(literal -1 binary64) (*.f64 #s(literal -2 binary64) n)))) (-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal -1 binary64) (*.f64 #s(literal -2 binary64) n))) (pow.f64 x (/.f64 #s(literal -1 binary64) (*.f64 #s(literal -2 binary64) n)))))","(+.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal -1 binary64) (*.f64 #s(literal -2 binary64) n))) (pow.f64 x (/.f64 #s(literal -1 binary64) (*.f64 #s(literal -2 binary64) n))))","(pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal -1 binary64) (*.f64 #s(literal -2 binary64) n)))","(+.f64 x #s(literal 1 binary64))","x","#s(literal 1 binary64)","(/.f64 #s(literal -1 binary64) (*.f64 #s(literal -2 binary64) n))","#s(literal -1 binary64)","(*.f64 #s(literal -2 binary64) n)","#s(literal -2 binary64)","n","(pow.f64 x (/.f64 #s(literal -1 binary64) (*.f64 #s(literal -2 binary64) n)))","(-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal -1 binary64) (*.f64 #s(literal -2 binary64) n))) (pow.f64 x (/.f64 #s(literal -1 binary64) (*.f64 #s(literal -2 binary64) n))))"]],"time":302.12109375,"type":"simplify"},{"compiler":[[414,43]],"locations":[["(+.f64 x #s(literal 1 binary64))","accuracy",0.0],["(*.f64 #s(literal -2 binary64) n)","accuracy",0.0],["(*.f64 (+.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal -1 binary64) (*.f64 #s(literal -2 binary64) n))) (pow.f64 x (/.f64 #s(literal -1 binary64) (*.f64 #s(literal -2 binary64) n)))) (-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal -1 binary64) (*.f64 #s(literal -2 binary64) n))) (pow.f64 x (/.f64 #s(literal -1 binary64) (*.f64 #s(literal -2 binary64) n)))))","accuracy",0.015625],["(-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal -1 binary64) (*.f64 #s(literal -2 binary64) n))) (pow.f64 x (/.f64 #s(literal -1 binary64) (*.f64 #s(literal -2 binary64) n))))","accuracy",8.50786920240679],["(neg.f64 (/.f64 (-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n)) (pow.f64 x (/.f64 #s(literal 2 binary64) n))) (neg.f64 (+.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) n)) (pow.f64 x (/.f64 #s(literal 1 binary64) n))))))","accuracy",0.0],["(neg.f64 (+.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) n)) (pow.f64 x (/.f64 #s(literal 1 binary64) n))))","accuracy",0.0],["(/.f64 (-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n)) (pow.f64 x (/.f64 #s(literal 2 binary64) n))) (neg.f64 (+.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) n)) (pow.f64 x (/.f64 #s(literal 1 binary64) n)))))","accuracy",0.01171875],["(-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n)) (pow.f64 x (/.f64 #s(literal 2 binary64) n)))","accuracy",8.549998274395007],["(-.f64 #s(literal 1 binary64) x)","accuracy",0.0],["(*.f64 (pow.f64 (fma.f64 x x #s(literal -1 binary64)) (/.f64 #s(literal 1 binary64) n)) (pow.f64 (/.f64 #s(literal -1 binary64) (-.f64 #s(literal 1 binary64) x)) (/.f64 #s(literal 1 binary64) n)))","accuracy",0.0078125],["(-.f64 (*.f64 (pow.f64 (fma.f64 x x #s(literal -1 binary64)) (/.f64 #s(literal 1 binary64) n)) (pow.f64 (/.f64 #s(literal -1 binary64) (-.f64 #s(literal 1 binary64) x)) (/.f64 #s(literal 1 binary64) n))) (pow.f64 x (/.f64 #s(literal 1 binary64) n)))","accuracy",8.528957050577139],["(pow.f64 (fma.f64 x x #s(literal -1 binary64)) (/.f64 #s(literal 1 binary64) n))","accuracy",9.203031395725276],["(/.f64 #s(literal -1 binary64) n)","accuracy",0.0],["(+.f64 x #s(literal 1 binary64))","accuracy",0.0],["(/.f64 #s(literal 1 binary64) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal -1 binary64) n)))","accuracy",0.00390625],["(-.f64 (/.f64 #s(literal 1 binary64) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal -1 binary64) n))) (pow.f64 x (/.f64 #s(literal 1 binary64) n)))","accuracy",8.528957050577139],["(log1p.f64 x)","accuracy",0.0],["(exp.f64 (/.f64 (log1p.f64 x) n))","accuracy",0.0],["(/.f64 (log1p.f64 x) n)","accuracy",0.078125],["(-.f64 (exp.f64 (/.f64 (log1p.f64 x) n)) (pow.f64 x (/.f64 #s(literal 1 binary64) n)))","accuracy",8.528957050577139]],"memory":[[6949184,95253072]],"mixsample":[[22.987060546875,"adjust",800],[3.99072265625,"ival-exp",0],[0.31591796875,"ival-mult",1200],[23.57080078125,"ival-pow",2800],[12.144287109375,"adjust",4000],[0.011962890625,"ival-neg",800],[0.27099609375,"ival-exp",4000],[0.276123046875,"ival-mult",4400],[0.25048828125,"ival-sub",400],[2.9638671875,"ival-log1p",800],[1.63037109375,"ival-log1p",1200],[0.0009765625,"exact",2000],[0.112060546875,"ival-exp",2000],[1.972412109375,"ival-mult",800],[0.63330078125,"ival-mult",4800],[0.58984375,"ival-add",400],[4.650146484375,"ival-exp",1600],[1.774169921875,"ival-div",4000],[0.201171875,"ival-mult",2400],[0.026611328125,"ival-add",2400],[0.005859375,"exact",4800],[0.01513671875,"ival-neg",4000],[0.727783203125,"ival-div",2400],[0.428466796875,"ival-add",1200],[0.190185546875,"ival-div",8400],[0.752197265625,"ival-mult",2000],[0.353515625,"ival-mult",2800],[52.812744140625,"ival-pow",2000],[0.64501953125,"ival-log1p",1600],[0.030029296875,"ival-add",4000],[0.060791015625,"ival-div",3200],[0.110107421875,"ival-div",2800],[0.0009765625,"ival-true",4000],[2.198486328125,"ival-div",1200],[2.273681640625,"ival-mult",400],[0.204833984375,"ival-add",1600],[0.069091796875,"ival-div",8800],[43.255615234375,"ival-pow",4800],[0.45166015625,"ival-true",0],[0.0078125,"ival-div",3600],[70.7919921875,"ival-pow",4000],[0.20654296875,"ival-sub",1200],[21.55810546875,"ival-div",0],[0.001953125,"exact",4000],[11.541748046875,"adjust",4800],[3.859619140625,"ival-div",400],[0.318115234375,"ival-sub",1600],[0.0,"ival-assert",4000],[99.351318359375,"ival-pow",1600],[0.1640625,"ival-assert",0],[3.6396484375,"ival-div",1600],[0.0,"ival-true",2000],[19.302734375,"ival-sub",0],[58.456298828125,"ival-pow",800],[1.615478515625,"ival-log1p",400],[0.081787109375,"ival-div",4800],[106.42138671875,"ival-pow",0],[10.87451171875,"ival-add",0],[0.364013671875,"ival-sub",800],[1.20556640625,"ival-mult",1600],[27.279296875,"ival-pow",4400],[11.52880859375,"adjust",2800],[0.00390625,"exact",1600],[5.899658203125,"ival-log1p",0],[2.406494140625,"ival-div",2000],[0.056396484375,"ival-sub",4000],[83.6748046875,"ival-pow",400],[0.0009765625,"exact",8000],[13.48583984375,"ival-pow",2400],[0.0009765625,"ival-assert",800],[0.00537109375,"exact",2800],[0.06884765625,"ival-sub",2000],[0.465576171875,"ival-div",4400],[0.861083984375,"ival-div",8000],[0.0009765625,"ival-true",800],[0.0,"ival-assert",2000],[3.469970703125,"ival-exp",400],[19.946533203125,"adjust",2000],[12.777099609375,"ival-pow",1200],[11.036376953125,"ival-mult",0],[0.48583984375,"ival-log1p",2000],[0.421142578125,"ival-log1p",4000],[0.335205078125,"ival-add",2000],[0.011962890625,"ival-neg",2000],[3.687744140625,"ival-div",800],[0.78173828125,"exact",0],[0.571044921875,"ival-add",800],[0.05419921875,"ival-exp",1200],[0.930419921875,"ival-mult",4000],[6.706298828125,"ival-neg",0]],"outcomes":[[25.577392578125,1,"valid",18],[150.7138671875,2,"valid",54],[47.700439453125,0,"exit",82],[635.31982421875,5,"exit",88],[21.451171875,1,"exit",10],[6.759033203125,2,"exit",4]],"time":947.33203125,"type":"localize"},{"count":[[24,363]],"inputs":[["(-.f64 (exp.f64 (/.f64 (log1p.f64 x) n)) (pow.f64 x (/.f64 #s(literal 1 binary64) n)))","(exp.f64 (/.f64 (log1p.f64 x) n))","(/.f64 (log1p.f64 x) n)","(log1p.f64 x)","(-.f64 (/.f64 #s(literal 1 binary64) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal -1 binary64) n))) (pow.f64 x (/.f64 #s(literal 1 binary64) n)))","(/.f64 #s(literal 1 binary64) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal -1 binary64) n)))","(pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal -1 binary64) n))","(+.f64 x #s(literal 1 binary64))","(-.f64 (*.f64 (pow.f64 (fma.f64 x x #s(literal -1 binary64)) (/.f64 #s(literal 1 binary64) n)) (pow.f64 (/.f64 #s(literal -1 binary64) (-.f64 #s(literal 1 binary64) x)) (/.f64 #s(literal 1 binary64) n))) (pow.f64 x (/.f64 #s(literal 1 binary64) n)))","(*.f64 (pow.f64 (fma.f64 x x #s(literal -1 binary64)) (/.f64 #s(literal 1 binary64) n)) (pow.f64 (/.f64 #s(literal -1 binary64) (-.f64 #s(literal 1 binary64) x)) (/.f64 #s(literal 1 binary64) n)))","(pow.f64 (fma.f64 x x #s(literal -1 binary64)) (/.f64 #s(literal 1 binary64) n))","(fma.f64 x x #s(literal -1 binary64))","(neg.f64 (/.f64 (-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n)) (pow.f64 x (/.f64 #s(literal 2 binary64) n))) (neg.f64 (+.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) n)) (pow.f64 x (/.f64 #s(literal 1 binary64) n))))))","(/.f64 (-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n)) (pow.f64 x (/.f64 #s(literal 2 binary64) n))) (neg.f64 (+.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) n)) (pow.f64 x (/.f64 #s(literal 1 binary64) n)))))","(-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n)) (pow.f64 x (/.f64 #s(literal 2 binary64) n)))","(pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n))","(*.f64 (+.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal -1 binary64) (*.f64 #s(literal -2 binary64) n))) (pow.f64 x (/.f64 #s(literal -1 binary64) (*.f64 #s(literal -2 binary64) n)))) (-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal -1 binary64) (*.f64 #s(literal -2 binary64) n))) (pow.f64 x (/.f64 #s(literal -1 binary64) (*.f64 #s(literal -2 binary64) n)))))","(+.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal -1 binary64) (*.f64 #s(literal -2 binary64) n))) (pow.f64 x (/.f64 #s(literal -1 binary64) (*.f64 #s(literal -2 binary64) n))))","(pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal -1 binary64) (*.f64 #s(literal -2 binary64) n)))","(/.f64 #s(literal -1 binary64) n)","(-.f64 #s(literal 1 binary64) x)","(neg.f64 (+.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) n)) (pow.f64 x (/.f64 #s(literal 1 binary64) n))))","(-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal -1 binary64) (*.f64 #s(literal -2 binary64) n))) (pow.f64 x (/.f64 #s(literal -1 binary64) (*.f64 #s(literal -2 binary64) n))))","(*.f64 #s(literal -2 binary64) n)"]],"memory":[[-244496,55933648]],"outputs":[["(- 1 (exp (/ (log x) n)))","(- (+ 1 (/ x n)) (exp (/ (log x) n)))","(- (+ 1 (* x (+ (* x (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (/ 1 n)))) (exp (/ (log x) n)))","(- (+ 1 (* x (+ (* x (- (+ (* 1/2 (/ 1 (pow n 2))) (* x (- (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))) (* 1/2 (/ 1 (pow n 2)))))) (* 1/2 (/ 1 n)))) (/ 1 n)))) (exp (/ (log x) n)))","1","(+ 1 (/ x n))","(+ 1 (* x (+ (* x (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (/ 1 n))))","(+ 1 (* x (+ (* x (- (+ (* 1/2 (/ 1 (pow n 2))) (* x (- (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))) (* 1/2 (/ 1 (pow n 2)))))) (* 1/2 (/ 1 n)))) (/ 1 n))))","(/ x n)","(* x (+ (* -1/2 (/ x n)) (/ 1 n)))","(* x (+ (* x (- (* 1/3 (/ x n)) (* 1/2 (/ 1 n)))) (/ 1 n)))","(* x (+ (* x (- (* x (+ (* -1/4 (/ x n)) (* 1/3 (/ 1 n)))) (* 1/2 (/ 1 n)))) (/ 1 n)))","x","(* x (+ 1 (* -1/2 x)))","(* x (+ 1 (* x (- (* 1/3 x) 1/2))))","(* x (+ 1 (* x (- (* x (+ 1/3 (* -1/4 x))) 1/2))))","(- (+ 1 (* x (+ (* x (- (/ 1 (pow n 2)) (+ (* 1/2 (/ 1 n)) (* 1/2 (/ 1 (pow n 2)))))) (/ 1 n)))) (exp (/ (log x) n)))","(- (+ 1 (* x (+ (* x (- (+ (* -1 (* x (+ (* -1 (+ (* 1/3 (/ 1 n)) (+ (* 1/2 (/ 1 (pow n 2))) (* 1/6 (/ 1 (pow n 3)))))) (+ (* -1 (/ (- (/ 1 (pow n 2)) (+ (* 1/2 (/ 1 n)) (* 1/2 (/ 1 (pow n 2))))) n)) (+ (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 (pow n 3)))))))) (/ 1 (pow n 2))) (+ (* 1/2 (/ 1 n)) (* 1/2 (/ 1 (pow n 2)))))) (/ 1 n)))) (exp (/ (log x) n)))","(+ 1 (* x (+ (* x (- (/ 1 (pow n 2)) (+ (* 1/2 (/ 1 n)) (* 1/2 (/ 1 (pow n 2)))))) (/ 1 n))))","(+ 1 (* x (+ (* x (- (+ (* -1 (* x (+ (* -1 (+ (* 1/6 (/ 1 (pow n 3))) (+ (* 1/2 (/ 1 (pow n 2))) (* 1/3 (/ 1 n))))) (+ (* -1 (/ (- (/ 1 (pow n 2)) (+ (* 1/2 (/ 1 n)) (* 1/2 (/ 1 (pow n 2))))) n)) (+ (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 (pow n 3)))))))) (/ 1 (pow n 2))) (+ (* 1/2 (/ 1 n)) (* 1/2 (/ 1 (pow n 2)))))) (/ 1 n))))","(+ 1 (* -1 (/ x n)))","(+ 1 (* x (- (* x (+ (* 1/2 (/ 1 n)) (* 1/2 (/ 1 (pow n 2))))) (/ 1 n))))","(+ 1 (* x (- (* x (+ (* -1 (* x (+ (* 1/3 (/ 1 n)) (+ (* 1/2 (/ 1 (pow n 2))) (* 1/6 (/ 1 (pow n 3))))))) (+ (* 1/2 (/ 1 n)) (* 1/2 (/ 1 (pow n 2)))))) (/ 1 n))))","(+ 1 x)","(- (pow (exp (/ (log -1) n)) 2) (exp (/ (log x) n)))","(- (+ (/ (* x (pow (exp (/ (log -1) n)) 2)) n) (pow (exp (/ (log -1) n)) 2)) (exp (/ (log x) n)))","(- (+ (* x (+ (* x (+ (* -1 (/ (pow (exp (/ (log -1) n)) 2) n)) (* (pow (exp (/ (log -1) n)) 2) (+ (* 1/2 (/ 1 n)) (* 1/2 (/ 1 (pow n 2))))))) (/ (pow (exp (/ (log -1) n)) 2) n))) (pow (exp (/ (log -1) n)) 2)) (exp (/ (log x) n)))","(- (+ (* x (+ (* x (+ (* -1 (/ (pow (exp (/ (log -1) n)) 2) n)) (+ (* x (+ (* -1 (/ (pow (exp (/ (log -1) n)) 2) (pow n 2))) (* (pow (exp (/ (log -1) n)) 2) (+ (* 1/3 (/ 1 n)) (+ (* 1/2 (/ 1 (pow n 2))) (* 1/6 (/ 1 (pow n 3)))))))) (* (pow (exp (/ (log -1) n)) 2) (+ (* 1/2 (/ 1 n)) (* 1/2 (/ 1 (pow n 2)))))))) (/ (pow (exp (/ (log -1) n)) 2) n))) (pow (exp (/ (log -1) n)) 2)) (exp (/ (log x) n)))","(pow (exp (/ (log -1) n)) 2)","(+ (/ (* x (pow (exp (/ (log -1) n)) 2)) n) (pow (exp (/ (log -1) n)) 2))","(+ (* x (+ (* x (+ (* -1 (/ (pow (exp (/ (log -1) n)) 2) n)) (* (pow (exp (/ (log -1) n)) 2) (+ (* 1/2 (/ 1 n)) (* 1/2 (/ 1 (pow n 2))))))) (/ (pow (exp (/ (log -1) n)) 2) n))) (pow (exp (/ (log -1) n)) 2))","(+ (* x (+ (* x (+ (* -1 (/ (pow (exp (/ (log -1) n)) 2) n)) (+ (* x (+ (* -1 (/ (pow (exp (/ (log -1) n)) 2) (pow n 2))) (* (pow (exp (/ (log -1) n)) 2) (+ (* 1/6 (/ 1 (pow n 3))) (+ (* 1/2 (/ 1 (pow n 2))) (* 1/3 (/ 1 n))))))) (* (pow (exp (/ (log -1) n)) 2) (+ (* 1/2 (/ 1 n)) (* 1/2 (/ 1 (pow n 2)))))))) (/ (pow (exp (/ (log -1) n)) 2) n))) (pow (exp (/ (log -1) n)) 2))","(exp (/ (log -1) n))","(+ (exp (/ (log -1) n)) (* -1 (/ (* (pow x 2) (exp (/ (log -1) n))) n)))","(+ (exp (/ (log -1) n)) (* (pow x 2) (+ (* -1 (/ (exp (/ (log -1) n)) n)) (* (pow x 2) (* (exp (/ (log -1) n)) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n))))))))","(+ (exp (/ (log -1) n)) (* (pow x 2) (+ (* -1 (/ (exp (/ (log -1) n)) n)) (* (pow x 2) (+ (* (exp (/ (log -1) n)) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (pow x 2) (* (exp (/ (log -1) n)) (- (* 1/2 (/ 1 (pow n 2))) (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n)))))))))))","-1","(- (pow x 2) 1)","(/ (- 1 (exp (* 2 (/ (log x) n)))) (+ 1 (exp (/ (log x) n))))","(- (* x (- (+ (* 2 (/ 1 (* n (+ 1 (exp (/ (log x) n)))))) (/ (exp (* 2 (/ (log x) n))) (* n (pow (+ 1 (exp (/ (log x) n))) 2)))) (/ 1 (* n (pow (+ 1 (exp (/ (log x) n))) 2))))) (* -1 (/ (- 1 (exp (* 2 (/ (log x) n)))) (+ 1 (exp (/ (log x) n))))))","(- (* x (- (* x (- (+ (* 2 (/ 1 (* (pow n 2) (+ 1 (exp (/ (log x) n)))))) (/ 1 (* (pow n 2) (pow (+ 1 (exp (/ (log x) n))) 3)))) (+ (* 2 (/ 1 (* (pow n 2) (pow (+ 1 (exp (/ (log x) n))) 2)))) (+ (/ 1 (* n (+ 1 (exp (/ (log x) n))))) (+ (/ (exp (* 2 (/ (log x) n))) (* (pow n 2) (pow (+ 1 (exp (/ (log x) n))) 3))) (/ (* (- 1 (exp (* 2 (/ (log x) n)))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (pow (+ 1 (exp (/ (log x) n))) 2))))))) (* -1 (- (+ (* 2 (/ 1 (* n (+ 1 (exp (/ (log x) n)))))) (/ (exp (* 2 (/ (log x) n))) (* n (pow (+ 1 (exp (/ (log x) n))) 2)))) (/ 1 (* n (pow (+ 1 (exp (/ (log x) n))) 2))))))) (* -1 (/ (- 1 (exp (* 2 (/ (log x) n)))) (+ 1 (exp (/ (log x) n))))))","(- (* x (- (* x (- (* x (- (+ (* 2/3 (/ 1 (* n (+ 1 (exp (/ (log x) n)))))) (+ (* 4/3 (/ 1 (* (pow n 3) (+ 1 (exp (/ (log x) n)))))) (+ (* 2 (/ 1 (* (pow n 3) (pow (+ 1 (exp (/ (log x) n))) 3)))) (+ (/ 1 (* (pow n 2) (pow (+ 1 (exp (/ (log x) n))) 2))) (+ (/ (exp (* 2 (/ (log x) n))) (* (pow n 3) (pow (+ 1 (exp (/ (log x) n))) 4))) (/ (* (- 1 (exp (* 2 (/ (log x) n)))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* n (pow (+ 1 (exp (/ (log x) n))) 3)))))))) (+ (* 2 (/ 1 (* (pow n 2) (+ 1 (exp (/ (log x) n)))))) (+ (* 2 (/ 1 (* (pow n 3) (pow (+ 1 (exp (/ (log x) n))) 2)))) (+ (/ 1 (* (pow n 3) (pow (+ 1 (exp (/ (log x) n))) 4))) (+ (/ (* (- 1 (exp (* 2 (/ (log x) n)))) (- (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))) (* 1/2 (/ 1 (pow n 2))))) (pow (+ 1 (exp (/ (log x) n))) 2)) (/ (* (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n))) (- (+ (* 2 (/ 1 (* n (+ 1 (exp (/ (log x) n)))))) (/ (exp (* 2 (/ (log x) n))) (* n (pow (+ 1 (exp (/ (log x) n))) 2)))) (/ 1 (* n (pow (+ 1 (exp (/ (log x) n))) 2))))) (+ 1 (exp (/ (log x) n)))))))))) (* -1 (- (+ (* 2 (/ 1 (* (pow n 2) (+ 1 (exp (/ (log x) n)))))) (/ 1 (* (pow n 2) (pow (+ 1 (exp (/ (log x) n))) 3)))) (+ (* 2 (/ 1 (* (pow n 2) (pow (+ 1 (exp (/ (log x) n))) 2)))) (+ (/ 1 (* n (+ 1 (exp (/ (log x) n))))) (+ (/ (exp (* 2 (/ (log x) n))) (* (pow n 2) (pow (+ 1 (exp (/ (log x) n))) 3))) (/ (* (- 1 (exp (* 2 (/ (log x) n)))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (pow (+ 1 (exp (/ (log x) n))) 2))))))))) (* -1 (- (+ (* 2 (/ 1 (* n (+ 1 (exp (/ (log x) n)))))) (/ (exp (* 2 (/ (log x) n))) (* n (pow (+ 1 (exp (/ (log x) n))) 2)))) (/ 1 (* n (pow (+ 1 (exp (/ (log x) n))) 2))))))) (* -1 (/ (- 1 (exp (* 2 (/ (log x) n)))) (+ 1 (exp (/ (log x) n))))))","(* -1 (/ (- 1 (exp (* 2 (/ (log x) n)))) (+ 1 (exp (/ (log x) n)))))","(+ (* -1 (* x (- (+ (* 2 (/ 1 (* n (+ 1 (exp (/ (log x) n)))))) (/ (exp (* 2 (/ (log x) n))) (* n (pow (+ 1 (exp (/ (log x) n))) 2)))) (/ 1 (* n (pow (+ 1 (exp (/ (log x) n))) 2)))))) (* -1 (/ (- 1 (exp (* 2 (/ (log x) n)))) (+ 1 (exp (/ (log x) n))))))","(+ (* -1 (/ (- 1 (exp (* 2 (/ (log x) n)))) (+ 1 (exp (/ (log x) n))))) (* x (+ (* -1 (* x (- (+ (* 2 (/ 1 (* (pow n 2) (+ 1 (exp (/ (log x) n)))))) (/ 1 (* (pow n 2) (pow (+ 1 (exp (/ (log x) n))) 3)))) (+ (* 2 (/ 1 (* (pow n 2) (pow (+ 1 (exp (/ (log x) n))) 2)))) (+ (/ 1 (* n (+ 1 (exp (/ (log x) n))))) (+ (/ (exp (* 2 (/ (log x) n))) (* (pow n 2) (pow (+ 1 (exp (/ (log x) n))) 3))) (/ (* (- 1 (exp (* 2 (/ (log x) n)))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (pow (+ 1 (exp (/ (log x) n))) 2)))))))) (* -1 (- (+ (* 2 (/ 1 (* n (+ 1 (exp (/ (log x) n)))))) (/ (exp (* 2 (/ (log x) n))) (* n (pow (+ 1 (exp (/ (log x) n))) 2)))) (/ 1 (* n (pow (+ 1 (exp (/ (log x) n))) 2))))))))","(+ (* -1 (/ (- 1 (exp (* 2 (/ (log x) n)))) (+ 1 (exp (/ (log x) n))))) (* x (+ (* -1 (- (+ (* 2 (/ 1 (* n (+ 1 (exp (/ (log x) n)))))) (/ (exp (* 2 (/ (log x) n))) (* n (pow (+ 1 (exp (/ (log x) n))) 2)))) (/ 1 (* n (pow (+ 1 (exp (/ (log x) n))) 2))))) (* x (+ (* -1 (* x (- (+ (* 2/3 (/ 1 (* n (+ 1 (exp (/ (log x) n)))))) (+ (* 4/3 (/ 1 (* (pow n 3) (+ 1 (exp (/ (log x) n)))))) (+ (* 2 (/ 1 (* (pow n 3) (pow (+ 1 (exp (/ (log x) n))) 3)))) (+ (/ 1 (* (pow n 2) (pow (+ 1 (exp (/ (log x) n))) 2))) (+ (/ (exp (* 2 (/ (log x) n))) (* (pow n 3) (pow (+ 1 (exp (/ (log x) n))) 4))) (/ (* (- 1 (exp (* 2 (/ (log x) n)))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* n (pow (+ 1 (exp (/ (log x) n))) 3)))))))) (+ (* 2 (/ 1 (* (pow n 2) (+ 1 (exp (/ (log x) n)))))) (+ (* 2 (/ 1 (* (pow n 3) (pow (+ 1 (exp (/ (log x) n))) 2)))) (+ (/ 1 (* (pow n 3) (pow (+ 1 (exp (/ (log x) n))) 4))) (+ (/ (* (- 1 (exp (* 2 (/ (log x) n)))) (- (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))) (* 1/2 (/ 1 (pow n 2))))) (pow (+ 1 (exp (/ (log x) n))) 2)) (/ (* (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n))) (- (+ (* 2 (/ 1 (* n (+ 1 (exp (/ (log x) n)))))) (/ (exp (* 2 (/ (log x) n))) (* n (pow (+ 1 (exp (/ (log x) n))) 2)))) (/ 1 (* n (pow (+ 1 (exp (/ (log x) n))) 2))))) (+ 1 (exp (/ (log x) n))))))))))) (* -1 (- (+ (* 2 (/ 1 (* (pow n 2) (+ 1 (exp (/ (log x) n)))))) (/ 1 (* (pow n 2) (pow (+ 1 (exp (/ (log x) n))) 3)))) (+ (* 2 (/ 1 (* (pow n 2) (pow (+ 1 (exp (/ (log x) n))) 2)))) (+ (/ 1 (* n (+ 1 (exp (/ (log x) n))))) (+ (/ (exp (* 2 (/ (log x) n))) (* (pow n 2) (pow (+ 1 (exp (/ (log x) n))) 3))) (/ (* (- 1 (exp (* 2 (/ (log x) n)))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (pow (+ 1 (exp (/ (log x) n))) 2))))))))))))","(- 1 (exp (* 2 (/ (log x) n))))","(- (+ 1 (* 2 (/ x n))) (exp (* 2 (/ (log x) n))))","(- (+ 1 (* x (+ (* x (- (* 2 (/ 1 (pow n 2))) (/ 1 n))) (* 2 (/ 1 n))))) (exp (* 2 (/ (log x) n))))","(- (+ 1 (* x (+ (* x (- (+ (* 2 (/ 1 (pow n 2))) (* x (- (+ (* 2/3 (/ 1 n)) (* 4/3 (/ 1 (pow n 3)))) (* 2 (/ 1 (pow n 2)))))) (/ 1 n))) (* 2 (/ 1 n))))) (exp (* 2 (/ (log x) n))))","(+ 1 (* 2 (/ x n)))","(+ 1 (* x (+ (* x (- (* 2 (/ 1 (pow n 2))) (/ 1 n))) (* 2 (/ 1 n)))))","(+ 1 (* x (+ (* x (- (+ (* 2 (/ 1 (pow n 2))) (* x (- (+ (* 2/3 (/ 1 n)) (* 4/3 (/ 1 (pow n 3)))) (* 2 (/ 1 (pow n 2)))))) (/ 1 n))) (* 2 (/ 1 n)))))","(* (+ 1 (exp (* 1/2 (/ (log x) n)))) (- 1 (exp (* 1/2 (/ (log x) n)))))","(+ (* x (+ (* 1/2 (/ (+ 1 (exp (* 1/2 (/ (log x) n)))) n)) (* 1/2 (/ (- 1 (exp (* 1/2 (/ (log x) n)))) n)))) (* (+ 1 (exp (* 1/2 (/ (log x) n)))) (- 1 (exp (* 1/2 (/ (log x) n))))))","(+ (* x (+ (* 1/2 (/ (+ 1 (exp (* 1/2 (/ (log x) n)))) n)) (+ (* 1/2 (/ (- 1 (exp (* 1/2 (/ (log x) n)))) n)) (* x (+ (* 1/4 (/ 1 (pow n 2))) (+ (* (+ 1 (exp (* 1/2 (/ (log x) n)))) (- (* 1/8 (/ 1 (pow n 2))) (* 1/4 (/ 1 n)))) (* (- 1 (exp (* 1/2 (/ (log x) n)))) (- (* 1/8 (/ 1 (pow n 2))) (* 1/4 (/ 1 n)))))))))) (* (+ 1 (exp (* 1/2 (/ (log x) n)))) (- 1 (exp (* 1/2 (/ (log x) n))))))","(+ (* x (+ (* 1/2 (/ (+ 1 (exp (* 1/2 (/ (log x) n)))) n)) (+ (* 1/2 (/ (- 1 (exp (* 1/2 (/ (log x) n)))) n)) (* x (+ (* 1/4 (/ 1 (pow n 2))) (+ (* x (- (+ (* 1/8 (/ 1 (pow n 3))) (+ (* (+ 1 (exp (* 1/2 (/ (log x) n)))) (- (+ (* 1/48 (/ 1 (pow n 3))) (* 1/6 (/ 1 n))) (* 1/8 (/ 1 (pow n 2))))) (* (- 1 (exp (* 1/2 (/ (log x) n)))) (- (+ (* 1/48 (/ 1 (pow n 3))) (* 1/6 (/ 1 n))) (* 1/8 (/ 1 (pow n 2))))))) (* 1/4 (/ 1 (pow n 2))))) (+ (* (+ 1 (exp (* 1/2 (/ (log x) n)))) (- (* 1/8 (/ 1 (pow n 2))) (* 1/4 (/ 1 n)))) (* (- 1 (exp (* 1/2 (/ (log x) n)))) (- (* 1/8 (/ 1 (pow n 2))) (* 1/4 (/ 1 n))))))))))) (* (+ 1 (exp (* 1/2 (/ (log x) n)))) (- 1 (exp (* 1/2 (/ (log x) n))))))","(+ 1 (exp (* 1/2 (/ (log x) n))))","(+ 1 (+ (exp (* 1/2 (/ (log x) n))) (* 1/2 (/ x n))))","(+ 1 (+ (exp (* 1/2 (/ (log x) n))) (* x (+ (* x (- (* 1/8 (/ 1 (pow n 2))) (* 1/4 (/ 1 n)))) (* 1/2 (/ 1 n))))))","(+ 1 (+ (exp (* 1/2 (/ (log x) n))) (* x (+ (* x (- (+ (* 1/8 (/ 1 (pow n 2))) (* x (- (+ (* 1/48 (/ 1 (pow n 3))) (* 1/6 (/ 1 n))) (* 1/8 (/ 1 (pow n 2)))))) (* 1/4 (/ 1 n)))) (* 1/2 (/ 1 n))))))","(+ 1 (* 1/2 (/ x n)))","(+ 1 (* x (+ (* x (- (* 1/8 (/ 1 (pow n 2))) (* 1/4 (/ 1 n)))) (* 1/2 (/ 1 n)))))","(+ 1 (* x (+ (* x (- (+ (* 1/8 (/ 1 (pow n 2))) (* x (- (+ (* 1/48 (/ 1 (pow n 3))) (* 1/6 (/ 1 n))) (* 1/8 (/ 1 (pow n 2)))))) (* 1/4 (/ 1 n)))) (* 1/2 (/ 1 n)))))","(+ 1 (* -1 x))","(* -1 (+ 1 (exp (/ (log x) n))))","(- (* -1 (/ x n)) (+ 1 (exp (/ (log x) n))))","(- (* x (- (* x (- (* 1/2 (/ 1 n)) (* 1/2 (/ 1 (pow n 2))))) (/ 1 n))) (+ 1 (exp (/ (log x) n))))","(- (* x (- (* x (- (+ (* 1/2 (/ 1 n)) (* x (- (* 1/2 (/ 1 (pow n 2))) (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n)))))) (* 1/2 (/ 1 (pow n 2))))) (/ 1 n))) (+ 1 (exp (/ (log x) n))))","(- 1 (exp (* 1/2 (/ (log x) n))))","(- (+ 1 (* 1/2 (/ x n))) (exp (* 1/2 (/ (log x) n))))","(- (+ 1 (* x (+ (* x (- (* 1/8 (/ 1 (pow n 2))) (* 1/4 (/ 1 n)))) (* 1/2 (/ 1 n))))) (exp (* 1/2 (/ (log x) n))))","(- (+ 1 (* x (+ (* x (- (+ (* 1/8 (/ 1 (pow n 2))) (* x (- (+ (* 1/48 (/ 1 (pow n 3))) (* 1/6 (/ 1 n))) (* 1/8 (/ 1 (pow n 2)))))) (* 1/4 (/ 1 n)))) (* 1/2 (/ 1 n))))) (exp (* 1/2 (/ (log x) n))))","(/ (exp (* -1 (/ (log (/ 1 x)) n))) (* n x))","(/ (+ (/ (exp (* -1 (/ (log (/ 1 x)) n))) n) (/ (* (exp (* -1 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) x)) x)","(/ (+ (/ (exp (* -1 (/ (log (/ 1 x)) n))) n) (+ (/ (* (exp (* -1 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) x) (/ (* (exp (* -1 (/ (log (/ 1 x)) n))) (- (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))) (* 1/2 (/ 1 (pow n 2))))) (pow x 2)))) x)","(/ (+ (/ (exp (* -1 (/ (log (/ 1 x)) n))) n) (+ (/ (* (exp (* -1 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) x) (+ (/ (* (exp (* -1 (/ (log (/ 1 x)) n))) (- (+ (* 1/24 (/ 1 (pow n 4))) (* 11/24 (/ 1 (pow n 2)))) (+ (* 1/4 (/ 1 n)) (* 1/4 (/ 1 (pow n 3)))))) (pow x 3)) (/ (* (exp (* -1 (/ (log (/ 1 x)) n))) (- (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))) (* 1/2 (/ 1 (pow n 2))))) (pow x 2))))) x)","(exp (* -1 (/ (log (/ 1 x)) n)))","(+ (exp (* -1 (/ (log (/ 1 x)) n))) (/ (exp (* -1 (/ (log (/ 1 x)) n))) (* n x)))","(+ (exp (* -1 (/ (log (/ 1 x)) n))) (+ (/ (exp (* -1 (/ (log (/ 1 x)) n))) (* n x)) (/ (* (exp (* -1 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (pow x 2))))","(+ (exp (* -1 (/ (log (/ 1 x)) n))) (+ (/ (exp (* -1 (/ (log (/ 1 x)) n))) (* n x)) (+ (/ (* (exp (* -1 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (pow x 2)) (/ (* (exp (* -1 (/ (log (/ 1 x)) n))) (- (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))) (* 1/2 (/ 1 (pow n 2))))) (pow x 3)))))","(* -1 (/ (log (/ 1 x)) n))","(+ (* -1 (/ (log (/ 1 x)) n)) (/ 1 (* n x)))","(- (+ (* -1 (/ (log (/ 1 x)) n)) (/ 1 (* n x))) (/ 1/2 (* n (pow x 2))))","(- (+ (* -1 (/ (log (/ 1 x)) n)) (+ (/ 1 (* n x)) (* 1/3 (/ 1 (* n (pow x 3)))))) (* 1/2 (/ 1 (* n (pow x 2)))))","(* -1 (log (/ 1 x)))","(+ (* -1 (log (/ 1 x))) (/ 1 x))","(- (+ (* -1 (log (/ 1 x))) (/ 1 x)) (/ 1/2 (pow x 2)))","(- (+ (* -1 (log (/ 1 x))) (+ (/ 1 x) (* 1/3 (/ 1 (pow x 3))))) (/ 1/2 (pow x 2)))","(- (/ 1 (exp (/ (log (/ 1 x)) n))) (exp (* -1 (/ (log (/ 1 x)) n))))","(- (+ (/ 1 (exp (/ (log (/ 1 x)) n))) (/ 1 (* n (* x (exp (/ (log (/ 1 x)) n)))))) (exp (* -1 (/ (log (/ 1 x)) n))))","(- (+ (/ 1 (exp (/ (log (/ 1 x)) n))) (+ (/ 1 (* n (* x (exp (/ (log (/ 1 x)) n))))) (* 1/2 (/ 1 (* (pow n 2) (* (pow x 2) (exp (/ (log (/ 1 x)) n)))))))) (+ (exp (* -1 (/ (log (/ 1 x)) n))) (* 1/2 (/ 1 (* n (* (pow x 2) (exp (/ (log (/ 1 x)) n))))))))","(- (+ (* -1 (/ (+ (* -1 (/ (+ (* 1/3 (/ 1 n)) (+ (* 1/2 (/ 1 (pow n 2))) (* 1/6 (/ 1 (pow n 3))))) (exp (/ (log (/ 1 x)) n)))) (+ (* -1 (/ (- (* 1/2 (/ 1 (* (pow n 2) (exp (/ (log (/ 1 x)) n))))) (* 1/2 (/ 1 (* n (exp (/ (log (/ 1 x)) n)))))) n)) (+ (* 1/2 (/ 1 (* (pow n 2) (exp (/ (log (/ 1 x)) n))))) (* 1/2 (/ 1 (* (pow n 3) (exp (/ (log (/ 1 x)) n)))))))) (pow x 3))) (+ (/ 1 (exp (/ (log (/ 1 x)) n))) (+ (/ 1 (* n (* x (exp (/ (log (/ 1 x)) n))))) (* 1/2 (/ 1 (* (pow n 2) (* (pow x 2) (exp (/ (log (/ 1 x)) n))))))))) (+ (exp (* -1 (/ (log (/ 1 x)) n))) (* 1/2 (/ 1 (* n (* (pow x 2) (exp (/ (log (/ 1 x)) n))))))))","(/ 1 (exp (/ (log (/ 1 x)) n)))","(+ (/ 1 (exp (/ (log (/ 1 x)) n))) (/ 1 (* n (* x (exp (/ (log (/ 1 x)) n))))))","(- (+ (/ 1 (exp (/ (log (/ 1 x)) n))) (+ (/ 1 (* n (* x (exp (/ (log (/ 1 x)) n))))) (* 1/2 (/ 1 (* (pow n 2) (* (pow x 2) (exp (/ (log (/ 1 x)) n)))))))) (* 1/2 (/ 1 (* n (* (pow x 2) (exp (/ (log (/ 1 x)) n)))))))","(- (+ (* -1 (/ (+ (* -1 (/ (+ (* 1/6 (/ 1 (pow n 3))) (+ (* 1/2 (/ 1 (pow n 2))) (* 1/3 (/ 1 n)))) (exp (/ (log (/ 1 x)) n)))) (+ (* -1 (/ (- (* 1/2 (/ 1 (* (pow n 2) (exp (/ (log (/ 1 x)) n))))) (* 1/2 (/ 1 (* n (exp (/ (log (/ 1 x)) n)))))) n)) (+ (* 1/2 (/ 1 (* (pow n 2) (exp (/ (log (/ 1 x)) n))))) (* 1/2 (/ 1 (* (pow n 3) (exp (/ (log (/ 1 x)) n)))))))) (pow x 3))) (+ (/ 1 (exp (/ (log (/ 1 x)) n))) (+ (/ 1 (* n (* x (exp (/ (log (/ 1 x)) n))))) (* 1/2 (/ 1 (* (pow n 2) (* (pow x 2) (exp (/ (log (/ 1 x)) n))))))))) (* 1/2 (/ 1 (* n (* (pow x 2) (exp (/ (log (/ 1 x)) n)))))))","(exp (/ (log (/ 1 x)) n))","(+ (exp (/ (log (/ 1 x)) n)) (* -1 (/ (exp (/ (log (/ 1 x)) n)) (* n x))))","(+ (exp (/ (log (/ 1 x)) n)) (+ (* -1 (/ (exp (/ (log (/ 1 x)) n)) (* n x))) (/ (* (exp (/ (log (/ 1 x)) n)) (+ (* 1/2 (/ 1 n)) (* 1/2 (/ 1 (pow n 2))))) (pow x 2))))","(+ (exp (/ (log (/ 1 x)) n)) (+ (* -1 (/ (exp (/ (log (/ 1 x)) n)) (* n x))) (+ (* -1 (/ (* (exp (/ (log (/ 1 x)) n)) (+ (* 1/3 (/ 1 n)) (+ (* 1/2 (/ 1 (pow n 2))) (* 1/6 (/ 1 (pow n 3)))))) (pow x 3))) (/ (* (exp (/ (log (/ 1 x)) n)) (+ (* 1/2 (/ 1 n)) (* 1/2 (/ 1 (pow n 2))))) (pow x 2)))))","(* x (+ 1 (/ 1 x)))","(- (* (exp (* -2 (/ (log (/ 1 x)) n))) (exp (/ (log (/ 1 x)) n))) (exp (* -1 (/ (log (/ 1 x)) n))))","(- (+ (* (exp (* -2 (/ (log (/ 1 x)) n))) (exp (/ (log (/ 1 x)) n))) (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (exp (/ (log (/ 1 x)) n))) (* n x))) (exp (* -1 (/ (log (/ 1 x)) n))))","(- (+ (* -1 (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (exp (/ (log (/ 1 x)) n))) (* n (pow x 2)))) (+ (* (exp (* -2 (/ (log (/ 1 x)) n))) (exp (/ (log (/ 1 x)) n))) (+ (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (exp (/ (log (/ 1 x)) n))) (* n x)) (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (* (exp (/ (log (/ 1 x)) n)) (+ (* 1/2 (/ 1 n)) (* 1/2 (/ 1 (pow n 2)))))) (pow x 2))))) (exp (* -1 (/ (log (/ 1 x)) n))))","(- (+ (* -1 (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (exp (/ (log (/ 1 x)) n))) (* n (pow x 2)))) (+ (* -1 (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (exp (/ (log (/ 1 x)) n))) (* (pow n 2) (pow x 3)))) (+ (* (exp (* -2 (/ (log (/ 1 x)) n))) (exp (/ (log (/ 1 x)) n))) (+ (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (exp (/ (log (/ 1 x)) n))) (* n x)) (+ (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (* (exp (/ (log (/ 1 x)) n)) (+ (* 1/3 (/ 1 n)) (+ (* 1/2 (/ 1 (pow n 2))) (* 1/6 (/ 1 (pow n 3))))))) (pow x 3)) (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (* (exp (/ (log (/ 1 x)) n)) (+ (* 1/2 (/ 1 n)) (* 1/2 (/ 1 (pow n 2)))))) (pow x 2))))))) (exp (* -1 (/ (log (/ 1 x)) n))))","(* (exp (* -2 (/ (log (/ 1 x)) n))) (exp (/ (log (/ 1 x)) n)))","(+ (* (exp (* -2 (/ (log (/ 1 x)) n))) (exp (/ (log (/ 1 x)) n))) (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (exp (/ (log (/ 1 x)) n))) (* n x)))","(+ (* -1 (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (exp (/ (log (/ 1 x)) n))) (* n (pow x 2)))) (+ (* (exp (* -2 (/ (log (/ 1 x)) n))) (exp (/ (log (/ 1 x)) n))) (+ (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (exp (/ (log (/ 1 x)) n))) (* n x)) (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (* (exp (/ (log (/ 1 x)) n)) (+ (* 1/2 (/ 1 n)) (* 1/2 (/ 1 (pow n 2)))))) (pow x 2)))))","(+ (* -1 (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (exp (/ (log (/ 1 x)) n))) (* n (pow x 2)))) (+ (* -1 (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (exp (/ (log (/ 1 x)) n))) (* (pow n 2) (pow x 3)))) (+ (* (exp (* -2 (/ (log (/ 1 x)) n))) (exp (/ (log (/ 1 x)) n))) (+ (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (exp (/ (log (/ 1 x)) n))) (* n x)) (+ (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (* (exp (/ (log (/ 1 x)) n)) (+ (* 1/6 (/ 1 (pow n 3))) (+ (* 1/2 (/ 1 (pow n 2))) (* 1/3 (/ 1 n)))))) (pow x 3)) (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (* (exp (/ (log (/ 1 x)) n)) (+ (* 1/2 (/ 1 n)) (* 1/2 (/ 1 (pow n 2)))))) (pow x 2)))))))","(exp (* -2 (/ (log (/ 1 x)) n)))","(+ (exp (* -2 (/ (log (/ 1 x)) n))) (* -1 (/ (exp (* -2 (/ (log (/ 1 x)) n))) (* n (pow x 2)))))","(+ (exp (* -2 (/ (log (/ 1 x)) n))) (+ (* -1 (/ (exp (* -2 (/ (log (/ 1 x)) n))) (* n (pow x 2)))) (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (pow x 4))))","(+ (exp (* -2 (/ (log (/ 1 x)) n))) (+ (* -1 (/ (exp (* -2 (/ (log (/ 1 x)) n))) (* n (pow x 2)))) (+ (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (pow x 4)) (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))))) (pow x 6)))))","(pow x 2)","(* (pow x 2) (- 1 (/ 1 (pow x 2))))","(/ (exp (* -2 (/ (log (/ 1 x)) n))) (* n (* x (exp (* -1 (/ (log (/ 1 x)) n))))))","(/ (- (* 1/2 (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))) (* x (exp (* -1 (/ (log (/ 1 x)) n)))))) (+ (* -1 (/ (exp (* -2 (/ (log (/ 1 x)) n))) (* n (exp (* -1 (/ (log (/ 1 x)) n)))))) (* 1/2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) (* (pow n 2) (* x (exp (* -1 (/ (log (/ 1 x)) n))))))))) x)","(/ (- (* 1/2 (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (+ (* 2/3 (/ 1 n)) (* 4/3 (/ 1 (pow n 3)))) (* 2 (/ 1 (pow n 2))))) (* (pow x 2) (exp (* -1 (/ (log (/ 1 x)) n)))))) (+ (* -1 (/ (exp (* -2 (/ (log (/ 1 x)) n))) (* n (exp (* -1 (/ (log (/ 1 x)) n)))))) (+ (* -1 (/ (- (* 1/2 (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))) (exp (* -1 (/ (log (/ 1 x)) n))))) (* 1/2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) (* (pow n 2) (exp (* -1 (/ (log (/ 1 x)) n))))))) x)) (+ (* 1/2 (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* n (* (pow x 2) (exp (* -1 (/ (log (/ 1 x)) n))))))) (* 1/2 (/ (- (* 1/2 (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))) (exp (* -1 (/ (log (/ 1 x)) n))))) (* 1/2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) (* (pow n 2) (exp (* -1 (/ (log (/ 1 x)) n))))))) (* n (pow x 2)))))))) x)","(/ (- (* 1/2 (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (+ (* 2/3 (/ 1 (pow n 4))) (* 11/6 (/ 1 (pow n 2)))) (+ (* 1/2 (/ 1 n)) (* 2 (/ 1 (pow n 3)))))) (* (pow x 3) (exp (* -1 (/ (log (/ 1 x)) n)))))) (+ (* -1 (/ (exp (* -2 (/ (log (/ 1 x)) n))) (* n (exp (* -1 (/ (log (/ 1 x)) n)))))) (+ (* -1 (/ (- (* 1/2 (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))) (exp (* -1 (/ (log (/ 1 x)) n))))) (* 1/2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) (* (pow n 2) (exp (* -1 (/ (log (/ 1 x)) n))))))) x)) (+ (* -1 (/ (- (* 1/2 (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (+ (* 2/3 (/ 1 n)) (* 4/3 (/ 1 (pow n 3)))) (* 2 (/ 1 (pow n 2))))) (exp (* -1 (/ (log (/ 1 x)) n))))) (+ (* 1/2 (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* n (exp (* -1 (/ (log (/ 1 x)) n)))))) (* 1/2 (/ (- (* 1/2 (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))) (exp (* -1 (/ (log (/ 1 x)) n))))) (* 1/2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) (* (pow n 2) (exp (* -1 (/ (log (/ 1 x)) n))))))) n)))) (pow x 2))) (+ (* 1/2 (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))) (* 1/2 (/ 1 (pow n 2))))) (* n (* (pow x 3) (exp (* -1 (/ (log (/ 1 x)) n))))))) (+ (* 1/2 (/ (* (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n))) (- (* 1/2 (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))) (exp (* -1 (/ (log (/ 1 x)) n))))) (* 1/2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) (* (pow n 2) (exp (* -1 (/ (log (/ 1 x)) n)))))))) (pow x 3))) (* 1/2 (/ (- (* 1/2 (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (+ (* 2/3 (/ 1 n)) (* 4/3 (/ 1 (pow n 3)))) (* 2 (/ 1 (pow n 2))))) (exp (* -1 (/ (log (/ 1 x)) n))))) (+ (* 1/2 (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* n (exp (* -1 (/ (log (/ 1 x)) n)))))) (* 1/2 (/ (- (* 1/2 (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))) (exp (* -1 (/ (log (/ 1 x)) n))))) (* 1/2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) (* (pow n 2) (exp (* -1 (/ (log (/ 1 x)) n))))))) n)))) (* n (pow x 3)))))))))) x)","(* -1 (/ (exp (* -2 (/ (log (/ 1 x)) n))) (* n (* x (exp (* -1 (/ (log (/ 1 x)) n)))))))","(/ (+ (* -1 (/ (exp (* -2 (/ (log (/ 1 x)) n))) (* n (exp (* -1 (/ (log (/ 1 x)) n)))))) (* -1 (/ (- (* 1/2 (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))) (exp (* -1 (/ (log (/ 1 x)) n))))) (* 1/2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) (* (pow n 2) (exp (* -1 (/ (log (/ 1 x)) n))))))) x))) x)","(/ (+ (* -1 (/ (exp (* -2 (/ (log (/ 1 x)) n))) (* n (exp (* -1 (/ (log (/ 1 x)) n)))))) (+ (* -1 (/ (- (* 1/2 (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))) (exp (* -1 (/ (log (/ 1 x)) n))))) (* 1/2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) (* (pow n 2) (exp (* -1 (/ (log (/ 1 x)) n))))))) x)) (* -1 (/ (- (* 1/2 (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (+ (* 2/3 (/ 1 n)) (* 4/3 (/ 1 (pow n 3)))) (* 2 (/ 1 (pow n 2))))) (exp (* -1 (/ (log (/ 1 x)) n))))) (+ (* 1/2 (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* n (exp (* -1 (/ (log (/ 1 x)) n)))))) (* 1/2 (/ (- (* 1/2 (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))) (exp (* -1 (/ (log (/ 1 x)) n))))) (* 1/2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) (* (pow n 2) (exp (* -1 (/ (log (/ 1 x)) n))))))) n)))) (pow x 2))))) x)","(/ (+ (* -1 (/ (exp (* -2 (/ (log (/ 1 x)) n))) (* n (exp (* -1 (/ (log (/ 1 x)) n)))))) (+ (* -1 (/ (- (* 1/2 (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))) (exp (* -1 (/ (log (/ 1 x)) n))))) (* 1/2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) (* (pow n 2) (exp (* -1 (/ (log (/ 1 x)) n))))))) x)) (+ (* -1 (/ (- (* 1/2 (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (+ (* 2/3 (/ 1 n)) (* 4/3 (/ 1 (pow n 3)))) (* 2 (/ 1 (pow n 2))))) (exp (* -1 (/ (log (/ 1 x)) n))))) (+ (* 1/2 (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* n (exp (* -1 (/ (log (/ 1 x)) n)))))) (* 1/2 (/ (- (* 1/2 (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))) (exp (* -1 (/ (log (/ 1 x)) n))))) (* 1/2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) (* (pow n 2) (exp (* -1 (/ (log (/ 1 x)) n))))))) n)))) (pow x 2))) (* -1 (/ (- (* 1/2 (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (+ (* 2/3 (/ 1 (pow n 4))) (* 11/6 (/ 1 (pow n 2)))) (+ (* 1/2 (/ 1 n)) (* 2 (/ 1 (pow n 3)))))) (exp (* -1 (/ (log (/ 1 x)) n))))) (+ (* 1/2 (* (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n))) (- (* 1/2 (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))) (exp (* -1 (/ (log (/ 1 x)) n))))) (* 1/2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) (* (pow n 2) (exp (* -1 (/ (log (/ 1 x)) n))))))))) (+ (* 1/2 (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))) (* 1/2 (/ 1 (pow n 2))))) (* n (exp (* -1 (/ (log (/ 1 x)) n)))))) (* 1/2 (/ (- (* 1/2 (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (+ (* 2/3 (/ 1 n)) (* 4/3 (/ 1 (pow n 3)))) (* 2 (/ 1 (pow n 2))))) (exp (* -1 (/ (log (/ 1 x)) n))))) (+ (* 1/2 (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* n (exp (* -1 (/ (log (/ 1 x)) n)))))) (* 1/2 (/ (- (* 1/2 (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))) (exp (* -1 (/ (log (/ 1 x)) n))))) (* 1/2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) (* (pow n 2) (exp (* -1 (/ (log (/ 1 x)) n))))))) n)))) n))))) (pow x 3)))))) x)","(* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) (* n x)))","(/ (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))) x)) x)","(/ (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (+ (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))) x) (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (+ (* 2/3 (/ 1 n)) (* 4/3 (/ 1 (pow n 3)))) (* 2 (/ 1 (pow n 2))))) (pow x 2)))) x)","(/ (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (+ (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))) x) (+ (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (+ (* 2/3 (/ 1 n)) (* 4/3 (/ 1 (pow n 3)))) (* 2 (/ 1 (pow n 2))))) (pow x 2)) (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (+ (* 2/3 (/ 1 (pow n 4))) (* 11/6 (/ 1 (pow n 2)))) (+ (* 1/2 (/ 1 n)) (* 2 (/ 1 (pow n 3)))))) (pow x 3))))) x)","(+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) (* n x))))","(+ (exp (* -2 (/ (log (/ 1 x)) n))) (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) (* n x))) (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))) (pow x 2))))","(+ (exp (* -2 (/ (log (/ 1 x)) n))) (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) (* n x))) (+ (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))) (pow x 2)) (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (+ (* 2/3 (/ 1 n)) (* 4/3 (/ 1 (pow n 3)))) (* 2 (/ 1 (pow n 2))))) (pow x 3)))))","(/ (pow (exp (* -1/2 (/ (log (/ 1 x)) n))) 2) (* n x))","(/ (+ (* 1/4 (/ (pow (exp (* -1/2 (/ (log (/ 1 x)) n))) 2) (* (pow n 2) x))) (+ (* 2 (/ (* (pow (exp (* -1/2 (/ (log (/ 1 x)) n))) 2) (- (* 1/8 (/ 1 (pow n 2))) (* 1/4 (/ 1 n)))) x)) (/ (pow (exp (* -1/2 (/ (log (/ 1 x)) n))) 2) n))) x)","(/ (+ (* 1/4 (/ (pow (exp (* -1/2 (/ (log (/ 1 x)) n))) 2) (* (pow n 2) x))) (+ (* 2 (/ (* (pow (exp (* -1/2 (/ (log (/ 1 x)) n))) 2) (- (* 1/8 (/ 1 (pow n 2))) (* 1/4 (/ 1 n)))) x)) (+ (* 2 (/ (* (pow (exp (* -1/2 (/ (log (/ 1 x)) n))) 2) (- (+ (* 1/48 (/ 1 (pow n 3))) (* 1/6 (/ 1 n))) (* 1/8 (/ 1 (pow n 2))))) (pow x 2))) (+ (/ (* (pow (exp (* -1/2 (/ (log (/ 1 x)) n))) 2) (- (* 1/8 (/ 1 (pow n 2))) (* 1/4 (/ 1 n)))) (* n (pow x 2))) (/ (pow (exp (* -1/2 (/ (log (/ 1 x)) n))) 2) n))))) x)","(/ (+ (* 1/4 (/ (pow (exp (* -1/2 (/ (log (/ 1 x)) n))) 2) (* (pow n 2) x))) (+ (* 2 (/ (* (pow (exp (* -1/2 (/ (log (/ 1 x)) n))) 2) (- (* 1/8 (/ 1 (pow n 2))) (* 1/4 (/ 1 n)))) x)) (+ (* 2 (/ (* (pow (exp (* -1/2 (/ (log (/ 1 x)) n))) 2) (- (+ (* 1/384 (/ 1 (pow n 4))) (* 11/96 (/ 1 (pow n 2)))) (+ (* 1/32 (/ 1 (pow n 3))) (* 1/8 (/ 1 n))))) (pow x 3))) (+ (* 2 (/ (* (pow (exp (* -1/2 (/ (log (/ 1 x)) n))) 2) (- (+ (* 1/48 (/ 1 (pow n 3))) (* 1/6 (/ 1 n))) (* 1/8 (/ 1 (pow n 2))))) (pow x 2))) (+ (/ (* (pow (exp (* -1/2 (/ (log (/ 1 x)) n))) 2) (- (* 1/8 (/ 1 (pow n 2))) (* 1/4 (/ 1 n)))) (* n (pow x 2))) (+ (/ (* (pow (exp (* -1/2 (/ (log (/ 1 x)) n))) 2) (- (+ (* 1/48 (/ 1 (pow n 3))) (* 1/6 (/ 1 n))) (* 1/8 (/ 1 (pow n 2))))) (* n (pow x 3))) (+ (/ (* (pow (exp (* -1/2 (/ (log (/ 1 x)) n))) 2) (pow (- (* 1/8 (/ 1 (pow n 2))) (* 1/4 (/ 1 n))) 2)) (pow x 3)) (/ (pow (exp (* -1/2 (/ (log (/ 1 x)) n))) 2) n)))))))) x)","(* 2 (exp (* -1/2 (/ (log (/ 1 x)) n))))","(+ (* 1/2 (/ (exp (* -1/2 (/ (log (/ 1 x)) n))) (* n x))) (* 2 (exp (* -1/2 (/ (log (/ 1 x)) n)))))","(+ (* 1/2 (/ (exp (* -1/2 (/ (log (/ 1 x)) n))) (* n x))) (+ (* 2 (exp (* -1/2 (/ (log (/ 1 x)) n)))) (/ (* (exp (* -1/2 (/ (log (/ 1 x)) n))) (- (* 1/8 (/ 1 (pow n 2))) (* 1/4 (/ 1 n)))) (pow x 2))))","(+ (* 1/2 (/ (exp (* -1/2 (/ (log (/ 1 x)) n))) (* n x))) (+ (* 2 (exp (* -1/2 (/ (log (/ 1 x)) n)))) (+ (/ (* (exp (* -1/2 (/ (log (/ 1 x)) n))) (- (* 1/8 (/ 1 (pow n 2))) (* 1/4 (/ 1 n)))) (pow x 2)) (/ (* (exp (* -1/2 (/ (log (/ 1 x)) n))) (- (+ (* 1/48 (/ 1 (pow n 3))) (* 1/6 (/ 1 n))) (* 1/8 (/ 1 (pow n 2))))) (pow x 3)))))","(exp (* -1/2 (/ (log (/ 1 x)) n)))","(+ (exp (* -1/2 (/ (log (/ 1 x)) n))) (* 1/2 (/ (exp (* -1/2 (/ (log (/ 1 x)) n))) (* n x))))","(+ (exp (* -1/2 (/ (log (/ 1 x)) n))) (+ (* 1/2 (/ (exp (* -1/2 (/ (log (/ 1 x)) n))) (* n x))) (/ (* (exp (* -1/2 (/ (log (/ 1 x)) n))) (- (* 1/8 (/ 1 (pow n 2))) (* 1/4 (/ 1 n)))) (pow x 2))))","(+ (exp (* -1/2 (/ (log (/ 1 x)) n))) (+ (* 1/2 (/ (exp (* -1/2 (/ (log (/ 1 x)) n))) (* n x))) (+ (/ (* (exp (* -1/2 (/ (log (/ 1 x)) n))) (- (* 1/8 (/ 1 (pow n 2))) (* 1/4 (/ 1 n)))) (pow x 2)) (/ (* (exp (* -1/2 (/ (log (/ 1 x)) n))) (- (+ (* 1/48 (/ 1 (pow n 3))) (* 1/6 (/ 1 n))) (* 1/8 (/ 1 (pow n 2))))) (pow x 3)))))","(* -1 x)","(* x (- (/ 1 x) 1))","(* -2 (exp (* -1 (/ (log (/ 1 x)) n))))","(- (* -1 (/ (exp (* -1 (/ (log (/ 1 x)) n))) (* n x))) (* 2 (exp (* -1 (/ (log (/ 1 x)) n)))))","(- (* -1 (/ (* (exp (* -1 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (pow x 2))) (+ (* 2 (exp (* -1 (/ (log (/ 1 x)) n)))) (/ (exp (* -1 (/ (log (/ 1 x)) n))) (* n x))))","(- (* -1 (/ (* (exp (* -1 (/ (log (/ 1 x)) n))) (- (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))) (* 1/2 (/ 1 (pow n 2))))) (pow x 3))) (+ (* 2 (exp (* -1 (/ (log (/ 1 x)) n)))) (+ (/ (exp (* -1 (/ (log (/ 1 x)) n))) (* n x)) (/ (* (exp (* -1 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (pow x 2)))))","(* 1/2 (/ (exp (* -1/2 (/ (log (/ 1 x)) n))) (* n x)))","(/ (+ (* 1/2 (/ (exp (* -1/2 (/ (log (/ 1 x)) n))) n)) (/ (* (exp (* -1/2 (/ (log (/ 1 x)) n))) (- (* 1/8 (/ 1 (pow n 2))) (* 1/4 (/ 1 n)))) x)) x)","(/ (+ (* 1/2 (/ (exp (* -1/2 (/ (log (/ 1 x)) n))) n)) (+ (/ (* (exp (* -1/2 (/ (log (/ 1 x)) n))) (- (* 1/8 (/ 1 (pow n 2))) (* 1/4 (/ 1 n)))) x) (/ (* (exp (* -1/2 (/ (log (/ 1 x)) n))) (- (+ (* 1/48 (/ 1 (pow n 3))) (* 1/6 (/ 1 n))) (* 1/8 (/ 1 (pow n 2))))) (pow x 2)))) x)","(/ (+ (* 1/2 (/ (exp (* -1/2 (/ (log (/ 1 x)) n))) n)) (+ (/ (* (exp (* -1/2 (/ (log (/ 1 x)) n))) (- (* 1/8 (/ 1 (pow n 2))) (* 1/4 (/ 1 n)))) x) (+ (/ (* (exp (* -1/2 (/ (log (/ 1 x)) n))) (- (+ (* 1/384 (/ 1 (pow n 4))) (* 11/96 (/ 1 (pow n 2)))) (+ (* 1/32 (/ 1 (pow n 3))) (* 1/8 (/ 1 n))))) (pow x 3)) (/ (* (exp (* -1/2 (/ (log (/ 1 x)) n))) (- (+ (* 1/48 (/ 1 (pow n 3))) (* 1/6 (/ 1 n))) (* 1/8 (/ 1 (pow n 2))))) (pow x 2))))) x)","(/ (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)) (* n x))","(* -1 (/ (+ (* -1 (/ (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)) n)) (* -1 (/ (* (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) x))) x))","(* -1 (/ (+ (* -1 (/ (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)) n)) (* -1 (/ (+ (* -1 (/ (* (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)) (- (* 1/2 (/ 1 (pow n 2))) (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))))) x)) (* (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n))))) x))) x))","(* -1 (/ (+ (* -1 (/ (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)) n)) (* -1 (/ (+ (* -1 (/ (+ (* -1 (/ (* (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)) (- (+ (* 1/24 (/ 1 (pow n 4))) (* 11/24 (/ 1 (pow n 2)))) (+ (* 1/4 (/ 1 n)) (* 1/4 (/ 1 (pow n 3)))))) x)) (* (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)) (- (* 1/2 (/ 1 (pow n 2))) (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n)))))) x)) (* (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n))))) x))) x))","(exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))","(+ (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)) (/ (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)) (* n x)))","(+ (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)) (* -1 (/ (+ (* -1 (/ (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)) n)) (* -1 (/ (* (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) x))) x)))","(+ (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)) (* -1 (/ (+ (* -1 (/ (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)) n)) (* -1 (/ (+ (* -1 (/ (* (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)) (- (* 1/2 (/ 1 (pow n 2))) (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))))) x)) (* (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n))))) x))) x)))","(/ (+ (log -1) (* -1 (log (/ -1 x)))) n)","(+ (* -1 (/ (log (/ -1 x)) n)) (+ (/ 1 (* n x)) (/ (log -1) n)))","(+ (* -1 (/ (log (/ -1 x)) n)) (+ (* -1 (/ (- (* 1/2 (/ 1 (* n x))) (/ 1 n)) x)) (/ (log -1) n)))","(+ (* -1 (/ (log (/ -1 x)) n)) (+ (* -1 (/ (- (* -1 (/ (- (* 1/3 (/ 1 (* n x))) (* 1/2 (/ 1 n))) x)) (/ 1 n)) x)) (/ (log -1) n)))","(+ (log -1) (* -1 (log (/ -1 x))))","(+ (log -1) (+ (* -1 (log (/ -1 x))) (/ 1 x)))","(+ (log -1) (+ (* -1 (log (/ -1 x))) (* -1 (/ (- (* 1/2 (/ 1 x)) 1) x))))","(+ (log -1) (+ (* -1 (log (/ -1 x))) (* -1 (/ (- (* -1 (/ (- (* 1/3 (/ 1 x)) 1/2) x)) 1) x))))","(- (/ 1 (exp (* -1 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))) (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))","(- (+ (/ 1 (exp (* -1 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))) (/ 1 (* n (* x (exp (* -1 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))) (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))","(- (+ (* -1 (/ (- (* -1 (/ (- (* 1/2 (/ 1 (* (pow n 2) (exp (* -1 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) (* 1/2 (/ 1 (* n (exp (* -1 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))) x)) (/ 1 (* n (exp (* -1 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) x)) (/ 1 (exp (* -1 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))","(- (+ (* -1 (/ (- (* -1 (/ (- (+ (* -1 (/ (+ (* 1/2 (/ 1 n)) (* 1/2 (/ 1 (pow n 2)))) (* n (* x (exp (* -1 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))) (+ (* 1/2 (/ 1 (* (pow n 2) (exp (* -1 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) (+ (/ 1/3 (* n (* x (exp (* -1 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) (/ 2/3 (* (pow n 3) (* x (exp (* -1 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))))) (* 1/2 (/ 1 (* n (exp (* -1 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))) x)) (/ 1 (* n (exp (* -1 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) x)) (/ 1 (exp (* -1 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))","(/ 1 (exp (* -1 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))","(+ (/ 1 (exp (* -1 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))) (/ 1 (* n (* x (exp (* -1 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))))","(+ (* -1 (/ (- (* -1 (/ (- (* 1/2 (/ 1 (* (pow n 2) (exp (* -1 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) (* 1/2 (/ 1 (* n (exp (* -1 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))) x)) (/ 1 (* n (exp (* -1 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) x)) (/ 1 (exp (* -1 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))","(+ (* -1 (/ (- (* -1 (/ (- (+ (* -1 (/ (+ (* 1/2 (/ 1 n)) (* 1/2 (/ 1 (pow n 2)))) (* n (* x (exp (* -1 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))) (+ (* 1/2 (/ 1 (* (pow n 2) (exp (* -1 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) (+ (/ 1/3 (* n (* x (exp (* -1 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) (/ 2/3 (* (pow n 3) (* x (exp (* -1 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))))) (* 1/2 (/ 1 (* n (exp (* -1 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))) x)) (/ 1 (* n (exp (* -1 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) x)) (/ 1 (exp (* -1 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))","(exp (* -1 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))","(+ (exp (* -1 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* -1 (/ (exp (* -1 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* n x))))","(+ (exp (* -1 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* -1 (/ (+ (* -1 (/ (* (exp (* -1 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* 1/2 (/ 1 n)) (* 1/2 (/ 1 (pow n 2))))) x)) (/ (exp (* -1 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) x)))","(+ (exp (* -1 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* -1 (/ (+ (* -1 (/ (+ (* -1 (/ (* (exp (* -1 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* 1/3 (/ 1 n)) (+ (* 1/2 (/ 1 (pow n 2))) (* 1/6 (/ 1 (pow n 3)))))) x)) (* (exp (* -1 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* 1/2 (/ 1 n)) (* 1/2 (/ 1 (pow n 2)))))) x)) (/ (exp (* -1 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) x)))","(- (* (exp (* -2 (/ (log (/ -1 x)) n))) (exp (/ (+ (log -1) (log (/ -1 x))) n))) (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))","(- (+ (* (exp (* -2 (/ (log (/ -1 x)) n))) (exp (/ (+ (log -1) (log (/ -1 x))) n))) (/ (* (exp (* -2 (/ (log (/ -1 x)) n))) (exp (/ (+ (log -1) (log (/ -1 x))) n))) (* n x))) (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))","(- (+ (* -1 (/ (+ (* -1 (/ (* (exp (* -2 (/ (log (/ -1 x)) n))) (exp (/ (+ (log -1) (log (/ -1 x))) n))) n)) (* -1 (/ (+ (* -1 (/ (* (exp (* -2 (/ (log (/ -1 x)) n))) (exp (/ (+ (log -1) (log (/ -1 x))) n))) n)) (* (exp (* -2 (/ (log (/ -1 x)) n))) (* (exp (/ (+ (log -1) (log (/ -1 x))) n)) (+ (* 1/2 (/ 1 n)) (* 1/2 (/ 1 (pow n 2))))))) x))) x)) (* (exp (* -2 (/ (log (/ -1 x)) n))) (exp (/ (+ (log -1) (log (/ -1 x))) n)))) (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))","(- (+ (* -1 (/ (+ (* -1 (/ (* (exp (* -2 (/ (log (/ -1 x)) n))) (exp (/ (+ (log -1) (log (/ -1 x))) n))) n)) (* -1 (/ (+ (* -1 (/ (* (exp (* -2 (/ (log (/ -1 x)) n))) (exp (/ (+ (log -1) (log (/ -1 x))) n))) n)) (+ (* -1 (/ (+ (* -1 (* (exp (* -2 (/ (log (/ -1 x)) n))) (* (exp (/ (+ (log -1) (log (/ -1 x))) n)) (+ (* 1/3 (/ 1 n)) (+ (* 1/2 (/ 1 (pow n 2))) (* 1/6 (/ 1 (pow n 3)))))))) (/ (* (exp (* -2 (/ (log (/ -1 x)) n))) (exp (/ (+ (log -1) (log (/ -1 x))) n))) (pow n 2))) x)) (* (exp (* -2 (/ (log (/ -1 x)) n))) (* (exp (/ (+ (log -1) (log (/ -1 x))) n)) (+ (* 1/2 (/ 1 n)) (* 1/2 (/ 1 (pow n 2)))))))) x))) x)) (* (exp (* -2 (/ (log (/ -1 x)) n))) (exp (/ (+ (log -1) (log (/ -1 x))) n)))) (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))","(* (exp (* -2 (/ (log (/ -1 x)) n))) (exp (/ (+ (log -1) (log (/ -1 x))) n)))","(+ (* (exp (* -2 (/ (log (/ -1 x)) n))) (exp (/ (+ (log -1) (log (/ -1 x))) n))) (/ (* (exp (* -2 (/ (log (/ -1 x)) n))) (exp (/ (+ (log -1) (log (/ -1 x))) n))) (* n x)))","(+ (* -1 (/ (+ (* -1 (/ (* (exp (* -2 (/ (log (/ -1 x)) n))) (exp (/ (+ (log -1) (log (/ -1 x))) n))) n)) (* -1 (/ (+ (* -1 (/ (* (exp (* -2 (/ (log (/ -1 x)) n))) (exp (/ (+ (log -1) (log (/ -1 x))) n))) n)) (* (exp (* -2 (/ (log (/ -1 x)) n))) (* (exp (/ (+ (log -1) (log (/ -1 x))) n)) (+ (* 1/2 (/ 1 n)) (* 1/2 (/ 1 (pow n 2))))))) x))) x)) (* (exp (* -2 (/ (log (/ -1 x)) n))) (exp (/ (+ (log -1) (log (/ -1 x))) n))))","(+ (* -1 (/ (+ (* -1 (/ (* (exp (* -2 (/ (log (/ -1 x)) n))) (exp (/ (+ (log -1) (log (/ -1 x))) n))) n)) (* -1 (/ (+ (* -1 (/ (* (exp (* -2 (/ (log (/ -1 x)) n))) (exp (/ (+ (log -1) (log (/ -1 x))) n))) n)) (+ (* -1 (/ (+ (* -1 (* (exp (* -2 (/ (log (/ -1 x)) n))) (* (exp (/ (+ (log -1) (log (/ -1 x))) n)) (+ (* 1/6 (/ 1 (pow n 3))) (+ (* 1/2 (/ 1 (pow n 2))) (* 1/3 (/ 1 n))))))) (/ (* (exp (* -2 (/ (log (/ -1 x)) n))) (exp (/ (+ (log -1) (log (/ -1 x))) n))) (pow n 2))) x)) (* (exp (* -2 (/ (log (/ -1 x)) n))) (* (exp (/ (+ (log -1) (log (/ -1 x))) n)) (+ (* 1/2 (/ 1 n)) (* 1/2 (/ 1 (pow n 2)))))))) x))) x)) (* (exp (* -2 (/ (log (/ -1 x)) n))) (exp (/ (+ (log -1) (log (/ -1 x))) n))))","(exp (* -2 (/ (log (/ -1 x)) n)))","(+ (exp (* -2 (/ (log (/ -1 x)) n))) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) (* n (pow x 2)))))","(+ (exp (* -2 (/ (log (/ -1 x)) n))) (+ (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) (* n (pow x 2)))) (/ (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (pow x 4))))","(+ (exp (* -2 (/ (log (/ -1 x)) n))) (+ (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) (* n (pow x 2)))) (+ (/ (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (pow x 4)) (/ (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))))) (pow x 6)))))","(/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* n (* x (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))","(* -1 (/ (- (* -1 (/ (- (* 1/2 (/ (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))) (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))) (* 1/2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* (pow n 2) (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) x)) (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* n (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) x))","(* -1 (/ (- (* -1 (/ (- (* -1 (/ (- (* 1/2 (/ (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (+ (* 2/3 (/ 1 n)) (* 4/3 (/ 1 (pow n 3)))))) (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))) (+ (* -1/2 (/ (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* n (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) (* -1/2 (/ (- (* 1/2 (/ (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))) (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))) (* 1/2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* (pow n 2) (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) n)))) x)) (* -1 (- (* 1/2 (/ (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))) (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))) (* 1/2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* (pow n 2) (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))))) x)) (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* n (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) x))","(* -1 (/ (- (* -1 (/ (- (* -1 (/ (- (* -1 (/ (- (* 1/2 (/ (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (+ (* 2/3 (/ 1 (pow n 4))) (* 11/6 (/ 1 (pow n 2)))) (+ (* 1/2 (/ 1 n)) (* 2 (/ 1 (pow n 3)))))) (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))) (+ (* -1/2 (/ (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 1/2 (/ 1 (pow n 2))) (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))))) (* n (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) (+ (* -1/2 (/ (- (* 1/2 (/ (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (+ (* 2/3 (/ 1 n)) (* 4/3 (/ 1 (pow n 3)))))) (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))) (+ (* -1/2 (/ (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* n (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) (* -1/2 (/ (- (* 1/2 (/ (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))) (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))) (* 1/2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* (pow n 2) (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) n)))) n)) (* 1/2 (* (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n))) (- (* 1/2 (/ (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))) (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))) (* 1/2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* (pow n 2) (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))))))) x)) (* -1 (- (* 1/2 (/ (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (+ (* 2/3 (/ 1 n)) (* 4/3 (/ 1 (pow n 3)))))) (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))) (+ (* -1/2 (/ (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* n (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) (* -1/2 (/ (- (* 1/2 (/ (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))) (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))) (* 1/2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* (pow n 2) (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) n)))))) x)) (* -1 (- (* 1/2 (/ (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))) (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))) (* 1/2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* (pow n 2) (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))))) x)) (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* n (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) x))","(* -1 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* n (* x (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))","(* -1 (/ (- (+ (* 1/2 (/ (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))) (* x (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* n (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) (* 1/2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* (pow n 2) (* x (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))) x))","(* -1 (/ (+ (* -1 (/ (- (+ (* -1 (- (* 1/2 (/ (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))) (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))) (* 1/2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* (pow n 2) (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))) (* 1/2 (/ (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (+ (* 2/3 (/ 1 n)) (* 4/3 (/ 1 (pow n 3)))))) (* x (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) (+ (* -1/2 (/ (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* n (* x (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) (* -1/2 (/ (- (* 1/2 (/ (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))) (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))) (* 1/2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* (pow n 2) (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) (* n x))))) x)) (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* n (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) x))","(* -1 (/ (+ (* -1 (/ (+ (* -1 (- (* 1/2 (/ (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))) (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))) (* 1/2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* (pow n 2) (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))) (* -1 (/ (- (+ (* -1 (- (* 1/2 (/ (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (+ (* 2/3 (/ 1 n)) (* 4/3 (/ 1 (pow n 3)))))) (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))) (+ (* -1/2 (/ (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* n (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) (* -1/2 (/ (- (* 1/2 (/ (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))) (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))) (* 1/2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* (pow n 2) (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) n))))) (* 1/2 (/ (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (+ (* 2/3 (/ 1 (pow n 4))) (* 11/6 (/ 1 (pow n 2)))) (+ (* 1/2 (/ 1 n)) (* 2 (/ 1 (pow n 3)))))) (* x (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) (+ (* -1/2 (/ (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 1/2 (/ 1 (pow n 2))) (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))))) (* n (* x (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) (+ (* -1/2 (/ (- (* 1/2 (/ (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (+ (* 2/3 (/ 1 n)) (* 4/3 (/ 1 (pow n 3)))))) (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))) (+ (* -1/2 (/ (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* n (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) (* -1/2 (/ (- (* 1/2 (/ (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))) (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))) (* 1/2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* (pow n 2) (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) n)))) (* n x))) (* 1/2 (/ (* (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n))) (- (* 1/2 (/ (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))) (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))) (* 1/2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* (pow n 2) (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))) x))))) x))) x)) (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* n (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) x))","(* 2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* n x)))","(* -1 (/ (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))) x))) x))","(* -1 (/ (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (+ (* -1 (/ (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (+ (* 2/3 (/ 1 n)) (* 4/3 (/ 1 (pow n 3)))))) x)) (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n)))) x))) x))","(* -1 (/ (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (+ (* -1 (/ (+ (* -1 (/ (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (+ (* 2/3 (/ 1 (pow n 4))) (* 11/6 (/ 1 (pow n 2)))) (+ (* 1/2 (/ 1 n)) (* 2 (/ 1 (pow n 3)))))) x)) (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (+ (* 2/3 (/ 1 n)) (* 4/3 (/ 1 (pow n 3))))))) x)) (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n)))) x))) x))","(exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))","(+ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* 2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* n x))))","(+ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* -1 (/ (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))) x))) x)))","(+ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* -1 (/ (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (+ (* -1 (/ (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (+ (* 2/3 (/ 1 n)) (* 4/3 (/ 1 (pow n 3)))))) x)) (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n)))) x))) x)))","(/ (pow (exp (* 1/2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) 2) (* n x))","(* -1 (/ (+ (* -1 (/ (+ (* 1/4 (/ (pow (exp (* 1/2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) 2) (pow n 2))) (* 2 (* (pow (exp (* 1/2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) 2) (- (* 1/8 (/ 1 (pow n 2))) (* 1/4 (/ 1 n)))))) x)) (* -1 (/ (pow (exp (* 1/2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) 2) n))) x))","(* -1 (/ (+ (* -1 (/ (+ (* -1 (/ (+ (* -1 (/ (* (pow (exp (* 1/2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) 2) (- (* 1/8 (/ 1 (pow n 2))) (* 1/4 (/ 1 n)))) n)) (* 2 (* (pow (exp (* 1/2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) 2) (- (* 1/8 (/ 1 (pow n 2))) (+ (* 1/48 (/ 1 (pow n 3))) (* 1/6 (/ 1 n))))))) x)) (+ (* 1/4 (/ (pow (exp (* 1/2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) 2) (pow n 2))) (* 2 (* (pow (exp (* 1/2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) 2) (- (* 1/8 (/ 1 (pow n 2))) (* 1/4 (/ 1 n))))))) x)) (* -1 (/ (pow (exp (* 1/2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) 2) n))) x))","(* -1 (/ (+ (* -1 (/ (+ (* -1 (/ (+ (* -1 (/ (* (pow (exp (* 1/2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) 2) (- (* 1/8 (/ 1 (pow n 2))) (* 1/4 (/ 1 n)))) n)) (+ (* -1 (/ (+ (* -1 (/ (* (pow (exp (* 1/2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) 2) (- (* 1/8 (/ 1 (pow n 2))) (+ (* 1/48 (/ 1 (pow n 3))) (* 1/6 (/ 1 n))))) n)) (+ (* 2 (* (pow (exp (* 1/2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) 2) (- (+ (* 1/384 (/ 1 (pow n 4))) (* 11/96 (/ 1 (pow n 2)))) (+ (* 1/32 (/ 1 (pow n 3))) (* 1/8 (/ 1 n)))))) (* (pow (exp (* 1/2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) 2) (pow (- (* 1/8 (/ 1 (pow n 2))) (* 1/4 (/ 1 n))) 2)))) x)) (* 2 (* (pow (exp (* 1/2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) 2) (- (* 1/8 (/ 1 (pow n 2))) (+ (* 1/48 (/ 1 (pow n 3))) (* 1/6 (/ 1 n)))))))) x)) (+ (* 1/4 (/ (pow (exp (* 1/2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) 2) (pow n 2))) (* 2 (* (pow (exp (* 1/2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) 2) (- (* 1/8 (/ 1 (pow n 2))) (* 1/4 (/ 1 n))))))) x)) (* -1 (/ (pow (exp (* 1/2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) 2) n))) x))","(* 2 (exp (* 1/2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))","(+ (* 1/2 (/ (exp (* 1/2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* n x))) (* 2 (exp (* 1/2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))","(+ (* -1 (/ (+ (* -1 (/ (* (exp (* 1/2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 1/8 (/ 1 (pow n 2))) (* 1/4 (/ 1 n)))) x)) (* -1/2 (/ (exp (* 1/2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n))) x)) (* 2 (exp (* 1/2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))","(+ (* -1 (/ (+ (* -1 (/ (+ (* -1 (/ (* (exp (* 1/2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 1/8 (/ 1 (pow n 2))) (+ (* 1/48 (/ 1 (pow n 3))) (* 1/6 (/ 1 n))))) x)) (* (exp (* 1/2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 1/8 (/ 1 (pow n 2))) (* 1/4 (/ 1 n))))) x)) (* -1/2 (/ (exp (* 1/2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n))) x)) (* 2 (exp (* 1/2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))","(exp (* 1/2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))","(+ (exp (* 1/2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* 1/2 (/ (exp (* 1/2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* n x))))","(+ (exp (* 1/2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* -1 (/ (+ (* -1 (/ (* (exp (* 1/2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 1/8 (/ 1 (pow n 2))) (* 1/4 (/ 1 n)))) x)) (* -1/2 (/ (exp (* 1/2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n))) x)))","(+ (exp (* 1/2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* -1 (/ (+ (* -1 (/ (+ (* -1 (/ (* (exp (* 1/2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 1/8 (/ 1 (pow n 2))) (+ (* 1/48 (/ 1 (pow n 3))) (* 1/6 (/ 1 n))))) x)) (* (exp (* 1/2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 1/8 (/ 1 (pow n 2))) (* 1/4 (/ 1 n))))) x)) (* -1/2 (/ (exp (* 1/2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n))) x)))","(* -1 (* x (- 1 (/ 1 x))))","(* -2 (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))","(- (* -1 (/ (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)) (* n x))) (* 2 (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))","(- (* -1 (/ (- (/ (* (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) x) (* -1 (/ (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)) n))) x)) (* 2 (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))","(- (* -1 (/ (- (* -1 (/ (- (/ (* (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)) (- (* 1/2 (/ 1 (pow n 2))) (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))))) x) (* (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n))))) x)) (* -1 (/ (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)) n))) x)) (* 2 (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))","(* 1/2 (/ (exp (* 1/2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* n x)))","(* -1 (/ (+ (* -1 (/ (* (exp (* 1/2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 1/8 (/ 1 (pow n 2))) (* 1/4 (/ 1 n)))) x)) (* -1/2 (/ (exp (* 1/2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n))) x))","(* -1 (/ (+ (* -1 (/ (+ (* -1 (/ (* (exp (* 1/2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 1/8 (/ 1 (pow n 2))) (+ (* 1/48 (/ 1 (pow n 3))) (* 1/6 (/ 1 n))))) x)) (* (exp (* 1/2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 1/8 (/ 1 (pow n 2))) (* 1/4 (/ 1 n))))) x)) (* -1/2 (/ (exp (* 1/2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n))) x))","(* -1 (/ (+ (* -1 (/ (+ (* -1 (/ (+ (* -1 (/ (* (exp (* 1/2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (+ (* 1/384 (/ 1 (pow n 4))) (* 11/96 (/ 1 (pow n 2)))) (+ (* 1/32 (/ 1 (pow n 3))) (* 1/8 (/ 1 n))))) x)) (* (exp (* 1/2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 1/8 (/ 1 (pow n 2))) (+ (* 1/48 (/ 1 (pow n 3))) (* 1/6 (/ 1 n)))))) x)) (* (exp (* 1/2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 1/8 (/ 1 (pow n 2))) (* 1/4 (/ 1 n))))) x)) (* -1/2 (/ (exp (* 1/2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n))) x))","(- (exp (/ (log (+ 1 x)) n)) (exp (/ (log x) n)))","(exp (/ (log (+ 1 x)) n))","(/ (log (+ 1 x)) n)","(- (/ 1 (exp (* -1 (/ (log (+ 1 x)) n)))) (exp (/ (log x) n)))","(/ 1 (exp (* -1 (/ (log (+ 1 x)) n))))","(exp (* -1 (/ (log (+ 1 x)) n)))","(- (* (exp (/ (log (- (pow x 2) 1)) n)) (exp (/ (log (/ -1 (- 1 x))) n))) (exp (/ (log x) n)))","(* (exp (/ (log (- (pow x 2) 1)) n)) (exp (/ (log (/ -1 (- 1 x))) n)))","(exp (/ (log (- (pow x 2) 1)) n))","(/ (- (exp (* 2 (/ (log (+ 1 x)) n))) (exp (* 2 (/ (log x) n)))) (+ (exp (/ (log x) n)) (exp (/ (log (+ 1 x)) n))))","(* -1 (/ (- (exp (* 2 (/ (log (+ 1 x)) n))) (exp (* 2 (/ (log x) n)))) (+ (exp (/ (log x) n)) (exp (/ (log (+ 1 x)) n)))))","(- (exp (* 2 (/ (log (+ 1 x)) n))) (exp (* 2 (/ (log x) n))))","(exp (* 2 (/ (log (+ 1 x)) n)))","(* (+ (exp (* 1/2 (/ (log x) n))) (exp (* 1/2 (/ (log (+ 1 x)) n)))) (- (exp (* 1/2 (/ (log (+ 1 x)) n))) (exp (* 1/2 (/ (log x) n)))))","(+ (exp (* 1/2 (/ (log x) n))) (exp (* 1/2 (/ (log (+ 1 x)) n))))","(exp (* 1/2 (/ (log (+ 1 x)) n)))","(/ -1 n)","(* -1 (+ (exp (/ (log x) n)) (exp (/ (log (+ 1 x)) n))))","(- (exp (* 1/2 (/ (log (+ 1 x)) n))) (exp (* 1/2 (/ (log x) n))))","(* -2 n)","(/ (- (log (+ 1 x)) (log x)) n)","(/ (- (+ (log (+ 1 x)) (* 1/2 (/ (pow (log (+ 1 x)) 2) n))) (+ (log x) (* 1/2 (/ (pow (log x) 2) n)))) n)","(/ (- (+ (log (+ 1 x)) (+ (* 1/6 (/ (pow (log (+ 1 x)) 3) (pow n 2))) (* 1/2 (/ (pow (log (+ 1 x)) 2) n)))) (+ (log x) (+ (* 1/6 (/ (pow (log x) 3) (pow n 2))) (* 1/2 (/ (pow (log x) 2) n))))) n)","(/ (- (+ (log (+ 1 x)) (+ (* 1/24 (/ (pow (log (+ 1 x)) 4) (pow n 3))) (+ (* 1/6 (/ (pow (log (+ 1 x)) 3) (pow n 2))) (* 1/2 (/ (pow (log (+ 1 x)) 2) n))))) (+ (log x) (+ (* 1/24 (/ (pow (log x) 4) (pow n 3))) (+ (* 1/6 (/ (pow (log x) 3) (pow n 2))) (* 1/2 (/ (pow (log x) 2) n)))))) n)","(+ 1 (/ (log (+ 1 x)) n))","(+ 1 (+ (* 1/2 (/ (pow (log (+ 1 x)) 2) (pow n 2))) (/ (log (+ 1 x)) n)))","(+ 1 (+ (* 1/6 (/ (pow (log (+ 1 x)) 3) (pow n 3))) (+ (* 1/2 (/ (pow (log (+ 1 x)) 2) (pow n 2))) (/ (log (+ 1 x)) n))))","(* -1 (/ (+ (log x) (* -1 (log (+ 1 x)))) n))","(/ (- (* -1 (/ (+ (* -1 (pow (log (+ 1 x)) 2)) (+ (* 1/2 (pow (log x) 2)) (* 1/2 (pow (log (+ 1 x)) 2)))) n)) (+ (log x) (* -1 (log (+ 1 x))))) n)","(/ (- (* -1 (/ (+ (* -1/6 (pow (log (+ 1 x)) 3)) (+ (* 1/6 (pow (log x) 3)) (+ (* 1/2 (pow (log (+ 1 x)) 3)) (* (log (+ 1 x)) (+ (* -1 (pow (log (+ 1 x)) 2)) (* 1/2 (pow (log (+ 1 x)) 2))))))) (pow n 2))) (+ (log x) (+ (* -1 (log (+ 1 x))) (+ (* -1 (/ (pow (log (+ 1 x)) 2) n)) (+ (* 1/2 (/ (pow (log x) 2) n)) (* 1/2 (/ (pow (log (+ 1 x)) 2) n))))))) n)","(/ (- (* -1 (/ (+ (* -1/2 (* (pow (log (+ 1 x)) 2) (+ (* -1 (pow (log (+ 1 x)) 2)) (* 1/2 (pow (log (+ 1 x)) 2))))) (+ (* -1/6 (pow (log (+ 1 x)) 4)) (+ (* 1/24 (pow (log x) 4)) (+ (* 1/24 (pow (log (+ 1 x)) 4)) (* (log (+ 1 x)) (+ (* -1/6 (pow (log (+ 1 x)) 3)) (+ (* 1/2 (pow (log (+ 1 x)) 3)) (* (log (+ 1 x)) (+ (* -1 (pow (log (+ 1 x)) 2)) (* 1/2 (pow (log (+ 1 x)) 2))))))))))) (pow n 3))) (+ (log x) (+ (* -1 (log (+ 1 x))) (+ (* -1 (/ (pow (log (+ 1 x)) 2) n)) (+ (* -1/6 (/ (pow (log (+ 1 x)) 3) (pow n 2))) (+ (* 1/6 (/ (pow (log x) 3) (pow n 2))) (+ (* 1/2 (/ (pow (log x) 2) n)) (+ (* 1/2 (/ (pow (log (+ 1 x)) 2) n)) (+ (* 1/2 (/ (pow (log (+ 1 x)) 3) (pow n 2))) (/ (* (log (+ 1 x)) (+ (* -1 (pow (log (+ 1 x)) 2)) (* 1/2 (pow (log (+ 1 x)) 2)))) (pow n 2))))))))))) n)","(- (+ 1 (* -1 (/ (+ (* -1 (pow (log (+ 1 x)) 2)) (* 1/2 (pow (log (+ 1 x)) 2))) (pow n 2)))) (* -1 (/ (log (+ 1 x)) n)))","(- (+ 1 (* -1 (/ (+ (* -1/6 (pow (log (+ 1 x)) 3)) (+ (* 1/2 (pow (log (+ 1 x)) 3)) (* (log (+ 1 x)) (+ (* -1 (pow (log (+ 1 x)) 2)) (* 1/2 (pow (log (+ 1 x)) 2)))))) (pow n 3)))) (+ (* -1 (/ (log (+ 1 x)) n)) (+ (* -1 (/ (pow (log (+ 1 x)) 2) (pow n 2))) (* 1/2 (/ (pow (log (+ 1 x)) 2) (pow n 2))))))","(+ 1 (* -1 (/ (log (+ 1 x)) n)))","(+ 1 (+ (* -1 (/ (log (+ 1 x)) n)) (* 1/2 (/ (pow (log (+ 1 x)) 2) (pow n 2)))))","(+ 1 (+ (* -1 (/ (log (+ 1 x)) n)) (+ (* -1/6 (/ (pow (log (+ 1 x)) 3) (pow n 3))) (* 1/2 (/ (pow (log (+ 1 x)) 2) (pow n 2))))))","(/ (- (+ (log (- (pow x 2) 1)) (log (/ -1 (- 1 x)))) (log x)) n)","(/ (- (+ (log (- (pow x 2) 1)) (+ (log (/ -1 (- 1 x))) (+ (* 1/2 (/ (pow (log (- (pow x 2) 1)) 2) n)) (+ (* 1/2 (/ (pow (log (/ -1 (- 1 x))) 2) n)) (/ (* (log (- (pow x 2) 1)) (log (/ -1 (- 1 x)))) n))))) (+ (log x) (* 1/2 (/ (pow (log x) 2) n)))) n)","(/ (- (+ (log (- (pow x 2) 1)) (+ (log (/ -1 (- 1 x))) (+ (* 1/6 (/ (pow (log (- (pow x 2) 1)) 3) (pow n 2))) (+ (* 1/6 (/ (pow (log (/ -1 (- 1 x))) 3) (pow n 2))) (+ (* 1/2 (/ (* (log (- (pow x 2) 1)) (pow (log (/ -1 (- 1 x))) 2)) (pow n 2))) (+ (* 1/2 (/ (* (pow (log (- (pow x 2) 1)) 2) (log (/ -1 (- 1 x)))) (pow n 2))) (+ (* 1/2 (/ (pow (log (- (pow x 2) 1)) 2) n)) (+ (* 1/2 (/ (pow (log (/ -1 (- 1 x))) 2) n)) (/ (* (log (- (pow x 2) 1)) (log (/ -1 (- 1 x)))) n))))))))) (+ (log x) (+ (* 1/6 (/ (pow (log x) 3) (pow n 2))) (* 1/2 (/ (pow (log x) 2) n))))) n)","(/ (- (+ (log (- (pow x 2) 1)) (+ (log (/ -1 (- 1 x))) (+ (* 1/24 (/ (pow (log (- (pow x 2) 1)) 4) (pow n 3))) (+ (* 1/24 (/ (pow (log (/ -1 (- 1 x))) 4) (pow n 3))) (+ (* 1/6 (/ (* (log (- (pow x 2) 1)) (pow (log (/ -1 (- 1 x))) 3)) (pow n 3))) (+ (* 1/6 (/ (* (pow (log (- (pow x 2) 1)) 3) (log (/ -1 (- 1 x)))) (pow n 3))) (+ (* 1/6 (/ (pow (log (- (pow x 2) 1)) 3) (pow n 2))) (+ (* 1/6 (/ (pow (log (/ -1 (- 1 x))) 3) (pow n 2))) (+ (* 1/4 (/ (* (pow (log (- (pow x 2) 1)) 2) (pow (log (/ -1 (- 1 x))) 2)) (pow n 3))) (+ (* 1/2 (/ (* (log (- (pow x 2) 1)) (pow (log (/ -1 (- 1 x))) 2)) (pow n 2))) (+ (* 1/2 (/ (* (pow (log (- (pow x 2) 1)) 2) (log (/ -1 (- 1 x)))) (pow n 2))) (+ (* 1/2 (/ (pow (log (- (pow x 2) 1)) 2) n)) (+ (* 1/2 (/ (pow (log (/ -1 (- 1 x))) 2) n)) (/ (* (log (- (pow x 2) 1)) (log (/ -1 (- 1 x)))) n)))))))))))))) (+ (log x) (+ (* 1/24 (/ (pow (log x) 4) (pow n 3))) (+ (* 1/6 (/ (pow (log x) 3) (pow n 2))) (* 1/2 (/ (pow (log x) 2) n)))))) n)","(+ 1 (+ (/ (log (- (pow x 2) 1)) n) (/ (log (/ -1 (- 1 x))) n)))","(+ 1 (+ (* 1/2 (/ (pow (log (- (pow x 2) 1)) 2) (pow n 2))) (+ (* 1/2 (/ (pow (log (/ -1 (- 1 x))) 2) (pow n 2))) (+ (/ (log (- (pow x 2) 1)) n) (+ (/ (log (/ -1 (- 1 x))) n) (/ (* (log (- (pow x 2) 1)) (log (/ -1 (- 1 x)))) (pow n 2)))))))","(+ 1 (+ (* 1/6 (/ (pow (log (- (pow x 2) 1)) 3) (pow n 3))) (+ (* 1/6 (/ (pow (log (/ -1 (- 1 x))) 3) (pow n 3))) (+ (* 1/2 (/ (* (log (- (pow x 2) 1)) (pow (log (/ -1 (- 1 x))) 2)) (pow n 3))) (+ (* 1/2 (/ (* (pow (log (- (pow x 2) 1)) 2) (log (/ -1 (- 1 x)))) (pow n 3))) (+ (* 1/2 (/ (pow (log (- (pow x 2) 1)) 2) (pow n 2))) (+ (* 1/2 (/ (pow (log (/ -1 (- 1 x))) 2) (pow n 2))) (+ (/ (log (- (pow x 2) 1)) n) (+ (/ (log (/ -1 (- 1 x))) n) (/ (* (log (- (pow x 2) 1)) (log (/ -1 (- 1 x)))) (pow n 2)))))))))))","(+ 1 (/ (log (- (pow x 2) 1)) n))","(+ 1 (+ (* 1/2 (/ (pow (log (- (pow x 2) 1)) 2) (pow n 2))) (/ (log (- (pow x 2) 1)) n)))","(+ 1 (+ (* 1/6 (/ (pow (log (- (pow x 2) 1)) 3) (pow n 3))) (+ (* 1/2 (/ (pow (log (- (pow x 2) 1)) 2) (pow n 2))) (/ (log (- (pow x 2) 1)) n))))","(* 1/2 (/ (- (* 2 (log (+ 1 x))) (* 2 (log x))) n))","(/ (- (* 1/2 (/ (- (* 2 (pow (log (+ 1 x)) 2)) (* 2 (pow (log x) 2))) n)) (+ (* -1/2 (- (* 2 (log (+ 1 x))) (* 2 (log x)))) (* 1/4 (/ (* (+ (log x) (log (+ 1 x))) (- (* 2 (log (+ 1 x))) (* 2 (log x)))) n)))) n)","(/ (- (* 1/2 (/ (- (* 4/3 (pow (log (+ 1 x)) 3)) (* 4/3 (pow (log x) 3))) (pow n 2))) (+ (* -1 (/ (- (* 1/2 (- (* 2 (pow (log (+ 1 x)) 2)) (* 2 (pow (log x) 2)))) (* 1/4 (* (+ (log x) (log (+ 1 x))) (- (* 2 (log (+ 1 x))) (* 2 (log x)))))) n)) (+ (* -1/2 (- (* 2 (log (+ 1 x))) (* 2 (log x)))) (+ (* 1/4 (/ (* (+ (* 1/2 (pow (log x) 2)) (* 1/2 (pow (log (+ 1 x)) 2))) (- (* 2 (log (+ 1 x))) (* 2 (log x)))) (pow n 2))) (* 1/2 (/ (* (+ (log x) (log (+ 1 x))) (- (* 1/2 (- (* 2 (pow (log (+ 1 x)) 2)) (* 2 (pow (log x) 2)))) (* 1/4 (* (+ (log x) (log (+ 1 x))) (- (* 2 (log (+ 1 x))) (* 2 (log x))))))) (pow n 2))))))) n)","(/ (- (* 1/2 (/ (- (* 2/3 (pow (log (+ 1 x)) 4)) (* 2/3 (pow (log x) 4))) (pow n 3))) (+ (* -1 (/ (- (* 1/2 (- (* 4/3 (pow (log (+ 1 x)) 3)) (* 4/3 (pow (log x) 3)))) (+ (* 1/4 (* (+ (* 1/2 (pow (log x) 2)) (* 1/2 (pow (log (+ 1 x)) 2))) (- (* 2 (log (+ 1 x))) (* 2 (log x))))) (* 1/2 (* (+ (log x) (log (+ 1 x))) (- (* 1/2 (- (* 2 (pow (log (+ 1 x)) 2)) (* 2 (pow (log x) 2)))) (* 1/4 (* (+ (log x) (log (+ 1 x))) (- (* 2 (log (+ 1 x))) (* 2 (log x)))))))))) (pow n 2))) (+ (* -1 (/ (- (* 1/2 (- (* 2 (pow (log (+ 1 x)) 2)) (* 2 (pow (log x) 2)))) (* 1/4 (* (+ (log x) (log (+ 1 x))) (- (* 2 (log (+ 1 x))) (* 2 (log x)))))) n)) (+ (* -1/2 (- (* 2 (log (+ 1 x))) (* 2 (log x)))) (+ (* 1/4 (/ (* (+ (* 1/6 (pow (log x) 3)) (* 1/6 (pow (log (+ 1 x)) 3))) (- (* 2 (log (+ 1 x))) (* 2 (log x)))) (pow n 3))) (+ (* 1/2 (/ (* (+ (log x) (log (+ 1 x))) (- (* 1/2 (- (* 4/3 (pow (log (+ 1 x)) 3)) (* 4/3 (pow (log x) 3)))) (+ (* 1/4 (* (+ (* 1/2 (pow (log x) 2)) (* 1/2 (pow (log (+ 1 x)) 2))) (- (* 2 (log (+ 1 x))) (* 2 (log x))))) (* 1/2 (* (+ (log x) (log (+ 1 x))) (- (* 1/2 (- (* 2 (pow (log (+ 1 x)) 2)) (* 2 (pow (log x) 2)))) (* 1/4 (* (+ (log x) (log (+ 1 x))) (- (* 2 (log (+ 1 x))) (* 2 (log x))))))))))) (pow n 3))) (* 1/2 (/ (* (+ (* 1/2 (pow (log x) 2)) (* 1/2 (pow (log (+ 1 x)) 2))) (- (* 1/2 (- (* 2 (pow (log (+ 1 x)) 2)) (* 2 (pow (log x) 2)))) (* 1/4 (* (+ (log x) (log (+ 1 x))) (- (* 2 (log (+ 1 x))) (* 2 (log x))))))) (pow n 3))))))))) n)","(* -1/2 (/ (- (* 2 (log (+ 1 x))) (* 2 (log x))) n))","(/ (+ (* -1 (/ (- (* 1/2 (- (* 2 (pow (log (+ 1 x)) 2)) (* 2 (pow (log x) 2)))) (* 1/4 (* (+ (log x) (log (+ 1 x))) (- (* 2 (log (+ 1 x))) (* 2 (log x)))))) n)) (* -1/2 (- (* 2 (log (+ 1 x))) (* 2 (log x))))) n)","(/ (+ (* -1 (/ (- (* 1/2 (- (* 4/3 (pow (log (+ 1 x)) 3)) (* 4/3 (pow (log x) 3)))) (+ (* 1/4 (* (+ (* 1/2 (pow (log x) 2)) (* 1/2 (pow (log (+ 1 x)) 2))) (- (* 2 (log (+ 1 x))) (* 2 (log x))))) (* 1/2 (* (+ (log x) (log (+ 1 x))) (- (* 1/2 (- (* 2 (pow (log (+ 1 x)) 2)) (* 2 (pow (log x) 2)))) (* 1/4 (* (+ (log x) (log (+ 1 x))) (- (* 2 (log (+ 1 x))) (* 2 (log x)))))))))) (pow n 2))) (+ (* -1 (/ (- (* 1/2 (- (* 2 (pow (log (+ 1 x)) 2)) (* 2 (pow (log x) 2)))) (* 1/4 (* (+ (log x) (log (+ 1 x))) (- (* 2 (log (+ 1 x))) (* 2 (log x)))))) n)) (* -1/2 (- (* 2 (log (+ 1 x))) (* 2 (log x)))))) n)","(/ (+ (* -1 (/ (- (* 1/2 (- (* 2/3 (pow (log (+ 1 x)) 4)) (* 2/3 (pow (log x) 4)))) (+ (* 1/4 (* (+ (* 1/6 (pow (log x) 3)) (* 1/6 (pow (log (+ 1 x)) 3))) (- (* 2 (log (+ 1 x))) (* 2 (log x))))) (+ (* 1/2 (* (+ (log x) (log (+ 1 x))) (- (* 1/2 (- (* 4/3 (pow (log (+ 1 x)) 3)) (* 4/3 (pow (log x) 3)))) (+ (* 1/4 (* (+ (* 1/2 (pow (log x) 2)) (* 1/2 (pow (log (+ 1 x)) 2))) (- (* 2 (log (+ 1 x))) (* 2 (log x))))) (* 1/2 (* (+ (log x) (log (+ 1 x))) (- (* 1/2 (- (* 2 (pow (log (+ 1 x)) 2)) (* 2 (pow (log x) 2)))) (* 1/4 (* (+ (log x) (log (+ 1 x))) (- (* 2 (log (+ 1 x))) (* 2 (log x)))))))))))) (* 1/2 (* (+ (* 1/2 (pow (log x) 2)) (* 1/2 (pow (log (+ 1 x)) 2))) (- (* 1/2 (- (* 2 (pow (log (+ 1 x)) 2)) (* 2 (pow (log x) 2)))) (* 1/4 (* (+ (log x) (log (+ 1 x))) (- (* 2 (log (+ 1 x))) (* 2 (log x))))))))))) (pow n 3))) (+ (* -1 (/ (- (* 1/2 (- (* 4/3 (pow (log (+ 1 x)) 3)) (* 4/3 (pow (log x) 3)))) (+ (* 1/4 (* (+ (* 1/2 (pow (log x) 2)) (* 1/2 (pow (log (+ 1 x)) 2))) (- (* 2 (log (+ 1 x))) (* 2 (log x))))) (* 1/2 (* (+ (log x) (log (+ 1 x))) (- (* 1/2 (- (* 2 (pow (log (+ 1 x)) 2)) (* 2 (pow (log x) 2)))) (* 1/4 (* (+ (log x) (log (+ 1 x))) (- (* 2 (log (+ 1 x))) (* 2 (log x)))))))))) (pow n 2))) (+ (* -1 (/ (- (* 1/2 (- (* 2 (pow (log (+ 1 x)) 2)) (* 2 (pow (log x) 2)))) (* 1/4 (* (+ (log x) (log (+ 1 x))) (- (* 2 (log (+ 1 x))) (* 2 (log x)))))) n)) (* -1/2 (- (* 2 (log (+ 1 x))) (* 2 (log x))))))) n)","(/ (- (* 2 (log (+ 1 x))) (* 2 (log x))) n)","(/ (- (+ (* 2 (log (+ 1 x))) (* 2 (/ (pow (log (+ 1 x)) 2) n))) (+ (* 2 (log x)) (* 2 (/ (pow (log x) 2) n)))) n)","(/ (- (+ (* 4/3 (/ (pow (log (+ 1 x)) 3) (pow n 2))) (+ (* 2 (log (+ 1 x))) (* 2 (/ (pow (log (+ 1 x)) 2) n)))) (+ (* 4/3 (/ (pow (log x) 3) (pow n 2))) (+ (* 2 (log x)) (* 2 (/ (pow (log x) 2) n))))) n)","(/ (- (+ (* 2/3 (/ (pow (log (+ 1 x)) 4) (pow n 3))) (+ (* 4/3 (/ (pow (log (+ 1 x)) 3) (pow n 2))) (+ (* 2 (log (+ 1 x))) (* 2 (/ (pow (log (+ 1 x)) 2) n))))) (+ (* 2/3 (/ (pow (log x) 4) (pow n 3))) (+ (* 4/3 (/ (pow (log x) 3) (pow n 2))) (+ (* 2 (log x)) (* 2 (/ (pow (log x) 2) n)))))) n)","(+ 1 (* 2 (/ (log (+ 1 x)) n)))","(+ 1 (+ (* 2 (/ (log (+ 1 x)) n)) (* 2 (/ (pow (log (+ 1 x)) 2) (pow n 2)))))","(+ 1 (+ (* 4/3 (/ (pow (log (+ 1 x)) 3) (pow n 3))) (+ (* 2 (/ (log (+ 1 x)) n)) (* 2 (/ (pow (log (+ 1 x)) 2) (pow n 2))))))","(* 2 (/ (- (* 1/2 (log (+ 1 x))) (* 1/2 (log x))) n))","(/ (+ (* 2 (- (* 1/2 (log (+ 1 x))) (* 1/2 (log x)))) (+ (* 2 (/ (- (* 1/8 (pow (log (+ 1 x)) 2)) (* 1/8 (pow (log x) 2))) n)) (/ (* (+ (* 1/2 (log x)) (* 1/2 (log (+ 1 x)))) (- (* 1/2 (log (+ 1 x))) (* 1/2 (log x)))) n))) n)","(/ (+ (* 2 (- (* 1/2 (log (+ 1 x))) (* 1/2 (log x)))) (+ (* 2 (/ (- (* 1/48 (pow (log (+ 1 x)) 3)) (* 1/48 (pow (log x) 3))) (pow n 2))) (+ (* 2 (/ (- (* 1/8 (pow (log (+ 1 x)) 2)) (* 1/8 (pow (log x) 2))) n)) (+ (/ (* (+ (* 1/8 (pow (log x) 2)) (* 1/8 (pow (log (+ 1 x)) 2))) (- (* 1/2 (log (+ 1 x))) (* 1/2 (log x)))) (pow n 2)) (+ (/ (* (+ (* 1/2 (log x)) (* 1/2 (log (+ 1 x)))) (- (* 1/8 (pow (log (+ 1 x)) 2)) (* 1/8 (pow (log x) 2)))) (pow n 2)) (/ (* (+ (* 1/2 (log x)) (* 1/2 (log (+ 1 x)))) (- (* 1/2 (log (+ 1 x))) (* 1/2 (log x)))) n)))))) n)","(/ (+ (* 2 (- (* 1/2 (log (+ 1 x))) (* 1/2 (log x)))) (+ (* 2 (/ (- (* 1/384 (pow (log (+ 1 x)) 4)) (* 1/384 (pow (log x) 4))) (pow n 3))) (+ (* 2 (/ (- (* 1/48 (pow (log (+ 1 x)) 3)) (* 1/48 (pow (log x) 3))) (pow n 2))) (+ (* 2 (/ (- (* 1/8 (pow (log (+ 1 x)) 2)) (* 1/8 (pow (log x) 2))) n)) (+ (/ (* (+ (* 1/48 (pow (log x) 3)) (* 1/48 (pow (log (+ 1 x)) 3))) (- (* 1/2 (log (+ 1 x))) (* 1/2 (log x)))) (pow n 3)) (+ (/ (* (+ (* 1/8 (pow (log x) 2)) (* 1/8 (pow (log (+ 1 x)) 2))) (- (* 1/8 (pow (log (+ 1 x)) 2)) (* 1/8 (pow (log x) 2)))) (pow n 3)) (+ (/ (* (+ (* 1/8 (pow (log x) 2)) (* 1/8 (pow (log (+ 1 x)) 2))) (- (* 1/2 (log (+ 1 x))) (* 1/2 (log x)))) (pow n 2)) (+ (/ (* (+ (* 1/2 (log x)) (* 1/2 (log (+ 1 x)))) (- (* 1/48 (pow (log (+ 1 x)) 3)) (* 1/48 (pow (log x) 3)))) (pow n 3)) (+ (/ (* (+ (* 1/2 (log x)) (* 1/2 (log (+ 1 x)))) (- (* 1/8 (pow (log (+ 1 x)) 2)) (* 1/8 (pow (log x) 2)))) (pow n 2)) (/ (* (+ (* 1/2 (log x)) (* 1/2 (log (+ 1 x)))) (- (* 1/2 (log (+ 1 x))) (* 1/2 (log x)))) n)))))))))) n)","2","(+ 2 (+ (* 1/2 (/ (log x) n)) (* 1/2 (/ (log (+ 1 x)) n))))","(+ 2 (+ (* 1/8 (/ (pow (log x) 2) (pow n 2))) (+ (* 1/8 (/ (pow (log (+ 1 x)) 2) (pow n 2))) (+ (* 1/2 (/ (log x) n)) (* 1/2 (/ (log (+ 1 x)) n))))))","(+ 2 (+ (* 1/48 (/ (pow (log x) 3) (pow n 3))) (+ (* 1/48 (/ (pow (log (+ 1 x)) 3) (pow n 3))) (+ (* 1/8 (/ (pow (log x) 2) (pow n 2))) (+ (* 1/8 (/ (pow (log (+ 1 x)) 2) (pow n 2))) (+ (* 1/2 (/ (log x) n)) (* 1/2 (/ (log (+ 1 x)) n))))))))","(+ 1 (* 1/2 (/ (log (+ 1 x)) n)))","(+ 1 (+ (* 1/8 (/ (pow (log (+ 1 x)) 2) (pow n 2))) (* 1/2 (/ (log (+ 1 x)) n))))","(+ 1 (+ (* 1/48 (/ (pow (log (+ 1 x)) 3) (pow n 3))) (+ (* 1/8 (/ (pow (log (+ 1 x)) 2) (pow n 2))) (* 1/2 (/ (log (+ 1 x)) n)))))","-2","(- (* -1 (/ (+ (log x) (log (+ 1 x))) n)) 2)","(- (* -1 (/ (+ (* 1/2 (pow (log x) 2)) (* 1/2 (pow (log (+ 1 x)) 2))) (pow n 2))) (+ 2 (+ (/ (log x) n) (/ (log (+ 1 x)) n))))","(- (* -1 (/ (+ (* 1/6 (pow (log x) 3)) (* 1/6 (pow (log (+ 1 x)) 3))) (pow n 3))) (+ 2 (+ (* 1/2 (/ (pow (log x) 2) (pow n 2))) (+ (* 1/2 (/ (pow (log (+ 1 x)) 2) (pow n 2))) (+ (/ (log x) n) (/ (log (+ 1 x)) n))))))","(/ (- (* 1/2 (log (+ 1 x))) (* 1/2 (log x))) n)","(/ (- (+ (* 1/8 (/ (pow (log (+ 1 x)) 2) n)) (* 1/2 (log (+ 1 x)))) (+ (* 1/8 (/ (pow (log x) 2) n)) (* 1/2 (log x)))) n)","(/ (- (+ (* 1/48 (/ (pow (log (+ 1 x)) 3) (pow n 2))) (+ (* 1/8 (/ (pow (log (+ 1 x)) 2) n)) (* 1/2 (log (+ 1 x))))) (+ (* 1/48 (/ (pow (log x) 3) (pow n 2))) (+ (* 1/8 (/ (pow (log x) 2) n)) (* 1/2 (log x))))) n)","(/ (- (+ (* 1/384 (/ (pow (log (+ 1 x)) 4) (pow n 3))) (+ (* 1/48 (/ (pow (log (+ 1 x)) 3) (pow n 2))) (+ (* 1/8 (/ (pow (log (+ 1 x)) 2) n)) (* 1/2 (log (+ 1 x)))))) (+ (* 1/384 (/ (pow (log x) 4) (pow n 3))) (+ (* 1/48 (/ (pow (log x) 3) (pow n 2))) (+ (* 1/8 (/ (pow (log x) 2) n)) (* 1/2 (log x)))))) n)","(* -1 (/ (- (* -1 (log (+ 1 x))) (* -1 (log x))) n))","(* -1 (/ (- (+ (* -1 (log (+ 1 x))) (* -1 (/ (- (* 1/2 (pow (log (+ 1 x)) 2)) (* 1/2 (pow (log x) 2))) n))) (* -1 (log x))) n))","(* -1 (/ (- (+ (* -1 (log (+ 1 x))) (* -1 (/ (- (+ (* -1 (/ (- (* -1/6 (pow (log (+ 1 x)) 3)) (* -1/6 (pow (log x) 3))) n)) (* 1/2 (pow (log (+ 1 x)) 2))) (* 1/2 (pow (log x) 2))) n))) (* -1 (log x))) n))","(* -1 (/ (- (+ (* -1 (log (+ 1 x))) (* -1 (/ (- (+ (* -1 (/ (- (+ (* -1 (/ (- (* 1/24 (pow (log (+ 1 x)) 4)) (* 1/24 (pow (log x) 4))) n)) (* -1/6 (pow (log (+ 1 x)) 3))) (* -1/6 (pow (log x) 3))) n)) (* 1/2 (pow (log (+ 1 x)) 2))) (* 1/2 (pow (log x) 2))) n))) (* -1 (log x))) n))","(+ 1 (* -1 (/ (+ (* -1 (log (+ 1 x))) (* -1/2 (/ (pow (log (+ 1 x)) 2) n))) n)))","(+ 1 (* -1 (/ (+ (* -1 (log (+ 1 x))) (* -1 (/ (+ (* 1/6 (/ (pow (log (+ 1 x)) 3) n)) (* 1/2 (pow (log (+ 1 x)) 2))) n))) n)))","(/ (+ (log (+ 1 x)) (* -1 (log x))) n)","(* -1 (/ (- (+ (* -1 (/ (pow (log (+ 1 x)) 2) n)) (+ (* 1/2 (/ (pow (log x) 2) n)) (* 1/2 (/ (pow (log (+ 1 x)) 2) n)))) (+ (log (+ 1 x)) (* -1 (log x)))) n))","(* -1 (/ (- (* -1 (/ (- (+ (* -1 (/ (* (log (+ 1 x)) (+ (* -1 (pow (log (+ 1 x)) 2)) (* 1/2 (pow (log (+ 1 x)) 2)))) n)) (+ (* -1/2 (/ (pow (log (+ 1 x)) 3) n)) (+ (* -1/6 (/ (pow (log x) 3) n)) (* 1/6 (/ (pow (log (+ 1 x)) 3) n))))) (+ (* -1 (pow (log (+ 1 x)) 2)) (+ (* 1/2 (pow (log x) 2)) (* 1/2 (pow (log (+ 1 x)) 2))))) n)) (+ (log (+ 1 x)) (* -1 (log x)))) n))","(* -1 (/ (- (* -1 (/ (- (* -1 (/ (- (+ (* -1 (/ (* (log (+ 1 x)) (+ (* -1 (* (log (+ 1 x)) (+ (* -1 (pow (log (+ 1 x)) 2)) (* 1/2 (pow (log (+ 1 x)) 2))))) (+ (* -1/2 (pow (log (+ 1 x)) 3)) (* 1/6 (pow (log (+ 1 x)) 3))))) n)) (+ (* -1/2 (/ (* (pow (log (+ 1 x)) 2) (+ (* -1 (pow (log (+ 1 x)) 2)) (* 1/2 (pow (log (+ 1 x)) 2)))) n)) (+ (* -1/6 (/ (pow (log (+ 1 x)) 4) n)) (+ (* 1/24 (/ (pow (log x) 4) n)) (* 1/24 (/ (pow (log (+ 1 x)) 4) n)))))) (+ (* -1 (* (log (+ 1 x)) (+ (* -1 (pow (log (+ 1 x)) 2)) (* 1/2 (pow (log (+ 1 x)) 2))))) (+ (* -1/2 (pow (log (+ 1 x)) 3)) (+ (* -1/6 (pow (log x) 3)) (* 1/6 (pow (log (+ 1 x)) 3)))))) n)) (+ (* -1 (pow (log (+ 1 x)) 2)) (+ (* 1/2 (pow (log x) 2)) (* 1/2 (pow (log (+ 1 x)) 2))))) n)) (+ (log (+ 1 x)) (* -1 (log x)))) n))","(+ 1 (* -1 (/ (- (+ (* -1 (/ (pow (log (+ 1 x)) 2) n)) (* 1/2 (/ (pow (log (+ 1 x)) 2) n))) (log (+ 1 x))) n)))","(+ 1 (* -1 (/ (- (* -1 (/ (- (+ (* -1 (/ (* (log (+ 1 x)) (+ (* -1 (pow (log (+ 1 x)) 2)) (* 1/2 (pow (log (+ 1 x)) 2)))) n)) (+ (* -1/2 (/ (pow (log (+ 1 x)) 3) n)) (* 1/6 (/ (pow (log (+ 1 x)) 3) n)))) (+ (* -1 (pow (log (+ 1 x)) 2)) (* 1/2 (pow (log (+ 1 x)) 2)))) n)) (log (+ 1 x))) n)))","(+ 1 (* -1 (/ (+ (log (+ 1 x)) (* -1/2 (/ (pow (log (+ 1 x)) 2) n))) n)))","(+ 1 (* -1 (/ (+ (log (+ 1 x)) (* -1 (/ (+ (* -1/6 (/ (pow (log (+ 1 x)) 3) n)) (* 1/2 (pow (log (+ 1 x)) 2))) n))) n)))","(* -1 (/ (- (+ (* -1 (log (- (pow x 2) 1))) (* -1 (log (/ -1 (- 1 x))))) (* -1 (log x))) n))","(* -1 (/ (- (+ (* -1 (log (- (pow x 2) 1))) (+ (* -1 (log (/ -1 (- 1 x)))) (* -1 (/ (- (+ (* 1/2 (pow (log (- (pow x 2) 1)) 2)) (+ (* 1/2 (pow (log (/ -1 (- 1 x))) 2)) (* (log (- (pow x 2) 1)) (log (/ -1 (- 1 x)))))) (* 1/2 (pow (log x) 2))) n)))) (* -1 (log x))) n))","(* -1 (/ (- (+ (* -1 (log (- (pow x 2) 1))) (+ (* -1 (log (/ -1 (- 1 x)))) (* -1 (/ (- (+ (* -1 (/ (- (+ (* -1/2 (* (log (- (pow x 2) 1)) (pow (log (/ -1 (- 1 x))) 2))) (+ (* -1/2 (* (pow (log (- (pow x 2) 1)) 2) (log (/ -1 (- 1 x))))) (+ (* -1/6 (pow (log (- (pow x 2) 1)) 3)) (* -1/6 (pow (log (/ -1 (- 1 x))) 3))))) (* -1/6 (pow (log x) 3))) n)) (+ (* 1/2 (pow (log (- (pow x 2) 1)) 2)) (+ (* 1/2 (pow (log (/ -1 (- 1 x))) 2)) (* (log (- (pow x 2) 1)) (log (/ -1 (- 1 x))))))) (* 1/2 (pow (log x) 2))) n)))) (* -1 (log x))) n))","(* -1 (/ (- (+ (* -1 (log (- (pow x 2) 1))) (+ (* -1 (log (/ -1 (- 1 x)))) (* -1 (/ (- (+ (* -1 (/ (- (+ (* -1 (/ (- (+ (* 1/24 (pow (log (- (pow x 2) 1)) 4)) (+ (* 1/24 (pow (log (/ -1 (- 1 x))) 4)) (+ (* 1/6 (* (log (- (pow x 2) 1)) (pow (log (/ -1 (- 1 x))) 3))) (+ (* 1/6 (* (pow (log (- (pow x 2) 1)) 3) (log (/ -1 (- 1 x))))) (* 1/4 (* (pow (log (- (pow x 2) 1)) 2) (pow (log (/ -1 (- 1 x))) 2))))))) (* 1/24 (pow (log x) 4))) n)) (+ (* -1/2 (* (log (- (pow x 2) 1)) (pow (log (/ -1 (- 1 x))) 2))) (+ (* -1/2 (* (pow (log (- (pow x 2) 1)) 2) (log (/ -1 (- 1 x))))) (+ (* -1/6 (pow (log (- (pow x 2) 1)) 3)) (* -1/6 (pow (log (/ -1 (- 1 x))) 3)))))) (* -1/6 (pow (log x) 3))) n)) (+ (* 1/2 (pow (log (- (pow x 2) 1)) 2)) (+ (* 1/2 (pow (log (/ -1 (- 1 x))) 2)) (* (log (- (pow x 2) 1)) (log (/ -1 (- 1 x))))))) (* 1/2 (pow (log x) 2))) n)))) (* -1 (log x))) n))","(+ 1 (* -1 (/ (+ (* -1 (log (- (pow x 2) 1))) (* -1 (log (/ -1 (- 1 x))))) n)))","(+ 1 (* -1 (/ (+ (* -1 (log (- (pow x 2) 1))) (+ (* -1 (log (/ -1 (- 1 x)))) (* -1 (/ (+ (* 1/2 (pow (log (- (pow x 2) 1)) 2)) (+ (* 1/2 (pow (log (/ -1 (- 1 x))) 2)) (* (log (- (pow x 2) 1)) (log (/ -1 (- 1 x)))))) n)))) n)))","(+ 1 (* -1 (/ (+ (* -1 (log (- (pow x 2) 1))) (+ (* -1 (log (/ -1 (- 1 x)))) (* -1 (/ (+ (* -1 (/ (+ (* -1/2 (* (log (- (pow x 2) 1)) (pow (log (/ -1 (- 1 x))) 2))) (+ (* -1/2 (* (pow (log (- (pow x 2) 1)) 2) (log (/ -1 (- 1 x))))) (+ (* -1/6 (pow (log (- (pow x 2) 1)) 3)) (* -1/6 (pow (log (/ -1 (- 1 x))) 3))))) n)) (+ (* 1/2 (pow (log (- (pow x 2) 1)) 2)) (+ (* 1/2 (pow (log (/ -1 (- 1 x))) 2)) (* (log (- (pow x 2) 1)) (log (/ -1 (- 1 x))))))) n)))) n)))","(+ 1 (* -1 (/ (+ (* -1 (log (- (pow x 2) 1))) (* -1/2 (/ (pow (log (- (pow x 2) 1)) 2) n))) n)))","(+ 1 (* -1 (/ (+ (* -1 (log (- (pow x 2) 1))) (* -1 (/ (+ (* 1/6 (/ (pow (log (- (pow x 2) 1)) 3) n)) (* 1/2 (pow (log (- (pow x 2) 1)) 2))) n))) n)))","(* -1/2 (/ (- (* -2 (log (+ 1 x))) (* -2 (log x))) n))","(* -1 (/ (- (* -1 (/ (- (* 1/2 (- (* 2 (pow (log (+ 1 x)) 2)) (* 2 (pow (log x) 2)))) (* 1/4 (* (+ (* -1 (log x)) (* -1 (log (+ 1 x)))) (- (* -2 (log (+ 1 x))) (* -2 (log x)))))) n)) (* -1/2 (- (* -2 (log (+ 1 x))) (* -2 (log x))))) n))","(* -1 (/ (- (* -1 (/ (- (* -1 (/ (- (* 1/2 (- (* -4/3 (pow (log (+ 1 x)) 3)) (* -4/3 (pow (log x) 3)))) (+ (* 1/4 (* (+ (* 1/2 (pow (log x) 2)) (* 1/2 (pow (log (+ 1 x)) 2))) (- (* -2 (log (+ 1 x))) (* -2 (log x))))) (* 1/2 (* (+ (* -1 (log x)) (* -1 (log (+ 1 x)))) (- (* 1/2 (- (* 2 (pow (log (+ 1 x)) 2)) (* 2 (pow (log x) 2)))) (* 1/4 (* (+ (* -1 (log x)) (* -1 (log (+ 1 x)))) (- (* -2 (log (+ 1 x))) (* -2 (log x)))))))))) n)) (* -1 (- (* 1/2 (- (* 2 (pow (log (+ 1 x)) 2)) (* 2 (pow (log x) 2)))) (* 1/4 (* (+ (* -1 (log x)) (* -1 (log (+ 1 x)))) (- (* -2 (log (+ 1 x))) (* -2 (log x)))))))) n)) (* -1/2 (- (* -2 (log (+ 1 x))) (* -2 (log x))))) n))","(* -1 (/ (- (* -1 (/ (- (* -1 (/ (- (* -1 (/ (- (* 1/2 (- (* 2/3 (pow (log (+ 1 x)) 4)) (* 2/3 (pow (log x) 4)))) (+ (* 1/4 (* (+ (* -1/6 (pow (log x) 3)) (* -1/6 (pow (log (+ 1 x)) 3))) (- (* -2 (log (+ 1 x))) (* -2 (log x))))) (+ (* 1/2 (* (+ (* -1 (log x)) (* -1 (log (+ 1 x)))) (- (* 1/2 (- (* -4/3 (pow (log (+ 1 x)) 3)) (* -4/3 (pow (log x) 3)))) (+ (* 1/4 (* (+ (* 1/2 (pow (log x) 2)) (* 1/2 (pow (log (+ 1 x)) 2))) (- (* -2 (log (+ 1 x))) (* -2 (log x))))) (* 1/2 (* (+ (* -1 (log x)) (* -1 (log (+ 1 x)))) (- (* 1/2 (- (* 2 (pow (log (+ 1 x)) 2)) (* 2 (pow (log x) 2)))) (* 1/4 (* (+ (* -1 (log x)) (* -1 (log (+ 1 x)))) (- (* -2 (log (+ 1 x))) (* -2 (log x)))))))))))) (* 1/2 (* (+ (* 1/2 (pow (log x) 2)) (* 1/2 (pow (log (+ 1 x)) 2))) (- (* 1/2 (- (* 2 (pow (log (+ 1 x)) 2)) (* 2 (pow (log x) 2)))) (* 1/4 (* (+ (* -1 (log x)) (* -1 (log (+ 1 x)))) (- (* -2 (log (+ 1 x))) (* -2 (log x))))))))))) n)) (* -1 (- (* 1/2 (- (* -4/3 (pow (log (+ 1 x)) 3)) (* -4/3 (pow (log x) 3)))) (+ (* 1/4 (* (+ (* 1/2 (pow (log x) 2)) (* 1/2 (pow (log (+ 1 x)) 2))) (- (* -2 (log (+ 1 x))) (* -2 (log x))))) (* 1/2 (* (+ (* -1 (log x)) (* -1 (log (+ 1 x)))) (- (* 1/2 (- (* 2 (pow (log (+ 1 x)) 2)) (* 2 (pow (log x) 2)))) (* 1/4 (* (+ (* -1 (log x)) (* -1 (log (+ 1 x)))) (- (* -2 (log (+ 1 x))) (* -2 (log x)))))))))))) n)) (* -1 (- (* 1/2 (- (* 2 (pow (log (+ 1 x)) 2)) (* 2 (pow (log x) 2)))) (* 1/4 (* (+ (* -1 (log x)) (* -1 (log (+ 1 x)))) (- (* -2 (log (+ 1 x))) (* -2 (log x)))))))) n)) (* -1/2 (- (* -2 (log (+ 1 x))) (* -2 (log x))))) n))","(* 1/2 (/ (- (* -2 (log (+ 1 x))) (* -2 (log x))) n))","(* -1 (/ (- (+ (* -1/2 (- (* -2 (log (+ 1 x))) (* -2 (log x)))) (* 1/2 (/ (- (* 2 (pow (log (+ 1 x)) 2)) (* 2 (pow (log x) 2))) n))) (* 1/4 (/ (* (+ (* -1 (log x)) (* -1 (log (+ 1 x)))) (- (* -2 (log (+ 1 x))) (* -2 (log x)))) n))) n))","(* -1 (/ (+ (* -1 (/ (- (+ (* -1 (- (* 1/2 (- (* 2 (pow (log (+ 1 x)) 2)) (* 2 (pow (log x) 2)))) (* 1/4 (* (+ (* -1 (log x)) (* -1 (log (+ 1 x)))) (- (* -2 (log (+ 1 x))) (* -2 (log x))))))) (* 1/2 (/ (- (* -4/3 (pow (log (+ 1 x)) 3)) (* -4/3 (pow (log x) 3))) n))) (+ (* 1/4 (/ (* (+ (* 1/2 (pow (log x) 2)) (* 1/2 (pow (log (+ 1 x)) 2))) (- (* -2 (log (+ 1 x))) (* -2 (log x)))) n)) (* 1/2 (/ (* (+ (* -1 (log x)) (* -1 (log (+ 1 x)))) (- (* 1/2 (- (* 2 (pow (log (+ 1 x)) 2)) (* 2 (pow (log x) 2)))) (* 1/4 (* (+ (* -1 (log x)) (* -1 (log (+ 1 x)))) (- (* -2 (log (+ 1 x))) (* -2 (log x))))))) n)))) n)) (* -1/2 (- (* -2 (log (+ 1 x))) (* -2 (log x))))) n))","(* -1 (/ (+ (* -1 (/ (+ (* -1 (- (* 1/2 (- (* 2 (pow (log (+ 1 x)) 2)) (* 2 (pow (log x) 2)))) (* 1/4 (* (+ (* -1 (log x)) (* -1 (log (+ 1 x)))) (- (* -2 (log (+ 1 x))) (* -2 (log x))))))) (* -1 (/ (- (+ (* -1 (- (* 1/2 (- (* -4/3 (pow (log (+ 1 x)) 3)) (* -4/3 (pow (log x) 3)))) (+ (* 1/4 (* (+ (* 1/2 (pow (log x) 2)) (* 1/2 (pow (log (+ 1 x)) 2))) (- (* -2 (log (+ 1 x))) (* -2 (log x))))) (* 1/2 (* (+ (* -1 (log x)) (* -1 (log (+ 1 x)))) (- (* 1/2 (- (* 2 (pow (log (+ 1 x)) 2)) (* 2 (pow (log x) 2)))) (* 1/4 (* (+ (* -1 (log x)) (* -1 (log (+ 1 x)))) (- (* -2 (log (+ 1 x))) (* -2 (log x))))))))))) (* 1/2 (/ (- (* 2/3 (pow (log (+ 1 x)) 4)) (* 2/3 (pow (log x) 4))) n))) (+ (* 1/4 (/ (* (+ (* -1/6 (pow (log x) 3)) (* -1/6 (pow (log (+ 1 x)) 3))) (- (* -2 (log (+ 1 x))) (* -2 (log x)))) n)) (+ (* 1/2 (/ (* (+ (* -1 (log x)) (* -1 (log (+ 1 x)))) (- (* 1/2 (- (* -4/3 (pow (log (+ 1 x)) 3)) (* -4/3 (pow (log x) 3)))) (+ (* 1/4 (* (+ (* 1/2 (pow (log x) 2)) (* 1/2 (pow (log (+ 1 x)) 2))) (- (* -2 (log (+ 1 x))) (* -2 (log x))))) (* 1/2 (* (+ (* -1 (log x)) (* -1 (log (+ 1 x)))) (- (* 1/2 (- (* 2 (pow (log (+ 1 x)) 2)) (* 2 (pow (log x) 2)))) (* 1/4 (* (+ (* -1 (log x)) (* -1 (log (+ 1 x)))) (- (* -2 (log (+ 1 x))) (* -2 (log x))))))))))) n)) (* 1/2 (/ (* (+ (* 1/2 (pow (log x) 2)) (* 1/2 (pow (log (+ 1 x)) 2))) (- (* 1/2 (- (* 2 (pow (log (+ 1 x)) 2)) (* 2 (pow (log x) 2)))) (* 1/4 (* (+ (* -1 (log x)) (* -1 (log (+ 1 x)))) (- (* -2 (log (+ 1 x))) (* -2 (log x))))))) n))))) n))) n)) (* -1/2 (- (* -2 (log (+ 1 x))) (* -2 (log x))))) n))","(* -1 (/ (- (* -2 (log (+ 1 x))) (* -2 (log x))) n))","(* -1 (/ (- (+ (* -2 (log (+ 1 x))) (* -1 (/ (- (* 2 (pow (log (+ 1 x)) 2)) (* 2 (pow (log x) 2))) n))) (* -2 (log x))) n))","(* -1 (/ (- (+ (* -2 (log (+ 1 x))) (* -1 (/ (- (+ (* -1 (/ (- (* -4/3 (pow (log (+ 1 x)) 3)) (* -4/3 (pow (log x) 3))) n)) (* 2 (pow (log (+ 1 x)) 2))) (* 2 (pow (log x) 2))) n))) (* -2 (log x))) n))","(* -1 (/ (- (+ (* -2 (log (+ 1 x))) (* -1 (/ (- (+ (* -1 (/ (- (+ (* -4/3 (pow (log (+ 1 x)) 3)) (* -1 (/ (- (* 2/3 (pow (log (+ 1 x)) 4)) (* 2/3 (pow (log x) 4))) n))) (* -4/3 (pow (log x) 3))) n)) (* 2 (pow (log (+ 1 x)) 2))) (* 2 (pow (log x) 2))) n))) (* -2 (log x))) n))","(+ 1 (* -1 (/ (+ (* -2 (log (+ 1 x))) (* -2 (/ (pow (log (+ 1 x)) 2) n))) n)))","(+ 1 (* -1 (/ (+ (* -2 (log (+ 1 x))) (* -1 (/ (+ (* 4/3 (/ (pow (log (+ 1 x)) 3) n)) (* 2 (pow (log (+ 1 x)) 2))) n))) n)))","(* -2 (/ (- (* -1/2 (log (+ 1 x))) (* -1/2 (log x))) n))","(* -1 (/ (+ (* -1 (/ (+ (* 2 (- (* 1/8 (pow (log (+ 1 x)) 2)) (* 1/8 (pow (log x) 2)))) (* (+ (* -1/2 (log x)) (* -1/2 (log (+ 1 x)))) (- (* -1/2 (log (+ 1 x))) (* -1/2 (log x))))) n)) (* 2 (- (* -1/2 (log (+ 1 x))) (* -1/2 (log x))))) n))","(* -1 (/ (+ (* -1 (/ (+ (* -1 (/ (+ (* 2 (- (* -1/48 (pow (log (+ 1 x)) 3)) (* -1/48 (pow (log x) 3)))) (+ (* (+ (* -1/2 (log x)) (* -1/2 (log (+ 1 x)))) (- (* 1/8 (pow (log (+ 1 x)) 2)) (* 1/8 (pow (log x) 2)))) (* (+ (* 1/8 (pow (log x) 2)) (* 1/8 (pow (log (+ 1 x)) 2))) (- (* -1/2 (log (+ 1 x))) (* -1/2 (log x)))))) n)) (+ (* 2 (- (* 1/8 (pow (log (+ 1 x)) 2)) (* 1/8 (pow (log x) 2)))) (* (+ (* -1/2 (log x)) (* -1/2 (log (+ 1 x)))) (- (* -1/2 (log (+ 1 x))) (* -1/2 (log x)))))) n)) (* 2 (- (* -1/2 (log (+ 1 x))) (* -1/2 (log x))))) n))","(* -1 (/ (+ (* -1 (/ (+ (* -1 (/ (+ (* -1 (/ (+ (* 2 (- (* 1/384 (pow (log (+ 1 x)) 4)) (* 1/384 (pow (log x) 4)))) (+ (* (+ (* -1/2 (log x)) (* -1/2 (log (+ 1 x)))) (- (* -1/48 (pow (log (+ 1 x)) 3)) (* -1/48 (pow (log x) 3)))) (+ (* (+ (* -1/48 (pow (log x) 3)) (* -1/48 (pow (log (+ 1 x)) 3))) (- (* -1/2 (log (+ 1 x))) (* -1/2 (log x)))) (* (+ (* 1/8 (pow (log x) 2)) (* 1/8 (pow (log (+ 1 x)) 2))) (- (* 1/8 (pow (log (+ 1 x)) 2)) (* 1/8 (pow (log x) 2))))))) n)) (+ (* 2 (- (* -1/48 (pow (log (+ 1 x)) 3)) (* -1/48 (pow (log x) 3)))) (+ (* (+ (* -1/2 (log x)) (* -1/2 (log (+ 1 x)))) (- (* 1/8 (pow (log (+ 1 x)) 2)) (* 1/8 (pow (log x) 2)))) (* (+ (* 1/8 (pow (log x) 2)) (* 1/8 (pow (log (+ 1 x)) 2))) (- (* -1/2 (log (+ 1 x))) (* -1/2 (log x))))))) n)) (+ (* 2 (- (* 1/8 (pow (log (+ 1 x)) 2)) (* 1/8 (pow (log x) 2)))) (* (+ (* -1/2 (log x)) (* -1/2 (log (+ 1 x)))) (- (* -1/2 (log (+ 1 x))) (* -1/2 (log x)))))) n)) (* 2 (- (* -1/2 (log (+ 1 x))) (* -1/2 (log x))))) n))","(+ 2 (* -1 (/ (+ (* -1/2 (log x)) (* -1/2 (log (+ 1 x)))) n)))","(+ 2 (* -1 (/ (+ (* -1 (/ (+ (* 1/8 (pow (log x) 2)) (* 1/8 (pow (log (+ 1 x)) 2))) n)) (+ (* -1/2 (log x)) (* -1/2 (log (+ 1 x))))) n)))","(+ 2 (* -1 (/ (+ (* -1 (/ (+ (* -1 (/ (+ (* -1/48 (pow (log x) 3)) (* -1/48 (pow (log (+ 1 x)) 3))) n)) (+ (* 1/8 (pow (log x) 2)) (* 1/8 (pow (log (+ 1 x)) 2)))) n)) (+ (* -1/2 (log x)) (* -1/2 (log (+ 1 x))))) n)))","(+ 1 (* -1 (/ (+ (* -1/2 (log (+ 1 x))) (* -1/8 (/ (pow (log (+ 1 x)) 2) n))) n)))","(+ 1 (* -1 (/ (+ (* -1 (/ (+ (* 1/48 (/ (pow (log (+ 1 x)) 3) n)) (* 1/8 (pow (log (+ 1 x)) 2))) n)) (* -1/2 (log (+ 1 x)))) n)))","(- (+ (* -1 (/ (log x) n)) (* -1 (/ (log (+ 1 x)) n))) 2)","(- (* -1 (/ (- (+ (* 1/2 (/ (pow (log x) 2) n)) (* 1/2 (/ (pow (log (+ 1 x)) 2) n))) (+ (* -1 (log x)) (* -1 (log (+ 1 x))))) n)) 2)","(- (* -1 (/ (- (* -1 (/ (- (+ (* -1/6 (/ (pow (log x) 3) n)) (* -1/6 (/ (pow (log (+ 1 x)) 3) n))) (+ (* 1/2 (pow (log x) 2)) (* 1/2 (pow (log (+ 1 x)) 2)))) n)) (+ (* -1 (log x)) (* -1 (log (+ 1 x))))) n)) 2)","(* -1 (/ (- (* -1/2 (log (+ 1 x))) (* -1/2 (log x))) n))","(* -1 (/ (- (+ (* -1 (/ (- (* 1/8 (pow (log (+ 1 x)) 2)) (* 1/8 (pow (log x) 2))) n)) (* -1/2 (log (+ 1 x)))) (* -1/2 (log x))) n))","(* -1 (/ (- (+ (* -1 (/ (- (+ (* -1 (/ (- (* -1/48 (pow (log (+ 1 x)) 3)) (* -1/48 (pow (log x) 3))) n)) (* 1/8 (pow (log (+ 1 x)) 2))) (* 1/8 (pow (log x) 2))) n)) (* -1/2 (log (+ 1 x)))) (* -1/2 (log x))) n))","(* -1 (/ (- (+ (* -1 (/ (- (+ (* -1 (/ (- (+ (* -1 (/ (- (* 1/384 (pow (log (+ 1 x)) 4)) (* 1/384 (pow (log x) 4))) n)) (* -1/48 (pow (log (+ 1 x)) 3))) (* -1/48 (pow (log x) 3))) n)) (* 1/8 (pow (log (+ 1 x)) 2))) (* 1/8 (pow (log x) 2))) n)) (* -1/2 (log (+ 1 x)))) (* -1/2 (log x))) n))"]],"series":[[22.736083984375,"((- (exp (/ (log (+ 1 x)) n)) (pow x (/ 1 n))) (exp (/ (log (+ 1 x)) n)) (/ (log (+ 1 x)) n) (log (+ 1 x)) (- (/ 1 (pow (+ x 1) (/ -1 n))) (pow x (/ 1 n))) (/ 1 (pow (+ x 1) (/ -1 n))) (pow (+ x 1) (/ -1 n)) (+ x 1) (- (* (pow (+ (* x x) -1) (/ 1 n)) (pow (/ -1 (- 1 x)) (/ 1 n))) (pow x (/ 1 n))) (* (pow (+ (* x x) -1) (/ 1 n)) (pow (/ -1 (- 1 x)) (/ 1 n))) (pow (+ (* x x) -1) (/ 1 n)) (+ (* x x) -1) (neg (/ (- (pow (+ x 1) (/ 2 n)) (pow x (/ 2 n))) (neg (+ (pow (+ x 1) (/ 1 n)) (pow x (/ 1 n)))))) (/ (- (pow (+ x 1) (/ 2 n)) (pow x (/ 2 n))) (neg (+ (pow (+ x 1) (/ 1 n)) (pow x (/ 1 n))))) (- (pow (+ x 1) (/ 2 n)) (pow x (/ 2 n))) (pow (+ x 1) (/ 2 n)) (* (+ (pow (+ x 1) (/ -1 (* -2 n))) (pow x (/ -1 (* -2 n)))) (- (pow (+ x 1) (/ -1 (* -2 n))) (pow x (/ -1 (* -2 n))))) (+ (pow (+ x 1) (/ -1 (* -2 n))) (pow x (/ -1 (* -2 n)))) (pow (+ x 1) (/ -1 (* -2 n))) (/ -1 n) (- 1 x) (neg (+ (pow (+ x 1) (/ 1 n)) (pow x (/ 1 n)))) (- (pow (+ x 1) (/ -1 (* -2 n))) (pow x (/ -1 (* -2 n)))) (* -2 n))","n","-inf"],[38.762939453125,"((- (exp (/ (log (+ 1 x)) n)) (pow x (/ 1 n))) (exp (/ (log (+ 1 x)) n)) (/ (log (+ 1 x)) n) (log (+ 1 x)) (- (/ 1 (pow (+ x 1) (/ -1 n))) (pow x (/ 1 n))) (/ 1 (pow (+ x 1) (/ -1 n))) (pow (+ x 1) (/ -1 n)) (+ x 1) (- (* (pow (+ (* x x) -1) (/ 1 n)) (pow (/ -1 (- 1 x)) (/ 1 n))) (pow x (/ 1 n))) (* (pow (+ (* x x) -1) (/ 1 n)) (pow (/ -1 (- 1 x)) (/ 1 n))) (pow (+ (* x x) -1) (/ 1 n)) (+ (* x x) -1) (neg (/ (- (pow (+ x 1) (/ 2 n)) (pow x (/ 2 n))) (neg (+ (pow (+ x 1) (/ 1 n)) (pow x (/ 1 n)))))) (/ (- (pow (+ x 1) (/ 2 n)) (pow x (/ 2 n))) (neg (+ (pow (+ x 1) (/ 1 n)) (pow x (/ 1 n))))) (- (pow (+ x 1) (/ 2 n)) (pow x (/ 2 n))) (pow (+ x 1) (/ 2 n)) (* (+ (pow (+ x 1) (/ -1 (* -2 n))) (pow x (/ -1 (* -2 n)))) (- (pow (+ x 1) (/ -1 (* -2 n))) (pow x (/ -1 (* -2 n))))) (+ (pow (+ x 1) (/ -1 (* -2 n))) (pow x (/ -1 (* -2 n)))) (pow (+ x 1) (/ -1 (* -2 n))) (/ -1 n) (- 1 x) (neg (+ (pow (+ x 1) (/ 1 n)) (pow x (/ 1 n)))) (- (pow (+ x 1) (/ -1 (* -2 n))) (pow x (/ -1 (* -2 n)))) (* -2 n))","n","inf"],[63.989990234375,"((- (exp (/ (log (+ 1 x)) n)) (pow x (/ 1 n))) (exp (/ (log (+ 1 x)) n)) (/ (log (+ 1 x)) n) (log (+ 1 x)) (- (/ 1 (pow (+ x 1) (/ -1 n))) (pow x (/ 1 n))) (/ 1 (pow (+ x 1) (/ -1 n))) (pow (+ x 1) (/ -1 n)) (+ x 1) (- (* (pow (+ (* x x) -1) (/ 1 n)) (pow (/ -1 (- 1 x)) (/ 1 n))) (pow x (/ 1 n))) (* (pow (+ (* x x) -1) (/ 1 n)) (pow (/ -1 (- 1 x)) (/ 1 n))) (pow (+ (* x x) -1) (/ 1 n)) (+ (* x x) -1) (neg (/ (- (pow (+ x 1) (/ 2 n)) (pow x (/ 2 n))) (neg (+ (pow (+ x 1) (/ 1 n)) (pow x (/ 1 n)))))) (/ (- (pow (+ x 1) (/ 2 n)) (pow x (/ 2 n))) (neg (+ (pow (+ x 1) (/ 1 n)) (pow x (/ 1 n))))) (- (pow (+ x 1) (/ 2 n)) (pow x (/ 2 n))) (pow (+ x 1) (/ 2 n)) (* (+ (pow (+ x 1) (/ -1 (* -2 n))) (pow x (/ -1 (* -2 n)))) (- (pow (+ x 1) (/ -1 (* -2 n))) (pow x (/ -1 (* -2 n))))) (+ (pow (+ x 1) (/ -1 (* -2 n))) (pow x (/ -1 (* -2 n)))) (pow (+ x 1) (/ -1 (* -2 n))) (/ -1 n) (- 1 x) (neg (+ (pow (+ x 1) (/ 1 n)) (pow x (/ 1 n)))) (- (pow (+ x 1) (/ -1 (* -2 n))) (pow x (/ -1 (* -2 n)))) (* -2 n))","n","0"],[26.01318359375,"((- (exp (/ (log (+ 1 x)) n)) (pow x (/ 1 n))) (exp (/ (log (+ 1 x)) n)) (/ (log (+ 1 x)) n) (log (+ 1 x)) (- (/ 1 (pow (+ x 1) (/ -1 n))) (pow x (/ 1 n))) (/ 1 (pow (+ x 1) (/ -1 n))) (pow (+ x 1) (/ -1 n)) (+ x 1) (- (* (pow (+ (* x x) -1) (/ 1 n)) (pow (/ -1 (- 1 x)) (/ 1 n))) (pow x (/ 1 n))) (* (pow (+ (* x x) -1) (/ 1 n)) (pow (/ -1 (- 1 x)) (/ 1 n))) (pow (+ (* x x) -1) (/ 1 n)) (+ (* x x) -1) (neg (/ (- (pow (+ x 1) (/ 2 n)) (pow x (/ 2 n))) (neg (+ (pow (+ x 1) (/ 1 n)) (pow x (/ 1 n)))))) (/ (- (pow (+ x 1) (/ 2 n)) (pow x (/ 2 n))) (neg (+ (pow (+ x 1) (/ 1 n)) (pow x (/ 1 n))))) (- (pow (+ x 1) (/ 2 n)) (pow x (/ 2 n))) (pow (+ x 1) (/ 2 n)) (* (+ (pow (+ x 1) (/ -1 (* -2 n))) (pow x (/ -1 (* -2 n)))) (- (pow (+ x 1) (/ -1 (* -2 n))) (pow x (/ -1 (* -2 n))))) (+ (pow (+ x 1) (/ -1 (* -2 n))) (pow x (/ -1 (* -2 n)))) (pow (+ x 1) (/ -1 (* -2 n))) (/ -1 n) (- 1 x) (neg (+ (pow (+ x 1) (/ 1 n)) (pow x (/ 1 n)))) (- (pow (+ x 1) (/ -1 (* -2 n))) (pow x (/ -1 (* -2 n)))) (* -2 n))","x","-inf"],[26.943115234375,"((- (exp (/ (log (+ 1 x)) n)) (pow x (/ 1 n))) (exp (/ (log (+ 1 x)) n)) (/ (log (+ 1 x)) n) (log (+ 1 x)) (- (/ 1 (pow (+ x 1) (/ -1 n))) (pow x (/ 1 n))) (/ 1 (pow (+ x 1) (/ -1 n))) (pow (+ x 1) (/ -1 n)) (+ x 1) (- (* (pow (+ (* x x) -1) (/ 1 n)) (pow (/ -1 (- 1 x)) (/ 1 n))) (pow x (/ 1 n))) (* (pow (+ (* x x) -1) (/ 1 n)) (pow (/ -1 (- 1 x)) (/ 1 n))) (pow (+ (* x x) -1) (/ 1 n)) (+ (* x x) -1) (neg (/ (- (pow (+ x 1) (/ 2 n)) (pow x (/ 2 n))) (neg (+ (pow (+ x 1) (/ 1 n)) (pow x (/ 1 n)))))) (/ (- (pow (+ x 1) (/ 2 n)) (pow x (/ 2 n))) (neg (+ (pow (+ x 1) (/ 1 n)) (pow x (/ 1 n))))) (- (pow (+ x 1) (/ 2 n)) (pow x (/ 2 n))) (pow (+ x 1) (/ 2 n)) (* (+ (pow (+ x 1) (/ -1 (* -2 n))) (pow x (/ -1 (* -2 n)))) (- (pow (+ x 1) (/ -1 (* -2 n))) (pow x (/ -1 (* -2 n))))) (+ (pow (+ x 1) (/ -1 (* -2 n))) (pow x (/ -1 (* -2 n)))) (pow (+ x 1) (/ -1 (* -2 n))) (/ -1 n) (- 1 x) (neg (+ (pow (+ x 1) (/ 1 n)) (pow x (/ 1 n)))) (- (pow (+ x 1) (/ -1 (* -2 n))) (pow x (/ -1 (* -2 n)))) (* -2 n))","x","inf"],[20.14111328125,"((- (exp (/ (log (+ 1 x)) n)) (pow x (/ 1 n))) (exp (/ (log (+ 1 x)) n)) (/ (log (+ 1 x)) n) (log (+ 1 x)) (- (/ 1 (pow (+ x 1) (/ -1 n))) (pow x (/ 1 n))) (/ 1 (pow (+ x 1) (/ -1 n))) (pow (+ x 1) (/ -1 n)) (+ x 1) (- (* (pow (+ (* x x) -1) (/ 1 n)) (pow (/ -1 (- 1 x)) (/ 1 n))) (pow x (/ 1 n))) (* (pow (+ (* x x) -1) (/ 1 n)) (pow (/ -1 (- 1 x)) (/ 1 n))) (pow (+ (* x x) -1) (/ 1 n)) (+ (* x x) -1) (neg (/ (- (pow (+ x 1) (/ 2 n)) (pow x (/ 2 n))) (neg (+ (pow (+ x 1) (/ 1 n)) (pow x (/ 1 n)))))) (/ (- (pow (+ x 1) (/ 2 n)) (pow x (/ 2 n))) (neg (+ (pow (+ x 1) (/ 1 n)) (pow x (/ 1 n))))) (- (pow (+ x 1) (/ 2 n)) (pow x (/ 2 n))) (pow (+ x 1) (/ 2 n)) (* (+ (pow (+ x 1) (/ -1 (* -2 n))) (pow x (/ -1 (* -2 n)))) (- (pow (+ x 1) (/ -1 (* -2 n))) (pow x (/ -1 (* -2 n))))) (+ (pow (+ x 1) (/ -1 (* -2 n))) (pow x (/ -1 (* -2 n)))) (pow (+ x 1) (/ -1 (* -2 n))) (/ -1 n) (- 1 x) (neg (+ (pow (+ x 1) (/ 1 n)) (pow x (/ 1 n)))) (- (pow (+ x 1) (/ -1 (* -2 n))) (pow x (/ -1 (* -2 n)))) (* -2 n))","x","0"]],"time":215.4248046875,"type":"series"},{"count":[[363,0]],"inputs":[["(- 1 (exp (/ (log x) n)))","(- (+ 1 (/ x n)) (exp (/ (log x) n)))","(- (+ 1 (* x (+ (* x (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (/ 1 n)))) (exp (/ (log x) n)))","(- (+ 1 (* x (+ (* x (- (+ (* 1/2 (/ 1 (pow n 2))) (* x (- (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))) (* 1/2 (/ 1 (pow n 2)))))) (* 1/2 (/ 1 n)))) (/ 1 n)))) (exp (/ (log x) n)))","1","(+ 1 (/ x n))","(+ 1 (* x (+ (* x (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (/ 1 n))))","(+ 1 (* x (+ (* x (- (+ (* 1/2 (/ 1 (pow n 2))) (* x (- (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))) (* 1/2 (/ 1 (pow n 2)))))) (* 1/2 (/ 1 n)))) (/ 1 n))))","(/ x n)","(* x (+ (* -1/2 (/ x n)) (/ 1 n)))","(* x (+ (* x (- (* 1/3 (/ x n)) (* 1/2 (/ 1 n)))) (/ 1 n)))","(* x (+ (* x (- (* x (+ (* -1/4 (/ x n)) (* 1/3 (/ 1 n)))) (* 1/2 (/ 1 n)))) (/ 1 n)))","x","(* x (+ 1 (* -1/2 x)))","(* x (+ 1 (* x (- (* 1/3 x) 1/2))))","(* x (+ 1 (* x (- (* x (+ 1/3 (* -1/4 x))) 1/2))))","(- (+ 1 (* x (+ (* x (- (/ 1 (pow n 2)) (+ (* 1/2 (/ 1 n)) (* 1/2 (/ 1 (pow n 2)))))) (/ 1 n)))) (exp (/ (log x) n)))","(- (+ 1 (* x (+ (* x (- (+ (* -1 (* x (+ (* -1 (+ (* 1/3 (/ 1 n)) (+ (* 1/2 (/ 1 (pow n 2))) (* 1/6 (/ 1 (pow n 3)))))) (+ (* -1 (/ (- (/ 1 (pow n 2)) (+ (* 1/2 (/ 1 n)) (* 1/2 (/ 1 (pow n 2))))) n)) (+ (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 (pow n 3)))))))) (/ 1 (pow n 2))) (+ (* 1/2 (/ 1 n)) (* 1/2 (/ 1 (pow n 2)))))) (/ 1 n)))) (exp (/ (log x) n)))","(+ 1 (* x (+ (* x (- (/ 1 (pow n 2)) (+ (* 1/2 (/ 1 n)) (* 1/2 (/ 1 (pow n 2)))))) (/ 1 n))))","(+ 1 (* x (+ (* x (- (+ (* -1 (* x (+ (* -1 (+ (* 1/6 (/ 1 (pow n 3))) (+ (* 1/2 (/ 1 (pow n 2))) (* 1/3 (/ 1 n))))) (+ (* -1 (/ (- (/ 1 (pow n 2)) (+ (* 1/2 (/ 1 n)) (* 1/2 (/ 1 (pow n 2))))) n)) (+ (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 (pow n 3)))))))) (/ 1 (pow n 2))) (+ (* 1/2 (/ 1 n)) (* 1/2 (/ 1 (pow n 2)))))) (/ 1 n))))","(+ 1 (* -1 (/ x n)))","(+ 1 (* x (- (* x (+ (* 1/2 (/ 1 n)) (* 1/2 (/ 1 (pow n 2))))) (/ 1 n))))","(+ 1 (* x (- (* x (+ (* -1 (* x (+ (* 1/3 (/ 1 n)) (+ (* 1/2 (/ 1 (pow n 2))) (* 1/6 (/ 1 (pow n 3))))))) (+ (* 1/2 (/ 1 n)) (* 1/2 (/ 1 (pow n 2)))))) (/ 1 n))))","(+ 1 x)","(- (pow (exp (/ (log -1) n)) 2) (exp (/ (log x) n)))","(- (+ (/ (* x (pow (exp (/ (log -1) n)) 2)) n) (pow (exp (/ (log -1) n)) 2)) (exp (/ (log x) n)))","(- (+ (* x (+ (* x (+ (* -1 (/ (pow (exp (/ (log -1) n)) 2) n)) (* (pow (exp (/ (log -1) n)) 2) (+ (* 1/2 (/ 1 n)) (* 1/2 (/ 1 (pow n 2))))))) (/ (pow (exp (/ (log -1) n)) 2) n))) (pow (exp (/ (log -1) n)) 2)) (exp (/ (log x) n)))","(- (+ (* x (+ (* x (+ (* -1 (/ (pow (exp (/ (log -1) n)) 2) n)) (+ (* x (+ (* -1 (/ (pow (exp (/ (log -1) n)) 2) (pow n 2))) (* (pow (exp (/ (log -1) n)) 2) (+ (* 1/3 (/ 1 n)) (+ (* 1/2 (/ 1 (pow n 2))) (* 1/6 (/ 1 (pow n 3)))))))) (* (pow (exp (/ (log -1) n)) 2) (+ (* 1/2 (/ 1 n)) (* 1/2 (/ 1 (pow n 2)))))))) (/ (pow (exp (/ (log -1) n)) 2) n))) (pow (exp (/ (log -1) n)) 2)) (exp (/ (log x) n)))","(pow (exp (/ (log -1) n)) 2)","(+ (/ (* x (pow (exp (/ (log -1) n)) 2)) n) (pow (exp (/ (log -1) n)) 2))","(+ (* x (+ (* x (+ (* -1 (/ (pow (exp (/ (log -1) n)) 2) n)) (* (pow (exp (/ (log -1) n)) 2) (+ (* 1/2 (/ 1 n)) (* 1/2 (/ 1 (pow n 2))))))) (/ (pow (exp (/ (log -1) n)) 2) n))) (pow (exp (/ (log -1) n)) 2))","(+ (* x (+ (* x (+ (* -1 (/ (pow (exp (/ (log -1) n)) 2) n)) (+ (* x (+ (* -1 (/ (pow (exp (/ (log -1) n)) 2) (pow n 2))) (* (pow (exp (/ (log -1) n)) 2) (+ (* 1/6 (/ 1 (pow n 3))) (+ (* 1/2 (/ 1 (pow n 2))) (* 1/3 (/ 1 n))))))) (* (pow (exp (/ (log -1) n)) 2) (+ (* 1/2 (/ 1 n)) (* 1/2 (/ 1 (pow n 2)))))))) (/ (pow (exp (/ (log -1) n)) 2) n))) (pow (exp (/ (log -1) n)) 2))","(exp (/ (log -1) n))","(+ (exp (/ (log -1) n)) (* -1 (/ (* (pow x 2) (exp (/ (log -1) n))) n)))","(+ (exp (/ (log -1) n)) (* (pow x 2) (+ (* -1 (/ (exp (/ (log -1) n)) n)) (* (pow x 2) (* (exp (/ (log -1) n)) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n))))))))","(+ (exp (/ (log -1) n)) (* (pow x 2) (+ (* -1 (/ (exp (/ (log -1) n)) n)) (* (pow x 2) (+ (* (exp (/ (log -1) n)) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (pow x 2) (* (exp (/ (log -1) n)) (- (* 1/2 (/ 1 (pow n 2))) (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n)))))))))))","-1","(- (pow x 2) 1)","(/ (- 1 (exp (* 2 (/ (log x) n)))) (+ 1 (exp (/ (log x) n))))","(- (* x (- (+ (* 2 (/ 1 (* n (+ 1 (exp (/ (log x) n)))))) (/ (exp (* 2 (/ (log x) n))) (* n (pow (+ 1 (exp (/ (log x) n))) 2)))) (/ 1 (* n (pow (+ 1 (exp (/ (log x) n))) 2))))) (* -1 (/ (- 1 (exp (* 2 (/ (log x) n)))) (+ 1 (exp (/ (log x) n))))))","(- (* x (- (* x (- (+ (* 2 (/ 1 (* (pow n 2) (+ 1 (exp (/ (log x) n)))))) (/ 1 (* (pow n 2) (pow (+ 1 (exp (/ (log x) n))) 3)))) (+ (* 2 (/ 1 (* (pow n 2) (pow (+ 1 (exp (/ (log x) n))) 2)))) (+ (/ 1 (* n (+ 1 (exp (/ (log x) n))))) (+ (/ (exp (* 2 (/ (log x) n))) (* (pow n 2) (pow (+ 1 (exp (/ (log x) n))) 3))) (/ (* (- 1 (exp (* 2 (/ (log x) n)))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (pow (+ 1 (exp (/ (log x) n))) 2))))))) (* -1 (- (+ (* 2 (/ 1 (* n (+ 1 (exp (/ (log x) n)))))) (/ (exp (* 2 (/ (log x) n))) (* n (pow (+ 1 (exp (/ (log x) n))) 2)))) (/ 1 (* n (pow (+ 1 (exp (/ (log x) n))) 2))))))) (* -1 (/ (- 1 (exp (* 2 (/ (log x) n)))) (+ 1 (exp (/ (log x) n))))))","(- (* x (- (* x (- (* x (- (+ (* 2/3 (/ 1 (* n (+ 1 (exp (/ (log x) n)))))) (+ (* 4/3 (/ 1 (* (pow n 3) (+ 1 (exp (/ (log x) n)))))) (+ (* 2 (/ 1 (* (pow n 3) (pow (+ 1 (exp (/ (log x) n))) 3)))) (+ (/ 1 (* (pow n 2) (pow (+ 1 (exp (/ (log x) n))) 2))) (+ (/ (exp (* 2 (/ (log x) n))) (* (pow n 3) (pow (+ 1 (exp (/ (log x) n))) 4))) (/ (* (- 1 (exp (* 2 (/ (log x) n)))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* n (pow (+ 1 (exp (/ (log x) n))) 3)))))))) (+ (* 2 (/ 1 (* (pow n 2) (+ 1 (exp (/ (log x) n)))))) (+ (* 2 (/ 1 (* (pow n 3) (pow (+ 1 (exp (/ (log x) n))) 2)))) (+ (/ 1 (* (pow n 3) (pow (+ 1 (exp (/ (log x) n))) 4))) (+ (/ (* (- 1 (exp (* 2 (/ (log x) n)))) (- (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))) (* 1/2 (/ 1 (pow n 2))))) (pow (+ 1 (exp (/ (log x) n))) 2)) (/ (* (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n))) (- (+ (* 2 (/ 1 (* n (+ 1 (exp (/ (log x) n)))))) (/ (exp (* 2 (/ (log x) n))) (* n (pow (+ 1 (exp (/ (log x) n))) 2)))) (/ 1 (* n (pow (+ 1 (exp (/ (log x) n))) 2))))) (+ 1 (exp (/ (log x) n)))))))))) (* -1 (- (+ (* 2 (/ 1 (* (pow n 2) (+ 1 (exp (/ (log x) n)))))) (/ 1 (* (pow n 2) (pow (+ 1 (exp (/ (log x) n))) 3)))) (+ (* 2 (/ 1 (* (pow n 2) (pow (+ 1 (exp (/ (log x) n))) 2)))) (+ (/ 1 (* n (+ 1 (exp (/ (log x) n))))) (+ (/ (exp (* 2 (/ (log x) n))) (* (pow n 2) (pow (+ 1 (exp (/ (log x) n))) 3))) (/ (* (- 1 (exp (* 2 (/ (log x) n)))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (pow (+ 1 (exp (/ (log x) n))) 2))))))))) (* -1 (- (+ (* 2 (/ 1 (* n (+ 1 (exp (/ (log x) n)))))) (/ (exp (* 2 (/ (log x) n))) (* n (pow (+ 1 (exp (/ (log x) n))) 2)))) (/ 1 (* n (pow (+ 1 (exp (/ (log x) n))) 2))))))) (* -1 (/ (- 1 (exp (* 2 (/ (log x) n)))) (+ 1 (exp (/ (log x) n))))))","(* -1 (/ (- 1 (exp (* 2 (/ (log x) n)))) (+ 1 (exp (/ (log x) n)))))","(+ (* -1 (* x (- (+ (* 2 (/ 1 (* n (+ 1 (exp (/ (log x) n)))))) (/ (exp (* 2 (/ (log x) n))) (* n (pow (+ 1 (exp (/ (log x) n))) 2)))) (/ 1 (* n (pow (+ 1 (exp (/ (log x) n))) 2)))))) (* -1 (/ (- 1 (exp (* 2 (/ (log x) n)))) (+ 1 (exp (/ (log x) n))))))","(+ (* -1 (/ (- 1 (exp (* 2 (/ (log x) n)))) (+ 1 (exp (/ (log x) n))))) (* x (+ (* -1 (* x (- (+ (* 2 (/ 1 (* (pow n 2) (+ 1 (exp (/ (log x) n)))))) (/ 1 (* (pow n 2) (pow (+ 1 (exp (/ (log x) n))) 3)))) (+ (* 2 (/ 1 (* (pow n 2) (pow (+ 1 (exp (/ (log x) n))) 2)))) (+ (/ 1 (* n (+ 1 (exp (/ (log x) n))))) (+ (/ (exp (* 2 (/ (log x) n))) (* (pow n 2) (pow (+ 1 (exp (/ (log x) n))) 3))) (/ (* (- 1 (exp (* 2 (/ (log x) n)))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (pow (+ 1 (exp (/ (log x) n))) 2)))))))) (* -1 (- (+ (* 2 (/ 1 (* n (+ 1 (exp (/ (log x) n)))))) (/ (exp (* 2 (/ (log x) n))) (* n (pow (+ 1 (exp (/ (log x) n))) 2)))) (/ 1 (* n (pow (+ 1 (exp (/ (log x) n))) 2))))))))","(+ (* -1 (/ (- 1 (exp (* 2 (/ (log x) n)))) (+ 1 (exp (/ (log x) n))))) (* x (+ (* -1 (- (+ (* 2 (/ 1 (* n (+ 1 (exp (/ (log x) n)))))) (/ (exp (* 2 (/ (log x) n))) (* n (pow (+ 1 (exp (/ (log x) n))) 2)))) (/ 1 (* n (pow (+ 1 (exp (/ (log x) n))) 2))))) (* x (+ (* -1 (* x (- (+ (* 2/3 (/ 1 (* n (+ 1 (exp (/ (log x) n)))))) (+ (* 4/3 (/ 1 (* (pow n 3) (+ 1 (exp (/ (log x) n)))))) (+ (* 2 (/ 1 (* (pow n 3) (pow (+ 1 (exp (/ (log x) n))) 3)))) (+ (/ 1 (* (pow n 2) (pow (+ 1 (exp (/ (log x) n))) 2))) (+ (/ (exp (* 2 (/ (log x) n))) (* (pow n 3) (pow (+ 1 (exp (/ (log x) n))) 4))) (/ (* (- 1 (exp (* 2 (/ (log x) n)))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* n (pow (+ 1 (exp (/ (log x) n))) 3)))))))) (+ (* 2 (/ 1 (* (pow n 2) (+ 1 (exp (/ (log x) n)))))) (+ (* 2 (/ 1 (* (pow n 3) (pow (+ 1 (exp (/ (log x) n))) 2)))) (+ (/ 1 (* (pow n 3) (pow (+ 1 (exp (/ (log x) n))) 4))) (+ (/ (* (- 1 (exp (* 2 (/ (log x) n)))) (- (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))) (* 1/2 (/ 1 (pow n 2))))) (pow (+ 1 (exp (/ (log x) n))) 2)) (/ (* (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n))) (- (+ (* 2 (/ 1 (* n (+ 1 (exp (/ (log x) n)))))) (/ (exp (* 2 (/ (log x) n))) (* n (pow (+ 1 (exp (/ (log x) n))) 2)))) (/ 1 (* n (pow (+ 1 (exp (/ (log x) n))) 2))))) (+ 1 (exp (/ (log x) n))))))))))) (* -1 (- (+ (* 2 (/ 1 (* (pow n 2) (+ 1 (exp (/ (log x) n)))))) (/ 1 (* (pow n 2) (pow (+ 1 (exp (/ (log x) n))) 3)))) (+ (* 2 (/ 1 (* (pow n 2) (pow (+ 1 (exp (/ (log x) n))) 2)))) (+ (/ 1 (* n (+ 1 (exp (/ (log x) n))))) (+ (/ (exp (* 2 (/ (log x) n))) (* (pow n 2) (pow (+ 1 (exp (/ (log x) n))) 3))) (/ (* (- 1 (exp (* 2 (/ (log x) n)))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (pow (+ 1 (exp (/ (log x) n))) 2))))))))))))","(- 1 (exp (* 2 (/ (log x) n))))","(- (+ 1 (* 2 (/ x n))) (exp (* 2 (/ (log x) n))))","(- (+ 1 (* x (+ (* x (- (* 2 (/ 1 (pow n 2))) (/ 1 n))) (* 2 (/ 1 n))))) (exp (* 2 (/ (log x) n))))","(- (+ 1 (* x (+ (* x (- (+ (* 2 (/ 1 (pow n 2))) (* x (- (+ (* 2/3 (/ 1 n)) (* 4/3 (/ 1 (pow n 3)))) (* 2 (/ 1 (pow n 2)))))) (/ 1 n))) (* 2 (/ 1 n))))) (exp (* 2 (/ (log x) n))))","(+ 1 (* 2 (/ x n)))","(+ 1 (* x (+ (* x (- (* 2 (/ 1 (pow n 2))) (/ 1 n))) (* 2 (/ 1 n)))))","(+ 1 (* x (+ (* x (- (+ (* 2 (/ 1 (pow n 2))) (* x (- (+ (* 2/3 (/ 1 n)) (* 4/3 (/ 1 (pow n 3)))) (* 2 (/ 1 (pow n 2)))))) (/ 1 n))) (* 2 (/ 1 n)))))","(* (+ 1 (exp (* 1/2 (/ (log x) n)))) (- 1 (exp (* 1/2 (/ (log x) n)))))","(+ (* x (+ (* 1/2 (/ (+ 1 (exp (* 1/2 (/ (log x) n)))) n)) (* 1/2 (/ (- 1 (exp (* 1/2 (/ (log x) n)))) n)))) (* (+ 1 (exp (* 1/2 (/ (log x) n)))) (- 1 (exp (* 1/2 (/ (log x) n))))))","(+ (* x (+ (* 1/2 (/ (+ 1 (exp (* 1/2 (/ (log x) n)))) n)) (+ (* 1/2 (/ (- 1 (exp (* 1/2 (/ (log x) n)))) n)) (* x (+ (* 1/4 (/ 1 (pow n 2))) (+ (* (+ 1 (exp (* 1/2 (/ (log x) n)))) (- (* 1/8 (/ 1 (pow n 2))) (* 1/4 (/ 1 n)))) (* (- 1 (exp (* 1/2 (/ (log x) n)))) (- (* 1/8 (/ 1 (pow n 2))) (* 1/4 (/ 1 n)))))))))) (* (+ 1 (exp (* 1/2 (/ (log x) n)))) (- 1 (exp (* 1/2 (/ (log x) n))))))","(+ (* x (+ (* 1/2 (/ (+ 1 (exp (* 1/2 (/ (log x) n)))) n)) (+ (* 1/2 (/ (- 1 (exp (* 1/2 (/ (log x) n)))) n)) (* x (+ (* 1/4 (/ 1 (pow n 2))) (+ (* x (- (+ (* 1/8 (/ 1 (pow n 3))) (+ (* (+ 1 (exp (* 1/2 (/ (log x) n)))) (- (+ (* 1/48 (/ 1 (pow n 3))) (* 1/6 (/ 1 n))) (* 1/8 (/ 1 (pow n 2))))) (* (- 1 (exp (* 1/2 (/ (log x) n)))) (- (+ (* 1/48 (/ 1 (pow n 3))) (* 1/6 (/ 1 n))) (* 1/8 (/ 1 (pow n 2))))))) (* 1/4 (/ 1 (pow n 2))))) (+ (* (+ 1 (exp (* 1/2 (/ (log x) n)))) (- (* 1/8 (/ 1 (pow n 2))) (* 1/4 (/ 1 n)))) (* (- 1 (exp (* 1/2 (/ (log x) n)))) (- (* 1/8 (/ 1 (pow n 2))) (* 1/4 (/ 1 n))))))))))) (* (+ 1 (exp (* 1/2 (/ (log x) n)))) (- 1 (exp (* 1/2 (/ (log x) n))))))","(+ 1 (exp (* 1/2 (/ (log x) n))))","(+ 1 (+ (exp (* 1/2 (/ (log x) n))) (* 1/2 (/ x n))))","(+ 1 (+ (exp (* 1/2 (/ (log x) n))) (* x (+ (* x (- (* 1/8 (/ 1 (pow n 2))) (* 1/4 (/ 1 n)))) (* 1/2 (/ 1 n))))))","(+ 1 (+ (exp (* 1/2 (/ (log x) n))) (* x (+ (* x (- (+ (* 1/8 (/ 1 (pow n 2))) (* x (- (+ (* 1/48 (/ 1 (pow n 3))) (* 1/6 (/ 1 n))) (* 1/8 (/ 1 (pow n 2)))))) (* 1/4 (/ 1 n)))) (* 1/2 (/ 1 n))))))","(+ 1 (* 1/2 (/ x n)))","(+ 1 (* x (+ (* x (- (* 1/8 (/ 1 (pow n 2))) (* 1/4 (/ 1 n)))) (* 1/2 (/ 1 n)))))","(+ 1 (* x (+ (* x (- (+ (* 1/8 (/ 1 (pow n 2))) (* x (- (+ (* 1/48 (/ 1 (pow n 3))) (* 1/6 (/ 1 n))) (* 1/8 (/ 1 (pow n 2)))))) (* 1/4 (/ 1 n)))) (* 1/2 (/ 1 n)))))","(+ 1 (* -1 x))","(* -1 (+ 1 (exp (/ (log x) n))))","(- (* -1 (/ x n)) (+ 1 (exp (/ (log x) n))))","(- (* x (- (* x (- (* 1/2 (/ 1 n)) (* 1/2 (/ 1 (pow n 2))))) (/ 1 n))) (+ 1 (exp (/ (log x) n))))","(- (* x (- (* x (- (+ (* 1/2 (/ 1 n)) (* x (- (* 1/2 (/ 1 (pow n 2))) (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n)))))) (* 1/2 (/ 1 (pow n 2))))) (/ 1 n))) (+ 1 (exp (/ (log x) n))))","(- 1 (exp (* 1/2 (/ (log x) n))))","(- (+ 1 (* 1/2 (/ x n))) (exp (* 1/2 (/ (log x) n))))","(- (+ 1 (* x (+ (* x (- (* 1/8 (/ 1 (pow n 2))) (* 1/4 (/ 1 n)))) (* 1/2 (/ 1 n))))) (exp (* 1/2 (/ (log x) n))))","(- (+ 1 (* x (+ (* x (- (+ (* 1/8 (/ 1 (pow n 2))) (* x (- (+ (* 1/48 (/ 1 (pow n 3))) (* 1/6 (/ 1 n))) (* 1/8 (/ 1 (pow n 2)))))) (* 1/4 (/ 1 n)))) (* 1/2 (/ 1 n))))) (exp (* 1/2 (/ (log x) n))))","(/ (exp (* -1 (/ (log (/ 1 x)) n))) (* n x))","(/ (+ (/ (exp (* -1 (/ (log (/ 1 x)) n))) n) (/ (* (exp (* -1 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) x)) x)","(/ (+ (/ (exp (* -1 (/ (log (/ 1 x)) n))) n) (+ (/ (* (exp (* -1 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) x) (/ (* (exp (* -1 (/ (log (/ 1 x)) n))) (- (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))) (* 1/2 (/ 1 (pow n 2))))) (pow x 2)))) x)","(/ (+ (/ (exp (* -1 (/ (log (/ 1 x)) n))) n) (+ (/ (* (exp (* -1 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) x) (+ (/ (* (exp (* -1 (/ (log (/ 1 x)) n))) (- (+ (* 1/24 (/ 1 (pow n 4))) (* 11/24 (/ 1 (pow n 2)))) (+ (* 1/4 (/ 1 n)) (* 1/4 (/ 1 (pow n 3)))))) (pow x 3)) (/ (* (exp (* -1 (/ (log (/ 1 x)) n))) (- (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))) (* 1/2 (/ 1 (pow n 2))))) (pow x 2))))) x)","(exp (* -1 (/ (log (/ 1 x)) n)))","(+ (exp (* -1 (/ (log (/ 1 x)) n))) (/ (exp (* -1 (/ (log (/ 1 x)) n))) (* n x)))","(+ (exp (* -1 (/ (log (/ 1 x)) n))) (+ (/ (exp (* -1 (/ (log (/ 1 x)) n))) (* n x)) (/ (* (exp (* -1 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (pow x 2))))","(+ (exp (* -1 (/ (log (/ 1 x)) n))) (+ (/ (exp (* -1 (/ (log (/ 1 x)) n))) (* n x)) (+ (/ (* (exp (* -1 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (pow x 2)) (/ (* (exp (* -1 (/ (log (/ 1 x)) n))) (- (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))) (* 1/2 (/ 1 (pow n 2))))) (pow x 3)))))","(* -1 (/ (log (/ 1 x)) n))","(+ (* -1 (/ (log (/ 1 x)) n)) (/ 1 (* n x)))","(- (+ (* -1 (/ (log (/ 1 x)) n)) (/ 1 (* n x))) (/ 1/2 (* n (pow x 2))))","(- (+ (* -1 (/ (log (/ 1 x)) n)) (+ (/ 1 (* n x)) (* 1/3 (/ 1 (* n (pow x 3)))))) (* 1/2 (/ 1 (* n (pow x 2)))))","(* -1 (log (/ 1 x)))","(+ (* -1 (log (/ 1 x))) (/ 1 x))","(- (+ (* -1 (log (/ 1 x))) (/ 1 x)) (/ 1/2 (pow x 2)))","(- (+ (* -1 (log (/ 1 x))) (+ (/ 1 x) (* 1/3 (/ 1 (pow x 3))))) (/ 1/2 (pow x 2)))","(- (/ 1 (exp (/ (log (/ 1 x)) n))) (exp (* -1 (/ (log (/ 1 x)) n))))","(- (+ (/ 1 (exp (/ (log (/ 1 x)) n))) (/ 1 (* n (* x (exp (/ (log (/ 1 x)) n)))))) (exp (* -1 (/ (log (/ 1 x)) n))))","(- (+ (/ 1 (exp (/ (log (/ 1 x)) n))) (+ (/ 1 (* n (* x (exp (/ (log (/ 1 x)) n))))) (* 1/2 (/ 1 (* (pow n 2) (* (pow x 2) (exp (/ (log (/ 1 x)) n)))))))) (+ (exp (* -1 (/ (log (/ 1 x)) n))) (* 1/2 (/ 1 (* n (* (pow x 2) (exp (/ (log (/ 1 x)) n))))))))","(- (+ (* -1 (/ (+ (* -1 (/ (+ (* 1/3 (/ 1 n)) (+ (* 1/2 (/ 1 (pow n 2))) (* 1/6 (/ 1 (pow n 3))))) (exp (/ (log (/ 1 x)) n)))) (+ (* -1 (/ (- (* 1/2 (/ 1 (* (pow n 2) (exp (/ (log (/ 1 x)) n))))) (* 1/2 (/ 1 (* n (exp (/ (log (/ 1 x)) n)))))) n)) (+ (* 1/2 (/ 1 (* (pow n 2) (exp (/ (log (/ 1 x)) n))))) (* 1/2 (/ 1 (* (pow n 3) (exp (/ (log (/ 1 x)) n)))))))) (pow x 3))) (+ (/ 1 (exp (/ (log (/ 1 x)) n))) (+ (/ 1 (* n (* x (exp (/ (log (/ 1 x)) n))))) (* 1/2 (/ 1 (* (pow n 2) (* (pow x 2) (exp (/ (log (/ 1 x)) n))))))))) (+ (exp (* -1 (/ (log (/ 1 x)) n))) (* 1/2 (/ 1 (* n (* (pow x 2) (exp (/ (log (/ 1 x)) n))))))))","(/ 1 (exp (/ (log (/ 1 x)) n)))","(+ (/ 1 (exp (/ (log (/ 1 x)) n))) (/ 1 (* n (* x (exp (/ (log (/ 1 x)) n))))))","(- (+ (/ 1 (exp (/ (log (/ 1 x)) n))) (+ (/ 1 (* n (* x (exp (/ (log (/ 1 x)) n))))) (* 1/2 (/ 1 (* (pow n 2) (* (pow x 2) (exp (/ (log (/ 1 x)) n)))))))) (* 1/2 (/ 1 (* n (* (pow x 2) (exp (/ (log (/ 1 x)) n)))))))","(- (+ (* -1 (/ (+ (* -1 (/ (+ (* 1/6 (/ 1 (pow n 3))) (+ (* 1/2 (/ 1 (pow n 2))) (* 1/3 (/ 1 n)))) (exp (/ (log (/ 1 x)) n)))) (+ (* -1 (/ (- (* 1/2 (/ 1 (* (pow n 2) (exp (/ (log (/ 1 x)) n))))) (* 1/2 (/ 1 (* n (exp (/ (log (/ 1 x)) n)))))) n)) (+ (* 1/2 (/ 1 (* (pow n 2) (exp (/ (log (/ 1 x)) n))))) (* 1/2 (/ 1 (* (pow n 3) (exp (/ (log (/ 1 x)) n)))))))) (pow x 3))) (+ (/ 1 (exp (/ (log (/ 1 x)) n))) (+ (/ 1 (* n (* x (exp (/ (log (/ 1 x)) n))))) (* 1/2 (/ 1 (* (pow n 2) (* (pow x 2) (exp (/ (log (/ 1 x)) n))))))))) (* 1/2 (/ 1 (* n (* (pow x 2) (exp (/ (log (/ 1 x)) n)))))))","(exp (/ (log (/ 1 x)) n))","(+ (exp (/ (log (/ 1 x)) n)) (* -1 (/ (exp (/ (log (/ 1 x)) n)) (* n x))))","(+ (exp (/ (log (/ 1 x)) n)) (+ (* -1 (/ (exp (/ (log (/ 1 x)) n)) (* n x))) (/ (* (exp (/ (log (/ 1 x)) n)) (+ (* 1/2 (/ 1 n)) (* 1/2 (/ 1 (pow n 2))))) (pow x 2))))","(+ (exp (/ (log (/ 1 x)) n)) (+ (* -1 (/ (exp (/ (log (/ 1 x)) n)) (* n x))) (+ (* -1 (/ (* (exp (/ (log (/ 1 x)) n)) (+ (* 1/3 (/ 1 n)) (+ (* 1/2 (/ 1 (pow n 2))) (* 1/6 (/ 1 (pow n 3)))))) (pow x 3))) (/ (* (exp (/ (log (/ 1 x)) n)) (+ (* 1/2 (/ 1 n)) (* 1/2 (/ 1 (pow n 2))))) (pow x 2)))))","(* x (+ 1 (/ 1 x)))","(- (* (exp (* -2 (/ (log (/ 1 x)) n))) (exp (/ (log (/ 1 x)) n))) (exp (* -1 (/ (log (/ 1 x)) n))))","(- (+ (* (exp (* -2 (/ (log (/ 1 x)) n))) (exp (/ (log (/ 1 x)) n))) (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (exp (/ (log (/ 1 x)) n))) (* n x))) (exp (* -1 (/ (log (/ 1 x)) n))))","(- (+ (* -1 (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (exp (/ (log (/ 1 x)) n))) (* n (pow x 2)))) (+ (* (exp (* -2 (/ (log (/ 1 x)) n))) (exp (/ (log (/ 1 x)) n))) (+ (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (exp (/ (log (/ 1 x)) n))) (* n x)) (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (* (exp (/ (log (/ 1 x)) n)) (+ (* 1/2 (/ 1 n)) (* 1/2 (/ 1 (pow n 2)))))) (pow x 2))))) (exp (* -1 (/ (log (/ 1 x)) n))))","(- (+ (* -1 (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (exp (/ (log (/ 1 x)) n))) (* n (pow x 2)))) (+ (* -1 (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (exp (/ (log (/ 1 x)) n))) (* (pow n 2) (pow x 3)))) (+ (* (exp (* -2 (/ (log (/ 1 x)) n))) (exp (/ (log (/ 1 x)) n))) (+ (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (exp (/ (log (/ 1 x)) n))) (* n x)) (+ (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (* (exp (/ (log (/ 1 x)) n)) (+ (* 1/3 (/ 1 n)) (+ (* 1/2 (/ 1 (pow n 2))) (* 1/6 (/ 1 (pow n 3))))))) (pow x 3)) (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (* (exp (/ (log (/ 1 x)) n)) (+ (* 1/2 (/ 1 n)) (* 1/2 (/ 1 (pow n 2)))))) (pow x 2))))))) (exp (* -1 (/ (log (/ 1 x)) n))))","(* (exp (* -2 (/ (log (/ 1 x)) n))) (exp (/ (log (/ 1 x)) n)))","(+ (* (exp (* -2 (/ (log (/ 1 x)) n))) (exp (/ (log (/ 1 x)) n))) (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (exp (/ (log (/ 1 x)) n))) (* n x)))","(+ (* -1 (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (exp (/ (log (/ 1 x)) n))) (* n (pow x 2)))) (+ (* (exp (* -2 (/ (log (/ 1 x)) n))) (exp (/ (log (/ 1 x)) n))) (+ (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (exp (/ (log (/ 1 x)) n))) (* n x)) (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (* (exp (/ (log (/ 1 x)) n)) (+ (* 1/2 (/ 1 n)) (* 1/2 (/ 1 (pow n 2)))))) (pow x 2)))))","(+ (* -1 (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (exp (/ (log (/ 1 x)) n))) (* n (pow x 2)))) (+ (* -1 (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (exp (/ (log (/ 1 x)) n))) (* (pow n 2) (pow x 3)))) (+ (* (exp (* -2 (/ (log (/ 1 x)) n))) (exp (/ (log (/ 1 x)) n))) (+ (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (exp (/ (log (/ 1 x)) n))) (* n x)) (+ (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (* (exp (/ (log (/ 1 x)) n)) (+ (* 1/6 (/ 1 (pow n 3))) (+ (* 1/2 (/ 1 (pow n 2))) (* 1/3 (/ 1 n)))))) (pow x 3)) (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (* (exp (/ (log (/ 1 x)) n)) (+ (* 1/2 (/ 1 n)) (* 1/2 (/ 1 (pow n 2)))))) (pow x 2)))))))","(exp (* -2 (/ (log (/ 1 x)) n)))","(+ (exp (* -2 (/ (log (/ 1 x)) n))) (* -1 (/ (exp (* -2 (/ (log (/ 1 x)) n))) (* n (pow x 2)))))","(+ (exp (* -2 (/ (log (/ 1 x)) n))) (+ (* -1 (/ (exp (* -2 (/ (log (/ 1 x)) n))) (* n (pow x 2)))) (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (pow x 4))))","(+ (exp (* -2 (/ (log (/ 1 x)) n))) (+ (* -1 (/ (exp (* -2 (/ (log (/ 1 x)) n))) (* n (pow x 2)))) (+ (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (pow x 4)) (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))))) (pow x 6)))))","(pow x 2)","(* (pow x 2) (- 1 (/ 1 (pow x 2))))","(/ (exp (* -2 (/ (log (/ 1 x)) n))) (* n (* x (exp (* -1 (/ (log (/ 1 x)) n))))))","(/ (- (* 1/2 (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))) (* x (exp (* -1 (/ (log (/ 1 x)) n)))))) (+ (* -1 (/ (exp (* -2 (/ (log (/ 1 x)) n))) (* n (exp (* -1 (/ (log (/ 1 x)) n)))))) (* 1/2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) (* (pow n 2) (* x (exp (* -1 (/ (log (/ 1 x)) n))))))))) x)","(/ (- (* 1/2 (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (+ (* 2/3 (/ 1 n)) (* 4/3 (/ 1 (pow n 3)))) (* 2 (/ 1 (pow n 2))))) (* (pow x 2) (exp (* -1 (/ (log (/ 1 x)) n)))))) (+ (* -1 (/ (exp (* -2 (/ (log (/ 1 x)) n))) (* n (exp (* -1 (/ (log (/ 1 x)) n)))))) (+ (* -1 (/ (- (* 1/2 (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))) (exp (* -1 (/ (log (/ 1 x)) n))))) (* 1/2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) (* (pow n 2) (exp (* -1 (/ (log (/ 1 x)) n))))))) x)) (+ (* 1/2 (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* n (* (pow x 2) (exp (* -1 (/ (log (/ 1 x)) n))))))) (* 1/2 (/ (- (* 1/2 (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))) (exp (* -1 (/ (log (/ 1 x)) n))))) (* 1/2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) (* (pow n 2) (exp (* -1 (/ (log (/ 1 x)) n))))))) (* n (pow x 2)))))))) x)","(/ (- (* 1/2 (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (+ (* 2/3 (/ 1 (pow n 4))) (* 11/6 (/ 1 (pow n 2)))) (+ (* 1/2 (/ 1 n)) (* 2 (/ 1 (pow n 3)))))) (* (pow x 3) (exp (* -1 (/ (log (/ 1 x)) n)))))) (+ (* -1 (/ (exp (* -2 (/ (log (/ 1 x)) n))) (* n (exp (* -1 (/ (log (/ 1 x)) n)))))) (+ (* -1 (/ (- (* 1/2 (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))) (exp (* -1 (/ (log (/ 1 x)) n))))) (* 1/2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) (* (pow n 2) (exp (* -1 (/ (log (/ 1 x)) n))))))) x)) (+ (* -1 (/ (- (* 1/2 (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (+ (* 2/3 (/ 1 n)) (* 4/3 (/ 1 (pow n 3)))) (* 2 (/ 1 (pow n 2))))) (exp (* -1 (/ (log (/ 1 x)) n))))) (+ (* 1/2 (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* n (exp (* -1 (/ (log (/ 1 x)) n)))))) (* 1/2 (/ (- (* 1/2 (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))) (exp (* -1 (/ (log (/ 1 x)) n))))) (* 1/2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) (* (pow n 2) (exp (* -1 (/ (log (/ 1 x)) n))))))) n)))) (pow x 2))) (+ (* 1/2 (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))) (* 1/2 (/ 1 (pow n 2))))) (* n (* (pow x 3) (exp (* -1 (/ (log (/ 1 x)) n))))))) (+ (* 1/2 (/ (* (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n))) (- (* 1/2 (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))) (exp (* -1 (/ (log (/ 1 x)) n))))) (* 1/2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) (* (pow n 2) (exp (* -1 (/ (log (/ 1 x)) n)))))))) (pow x 3))) (* 1/2 (/ (- (* 1/2 (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (+ (* 2/3 (/ 1 n)) (* 4/3 (/ 1 (pow n 3)))) (* 2 (/ 1 (pow n 2))))) (exp (* -1 (/ (log (/ 1 x)) n))))) (+ (* 1/2 (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* n (exp (* -1 (/ (log (/ 1 x)) n)))))) (* 1/2 (/ (- (* 1/2 (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))) (exp (* -1 (/ (log (/ 1 x)) n))))) (* 1/2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) (* (pow n 2) (exp (* -1 (/ (log (/ 1 x)) n))))))) n)))) (* n (pow x 3)))))))))) x)","(* -1 (/ (exp (* -2 (/ (log (/ 1 x)) n))) (* n (* x (exp (* -1 (/ (log (/ 1 x)) n)))))))","(/ (+ (* -1 (/ (exp (* -2 (/ (log (/ 1 x)) n))) (* n (exp (* -1 (/ (log (/ 1 x)) n)))))) (* -1 (/ (- (* 1/2 (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))) (exp (* -1 (/ (log (/ 1 x)) n))))) (* 1/2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) (* (pow n 2) (exp (* -1 (/ (log (/ 1 x)) n))))))) x))) x)","(/ (+ (* -1 (/ (exp (* -2 (/ (log (/ 1 x)) n))) (* n (exp (* -1 (/ (log (/ 1 x)) n)))))) (+ (* -1 (/ (- (* 1/2 (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))) (exp (* -1 (/ (log (/ 1 x)) n))))) (* 1/2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) (* (pow n 2) (exp (* -1 (/ (log (/ 1 x)) n))))))) x)) (* -1 (/ (- (* 1/2 (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (+ (* 2/3 (/ 1 n)) (* 4/3 (/ 1 (pow n 3)))) (* 2 (/ 1 (pow n 2))))) (exp (* -1 (/ (log (/ 1 x)) n))))) (+ (* 1/2 (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* n (exp (* -1 (/ (log (/ 1 x)) n)))))) (* 1/2 (/ (- (* 1/2 (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))) (exp (* -1 (/ (log (/ 1 x)) n))))) (* 1/2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) (* (pow n 2) (exp (* -1 (/ (log (/ 1 x)) n))))))) n)))) (pow x 2))))) x)","(/ (+ (* -1 (/ (exp (* -2 (/ (log (/ 1 x)) n))) (* n (exp (* -1 (/ (log (/ 1 x)) n)))))) (+ (* -1 (/ (- (* 1/2 (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))) (exp (* -1 (/ (log (/ 1 x)) n))))) (* 1/2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) (* (pow n 2) (exp (* -1 (/ (log (/ 1 x)) n))))))) x)) (+ (* -1 (/ (- (* 1/2 (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (+ (* 2/3 (/ 1 n)) (* 4/3 (/ 1 (pow n 3)))) (* 2 (/ 1 (pow n 2))))) (exp (* -1 (/ (log (/ 1 x)) n))))) (+ (* 1/2 (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* n (exp (* -1 (/ (log (/ 1 x)) n)))))) (* 1/2 (/ (- (* 1/2 (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))) (exp (* -1 (/ (log (/ 1 x)) n))))) (* 1/2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) (* (pow n 2) (exp (* -1 (/ (log (/ 1 x)) n))))))) n)))) (pow x 2))) (* -1 (/ (- (* 1/2 (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (+ (* 2/3 (/ 1 (pow n 4))) (* 11/6 (/ 1 (pow n 2)))) (+ (* 1/2 (/ 1 n)) (* 2 (/ 1 (pow n 3)))))) (exp (* -1 (/ (log (/ 1 x)) n))))) (+ (* 1/2 (* (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n))) (- (* 1/2 (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))) (exp (* -1 (/ (log (/ 1 x)) n))))) (* 1/2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) (* (pow n 2) (exp (* -1 (/ (log (/ 1 x)) n))))))))) (+ (* 1/2 (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))) (* 1/2 (/ 1 (pow n 2))))) (* n (exp (* -1 (/ (log (/ 1 x)) n)))))) (* 1/2 (/ (- (* 1/2 (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (+ (* 2/3 (/ 1 n)) (* 4/3 (/ 1 (pow n 3)))) (* 2 (/ 1 (pow n 2))))) (exp (* -1 (/ (log (/ 1 x)) n))))) (+ (* 1/2 (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* n (exp (* -1 (/ (log (/ 1 x)) n)))))) (* 1/2 (/ (- (* 1/2 (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))) (exp (* -1 (/ (log (/ 1 x)) n))))) (* 1/2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) (* (pow n 2) (exp (* -1 (/ (log (/ 1 x)) n))))))) n)))) n))))) (pow x 3)))))) x)","(* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) (* n x)))","(/ (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))) x)) x)","(/ (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (+ (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))) x) (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (+ (* 2/3 (/ 1 n)) (* 4/3 (/ 1 (pow n 3)))) (* 2 (/ 1 (pow n 2))))) (pow x 2)))) x)","(/ (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (+ (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))) x) (+ (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (+ (* 2/3 (/ 1 n)) (* 4/3 (/ 1 (pow n 3)))) (* 2 (/ 1 (pow n 2))))) (pow x 2)) (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (+ (* 2/3 (/ 1 (pow n 4))) (* 11/6 (/ 1 (pow n 2)))) (+ (* 1/2 (/ 1 n)) (* 2 (/ 1 (pow n 3)))))) (pow x 3))))) x)","(+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) (* n x))))","(+ (exp (* -2 (/ (log (/ 1 x)) n))) (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) (* n x))) (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))) (pow x 2))))","(+ (exp (* -2 (/ (log (/ 1 x)) n))) (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) (* n x))) (+ (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))) (pow x 2)) (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (+ (* 2/3 (/ 1 n)) (* 4/3 (/ 1 (pow n 3)))) (* 2 (/ 1 (pow n 2))))) (pow x 3)))))","(/ (pow (exp (* -1/2 (/ (log (/ 1 x)) n))) 2) (* n x))","(/ (+ (* 1/4 (/ (pow (exp (* -1/2 (/ (log (/ 1 x)) n))) 2) (* (pow n 2) x))) (+ (* 2 (/ (* (pow (exp (* -1/2 (/ (log (/ 1 x)) n))) 2) (- (* 1/8 (/ 1 (pow n 2))) (* 1/4 (/ 1 n)))) x)) (/ (pow (exp (* -1/2 (/ (log (/ 1 x)) n))) 2) n))) x)","(/ (+ (* 1/4 (/ (pow (exp (* -1/2 (/ (log (/ 1 x)) n))) 2) (* (pow n 2) x))) (+ (* 2 (/ (* (pow (exp (* -1/2 (/ (log (/ 1 x)) n))) 2) (- (* 1/8 (/ 1 (pow n 2))) (* 1/4 (/ 1 n)))) x)) (+ (* 2 (/ (* (pow (exp (* -1/2 (/ (log (/ 1 x)) n))) 2) (- (+ (* 1/48 (/ 1 (pow n 3))) (* 1/6 (/ 1 n))) (* 1/8 (/ 1 (pow n 2))))) (pow x 2))) (+ (/ (* (pow (exp (* -1/2 (/ (log (/ 1 x)) n))) 2) (- (* 1/8 (/ 1 (pow n 2))) (* 1/4 (/ 1 n)))) (* n (pow x 2))) (/ (pow (exp (* -1/2 (/ (log (/ 1 x)) n))) 2) n))))) x)","(/ (+ (* 1/4 (/ (pow (exp (* -1/2 (/ (log (/ 1 x)) n))) 2) (* (pow n 2) x))) (+ (* 2 (/ (* (pow (exp (* -1/2 (/ (log (/ 1 x)) n))) 2) (- (* 1/8 (/ 1 (pow n 2))) (* 1/4 (/ 1 n)))) x)) (+ (* 2 (/ (* (pow (exp (* -1/2 (/ (log (/ 1 x)) n))) 2) (- (+ (* 1/384 (/ 1 (pow n 4))) (* 11/96 (/ 1 (pow n 2)))) (+ (* 1/32 (/ 1 (pow n 3))) (* 1/8 (/ 1 n))))) (pow x 3))) (+ (* 2 (/ (* (pow (exp (* -1/2 (/ (log (/ 1 x)) n))) 2) (- (+ (* 1/48 (/ 1 (pow n 3))) (* 1/6 (/ 1 n))) (* 1/8 (/ 1 (pow n 2))))) (pow x 2))) (+ (/ (* (pow (exp (* -1/2 (/ (log (/ 1 x)) n))) 2) (- (* 1/8 (/ 1 (pow n 2))) (* 1/4 (/ 1 n)))) (* n (pow x 2))) (+ (/ (* (pow (exp (* -1/2 (/ (log (/ 1 x)) n))) 2) (- (+ (* 1/48 (/ 1 (pow n 3))) (* 1/6 (/ 1 n))) (* 1/8 (/ 1 (pow n 2))))) (* n (pow x 3))) (+ (/ (* (pow (exp (* -1/2 (/ (log (/ 1 x)) n))) 2) (pow (- (* 1/8 (/ 1 (pow n 2))) (* 1/4 (/ 1 n))) 2)) (pow x 3)) (/ (pow (exp (* -1/2 (/ (log (/ 1 x)) n))) 2) n)))))))) x)","(* 2 (exp (* -1/2 (/ (log (/ 1 x)) n))))","(+ (* 1/2 (/ (exp (* -1/2 (/ (log (/ 1 x)) n))) (* n x))) (* 2 (exp (* -1/2 (/ (log (/ 1 x)) n)))))","(+ (* 1/2 (/ (exp (* -1/2 (/ (log (/ 1 x)) n))) (* n x))) (+ (* 2 (exp (* -1/2 (/ (log (/ 1 x)) n)))) (/ (* (exp (* -1/2 (/ (log (/ 1 x)) n))) (- (* 1/8 (/ 1 (pow n 2))) (* 1/4 (/ 1 n)))) (pow x 2))))","(+ (* 1/2 (/ (exp (* -1/2 (/ (log (/ 1 x)) n))) (* n x))) (+ (* 2 (exp (* -1/2 (/ (log (/ 1 x)) n)))) (+ (/ (* (exp (* -1/2 (/ (log (/ 1 x)) n))) (- (* 1/8 (/ 1 (pow n 2))) (* 1/4 (/ 1 n)))) (pow x 2)) (/ (* (exp (* -1/2 (/ (log (/ 1 x)) n))) (- (+ (* 1/48 (/ 1 (pow n 3))) (* 1/6 (/ 1 n))) (* 1/8 (/ 1 (pow n 2))))) (pow x 3)))))","(exp (* -1/2 (/ (log (/ 1 x)) n)))","(+ (exp (* -1/2 (/ (log (/ 1 x)) n))) (* 1/2 (/ (exp (* -1/2 (/ (log (/ 1 x)) n))) (* n x))))","(+ (exp (* -1/2 (/ (log (/ 1 x)) n))) (+ (* 1/2 (/ (exp (* -1/2 (/ (log (/ 1 x)) n))) (* n x))) (/ (* (exp (* -1/2 (/ (log (/ 1 x)) n))) (- (* 1/8 (/ 1 (pow n 2))) (* 1/4 (/ 1 n)))) (pow x 2))))","(+ (exp (* -1/2 (/ (log (/ 1 x)) n))) (+ (* 1/2 (/ (exp (* -1/2 (/ (log (/ 1 x)) n))) (* n x))) (+ (/ (* (exp (* -1/2 (/ (log (/ 1 x)) n))) (- (* 1/8 (/ 1 (pow n 2))) (* 1/4 (/ 1 n)))) (pow x 2)) (/ (* (exp (* -1/2 (/ (log (/ 1 x)) n))) (- (+ (* 1/48 (/ 1 (pow n 3))) (* 1/6 (/ 1 n))) (* 1/8 (/ 1 (pow n 2))))) (pow x 3)))))","(* -1 x)","(* x (- (/ 1 x) 1))","(* -2 (exp (* -1 (/ (log (/ 1 x)) n))))","(- (* -1 (/ (exp (* -1 (/ (log (/ 1 x)) n))) (* n x))) (* 2 (exp (* -1 (/ (log (/ 1 x)) n)))))","(- (* -1 (/ (* (exp (* -1 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (pow x 2))) (+ (* 2 (exp (* -1 (/ (log (/ 1 x)) n)))) (/ (exp (* -1 (/ (log (/ 1 x)) n))) (* n x))))","(- (* -1 (/ (* (exp (* -1 (/ (log (/ 1 x)) n))) (- (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))) (* 1/2 (/ 1 (pow n 2))))) (pow x 3))) (+ (* 2 (exp (* -1 (/ (log (/ 1 x)) n)))) (+ (/ (exp (* -1 (/ (log (/ 1 x)) n))) (* n x)) (/ (* (exp (* -1 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (pow x 2)))))","(* 1/2 (/ (exp (* -1/2 (/ (log (/ 1 x)) n))) (* n x)))","(/ (+ (* 1/2 (/ (exp (* -1/2 (/ (log (/ 1 x)) n))) n)) (/ (* (exp (* -1/2 (/ (log (/ 1 x)) n))) (- (* 1/8 (/ 1 (pow n 2))) (* 1/4 (/ 1 n)))) x)) x)","(/ (+ (* 1/2 (/ (exp (* -1/2 (/ (log (/ 1 x)) n))) n)) (+ (/ (* (exp (* -1/2 (/ (log (/ 1 x)) n))) (- (* 1/8 (/ 1 (pow n 2))) (* 1/4 (/ 1 n)))) x) (/ (* (exp (* -1/2 (/ (log (/ 1 x)) n))) (- (+ (* 1/48 (/ 1 (pow n 3))) (* 1/6 (/ 1 n))) (* 1/8 (/ 1 (pow n 2))))) (pow x 2)))) x)","(/ (+ (* 1/2 (/ (exp (* -1/2 (/ (log (/ 1 x)) n))) n)) (+ (/ (* (exp (* -1/2 (/ (log (/ 1 x)) n))) (- (* 1/8 (/ 1 (pow n 2))) (* 1/4 (/ 1 n)))) x) (+ (/ (* (exp (* -1/2 (/ (log (/ 1 x)) n))) (- (+ (* 1/384 (/ 1 (pow n 4))) (* 11/96 (/ 1 (pow n 2)))) (+ (* 1/32 (/ 1 (pow n 3))) (* 1/8 (/ 1 n))))) (pow x 3)) (/ (* (exp (* -1/2 (/ (log (/ 1 x)) n))) (- (+ (* 1/48 (/ 1 (pow n 3))) (* 1/6 (/ 1 n))) (* 1/8 (/ 1 (pow n 2))))) (pow x 2))))) x)","(/ (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)) (* n x))","(* -1 (/ (+ (* -1 (/ (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)) n)) (* -1 (/ (* (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) x))) x))","(* -1 (/ (+ (* -1 (/ (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)) n)) (* -1 (/ (+ (* -1 (/ (* (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)) (- (* 1/2 (/ 1 (pow n 2))) (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))))) x)) (* (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n))))) x))) x))","(* -1 (/ (+ (* -1 (/ (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)) n)) (* -1 (/ (+ (* -1 (/ (+ (* -1 (/ (* (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)) (- (+ (* 1/24 (/ 1 (pow n 4))) (* 11/24 (/ 1 (pow n 2)))) (+ (* 1/4 (/ 1 n)) (* 1/4 (/ 1 (pow n 3)))))) x)) (* (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)) (- (* 1/2 (/ 1 (pow n 2))) (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n)))))) x)) (* (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n))))) x))) x))","(exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))","(+ (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)) (/ (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)) (* n x)))","(+ (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)) (* -1 (/ (+ (* -1 (/ (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)) n)) (* -1 (/ (* (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) x))) x)))","(+ (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)) (* -1 (/ (+ (* -1 (/ (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)) n)) (* -1 (/ (+ (* -1 (/ (* (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)) (- (* 1/2 (/ 1 (pow n 2))) (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))))) x)) (* (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n))))) x))) x)))","(/ (+ (log -1) (* -1 (log (/ -1 x)))) n)","(+ (* -1 (/ (log (/ -1 x)) n)) (+ (/ 1 (* n x)) (/ (log -1) n)))","(+ (* -1 (/ (log (/ -1 x)) n)) (+ (* -1 (/ (- (* 1/2 (/ 1 (* n x))) (/ 1 n)) x)) (/ (log -1) n)))","(+ (* -1 (/ (log (/ -1 x)) n)) (+ (* -1 (/ (- (* -1 (/ (- (* 1/3 (/ 1 (* n x))) (* 1/2 (/ 1 n))) x)) (/ 1 n)) x)) (/ (log -1) n)))","(+ (log -1) (* -1 (log (/ -1 x))))","(+ (log -1) (+ (* -1 (log (/ -1 x))) (/ 1 x)))","(+ (log -1) (+ (* -1 (log (/ -1 x))) (* -1 (/ (- (* 1/2 (/ 1 x)) 1) x))))","(+ (log -1) (+ (* -1 (log (/ -1 x))) (* -1 (/ (- (* -1 (/ (- (* 1/3 (/ 1 x)) 1/2) x)) 1) x))))","(- (/ 1 (exp (* -1 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))) (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))","(- (+ (/ 1 (exp (* -1 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))) (/ 1 (* n (* x (exp (* -1 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))) (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))","(- (+ (* -1 (/ (- (* -1 (/ (- (* 1/2 (/ 1 (* (pow n 2) (exp (* -1 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) (* 1/2 (/ 1 (* n (exp (* -1 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))) x)) (/ 1 (* n (exp (* -1 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) x)) (/ 1 (exp (* -1 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))","(- (+ (* -1 (/ (- (* -1 (/ (- (+ (* -1 (/ (+ (* 1/2 (/ 1 n)) (* 1/2 (/ 1 (pow n 2)))) (* n (* x (exp (* -1 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))) (+ (* 1/2 (/ 1 (* (pow n 2) (exp (* -1 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) (+ (/ 1/3 (* n (* x (exp (* -1 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) (/ 2/3 (* (pow n 3) (* x (exp (* -1 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))))) (* 1/2 (/ 1 (* n (exp (* -1 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))) x)) (/ 1 (* n (exp (* -1 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) x)) (/ 1 (exp (* -1 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))","(/ 1 (exp (* -1 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))","(+ (/ 1 (exp (* -1 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))) (/ 1 (* n (* x (exp (* -1 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))))","(+ (* -1 (/ (- (* -1 (/ (- (* 1/2 (/ 1 (* (pow n 2) (exp (* -1 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) (* 1/2 (/ 1 (* n (exp (* -1 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))) x)) (/ 1 (* n (exp (* -1 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) x)) (/ 1 (exp (* -1 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))","(+ (* -1 (/ (- (* -1 (/ (- (+ (* -1 (/ (+ (* 1/2 (/ 1 n)) (* 1/2 (/ 1 (pow n 2)))) (* n (* x (exp (* -1 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))) (+ (* 1/2 (/ 1 (* (pow n 2) (exp (* -1 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) (+ (/ 1/3 (* n (* x (exp (* -1 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) (/ 2/3 (* (pow n 3) (* x (exp (* -1 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))))) (* 1/2 (/ 1 (* n (exp (* -1 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))) x)) (/ 1 (* n (exp (* -1 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) x)) (/ 1 (exp (* -1 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))","(exp (* -1 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))","(+ (exp (* -1 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* -1 (/ (exp (* -1 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* n x))))","(+ (exp (* -1 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* -1 (/ (+ (* -1 (/ (* (exp (* -1 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* 1/2 (/ 1 n)) (* 1/2 (/ 1 (pow n 2))))) x)) (/ (exp (* -1 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) x)))","(+ (exp (* -1 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* -1 (/ (+ (* -1 (/ (+ (* -1 (/ (* (exp (* -1 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* 1/3 (/ 1 n)) (+ (* 1/2 (/ 1 (pow n 2))) (* 1/6 (/ 1 (pow n 3)))))) x)) (* (exp (* -1 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* 1/2 (/ 1 n)) (* 1/2 (/ 1 (pow n 2)))))) x)) (/ (exp (* -1 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) x)))","(- (* (exp (* -2 (/ (log (/ -1 x)) n))) (exp (/ (+ (log -1) (log (/ -1 x))) n))) (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))","(- (+ (* (exp (* -2 (/ (log (/ -1 x)) n))) (exp (/ (+ (log -1) (log (/ -1 x))) n))) (/ (* (exp (* -2 (/ (log (/ -1 x)) n))) (exp (/ (+ (log -1) (log (/ -1 x))) n))) (* n x))) (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))","(- (+ (* -1 (/ (+ (* -1 (/ (* (exp (* -2 (/ (log (/ -1 x)) n))) (exp (/ (+ (log -1) (log (/ -1 x))) n))) n)) (* -1 (/ (+ (* -1 (/ (* (exp (* -2 (/ (log (/ -1 x)) n))) (exp (/ (+ (log -1) (log (/ -1 x))) n))) n)) (* (exp (* -2 (/ (log (/ -1 x)) n))) (* (exp (/ (+ (log -1) (log (/ -1 x))) n)) (+ (* 1/2 (/ 1 n)) (* 1/2 (/ 1 (pow n 2))))))) x))) x)) (* (exp (* -2 (/ (log (/ -1 x)) n))) (exp (/ (+ (log -1) (log (/ -1 x))) n)))) (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))","(- (+ (* -1 (/ (+ (* -1 (/ (* (exp (* -2 (/ (log (/ -1 x)) n))) (exp (/ (+ (log -1) (log (/ -1 x))) n))) n)) (* -1 (/ (+ (* -1 (/ (* (exp (* -2 (/ (log (/ -1 x)) n))) (exp (/ (+ (log -1) (log (/ -1 x))) n))) n)) (+ (* -1 (/ (+ (* -1 (* (exp (* -2 (/ (log (/ -1 x)) n))) (* (exp (/ (+ (log -1) (log (/ -1 x))) n)) (+ (* 1/3 (/ 1 n)) (+ (* 1/2 (/ 1 (pow n 2))) (* 1/6 (/ 1 (pow n 3)))))))) (/ (* (exp (* -2 (/ (log (/ -1 x)) n))) (exp (/ (+ (log -1) (log (/ -1 x))) n))) (pow n 2))) x)) (* (exp (* -2 (/ (log (/ -1 x)) n))) (* (exp (/ (+ (log -1) (log (/ -1 x))) n)) (+ (* 1/2 (/ 1 n)) (* 1/2 (/ 1 (pow n 2)))))))) x))) x)) (* (exp (* -2 (/ (log (/ -1 x)) n))) (exp (/ (+ (log -1) (log (/ -1 x))) n)))) (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))","(* (exp (* -2 (/ (log (/ -1 x)) n))) (exp (/ (+ (log -1) (log (/ -1 x))) n)))","(+ (* (exp (* -2 (/ (log (/ -1 x)) n))) (exp (/ (+ (log -1) (log (/ -1 x))) n))) (/ (* (exp (* -2 (/ (log (/ -1 x)) n))) (exp (/ (+ (log -1) (log (/ -1 x))) n))) (* n x)))","(+ (* -1 (/ (+ (* -1 (/ (* (exp (* -2 (/ (log (/ -1 x)) n))) (exp (/ (+ (log -1) (log (/ -1 x))) n))) n)) (* -1 (/ (+ (* -1 (/ (* (exp (* -2 (/ (log (/ -1 x)) n))) (exp (/ (+ (log -1) (log (/ -1 x))) n))) n)) (* (exp (* -2 (/ (log (/ -1 x)) n))) (* (exp (/ (+ (log -1) (log (/ -1 x))) n)) (+ (* 1/2 (/ 1 n)) (* 1/2 (/ 1 (pow n 2))))))) x))) x)) (* (exp (* -2 (/ (log (/ -1 x)) n))) (exp (/ (+ (log -1) (log (/ -1 x))) n))))","(+ (* -1 (/ (+ (* -1 (/ (* (exp (* -2 (/ (log (/ -1 x)) n))) (exp (/ (+ (log -1) (log (/ -1 x))) n))) n)) (* -1 (/ (+ (* -1 (/ (* (exp (* -2 (/ (log (/ -1 x)) n))) (exp (/ (+ (log -1) (log (/ -1 x))) n))) n)) (+ (* -1 (/ (+ (* -1 (* (exp (* -2 (/ (log (/ -1 x)) n))) (* (exp (/ (+ (log -1) (log (/ -1 x))) n)) (+ (* 1/6 (/ 1 (pow n 3))) (+ (* 1/2 (/ 1 (pow n 2))) (* 1/3 (/ 1 n))))))) (/ (* (exp (* -2 (/ (log (/ -1 x)) n))) (exp (/ (+ (log -1) (log (/ -1 x))) n))) (pow n 2))) x)) (* (exp (* -2 (/ (log (/ -1 x)) n))) (* (exp (/ (+ (log -1) (log (/ -1 x))) n)) (+ (* 1/2 (/ 1 n)) (* 1/2 (/ 1 (pow n 2)))))))) x))) x)) (* (exp (* -2 (/ (log (/ -1 x)) n))) (exp (/ (+ (log -1) (log (/ -1 x))) n))))","(exp (* -2 (/ (log (/ -1 x)) n)))","(+ (exp (* -2 (/ (log (/ -1 x)) n))) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) (* n (pow x 2)))))","(+ (exp (* -2 (/ (log (/ -1 x)) n))) (+ (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) (* n (pow x 2)))) (/ (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (pow x 4))))","(+ (exp (* -2 (/ (log (/ -1 x)) n))) (+ (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) (* n (pow x 2)))) (+ (/ (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (pow x 4)) (/ (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))))) (pow x 6)))))","(/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* n (* x (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))","(* -1 (/ (- (* -1 (/ (- (* 1/2 (/ (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))) (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))) (* 1/2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* (pow n 2) (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) x)) (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* n (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) x))","(* -1 (/ (- (* -1 (/ (- (* -1 (/ (- (* 1/2 (/ (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (+ (* 2/3 (/ 1 n)) (* 4/3 (/ 1 (pow n 3)))))) (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))) (+ (* -1/2 (/ (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* n (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) (* -1/2 (/ (- (* 1/2 (/ (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))) (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))) (* 1/2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* (pow n 2) (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) n)))) x)) (* -1 (- (* 1/2 (/ (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))) (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))) (* 1/2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* (pow n 2) (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))))) x)) (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* n (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) x))","(* -1 (/ (- (* -1 (/ (- (* -1 (/ (- (* -1 (/ (- (* 1/2 (/ (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (+ (* 2/3 (/ 1 (pow n 4))) (* 11/6 (/ 1 (pow n 2)))) (+ (* 1/2 (/ 1 n)) (* 2 (/ 1 (pow n 3)))))) (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))) (+ (* -1/2 (/ (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 1/2 (/ 1 (pow n 2))) (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))))) (* n (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) (+ (* -1/2 (/ (- (* 1/2 (/ (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (+ (* 2/3 (/ 1 n)) (* 4/3 (/ 1 (pow n 3)))))) (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))) (+ (* -1/2 (/ (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* n (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) (* -1/2 (/ (- (* 1/2 (/ (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))) (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))) (* 1/2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* (pow n 2) (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) n)))) n)) (* 1/2 (* (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n))) (- (* 1/2 (/ (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))) (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))) (* 1/2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* (pow n 2) (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))))))) x)) (* -1 (- (* 1/2 (/ (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (+ (* 2/3 (/ 1 n)) (* 4/3 (/ 1 (pow n 3)))))) (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))) (+ (* -1/2 (/ (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* n (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) (* -1/2 (/ (- (* 1/2 (/ (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))) (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))) (* 1/2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* (pow n 2) (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) n)))))) x)) (* -1 (- (* 1/2 (/ (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))) (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))) (* 1/2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* (pow n 2) (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))))) x)) (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* n (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) x))","(* -1 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* n (* x (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))","(* -1 (/ (- (+ (* 1/2 (/ (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))) (* x (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* n (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) (* 1/2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* (pow n 2) (* x (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))) x))","(* -1 (/ (+ (* -1 (/ (- (+ (* -1 (- (* 1/2 (/ (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))) (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))) (* 1/2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* (pow n 2) (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))) (* 1/2 (/ (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (+ (* 2/3 (/ 1 n)) (* 4/3 (/ 1 (pow n 3)))))) (* x (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) (+ (* -1/2 (/ (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* n (* x (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) (* -1/2 (/ (- (* 1/2 (/ (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))) (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))) (* 1/2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* (pow n 2) (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) (* n x))))) x)) (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* n (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) x))","(* -1 (/ (+ (* -1 (/ (+ (* -1 (- (* 1/2 (/ (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))) (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))) (* 1/2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* (pow n 2) (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))) (* -1 (/ (- (+ (* -1 (- (* 1/2 (/ (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (+ (* 2/3 (/ 1 n)) (* 4/3 (/ 1 (pow n 3)))))) (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))) (+ (* -1/2 (/ (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* n (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) (* -1/2 (/ (- (* 1/2 (/ (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))) (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))) (* 1/2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* (pow n 2) (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) n))))) (* 1/2 (/ (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (+ (* 2/3 (/ 1 (pow n 4))) (* 11/6 (/ 1 (pow n 2)))) (+ (* 1/2 (/ 1 n)) (* 2 (/ 1 (pow n 3)))))) (* x (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) (+ (* -1/2 (/ (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 1/2 (/ 1 (pow n 2))) (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))))) (* n (* x (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) (+ (* -1/2 (/ (- (* 1/2 (/ (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (+ (* 2/3 (/ 1 n)) (* 4/3 (/ 1 (pow n 3)))))) (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))) (+ (* -1/2 (/ (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* n (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) (* -1/2 (/ (- (* 1/2 (/ (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))) (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))) (* 1/2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* (pow n 2) (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) n)))) (* n x))) (* 1/2 (/ (* (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n))) (- (* 1/2 (/ (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))) (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))) (* 1/2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* (pow n 2) (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))) x))))) x))) x)) (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* n (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) x))","(* 2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* n x)))","(* -1 (/ (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))) x))) x))","(* -1 (/ (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (+ (* -1 (/ (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (+ (* 2/3 (/ 1 n)) (* 4/3 (/ 1 (pow n 3)))))) x)) (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n)))) x))) x))","(* -1 (/ (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (+ (* -1 (/ (+ (* -1 (/ (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (+ (* 2/3 (/ 1 (pow n 4))) (* 11/6 (/ 1 (pow n 2)))) (+ (* 1/2 (/ 1 n)) (* 2 (/ 1 (pow n 3)))))) x)) (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (+ (* 2/3 (/ 1 n)) (* 4/3 (/ 1 (pow n 3))))))) x)) (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n)))) x))) x))","(exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))","(+ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* 2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* n x))))","(+ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* -1 (/ (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))) x))) x)))","(+ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* -1 (/ (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (+ (* -1 (/ (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (+ (* 2/3 (/ 1 n)) (* 4/3 (/ 1 (pow n 3)))))) x)) (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n)))) x))) x)))","(/ (pow (exp (* 1/2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) 2) (* n x))","(* -1 (/ (+ (* -1 (/ (+ (* 1/4 (/ (pow (exp (* 1/2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) 2) (pow n 2))) (* 2 (* (pow (exp (* 1/2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) 2) (- (* 1/8 (/ 1 (pow n 2))) (* 1/4 (/ 1 n)))))) x)) (* -1 (/ (pow (exp (* 1/2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) 2) n))) x))","(* -1 (/ (+ (* -1 (/ (+ (* -1 (/ (+ (* -1 (/ (* (pow (exp (* 1/2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) 2) (- (* 1/8 (/ 1 (pow n 2))) (* 1/4 (/ 1 n)))) n)) (* 2 (* (pow (exp (* 1/2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) 2) (- (* 1/8 (/ 1 (pow n 2))) (+ (* 1/48 (/ 1 (pow n 3))) (* 1/6 (/ 1 n))))))) x)) (+ (* 1/4 (/ (pow (exp (* 1/2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) 2) (pow n 2))) (* 2 (* (pow (exp (* 1/2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) 2) (- (* 1/8 (/ 1 (pow n 2))) (* 1/4 (/ 1 n))))))) x)) (* -1 (/ (pow (exp (* 1/2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) 2) n))) x))","(* -1 (/ (+ (* -1 (/ (+ (* -1 (/ (+ (* -1 (/ (* (pow (exp (* 1/2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) 2) (- (* 1/8 (/ 1 (pow n 2))) (* 1/4 (/ 1 n)))) n)) (+ (* -1 (/ (+ (* -1 (/ (* (pow (exp (* 1/2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) 2) (- (* 1/8 (/ 1 (pow n 2))) (+ (* 1/48 (/ 1 (pow n 3))) (* 1/6 (/ 1 n))))) n)) (+ (* 2 (* (pow (exp (* 1/2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) 2) (- (+ (* 1/384 (/ 1 (pow n 4))) (* 11/96 (/ 1 (pow n 2)))) (+ (* 1/32 (/ 1 (pow n 3))) (* 1/8 (/ 1 n)))))) (* (pow (exp (* 1/2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) 2) (pow (- (* 1/8 (/ 1 (pow n 2))) (* 1/4 (/ 1 n))) 2)))) x)) (* 2 (* (pow (exp (* 1/2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) 2) (- (* 1/8 (/ 1 (pow n 2))) (+ (* 1/48 (/ 1 (pow n 3))) (* 1/6 (/ 1 n)))))))) x)) (+ (* 1/4 (/ (pow (exp (* 1/2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) 2) (pow n 2))) (* 2 (* (pow (exp (* 1/2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) 2) (- (* 1/8 (/ 1 (pow n 2))) (* 1/4 (/ 1 n))))))) x)) (* -1 (/ (pow (exp (* 1/2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) 2) n))) x))","(* 2 (exp (* 1/2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))","(+ (* 1/2 (/ (exp (* 1/2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* n x))) (* 2 (exp (* 1/2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))","(+ (* -1 (/ (+ (* -1 (/ (* (exp (* 1/2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 1/8 (/ 1 (pow n 2))) (* 1/4 (/ 1 n)))) x)) (* -1/2 (/ (exp (* 1/2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n))) x)) (* 2 (exp (* 1/2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))","(+ (* -1 (/ (+ (* -1 (/ (+ (* -1 (/ (* (exp (* 1/2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 1/8 (/ 1 (pow n 2))) (+ (* 1/48 (/ 1 (pow n 3))) (* 1/6 (/ 1 n))))) x)) (* (exp (* 1/2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 1/8 (/ 1 (pow n 2))) (* 1/4 (/ 1 n))))) x)) (* -1/2 (/ (exp (* 1/2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n))) x)) (* 2 (exp (* 1/2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))","(exp (* 1/2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))","(+ (exp (* 1/2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* 1/2 (/ (exp (* 1/2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* n x))))","(+ (exp (* 1/2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* -1 (/ (+ (* -1 (/ (* (exp (* 1/2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 1/8 (/ 1 (pow n 2))) (* 1/4 (/ 1 n)))) x)) (* -1/2 (/ (exp (* 1/2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n))) x)))","(+ (exp (* 1/2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* -1 (/ (+ (* -1 (/ (+ (* -1 (/ (* (exp (* 1/2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 1/8 (/ 1 (pow n 2))) (+ (* 1/48 (/ 1 (pow n 3))) (* 1/6 (/ 1 n))))) x)) (* (exp (* 1/2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 1/8 (/ 1 (pow n 2))) (* 1/4 (/ 1 n))))) x)) (* -1/2 (/ (exp (* 1/2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n))) x)))","(* -1 (* x (- 1 (/ 1 x))))","(* -2 (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))","(- (* -1 (/ (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)) (* n x))) (* 2 (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))","(- (* -1 (/ (- (/ (* (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) x) (* -1 (/ (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)) n))) x)) (* 2 (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))","(- (* -1 (/ (- (* -1 (/ (- (/ (* (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)) (- (* 1/2 (/ 1 (pow n 2))) (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))))) x) (* (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n))))) x)) (* -1 (/ (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)) n))) x)) (* 2 (exp (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))","(* 1/2 (/ (exp (* 1/2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* n x)))","(* -1 (/ (+ (* -1 (/ (* (exp (* 1/2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 1/8 (/ 1 (pow n 2))) (* 1/4 (/ 1 n)))) x)) (* -1/2 (/ (exp (* 1/2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n))) x))","(* -1 (/ (+ (* -1 (/ (+ (* -1 (/ (* (exp (* 1/2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 1/8 (/ 1 (pow n 2))) (+ (* 1/48 (/ 1 (pow n 3))) (* 1/6 (/ 1 n))))) x)) (* (exp (* 1/2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 1/8 (/ 1 (pow n 2))) (* 1/4 (/ 1 n))))) x)) (* -1/2 (/ (exp (* 1/2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n))) x))","(* -1 (/ (+ (* -1 (/ (+ (* -1 (/ (+ (* -1 (/ (* (exp (* 1/2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (+ (* 1/384 (/ 1 (pow n 4))) (* 11/96 (/ 1 (pow n 2)))) (+ (* 1/32 (/ 1 (pow n 3))) (* 1/8 (/ 1 n))))) x)) (* (exp (* 1/2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 1/8 (/ 1 (pow n 2))) (+ (* 1/48 (/ 1 (pow n 3))) (* 1/6 (/ 1 n)))))) x)) (* (exp (* 1/2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 1/8 (/ 1 (pow n 2))) (* 1/4 (/ 1 n))))) x)) (* -1/2 (/ (exp (* 1/2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n))) x))","(- (exp (/ (log (+ 1 x)) n)) (exp (/ (log x) n)))","(exp (/ (log (+ 1 x)) n))","(/ (log (+ 1 x)) n)","(- (/ 1 (exp (* -1 (/ (log (+ 1 x)) n)))) (exp (/ (log x) n)))","(/ 1 (exp (* -1 (/ (log (+ 1 x)) n))))","(exp (* -1 (/ (log (+ 1 x)) n)))","(- (* (exp (/ (log (- (pow x 2) 1)) n)) (exp (/ (log (/ -1 (- 1 x))) n))) (exp (/ (log x) n)))","(* (exp (/ (log (- (pow x 2) 1)) n)) (exp (/ (log (/ -1 (- 1 x))) n)))","(exp (/ (log (- (pow x 2) 1)) n))","(/ (- (exp (* 2 (/ (log (+ 1 x)) n))) (exp (* 2 (/ (log x) n)))) (+ (exp (/ (log x) n)) (exp (/ (log (+ 1 x)) n))))","(* -1 (/ (- (exp (* 2 (/ (log (+ 1 x)) n))) (exp (* 2 (/ (log x) n)))) (+ (exp (/ (log x) n)) (exp (/ (log (+ 1 x)) n)))))","(- (exp (* 2 (/ (log (+ 1 x)) n))) (exp (* 2 (/ (log x) n))))","(exp (* 2 (/ (log (+ 1 x)) n)))","(* (+ (exp (* 1/2 (/ (log x) n))) (exp (* 1/2 (/ (log (+ 1 x)) n)))) (- (exp (* 1/2 (/ (log (+ 1 x)) n))) (exp (* 1/2 (/ (log x) n)))))","(+ (exp (* 1/2 (/ (log x) n))) (exp (* 1/2 (/ (log (+ 1 x)) n))))","(exp (* 1/2 (/ (log (+ 1 x)) n)))","(/ -1 n)","(* -1 (+ (exp (/ (log x) n)) (exp (/ (log (+ 1 x)) n))))","(- (exp (* 1/2 (/ (log (+ 1 x)) n))) (exp (* 1/2 (/ (log x) n))))","(* -2 n)","(/ (- (log (+ 1 x)) (log x)) n)","(/ (- (+ (log (+ 1 x)) (* 1/2 (/ (pow (log (+ 1 x)) 2) n))) (+ (log x) (* 1/2 (/ (pow (log x) 2) n)))) n)","(/ (- (+ (log (+ 1 x)) (+ (* 1/6 (/ (pow (log (+ 1 x)) 3) (pow n 2))) (* 1/2 (/ (pow (log (+ 1 x)) 2) n)))) (+ (log x) (+ (* 1/6 (/ (pow (log x) 3) (pow n 2))) (* 1/2 (/ (pow (log x) 2) n))))) n)","(/ (- (+ (log (+ 1 x)) (+ (* 1/24 (/ (pow (log (+ 1 x)) 4) (pow n 3))) (+ (* 1/6 (/ (pow (log (+ 1 x)) 3) (pow n 2))) (* 1/2 (/ (pow (log (+ 1 x)) 2) n))))) (+ (log x) (+ (* 1/24 (/ (pow (log x) 4) (pow n 3))) (+ (* 1/6 (/ (pow (log x) 3) (pow n 2))) (* 1/2 (/ (pow (log x) 2) n)))))) n)","(+ 1 (/ (log (+ 1 x)) n))","(+ 1 (+ (* 1/2 (/ (pow (log (+ 1 x)) 2) (pow n 2))) (/ (log (+ 1 x)) n)))","(+ 1 (+ (* 1/6 (/ (pow (log (+ 1 x)) 3) (pow n 3))) (+ (* 1/2 (/ (pow (log (+ 1 x)) 2) (pow n 2))) (/ (log (+ 1 x)) n))))","(* -1 (/ (+ (log x) (* -1 (log (+ 1 x)))) n))","(/ (- (* -1 (/ (+ (* -1 (pow (log (+ 1 x)) 2)) (+ (* 1/2 (pow (log x) 2)) (* 1/2 (pow (log (+ 1 x)) 2)))) n)) (+ (log x) (* -1 (log (+ 1 x))))) n)","(/ (- (* -1 (/ (+ (* -1/6 (pow (log (+ 1 x)) 3)) (+ (* 1/6 (pow (log x) 3)) (+ (* 1/2 (pow (log (+ 1 x)) 3)) (* (log (+ 1 x)) (+ (* -1 (pow (log (+ 1 x)) 2)) (* 1/2 (pow (log (+ 1 x)) 2))))))) (pow n 2))) (+ (log x) (+ (* -1 (log (+ 1 x))) (+ (* -1 (/ (pow (log (+ 1 x)) 2) n)) (+ (* 1/2 (/ (pow (log x) 2) n)) (* 1/2 (/ (pow (log (+ 1 x)) 2) n))))))) n)","(/ (- (* -1 (/ (+ (* -1/2 (* (pow (log (+ 1 x)) 2) (+ (* -1 (pow (log (+ 1 x)) 2)) (* 1/2 (pow (log (+ 1 x)) 2))))) (+ (* -1/6 (pow (log (+ 1 x)) 4)) (+ (* 1/24 (pow (log x) 4)) (+ (* 1/24 (pow (log (+ 1 x)) 4)) (* (log (+ 1 x)) (+ (* -1/6 (pow (log (+ 1 x)) 3)) (+ (* 1/2 (pow (log (+ 1 x)) 3)) (* (log (+ 1 x)) (+ (* -1 (pow (log (+ 1 x)) 2)) (* 1/2 (pow (log (+ 1 x)) 2))))))))))) (pow n 3))) (+ (log x) (+ (* -1 (log (+ 1 x))) (+ (* -1 (/ (pow (log (+ 1 x)) 2) n)) (+ (* -1/6 (/ (pow (log (+ 1 x)) 3) (pow n 2))) (+ (* 1/6 (/ (pow (log x) 3) (pow n 2))) (+ (* 1/2 (/ (pow (log x) 2) n)) (+ (* 1/2 (/ (pow (log (+ 1 x)) 2) n)) (+ (* 1/2 (/ (pow (log (+ 1 x)) 3) (pow n 2))) (/ (* (log (+ 1 x)) (+ (* -1 (pow (log (+ 1 x)) 2)) (* 1/2 (pow (log (+ 1 x)) 2)))) (pow n 2))))))))))) n)","(- (+ 1 (* -1 (/ (+ (* -1 (pow (log (+ 1 x)) 2)) (* 1/2 (pow (log (+ 1 x)) 2))) (pow n 2)))) (* -1 (/ (log (+ 1 x)) n)))","(- (+ 1 (* -1 (/ (+ (* -1/6 (pow (log (+ 1 x)) 3)) (+ (* 1/2 (pow (log (+ 1 x)) 3)) (* (log (+ 1 x)) (+ (* -1 (pow (log (+ 1 x)) 2)) (* 1/2 (pow (log (+ 1 x)) 2)))))) (pow n 3)))) (+ (* -1 (/ (log (+ 1 x)) n)) (+ (* -1 (/ (pow (log (+ 1 x)) 2) (pow n 2))) (* 1/2 (/ (pow (log (+ 1 x)) 2) (pow n 2))))))","(+ 1 (* -1 (/ (log (+ 1 x)) n)))","(+ 1 (+ (* -1 (/ (log (+ 1 x)) n)) (* 1/2 (/ (pow (log (+ 1 x)) 2) (pow n 2)))))","(+ 1 (+ (* -1 (/ (log (+ 1 x)) n)) (+ (* -1/6 (/ (pow (log (+ 1 x)) 3) (pow n 3))) (* 1/2 (/ (pow (log (+ 1 x)) 2) (pow n 2))))))","(/ (- (+ (log (- (pow x 2) 1)) (log (/ -1 (- 1 x)))) (log x)) n)","(/ (- (+ (log (- (pow x 2) 1)) (+ (log (/ -1 (- 1 x))) (+ (* 1/2 (/ (pow (log (- (pow x 2) 1)) 2) n)) (+ (* 1/2 (/ (pow (log (/ -1 (- 1 x))) 2) n)) (/ (* (log (- (pow x 2) 1)) (log (/ -1 (- 1 x)))) n))))) (+ (log x) (* 1/2 (/ (pow (log x) 2) n)))) n)","(/ (- (+ (log (- (pow x 2) 1)) (+ (log (/ -1 (- 1 x))) (+ (* 1/6 (/ (pow (log (- (pow x 2) 1)) 3) (pow n 2))) (+ (* 1/6 (/ (pow (log (/ -1 (- 1 x))) 3) (pow n 2))) (+ (* 1/2 (/ (* (log (- (pow x 2) 1)) (pow (log (/ -1 (- 1 x))) 2)) (pow n 2))) (+ (* 1/2 (/ (* (pow (log (- (pow x 2) 1)) 2) (log (/ -1 (- 1 x)))) (pow n 2))) (+ (* 1/2 (/ (pow (log (- (pow x 2) 1)) 2) n)) (+ (* 1/2 (/ (pow (log (/ -1 (- 1 x))) 2) n)) (/ (* (log (- (pow x 2) 1)) (log (/ -1 (- 1 x)))) n))))))))) (+ (log x) (+ (* 1/6 (/ (pow (log x) 3) (pow n 2))) (* 1/2 (/ (pow (log x) 2) n))))) n)","(/ (- (+ (log (- (pow x 2) 1)) (+ (log (/ -1 (- 1 x))) (+ (* 1/24 (/ (pow (log (- (pow x 2) 1)) 4) (pow n 3))) (+ (* 1/24 (/ (pow (log (/ -1 (- 1 x))) 4) (pow n 3))) (+ (* 1/6 (/ (* (log (- (pow x 2) 1)) (pow (log (/ -1 (- 1 x))) 3)) (pow n 3))) (+ (* 1/6 (/ (* (pow (log (- (pow x 2) 1)) 3) (log (/ -1 (- 1 x)))) (pow n 3))) (+ (* 1/6 (/ (pow (log (- (pow x 2) 1)) 3) (pow n 2))) (+ (* 1/6 (/ (pow (log (/ -1 (- 1 x))) 3) (pow n 2))) (+ (* 1/4 (/ (* (pow (log (- (pow x 2) 1)) 2) (pow (log (/ -1 (- 1 x))) 2)) (pow n 3))) (+ (* 1/2 (/ (* (log (- (pow x 2) 1)) (pow (log (/ -1 (- 1 x))) 2)) (pow n 2))) (+ (* 1/2 (/ (* (pow (log (- (pow x 2) 1)) 2) (log (/ -1 (- 1 x)))) (pow n 2))) (+ (* 1/2 (/ (pow (log (- (pow x 2) 1)) 2) n)) (+ (* 1/2 (/ (pow (log (/ -1 (- 1 x))) 2) n)) (/ (* (log (- (pow x 2) 1)) (log (/ -1 (- 1 x)))) n)))))))))))))) (+ (log x) (+ (* 1/24 (/ (pow (log x) 4) (pow n 3))) (+ (* 1/6 (/ (pow (log x) 3) (pow n 2))) (* 1/2 (/ (pow (log x) 2) n)))))) n)","(+ 1 (+ (/ (log (- (pow x 2) 1)) n) (/ (log (/ -1 (- 1 x))) n)))","(+ 1 (+ (* 1/2 (/ (pow (log (- (pow x 2) 1)) 2) (pow n 2))) (+ (* 1/2 (/ (pow (log (/ -1 (- 1 x))) 2) (pow n 2))) (+ (/ (log (- (pow x 2) 1)) n) (+ (/ (log (/ -1 (- 1 x))) n) (/ (* (log (- (pow x 2) 1)) (log (/ -1 (- 1 x)))) (pow n 2)))))))","(+ 1 (+ (* 1/6 (/ (pow (log (- (pow x 2) 1)) 3) (pow n 3))) (+ (* 1/6 (/ (pow (log (/ -1 (- 1 x))) 3) (pow n 3))) (+ (* 1/2 (/ (* (log (- (pow x 2) 1)) (pow (log (/ -1 (- 1 x))) 2)) (pow n 3))) (+ (* 1/2 (/ (* (pow (log (- (pow x 2) 1)) 2) (log (/ -1 (- 1 x)))) (pow n 3))) (+ (* 1/2 (/ (pow (log (- (pow x 2) 1)) 2) (pow n 2))) (+ (* 1/2 (/ (pow (log (/ -1 (- 1 x))) 2) (pow n 2))) (+ (/ (log (- (pow x 2) 1)) n) (+ (/ (log (/ -1 (- 1 x))) n) (/ (* (log (- (pow x 2) 1)) (log (/ -1 (- 1 x)))) (pow n 2)))))))))))","(+ 1 (/ (log (- (pow x 2) 1)) n))","(+ 1 (+ (* 1/2 (/ (pow (log (- (pow x 2) 1)) 2) (pow n 2))) (/ (log (- (pow x 2) 1)) n)))","(+ 1 (+ (* 1/6 (/ (pow (log (- (pow x 2) 1)) 3) (pow n 3))) (+ (* 1/2 (/ (pow (log (- (pow x 2) 1)) 2) (pow n 2))) (/ (log (- (pow x 2) 1)) n))))","(* 1/2 (/ (- (* 2 (log (+ 1 x))) (* 2 (log x))) n))","(/ (- (* 1/2 (/ (- (* 2 (pow (log (+ 1 x)) 2)) (* 2 (pow (log x) 2))) n)) (+ (* -1/2 (- (* 2 (log (+ 1 x))) (* 2 (log x)))) (* 1/4 (/ (* (+ (log x) (log (+ 1 x))) (- (* 2 (log (+ 1 x))) (* 2 (log x)))) n)))) n)","(/ (- (* 1/2 (/ (- (* 4/3 (pow (log (+ 1 x)) 3)) (* 4/3 (pow (log x) 3))) (pow n 2))) (+ (* -1 (/ (- (* 1/2 (- (* 2 (pow (log (+ 1 x)) 2)) (* 2 (pow (log x) 2)))) (* 1/4 (* (+ (log x) (log (+ 1 x))) (- (* 2 (log (+ 1 x))) (* 2 (log x)))))) n)) (+ (* -1/2 (- (* 2 (log (+ 1 x))) (* 2 (log x)))) (+ (* 1/4 (/ (* (+ (* 1/2 (pow (log x) 2)) (* 1/2 (pow (log (+ 1 x)) 2))) (- (* 2 (log (+ 1 x))) (* 2 (log x)))) (pow n 2))) (* 1/2 (/ (* (+ (log x) (log (+ 1 x))) (- (* 1/2 (- (* 2 (pow (log (+ 1 x)) 2)) (* 2 (pow (log x) 2)))) (* 1/4 (* (+ (log x) (log (+ 1 x))) (- (* 2 (log (+ 1 x))) (* 2 (log x))))))) (pow n 2))))))) n)","(/ (- (* 1/2 (/ (- (* 2/3 (pow (log (+ 1 x)) 4)) (* 2/3 (pow (log x) 4))) (pow n 3))) (+ (* -1 (/ (- (* 1/2 (- (* 4/3 (pow (log (+ 1 x)) 3)) (* 4/3 (pow (log x) 3)))) (+ (* 1/4 (* (+ (* 1/2 (pow (log x) 2)) (* 1/2 (pow (log (+ 1 x)) 2))) (- (* 2 (log (+ 1 x))) (* 2 (log x))))) (* 1/2 (* (+ (log x) (log (+ 1 x))) (- (* 1/2 (- (* 2 (pow (log (+ 1 x)) 2)) (* 2 (pow (log x) 2)))) (* 1/4 (* (+ (log x) (log (+ 1 x))) (- (* 2 (log (+ 1 x))) (* 2 (log x)))))))))) (pow n 2))) (+ (* -1 (/ (- (* 1/2 (- (* 2 (pow (log (+ 1 x)) 2)) (* 2 (pow (log x) 2)))) (* 1/4 (* (+ (log x) (log (+ 1 x))) (- (* 2 (log (+ 1 x))) (* 2 (log x)))))) n)) (+ (* -1/2 (- (* 2 (log (+ 1 x))) (* 2 (log x)))) (+ (* 1/4 (/ (* (+ (* 1/6 (pow (log x) 3)) (* 1/6 (pow (log (+ 1 x)) 3))) (- (* 2 (log (+ 1 x))) (* 2 (log x)))) (pow n 3))) (+ (* 1/2 (/ (* (+ (log x) (log (+ 1 x))) (- (* 1/2 (- (* 4/3 (pow (log (+ 1 x)) 3)) (* 4/3 (pow (log x) 3)))) (+ (* 1/4 (* (+ (* 1/2 (pow (log x) 2)) (* 1/2 (pow (log (+ 1 x)) 2))) (- (* 2 (log (+ 1 x))) (* 2 (log x))))) (* 1/2 (* (+ (log x) (log (+ 1 x))) (- (* 1/2 (- (* 2 (pow (log (+ 1 x)) 2)) (* 2 (pow (log x) 2)))) (* 1/4 (* (+ (log x) (log (+ 1 x))) (- (* 2 (log (+ 1 x))) (* 2 (log x))))))))))) (pow n 3))) (* 1/2 (/ (* (+ (* 1/2 (pow (log x) 2)) (* 1/2 (pow (log (+ 1 x)) 2))) (- (* 1/2 (- (* 2 (pow (log (+ 1 x)) 2)) (* 2 (pow (log x) 2)))) (* 1/4 (* (+ (log x) (log (+ 1 x))) (- (* 2 (log (+ 1 x))) (* 2 (log x))))))) (pow n 3))))))))) n)","(* -1/2 (/ (- (* 2 (log (+ 1 x))) (* 2 (log x))) n))","(/ (+ (* -1 (/ (- (* 1/2 (- (* 2 (pow (log (+ 1 x)) 2)) (* 2 (pow (log x) 2)))) (* 1/4 (* (+ (log x) (log (+ 1 x))) (- (* 2 (log (+ 1 x))) (* 2 (log x)))))) n)) (* -1/2 (- (* 2 (log (+ 1 x))) (* 2 (log x))))) n)","(/ (+ (* -1 (/ (- (* 1/2 (- (* 4/3 (pow (log (+ 1 x)) 3)) (* 4/3 (pow (log x) 3)))) (+ (* 1/4 (* (+ (* 1/2 (pow (log x) 2)) (* 1/2 (pow (log (+ 1 x)) 2))) (- (* 2 (log (+ 1 x))) (* 2 (log x))))) (* 1/2 (* (+ (log x) (log (+ 1 x))) (- (* 1/2 (- (* 2 (pow (log (+ 1 x)) 2)) (* 2 (pow (log x) 2)))) (* 1/4 (* (+ (log x) (log (+ 1 x))) (- (* 2 (log (+ 1 x))) (* 2 (log x)))))))))) (pow n 2))) (+ (* -1 (/ (- (* 1/2 (- (* 2 (pow (log (+ 1 x)) 2)) (* 2 (pow (log x) 2)))) (* 1/4 (* (+ (log x) (log (+ 1 x))) (- (* 2 (log (+ 1 x))) (* 2 (log x)))))) n)) (* -1/2 (- (* 2 (log (+ 1 x))) (* 2 (log x)))))) n)","(/ (+ (* -1 (/ (- (* 1/2 (- (* 2/3 (pow (log (+ 1 x)) 4)) (* 2/3 (pow (log x) 4)))) (+ (* 1/4 (* (+ (* 1/6 (pow (log x) 3)) (* 1/6 (pow (log (+ 1 x)) 3))) (- (* 2 (log (+ 1 x))) (* 2 (log x))))) (+ (* 1/2 (* (+ (log x) (log (+ 1 x))) (- (* 1/2 (- (* 4/3 (pow (log (+ 1 x)) 3)) (* 4/3 (pow (log x) 3)))) (+ (* 1/4 (* (+ (* 1/2 (pow (log x) 2)) (* 1/2 (pow (log (+ 1 x)) 2))) (- (* 2 (log (+ 1 x))) (* 2 (log x))))) (* 1/2 (* (+ (log x) (log (+ 1 x))) (- (* 1/2 (- (* 2 (pow (log (+ 1 x)) 2)) (* 2 (pow (log x) 2)))) (* 1/4 (* (+ (log x) (log (+ 1 x))) (- (* 2 (log (+ 1 x))) (* 2 (log x)))))))))))) (* 1/2 (* (+ (* 1/2 (pow (log x) 2)) (* 1/2 (pow (log (+ 1 x)) 2))) (- (* 1/2 (- (* 2 (pow (log (+ 1 x)) 2)) (* 2 (pow (log x) 2)))) (* 1/4 (* (+ (log x) (log (+ 1 x))) (- (* 2 (log (+ 1 x))) (* 2 (log x))))))))))) (pow n 3))) (+ (* -1 (/ (- (* 1/2 (- (* 4/3 (pow (log (+ 1 x)) 3)) (* 4/3 (pow (log x) 3)))) (+ (* 1/4 (* (+ (* 1/2 (pow (log x) 2)) (* 1/2 (pow (log (+ 1 x)) 2))) (- (* 2 (log (+ 1 x))) (* 2 (log x))))) (* 1/2 (* (+ (log x) (log (+ 1 x))) (- (* 1/2 (- (* 2 (pow (log (+ 1 x)) 2)) (* 2 (pow (log x) 2)))) (* 1/4 (* (+ (log x) (log (+ 1 x))) (- (* 2 (log (+ 1 x))) (* 2 (log x)))))))))) (pow n 2))) (+ (* -1 (/ (- (* 1/2 (- (* 2 (pow (log (+ 1 x)) 2)) (* 2 (pow (log x) 2)))) (* 1/4 (* (+ (log x) (log (+ 1 x))) (- (* 2 (log (+ 1 x))) (* 2 (log x)))))) n)) (* -1/2 (- (* 2 (log (+ 1 x))) (* 2 (log x))))))) n)","(/ (- (* 2 (log (+ 1 x))) (* 2 (log x))) n)","(/ (- (+ (* 2 (log (+ 1 x))) (* 2 (/ (pow (log (+ 1 x)) 2) n))) (+ (* 2 (log x)) (* 2 (/ (pow (log x) 2) n)))) n)","(/ (- (+ (* 4/3 (/ (pow (log (+ 1 x)) 3) (pow n 2))) (+ (* 2 (log (+ 1 x))) (* 2 (/ (pow (log (+ 1 x)) 2) n)))) (+ (* 4/3 (/ (pow (log x) 3) (pow n 2))) (+ (* 2 (log x)) (* 2 (/ (pow (log x) 2) n))))) n)","(/ (- (+ (* 2/3 (/ (pow (log (+ 1 x)) 4) (pow n 3))) (+ (* 4/3 (/ (pow (log (+ 1 x)) 3) (pow n 2))) (+ (* 2 (log (+ 1 x))) (* 2 (/ (pow (log (+ 1 x)) 2) n))))) (+ (* 2/3 (/ (pow (log x) 4) (pow n 3))) (+ (* 4/3 (/ (pow (log x) 3) (pow n 2))) (+ (* 2 (log x)) (* 2 (/ (pow (log x) 2) n)))))) n)","(+ 1 (* 2 (/ (log (+ 1 x)) n)))","(+ 1 (+ (* 2 (/ (log (+ 1 x)) n)) (* 2 (/ (pow (log (+ 1 x)) 2) (pow n 2)))))","(+ 1 (+ (* 4/3 (/ (pow (log (+ 1 x)) 3) (pow n 3))) (+ (* 2 (/ (log (+ 1 x)) n)) (* 2 (/ (pow (log (+ 1 x)) 2) (pow n 2))))))","(* 2 (/ (- (* 1/2 (log (+ 1 x))) (* 1/2 (log x))) n))","(/ (+ (* 2 (- (* 1/2 (log (+ 1 x))) (* 1/2 (log x)))) (+ (* 2 (/ (- (* 1/8 (pow (log (+ 1 x)) 2)) (* 1/8 (pow (log x) 2))) n)) (/ (* (+ (* 1/2 (log x)) (* 1/2 (log (+ 1 x)))) (- (* 1/2 (log (+ 1 x))) (* 1/2 (log x)))) n))) n)","(/ (+ (* 2 (- (* 1/2 (log (+ 1 x))) (* 1/2 (log x)))) (+ (* 2 (/ (- (* 1/48 (pow (log (+ 1 x)) 3)) (* 1/48 (pow (log x) 3))) (pow n 2))) (+ (* 2 (/ (- (* 1/8 (pow (log (+ 1 x)) 2)) (* 1/8 (pow (log x) 2))) n)) (+ (/ (* (+ (* 1/8 (pow (log x) 2)) (* 1/8 (pow (log (+ 1 x)) 2))) (- (* 1/2 (log (+ 1 x))) (* 1/2 (log x)))) (pow n 2)) (+ (/ (* (+ (* 1/2 (log x)) (* 1/2 (log (+ 1 x)))) (- (* 1/8 (pow (log (+ 1 x)) 2)) (* 1/8 (pow (log x) 2)))) (pow n 2)) (/ (* (+ (* 1/2 (log x)) (* 1/2 (log (+ 1 x)))) (- (* 1/2 (log (+ 1 x))) (* 1/2 (log x)))) n)))))) n)","(/ (+ (* 2 (- (* 1/2 (log (+ 1 x))) (* 1/2 (log x)))) (+ (* 2 (/ (- (* 1/384 (pow (log (+ 1 x)) 4)) (* 1/384 (pow (log x) 4))) (pow n 3))) (+ (* 2 (/ (- (* 1/48 (pow (log (+ 1 x)) 3)) (* 1/48 (pow (log x) 3))) (pow n 2))) (+ (* 2 (/ (- (* 1/8 (pow (log (+ 1 x)) 2)) (* 1/8 (pow (log x) 2))) n)) (+ (/ (* (+ (* 1/48 (pow (log x) 3)) (* 1/48 (pow (log (+ 1 x)) 3))) (- (* 1/2 (log (+ 1 x))) (* 1/2 (log x)))) (pow n 3)) (+ (/ (* (+ (* 1/8 (pow (log x) 2)) (* 1/8 (pow (log (+ 1 x)) 2))) (- (* 1/8 (pow (log (+ 1 x)) 2)) (* 1/8 (pow (log x) 2)))) (pow n 3)) (+ (/ (* (+ (* 1/8 (pow (log x) 2)) (* 1/8 (pow (log (+ 1 x)) 2))) (- (* 1/2 (log (+ 1 x))) (* 1/2 (log x)))) (pow n 2)) (+ (/ (* (+ (* 1/2 (log x)) (* 1/2 (log (+ 1 x)))) (- (* 1/48 (pow (log (+ 1 x)) 3)) (* 1/48 (pow (log x) 3)))) (pow n 3)) (+ (/ (* (+ (* 1/2 (log x)) (* 1/2 (log (+ 1 x)))) (- (* 1/8 (pow (log (+ 1 x)) 2)) (* 1/8 (pow (log x) 2)))) (pow n 2)) (/ (* (+ (* 1/2 (log x)) (* 1/2 (log (+ 1 x)))) (- (* 1/2 (log (+ 1 x))) (* 1/2 (log x)))) n)))))))))) n)","2","(+ 2 (+ (* 1/2 (/ (log x) n)) (* 1/2 (/ (log (+ 1 x)) n))))","(+ 2 (+ (* 1/8 (/ (pow (log x) 2) (pow n 2))) (+ (* 1/8 (/ (pow (log (+ 1 x)) 2) (pow n 2))) (+ (* 1/2 (/ (log x) n)) (* 1/2 (/ (log (+ 1 x)) n))))))","(+ 2 (+ (* 1/48 (/ (pow (log x) 3) (pow n 3))) (+ (* 1/48 (/ (pow (log (+ 1 x)) 3) (pow n 3))) (+ (* 1/8 (/ (pow (log x) 2) (pow n 2))) (+ (* 1/8 (/ (pow (log (+ 1 x)) 2) (pow n 2))) (+ (* 1/2 (/ (log x) n)) (* 1/2 (/ (log (+ 1 x)) n))))))))","(+ 1 (* 1/2 (/ (log (+ 1 x)) n)))","(+ 1 (+ (* 1/8 (/ (pow (log (+ 1 x)) 2) (pow n 2))) (* 1/2 (/ (log (+ 1 x)) n))))","(+ 1 (+ (* 1/48 (/ (pow (log (+ 1 x)) 3) (pow n 3))) (+ (* 1/8 (/ (pow (log (+ 1 x)) 2) (pow n 2))) (* 1/2 (/ (log (+ 1 x)) n)))))","-2","(- (* -1 (/ (+ (log x) (log (+ 1 x))) n)) 2)","(- (* -1 (/ (+ (* 1/2 (pow (log x) 2)) (* 1/2 (pow (log (+ 1 x)) 2))) (pow n 2))) (+ 2 (+ (/ (log x) n) (/ (log (+ 1 x)) n))))","(- (* -1 (/ (+ (* 1/6 (pow (log x) 3)) (* 1/6 (pow (log (+ 1 x)) 3))) (pow n 3))) (+ 2 (+ (* 1/2 (/ (pow (log x) 2) (pow n 2))) (+ (* 1/2 (/ (pow (log (+ 1 x)) 2) (pow n 2))) (+ (/ (log x) n) (/ (log (+ 1 x)) n))))))","(/ (- (* 1/2 (log (+ 1 x))) (* 1/2 (log x))) n)","(/ (- (+ (* 1/8 (/ (pow (log (+ 1 x)) 2) n)) (* 1/2 (log (+ 1 x)))) (+ (* 1/8 (/ (pow (log x) 2) n)) (* 1/2 (log x)))) n)","(/ (- (+ (* 1/48 (/ (pow (log (+ 1 x)) 3) (pow n 2))) (+ (* 1/8 (/ (pow (log (+ 1 x)) 2) n)) (* 1/2 (log (+ 1 x))))) (+ (* 1/48 (/ (pow (log x) 3) (pow n 2))) (+ (* 1/8 (/ (pow (log x) 2) n)) (* 1/2 (log x))))) n)","(/ (- (+ (* 1/384 (/ (pow (log (+ 1 x)) 4) (pow n 3))) (+ (* 1/48 (/ (pow (log (+ 1 x)) 3) (pow n 2))) (+ (* 1/8 (/ (pow (log (+ 1 x)) 2) n)) (* 1/2 (log (+ 1 x)))))) (+ (* 1/384 (/ (pow (log x) 4) (pow n 3))) (+ (* 1/48 (/ (pow (log x) 3) (pow n 2))) (+ (* 1/8 (/ (pow (log x) 2) n)) (* 1/2 (log x)))))) n)","(* -1 (/ (- (* -1 (log (+ 1 x))) (* -1 (log x))) n))","(* -1 (/ (- (+ (* -1 (log (+ 1 x))) (* -1 (/ (- (* 1/2 (pow (log (+ 1 x)) 2)) (* 1/2 (pow (log x) 2))) n))) (* -1 (log x))) n))","(* -1 (/ (- (+ (* -1 (log (+ 1 x))) (* -1 (/ (- (+ (* -1 (/ (- (* -1/6 (pow (log (+ 1 x)) 3)) (* -1/6 (pow (log x) 3))) n)) (* 1/2 (pow (log (+ 1 x)) 2))) (* 1/2 (pow (log x) 2))) n))) (* -1 (log x))) n))","(* -1 (/ (- (+ (* -1 (log (+ 1 x))) (* -1 (/ (- (+ (* -1 (/ (- (+ (* -1 (/ (- (* 1/24 (pow (log (+ 1 x)) 4)) (* 1/24 (pow (log x) 4))) n)) (* -1/6 (pow (log (+ 1 x)) 3))) (* -1/6 (pow (log x) 3))) n)) (* 1/2 (pow (log (+ 1 x)) 2))) (* 1/2 (pow (log x) 2))) n))) (* -1 (log x))) n))","(+ 1 (* -1 (/ (+ (* -1 (log (+ 1 x))) (* -1/2 (/ (pow (log (+ 1 x)) 2) n))) n)))","(+ 1 (* -1 (/ (+ (* -1 (log (+ 1 x))) (* -1 (/ (+ (* 1/6 (/ (pow (log (+ 1 x)) 3) n)) (* 1/2 (pow (log (+ 1 x)) 2))) n))) n)))","(/ (+ (log (+ 1 x)) (* -1 (log x))) n)","(* -1 (/ (- (+ (* -1 (/ (pow (log (+ 1 x)) 2) n)) (+ (* 1/2 (/ (pow (log x) 2) n)) (* 1/2 (/ (pow (log (+ 1 x)) 2) n)))) (+ (log (+ 1 x)) (* -1 (log x)))) n))","(* -1 (/ (- (* -1 (/ (- (+ (* -1 (/ (* (log (+ 1 x)) (+ (* -1 (pow (log (+ 1 x)) 2)) (* 1/2 (pow (log (+ 1 x)) 2)))) n)) (+ (* -1/2 (/ (pow (log (+ 1 x)) 3) n)) (+ (* -1/6 (/ (pow (log x) 3) n)) (* 1/6 (/ (pow (log (+ 1 x)) 3) n))))) (+ (* -1 (pow (log (+ 1 x)) 2)) (+ (* 1/2 (pow (log x) 2)) (* 1/2 (pow (log (+ 1 x)) 2))))) n)) (+ (log (+ 1 x)) (* -1 (log x)))) n))","(* -1 (/ (- (* -1 (/ (- (* -1 (/ (- (+ (* -1 (/ (* (log (+ 1 x)) (+ (* -1 (* (log (+ 1 x)) (+ (* -1 (pow (log (+ 1 x)) 2)) (* 1/2 (pow (log (+ 1 x)) 2))))) (+ (* -1/2 (pow (log (+ 1 x)) 3)) (* 1/6 (pow (log (+ 1 x)) 3))))) n)) (+ (* -1/2 (/ (* (pow (log (+ 1 x)) 2) (+ (* -1 (pow (log (+ 1 x)) 2)) (* 1/2 (pow (log (+ 1 x)) 2)))) n)) (+ (* -1/6 (/ (pow (log (+ 1 x)) 4) n)) (+ (* 1/24 (/ (pow (log x) 4) n)) (* 1/24 (/ (pow (log (+ 1 x)) 4) n)))))) (+ (* -1 (* (log (+ 1 x)) (+ (* -1 (pow (log (+ 1 x)) 2)) (* 1/2 (pow (log (+ 1 x)) 2))))) (+ (* -1/2 (pow (log (+ 1 x)) 3)) (+ (* -1/6 (pow (log x) 3)) (* 1/6 (pow (log (+ 1 x)) 3)))))) n)) (+ (* -1 (pow (log (+ 1 x)) 2)) (+ (* 1/2 (pow (log x) 2)) (* 1/2 (pow (log (+ 1 x)) 2))))) n)) (+ (log (+ 1 x)) (* -1 (log x)))) n))","(+ 1 (* -1 (/ (- (+ (* -1 (/ (pow (log (+ 1 x)) 2) n)) (* 1/2 (/ (pow (log (+ 1 x)) 2) n))) (log (+ 1 x))) n)))","(+ 1 (* -1 (/ (- (* -1 (/ (- (+ (* -1 (/ (* (log (+ 1 x)) (+ (* -1 (pow (log (+ 1 x)) 2)) (* 1/2 (pow (log (+ 1 x)) 2)))) n)) (+ (* -1/2 (/ (pow (log (+ 1 x)) 3) n)) (* 1/6 (/ (pow (log (+ 1 x)) 3) n)))) (+ (* -1 (pow (log (+ 1 x)) 2)) (* 1/2 (pow (log (+ 1 x)) 2)))) n)) (log (+ 1 x))) n)))","(+ 1 (* -1 (/ (+ (log (+ 1 x)) (* -1/2 (/ (pow (log (+ 1 x)) 2) n))) n)))","(+ 1 (* -1 (/ (+ (log (+ 1 x)) (* -1 (/ (+ (* -1/6 (/ (pow (log (+ 1 x)) 3) n)) (* 1/2 (pow (log (+ 1 x)) 2))) n))) n)))","(* -1 (/ (- (+ (* -1 (log (- (pow x 2) 1))) (* -1 (log (/ -1 (- 1 x))))) (* -1 (log x))) n))","(* -1 (/ (- (+ (* -1 (log (- (pow x 2) 1))) (+ (* -1 (log (/ -1 (- 1 x)))) (* -1 (/ (- (+ (* 1/2 (pow (log (- (pow x 2) 1)) 2)) (+ (* 1/2 (pow (log (/ -1 (- 1 x))) 2)) (* (log (- (pow x 2) 1)) (log (/ -1 (- 1 x)))))) (* 1/2 (pow (log x) 2))) n)))) (* -1 (log x))) n))","(* -1 (/ (- (+ (* -1 (log (- (pow x 2) 1))) (+ (* -1 (log (/ -1 (- 1 x)))) (* -1 (/ (- (+ (* -1 (/ (- (+ (* -1/2 (* (log (- (pow x 2) 1)) (pow (log (/ -1 (- 1 x))) 2))) (+ (* -1/2 (* (pow (log (- (pow x 2) 1)) 2) (log (/ -1 (- 1 x))))) (+ (* -1/6 (pow (log (- (pow x 2) 1)) 3)) (* -1/6 (pow (log (/ -1 (- 1 x))) 3))))) (* -1/6 (pow (log x) 3))) n)) (+ (* 1/2 (pow (log (- (pow x 2) 1)) 2)) (+ (* 1/2 (pow (log (/ -1 (- 1 x))) 2)) (* (log (- (pow x 2) 1)) (log (/ -1 (- 1 x))))))) (* 1/2 (pow (log x) 2))) n)))) (* -1 (log x))) n))","(* -1 (/ (- (+ (* -1 (log (- (pow x 2) 1))) (+ (* -1 (log (/ -1 (- 1 x)))) (* -1 (/ (- (+ (* -1 (/ (- (+ (* -1 (/ (- (+ (* 1/24 (pow (log (- (pow x 2) 1)) 4)) (+ (* 1/24 (pow (log (/ -1 (- 1 x))) 4)) (+ (* 1/6 (* (log (- (pow x 2) 1)) (pow (log (/ -1 (- 1 x))) 3))) (+ (* 1/6 (* (pow (log (- (pow x 2) 1)) 3) (log (/ -1 (- 1 x))))) (* 1/4 (* (pow (log (- (pow x 2) 1)) 2) (pow (log (/ -1 (- 1 x))) 2))))))) (* 1/24 (pow (log x) 4))) n)) (+ (* -1/2 (* (log (- (pow x 2) 1)) (pow (log (/ -1 (- 1 x))) 2))) (+ (* -1/2 (* (pow (log (- (pow x 2) 1)) 2) (log (/ -1 (- 1 x))))) (+ (* -1/6 (pow (log (- (pow x 2) 1)) 3)) (* -1/6 (pow (log (/ -1 (- 1 x))) 3)))))) (* -1/6 (pow (log x) 3))) n)) (+ (* 1/2 (pow (log (- (pow x 2) 1)) 2)) (+ (* 1/2 (pow (log (/ -1 (- 1 x))) 2)) (* (log (- (pow x 2) 1)) (log (/ -1 (- 1 x))))))) (* 1/2 (pow (log x) 2))) n)))) (* -1 (log x))) n))","(+ 1 (* -1 (/ (+ (* -1 (log (- (pow x 2) 1))) (* -1 (log (/ -1 (- 1 x))))) n)))","(+ 1 (* -1 (/ (+ (* -1 (log (- (pow x 2) 1))) (+ (* -1 (log (/ -1 (- 1 x)))) (* -1 (/ (+ (* 1/2 (pow (log (- (pow x 2) 1)) 2)) (+ (* 1/2 (pow (log (/ -1 (- 1 x))) 2)) (* (log (- (pow x 2) 1)) (log (/ -1 (- 1 x)))))) n)))) n)))","(+ 1 (* -1 (/ (+ (* -1 (log (- (pow x 2) 1))) (+ (* -1 (log (/ -1 (- 1 x)))) (* -1 (/ (+ (* -1 (/ (+ (* -1/2 (* (log (- (pow x 2) 1)) (pow (log (/ -1 (- 1 x))) 2))) (+ (* -1/2 (* (pow (log (- (pow x 2) 1)) 2) (log (/ -1 (- 1 x))))) (+ (* -1/6 (pow (log (- (pow x 2) 1)) 3)) (* -1/6 (pow (log (/ -1 (- 1 x))) 3))))) n)) (+ (* 1/2 (pow (log (- (pow x 2) 1)) 2)) (+ (* 1/2 (pow (log (/ -1 (- 1 x))) 2)) (* (log (- (pow x 2) 1)) (log (/ -1 (- 1 x))))))) n)))) n)))","(+ 1 (* -1 (/ (+ (* -1 (log (- (pow x 2) 1))) (* -1/2 (/ (pow (log (- (pow x 2) 1)) 2) n))) n)))","(+ 1 (* -1 (/ (+ (* -1 (log (- (pow x 2) 1))) (* -1 (/ (+ (* 1/6 (/ (pow (log (- (pow x 2) 1)) 3) n)) (* 1/2 (pow (log (- (pow x 2) 1)) 2))) n))) n)))","(* -1/2 (/ (- (* -2 (log (+ 1 x))) (* -2 (log x))) n))","(* -1 (/ (- (* -1 (/ (- (* 1/2 (- (* 2 (pow (log (+ 1 x)) 2)) (* 2 (pow (log x) 2)))) (* 1/4 (* (+ (* -1 (log x)) (* -1 (log (+ 1 x)))) (- (* -2 (log (+ 1 x))) (* -2 (log x)))))) n)) (* -1/2 (- (* -2 (log (+ 1 x))) (* -2 (log x))))) n))","(* -1 (/ (- (* -1 (/ (- (* -1 (/ (- (* 1/2 (- (* -4/3 (pow (log (+ 1 x)) 3)) (* -4/3 (pow (log x) 3)))) (+ (* 1/4 (* (+ (* 1/2 (pow (log x) 2)) (* 1/2 (pow (log (+ 1 x)) 2))) (- (* -2 (log (+ 1 x))) (* -2 (log x))))) (* 1/2 (* (+ (* -1 (log x)) (* -1 (log (+ 1 x)))) (- (* 1/2 (- (* 2 (pow (log (+ 1 x)) 2)) (* 2 (pow (log x) 2)))) (* 1/4 (* (+ (* -1 (log x)) (* -1 (log (+ 1 x)))) (- (* -2 (log (+ 1 x))) (* -2 (log x)))))))))) n)) (* -1 (- (* 1/2 (- (* 2 (pow (log (+ 1 x)) 2)) (* 2 (pow (log x) 2)))) (* 1/4 (* (+ (* -1 (log x)) (* -1 (log (+ 1 x)))) (- (* -2 (log (+ 1 x))) (* -2 (log x)))))))) n)) (* -1/2 (- (* -2 (log (+ 1 x))) (* -2 (log x))))) n))","(* -1 (/ (- (* -1 (/ (- (* -1 (/ (- (* -1 (/ (- (* 1/2 (- (* 2/3 (pow (log (+ 1 x)) 4)) (* 2/3 (pow (log x) 4)))) (+ (* 1/4 (* (+ (* -1/6 (pow (log x) 3)) (* -1/6 (pow (log (+ 1 x)) 3))) (- (* -2 (log (+ 1 x))) (* -2 (log x))))) (+ (* 1/2 (* (+ (* -1 (log x)) (* -1 (log (+ 1 x)))) (- (* 1/2 (- (* -4/3 (pow (log (+ 1 x)) 3)) (* -4/3 (pow (log x) 3)))) (+ (* 1/4 (* (+ (* 1/2 (pow (log x) 2)) (* 1/2 (pow (log (+ 1 x)) 2))) (- (* -2 (log (+ 1 x))) (* -2 (log x))))) (* 1/2 (* (+ (* -1 (log x)) (* -1 (log (+ 1 x)))) (- (* 1/2 (- (* 2 (pow (log (+ 1 x)) 2)) (* 2 (pow (log x) 2)))) (* 1/4 (* (+ (* -1 (log x)) (* -1 (log (+ 1 x)))) (- (* -2 (log (+ 1 x))) (* -2 (log x)))))))))))) (* 1/2 (* (+ (* 1/2 (pow (log x) 2)) (* 1/2 (pow (log (+ 1 x)) 2))) (- (* 1/2 (- (* 2 (pow (log (+ 1 x)) 2)) (* 2 (pow (log x) 2)))) (* 1/4 (* (+ (* -1 (log x)) (* -1 (log (+ 1 x)))) (- (* -2 (log (+ 1 x))) (* -2 (log x))))))))))) n)) (* -1 (- (* 1/2 (- (* -4/3 (pow (log (+ 1 x)) 3)) (* -4/3 (pow (log x) 3)))) (+ (* 1/4 (* (+ (* 1/2 (pow (log x) 2)) (* 1/2 (pow (log (+ 1 x)) 2))) (- (* -2 (log (+ 1 x))) (* -2 (log x))))) (* 1/2 (* (+ (* -1 (log x)) (* -1 (log (+ 1 x)))) (- (* 1/2 (- (* 2 (pow (log (+ 1 x)) 2)) (* 2 (pow (log x) 2)))) (* 1/4 (* (+ (* -1 (log x)) (* -1 (log (+ 1 x)))) (- (* -2 (log (+ 1 x))) (* -2 (log x)))))))))))) n)) (* -1 (- (* 1/2 (- (* 2 (pow (log (+ 1 x)) 2)) (* 2 (pow (log x) 2)))) (* 1/4 (* (+ (* -1 (log x)) (* -1 (log (+ 1 x)))) (- (* -2 (log (+ 1 x))) (* -2 (log x)))))))) n)) (* -1/2 (- (* -2 (log (+ 1 x))) (* -2 (log x))))) n))","(* 1/2 (/ (- (* -2 (log (+ 1 x))) (* -2 (log x))) n))","(* -1 (/ (- (+ (* -1/2 (- (* -2 (log (+ 1 x))) (* -2 (log x)))) (* 1/2 (/ (- (* 2 (pow (log (+ 1 x)) 2)) (* 2 (pow (log x) 2))) n))) (* 1/4 (/ (* (+ (* -1 (log x)) (* -1 (log (+ 1 x)))) (- (* -2 (log (+ 1 x))) (* -2 (log x)))) n))) n))","(* -1 (/ (+ (* -1 (/ (- (+ (* -1 (- (* 1/2 (- (* 2 (pow (log (+ 1 x)) 2)) (* 2 (pow (log x) 2)))) (* 1/4 (* (+ (* -1 (log x)) (* -1 (log (+ 1 x)))) (- (* -2 (log (+ 1 x))) (* -2 (log x))))))) (* 1/2 (/ (- (* -4/3 (pow (log (+ 1 x)) 3)) (* -4/3 (pow (log x) 3))) n))) (+ (* 1/4 (/ (* (+ (* 1/2 (pow (log x) 2)) (* 1/2 (pow (log (+ 1 x)) 2))) (- (* -2 (log (+ 1 x))) (* -2 (log x)))) n)) (* 1/2 (/ (* (+ (* -1 (log x)) (* -1 (log (+ 1 x)))) (- (* 1/2 (- (* 2 (pow (log (+ 1 x)) 2)) (* 2 (pow (log x) 2)))) (* 1/4 (* (+ (* -1 (log x)) (* -1 (log (+ 1 x)))) (- (* -2 (log (+ 1 x))) (* -2 (log x))))))) n)))) n)) (* -1/2 (- (* -2 (log (+ 1 x))) (* -2 (log x))))) n))","(* -1 (/ (+ (* -1 (/ (+ (* -1 (- (* 1/2 (- (* 2 (pow (log (+ 1 x)) 2)) (* 2 (pow (log x) 2)))) (* 1/4 (* (+ (* -1 (log x)) (* -1 (log (+ 1 x)))) (- (* -2 (log (+ 1 x))) (* -2 (log x))))))) (* -1 (/ (- (+ (* -1 (- (* 1/2 (- (* -4/3 (pow (log (+ 1 x)) 3)) (* -4/3 (pow (log x) 3)))) (+ (* 1/4 (* (+ (* 1/2 (pow (log x) 2)) (* 1/2 (pow (log (+ 1 x)) 2))) (- (* -2 (log (+ 1 x))) (* -2 (log x))))) (* 1/2 (* (+ (* -1 (log x)) (* -1 (log (+ 1 x)))) (- (* 1/2 (- (* 2 (pow (log (+ 1 x)) 2)) (* 2 (pow (log x) 2)))) (* 1/4 (* (+ (* -1 (log x)) (* -1 (log (+ 1 x)))) (- (* -2 (log (+ 1 x))) (* -2 (log x))))))))))) (* 1/2 (/ (- (* 2/3 (pow (log (+ 1 x)) 4)) (* 2/3 (pow (log x) 4))) n))) (+ (* 1/4 (/ (* (+ (* -1/6 (pow (log x) 3)) (* -1/6 (pow (log (+ 1 x)) 3))) (- (* -2 (log (+ 1 x))) (* -2 (log x)))) n)) (+ (* 1/2 (/ (* (+ (* -1 (log x)) (* -1 (log (+ 1 x)))) (- (* 1/2 (- (* -4/3 (pow (log (+ 1 x)) 3)) (* -4/3 (pow (log x) 3)))) (+ (* 1/4 (* (+ (* 1/2 (pow (log x) 2)) (* 1/2 (pow (log (+ 1 x)) 2))) (- (* -2 (log (+ 1 x))) (* -2 (log x))))) (* 1/2 (* (+ (* -1 (log x)) (* -1 (log (+ 1 x)))) (- (* 1/2 (- (* 2 (pow (log (+ 1 x)) 2)) (* 2 (pow (log x) 2)))) (* 1/4 (* (+ (* -1 (log x)) (* -1 (log (+ 1 x)))) (- (* -2 (log (+ 1 x))) (* -2 (log x))))))))))) n)) (* 1/2 (/ (* (+ (* 1/2 (pow (log x) 2)) (* 1/2 (pow (log (+ 1 x)) 2))) (- (* 1/2 (- (* 2 (pow (log (+ 1 x)) 2)) (* 2 (pow (log x) 2)))) (* 1/4 (* (+ (* -1 (log x)) (* -1 (log (+ 1 x)))) (- (* -2 (log (+ 1 x))) (* -2 (log x))))))) n))))) n))) n)) (* -1/2 (- (* -2 (log (+ 1 x))) (* -2 (log x))))) n))","(* -1 (/ (- (* -2 (log (+ 1 x))) (* -2 (log x))) n))","(* -1 (/ (- (+ (* -2 (log (+ 1 x))) (* -1 (/ (- (* 2 (pow (log (+ 1 x)) 2)) (* 2 (pow (log x) 2))) n))) (* -2 (log x))) n))","(* -1 (/ (- (+ (* -2 (log (+ 1 x))) (* -1 (/ (- (+ (* -1 (/ (- (* -4/3 (pow (log (+ 1 x)) 3)) (* -4/3 (pow (log x) 3))) n)) (* 2 (pow (log (+ 1 x)) 2))) (* 2 (pow (log x) 2))) n))) (* -2 (log x))) n))","(* -1 (/ (- (+ (* -2 (log (+ 1 x))) (* -1 (/ (- (+ (* -1 (/ (- (+ (* -4/3 (pow (log (+ 1 x)) 3)) (* -1 (/ (- (* 2/3 (pow (log (+ 1 x)) 4)) (* 2/3 (pow (log x) 4))) n))) (* -4/3 (pow (log x) 3))) n)) (* 2 (pow (log (+ 1 x)) 2))) (* 2 (pow (log x) 2))) n))) (* -2 (log x))) n))","(+ 1 (* -1 (/ (+ (* -2 (log (+ 1 x))) (* -2 (/ (pow (log (+ 1 x)) 2) n))) n)))","(+ 1 (* -1 (/ (+ (* -2 (log (+ 1 x))) (* -1 (/ (+ (* 4/3 (/ (pow (log (+ 1 x)) 3) n)) (* 2 (pow (log (+ 1 x)) 2))) n))) n)))","(* -2 (/ (- (* -1/2 (log (+ 1 x))) (* -1/2 (log x))) n))","(* -1 (/ (+ (* -1 (/ (+ (* 2 (- (* 1/8 (pow (log (+ 1 x)) 2)) (* 1/8 (pow (log x) 2)))) (* (+ (* -1/2 (log x)) (* -1/2 (log (+ 1 x)))) (- (* -1/2 (log (+ 1 x))) (* -1/2 (log x))))) n)) (* 2 (- (* -1/2 (log (+ 1 x))) (* -1/2 (log x))))) n))","(* -1 (/ (+ (* -1 (/ (+ (* -1 (/ (+ (* 2 (- (* -1/48 (pow (log (+ 1 x)) 3)) (* -1/48 (pow (log x) 3)))) (+ (* (+ (* -1/2 (log x)) (* -1/2 (log (+ 1 x)))) (- (* 1/8 (pow (log (+ 1 x)) 2)) (* 1/8 (pow (log x) 2)))) (* (+ (* 1/8 (pow (log x) 2)) (* 1/8 (pow (log (+ 1 x)) 2))) (- (* -1/2 (log (+ 1 x))) (* -1/2 (log x)))))) n)) (+ (* 2 (- (* 1/8 (pow (log (+ 1 x)) 2)) (* 1/8 (pow (log x) 2)))) (* (+ (* -1/2 (log x)) (* -1/2 (log (+ 1 x)))) (- (* -1/2 (log (+ 1 x))) (* -1/2 (log x)))))) n)) (* 2 (- (* -1/2 (log (+ 1 x))) (* -1/2 (log x))))) n))","(* -1 (/ (+ (* -1 (/ (+ (* -1 (/ (+ (* -1 (/ (+ (* 2 (- (* 1/384 (pow (log (+ 1 x)) 4)) (* 1/384 (pow (log x) 4)))) (+ (* (+ (* -1/2 (log x)) (* -1/2 (log (+ 1 x)))) (- (* -1/48 (pow (log (+ 1 x)) 3)) (* -1/48 (pow (log x) 3)))) (+ (* (+ (* -1/48 (pow (log x) 3)) (* -1/48 (pow (log (+ 1 x)) 3))) (- (* -1/2 (log (+ 1 x))) (* -1/2 (log x)))) (* (+ (* 1/8 (pow (log x) 2)) (* 1/8 (pow (log (+ 1 x)) 2))) (- (* 1/8 (pow (log (+ 1 x)) 2)) (* 1/8 (pow (log x) 2))))))) n)) (+ (* 2 (- (* -1/48 (pow (log (+ 1 x)) 3)) (* -1/48 (pow (log x) 3)))) (+ (* (+ (* -1/2 (log x)) (* -1/2 (log (+ 1 x)))) (- (* 1/8 (pow (log (+ 1 x)) 2)) (* 1/8 (pow (log x) 2)))) (* (+ (* 1/8 (pow (log x) 2)) (* 1/8 (pow (log (+ 1 x)) 2))) (- (* -1/2 (log (+ 1 x))) (* -1/2 (log x))))))) n)) (+ (* 2 (- (* 1/8 (pow (log (+ 1 x)) 2)) (* 1/8 (pow (log x) 2)))) (* (+ (* -1/2 (log x)) (* -1/2 (log (+ 1 x)))) (- (* -1/2 (log (+ 1 x))) (* -1/2 (log x)))))) n)) (* 2 (- (* -1/2 (log (+ 1 x))) (* -1/2 (log x))))) n))","(+ 2 (* -1 (/ (+ (* -1/2 (log x)) (* -1/2 (log (+ 1 x)))) n)))","(+ 2 (* -1 (/ (+ (* -1 (/ (+ (* 1/8 (pow (log x) 2)) (* 1/8 (pow (log (+ 1 x)) 2))) n)) (+ (* -1/2 (log x)) (* -1/2 (log (+ 1 x))))) n)))","(+ 2 (* -1 (/ (+ (* -1 (/ (+ (* -1 (/ (+ (* -1/48 (pow (log x) 3)) (* -1/48 (pow (log (+ 1 x)) 3))) n)) (+ (* 1/8 (pow (log x) 2)) (* 1/8 (pow (log (+ 1 x)) 2)))) n)) (+ (* -1/2 (log x)) (* -1/2 (log (+ 1 x))))) n)))","(+ 1 (* -1 (/ (+ (* -1/2 (log (+ 1 x))) (* -1/8 (/ (pow (log (+ 1 x)) 2) n))) n)))","(+ 1 (* -1 (/ (+ (* -1 (/ (+ (* 1/48 (/ (pow (log (+ 1 x)) 3) n)) (* 1/8 (pow (log (+ 1 x)) 2))) n)) (* -1/2 (log (+ 1 x)))) n)))","(- (+ (* -1 (/ (log x) n)) (* -1 (/ (log (+ 1 x)) n))) 2)","(- (* -1 (/ (- (+ (* 1/2 (/ (pow (log x) 2) n)) (* 1/2 (/ (pow (log (+ 1 x)) 2) n))) (+ (* -1 (log x)) (* -1 (log (+ 1 x))))) n)) 2)","(- (* -1 (/ (- (* -1 (/ (- (+ (* -1/6 (/ (pow (log x) 3) n)) (* -1/6 (/ (pow (log (+ 1 x)) 3) n))) (+ (* 1/2 (pow (log x) 2)) (* 1/2 (pow (log (+ 1 x)) 2)))) n)) (+ (* -1 (log x)) (* -1 (log (+ 1 x))))) n)) 2)","(* -1 (/ (- (* -1/2 (log (+ 1 x))) (* -1/2 (log x))) n))","(* -1 (/ (- (+ (* -1 (/ (- (* 1/8 (pow (log (+ 1 x)) 2)) (* 1/8 (pow (log x) 2))) n)) (* -1/2 (log (+ 1 x)))) (* -1/2 (log x))) n))","(* -1 (/ (- (+ (* -1 (/ (- (+ (* -1 (/ (- (* -1/48 (pow (log (+ 1 x)) 3)) (* -1/48 (pow (log x) 3))) n)) (* 1/8 (pow (log (+ 1 x)) 2))) (* 1/8 (pow (log x) 2))) n)) (* -1/2 (log (+ 1 x)))) (* -1/2 (log x))) n))","(* -1 (/ (- (+ (* -1 (/ (- (+ (* -1 (/ (- (+ (* -1 (/ (- (* 1/384 (pow (log (+ 1 x)) 4)) (* 1/384 (pow (log x) 4))) n)) (* -1/48 (pow (log (+ 1 x)) 3))) (* -1/48 (pow (log x) 3))) n)) (* 1/8 (pow (log (+ 1 x)) 2))) (* 1/8 (pow (log x) 2))) n)) (* -1/2 (log (+ 1 x)))) (* -1/2 (log x))) n))"]],"memory":[[25376,16660080]],"method":["egg-herbie"],"outputs":[[]],"time":133.6220703125,"type":"simplify"},{"count":[[24,360]],"inputs":[["(-.f64 (exp.f64 (/.f64 (log1p.f64 x) n)) (pow.f64 x (/.f64 #s(literal 1 binary64) n)))","(exp.f64 (/.f64 (log1p.f64 x) n))","(/.f64 (log1p.f64 x) n)","(log1p.f64 x)","(-.f64 (/.f64 #s(literal 1 binary64) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal -1 binary64) n))) (pow.f64 x (/.f64 #s(literal 1 binary64) n)))","(/.f64 #s(literal 1 binary64) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal -1 binary64) n)))","(pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal -1 binary64) n))","(+.f64 x #s(literal 1 binary64))","(-.f64 (*.f64 (pow.f64 (fma.f64 x x #s(literal -1 binary64)) (/.f64 #s(literal 1 binary64) n)) (pow.f64 (/.f64 #s(literal -1 binary64) (-.f64 #s(literal 1 binary64) x)) (/.f64 #s(literal 1 binary64) n))) (pow.f64 x (/.f64 #s(literal 1 binary64) n)))","(*.f64 (pow.f64 (fma.f64 x x #s(literal -1 binary64)) (/.f64 #s(literal 1 binary64) n)) (pow.f64 (/.f64 #s(literal -1 binary64) (-.f64 #s(literal 1 binary64) x)) (/.f64 #s(literal 1 binary64) n)))","(pow.f64 (fma.f64 x x #s(literal -1 binary64)) (/.f64 #s(literal 1 binary64) n))","(fma.f64 x x #s(literal -1 binary64))","(neg.f64 (/.f64 (-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n)) (pow.f64 x (/.f64 #s(literal 2 binary64) n))) (neg.f64 (+.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) n)) (pow.f64 x (/.f64 #s(literal 1 binary64) n))))))","(/.f64 (-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n)) (pow.f64 x (/.f64 #s(literal 2 binary64) n))) (neg.f64 (+.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) n)) (pow.f64 x (/.f64 #s(literal 1 binary64) n)))))","(-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n)) (pow.f64 x (/.f64 #s(literal 2 binary64) n)))","(pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n))","(*.f64 (+.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal -1 binary64) (*.f64 #s(literal -2 binary64) n))) (pow.f64 x (/.f64 #s(literal -1 binary64) (*.f64 #s(literal -2 binary64) n)))) (-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal -1 binary64) (*.f64 #s(literal -2 binary64) n))) (pow.f64 x (/.f64 #s(literal -1 binary64) (*.f64 #s(literal -2 binary64) n)))))","(+.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal -1 binary64) (*.f64 #s(literal -2 binary64) n))) (pow.f64 x (/.f64 #s(literal -1 binary64) (*.f64 #s(literal -2 binary64) n))))","(pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal -1 binary64) (*.f64 #s(literal -2 binary64) n)))","(/.f64 #s(literal -1 binary64) n)","(-.f64 #s(literal 1 binary64) x)","(neg.f64 (+.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) n)) (pow.f64 x (/.f64 #s(literal 1 binary64) n))))","(-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal -1 binary64) (*.f64 #s(literal -2 binary64) n))) (pow.f64 x (/.f64 #s(literal -1 binary64) (*.f64 #s(literal -2 binary64) n))))","(*.f64 #s(literal -2 binary64) n)"]],"memory":[[4935600,21018496]],"outputs":[["#s(literal 1 binary64)","#s(literal -1 binary64)","#s(literal 2 binary64)","#s(literal -2 binary64)","#s(literal 3 binary64)","#s(literal 0 binary64)","#s(literal 6 binary64)","#s(literal 5 binary64)","#s(literal 4 binary64)","#s(literal -4 binary64)","#s(literal -3 binary64)","#s(literal 9 binary64)","#s(literal 8 binary64)","#s(literal -6 binary64)","#s(literal -5 binary64)","#s(literal 1 binary64)","#s(literal -1 binary64)","#s(literal 2 binary64)","#s(literal -2 binary64)","#s(literal 3 binary64)","#s(literal 0 binary64)","#s(literal 6 binary64)","#s(literal 5 binary64)","#s(literal 4 binary64)","#s(literal -4 binary64)","#s(literal -3 binary64)","#s(literal 9 binary64)","#s(literal 8 binary64)","#s(literal -6 binary64)","#s(literal -5 binary64)","#s(literal 1 binary64)","#s(literal -1 binary64)","#s(literal 2 binary64)","#s(literal -2 binary64)","#s(literal 3 binary64)","#s(literal 0 binary64)","#s(literal 6 binary64)","#s(literal 5 binary64)","#s(literal 4 binary64)","#s(literal -4 binary64)","#s(literal -3 binary64)","#s(literal 9 binary64)","#s(literal 8 binary64)","#s(literal -6 binary64)","#s(literal -5 binary64)","#s(literal 1 binary64)","#s(literal -1 binary64)","#s(literal 2 binary64)","#s(literal -2 binary64)","#s(literal 3 binary64)","#s(literal 0 binary64)","#s(literal 6 binary64)","#s(literal 5 binary64)","#s(literal 4 binary64)","#s(literal -4 binary64)","#s(literal -3 binary64)","#s(literal 9 binary64)","#s(literal 8 binary64)","#s(literal -6 binary64)","#s(literal -5 binary64)","#s(literal 1 binary64)","#s(literal -1 binary64)","#s(literal 2 binary64)","#s(literal -2 binary64)","#s(literal 3 binary64)","#s(literal 0 binary64)","#s(literal 6 binary64)","#s(literal 5 binary64)","#s(literal 4 binary64)","#s(literal -4 binary64)","#s(literal -3 binary64)","#s(literal 9 binary64)","#s(literal 8 binary64)","#s(literal -6 binary64)","#s(literal -5 binary64)","#s(literal 1 binary64)","#s(literal -1 binary64)","#s(literal 2 binary64)","#s(literal -2 binary64)","#s(literal 3 binary64)","#s(literal 0 binary64)","#s(literal 6 binary64)","#s(literal 5 binary64)","#s(literal 4 binary64)","#s(literal -4 binary64)","#s(literal -3 binary64)","#s(literal 9 binary64)","#s(literal 8 binary64)","#s(literal -6 binary64)","#s(literal -5 binary64)","#s(literal 1 binary64)","#s(literal -1 binary64)","#s(literal 2 binary64)","#s(literal -2 binary64)","#s(literal 3 binary64)","#s(literal 0 binary64)","#s(literal 6 binary64)","#s(literal 5 binary64)","#s(literal 4 binary64)","#s(literal -4 binary64)","#s(literal -3 binary64)","#s(literal 9 binary64)","#s(literal 8 binary64)","#s(literal -6 binary64)","#s(literal -5 binary64)","#s(literal 1 binary64)","#s(literal -1 binary64)","#s(literal 2 binary64)","#s(literal -2 binary64)","#s(literal 3 binary64)","#s(literal 0 binary64)","#s(literal 6 binary64)","#s(literal 5 binary64)","#s(literal 4 binary64)","#s(literal -4 binary64)","#s(literal -3 binary64)","#s(literal 9 binary64)","#s(literal 8 binary64)","#s(literal -6 binary64)","#s(literal -5 binary64)","#s(literal 1 binary64)","#s(literal -1 binary64)","#s(literal 2 binary64)","#s(literal -2 binary64)","#s(literal 3 binary64)","#s(literal 0 binary64)","#s(literal 6 binary64)","#s(literal 5 binary64)","#s(literal 4 binary64)","#s(literal -4 binary64)","#s(literal -3 binary64)","#s(literal 9 binary64)","#s(literal 8 binary64)","#s(literal -6 binary64)","#s(literal -5 binary64)","#s(literal 1 binary64)","#s(literal -1 binary64)","#s(literal 2 binary64)","#s(literal -2 binary64)","#s(literal 3 binary64)","#s(literal 0 binary64)","#s(literal 6 binary64)","#s(literal 5 binary64)","#s(literal 4 binary64)","#s(literal -4 binary64)","#s(literal -3 binary64)","#s(literal 9 binary64)","#s(literal 8 binary64)","#s(literal -6 binary64)","#s(literal -5 binary64)","#s(literal 1 binary64)","#s(literal -1 binary64)","#s(literal 2 binary64)","#s(literal -2 binary64)","#s(literal 3 binary64)","#s(literal 0 binary64)","#s(literal 6 binary64)","#s(literal 5 binary64)","#s(literal 4 binary64)","#s(literal -4 binary64)","#s(literal -3 binary64)","#s(literal 9 binary64)","#s(literal 8 binary64)","#s(literal -6 binary64)","#s(literal -5 binary64)","#s(literal 1 binary64)","#s(literal -1 binary64)","#s(literal 2 binary64)","#s(literal -2 binary64)","#s(literal 3 binary64)","#s(literal 0 binary64)","#s(literal 6 binary64)","#s(literal 5 binary64)","#s(literal 4 binary64)","#s(literal -4 binary64)","#s(literal -3 binary64)","#s(literal 9 binary64)","#s(literal 8 binary64)","#s(literal -6 binary64)","#s(literal -5 binary64)","#s(literal 1 binary64)","#s(literal -1 binary64)","#s(literal 2 binary64)","#s(literal -2 binary64)","#s(literal 3 binary64)","#s(literal 0 binary64)","#s(literal 6 binary64)","#s(literal 5 binary64)","#s(literal 4 binary64)","#s(literal -4 binary64)","#s(literal -3 binary64)","#s(literal 9 binary64)","#s(literal 8 binary64)","#s(literal -6 binary64)","#s(literal -5 binary64)","#s(literal 1 binary64)","#s(literal -1 binary64)","#s(literal 2 binary64)","#s(literal -2 binary64)","#s(literal 3 binary64)","#s(literal 0 binary64)","#s(literal 6 binary64)","#s(literal 5 binary64)","#s(literal 4 binary64)","#s(literal -4 binary64)","#s(literal -3 binary64)","#s(literal 9 binary64)","#s(literal 8 binary64)","#s(literal -6 binary64)","#s(literal -5 binary64)","#s(literal 1 binary64)","#s(literal -1 binary64)","#s(literal 2 binary64)","#s(literal -2 binary64)","#s(literal 3 binary64)","#s(literal 0 binary64)","#s(literal 6 binary64)","#s(literal 5 binary64)","#s(literal 4 binary64)","#s(literal -4 binary64)","#s(literal -3 binary64)","#s(literal 9 binary64)","#s(literal 8 binary64)","#s(literal -6 binary64)","#s(literal -5 binary64)","#s(literal 1 binary64)","#s(literal -1 binary64)","#s(literal 2 binary64)","#s(literal -2 binary64)","#s(literal 3 binary64)","#s(literal 0 binary64)","#s(literal 6 binary64)","#s(literal 5 binary64)","#s(literal 4 binary64)","#s(literal -4 binary64)","#s(literal -3 binary64)","#s(literal 9 binary64)","#s(literal 8 binary64)","#s(literal -6 binary64)","#s(literal -5 binary64)","#s(literal 1 binary64)","#s(literal -1 binary64)","#s(literal 2 binary64)","#s(literal -2 binary64)","#s(literal 3 binary64)","#s(literal 0 binary64)","#s(literal 6 binary64)","#s(literal 5 binary64)","#s(literal 4 binary64)","#s(literal -4 binary64)","#s(literal -3 binary64)","#s(literal 9 binary64)","#s(literal 8 binary64)","#s(literal -6 binary64)","#s(literal -5 binary64)","#s(literal 1 binary64)","#s(literal -1 binary64)","#s(literal 2 binary64)","#s(literal -2 binary64)","#s(literal 3 binary64)","#s(literal 0 binary64)","#s(literal 6 binary64)","#s(literal 5 binary64)","#s(literal 4 binary64)","#s(literal -4 binary64)","#s(literal -3 binary64)","#s(literal 9 binary64)","#s(literal 8 binary64)","#s(literal -6 binary64)","#s(literal -5 binary64)","#s(literal 1 binary64)","#s(literal -1 binary64)","#s(literal 2 binary64)","#s(literal -2 binary64)","#s(literal 3 binary64)","#s(literal 0 binary64)","#s(literal 6 binary64)","#s(literal 5 binary64)","#s(literal 4 binary64)","#s(literal -4 binary64)","#s(literal -3 binary64)","#s(literal 9 binary64)","#s(literal 8 binary64)","#s(literal -6 binary64)","#s(literal -5 binary64)","#s(literal 1 binary64)","#s(literal -1 binary64)","#s(literal 2 binary64)","#s(literal -2 binary64)","#s(literal 3 binary64)","#s(literal 0 binary64)","#s(literal 6 binary64)","#s(literal 5 binary64)","#s(literal 4 binary64)","#s(literal -4 binary64)","#s(literal -3 binary64)","#s(literal 9 binary64)","#s(literal 8 binary64)","#s(literal -6 binary64)","#s(literal -5 binary64)","#s(literal 1 binary64)","#s(literal -1 binary64)","#s(literal 2 binary64)","#s(literal -2 binary64)","#s(literal 3 binary64)","#s(literal 0 binary64)","#s(literal 6 binary64)","#s(literal 5 binary64)","#s(literal 4 binary64)","#s(literal -4 binary64)","#s(literal -3 binary64)","#s(literal 9 binary64)","#s(literal 8 binary64)","#s(literal -6 binary64)","#s(literal -5 binary64)","#s(literal 1 binary64)","#s(literal -1 binary64)","#s(literal 2 binary64)","#s(literal -2 binary64)","#s(literal 3 binary64)","#s(literal 0 binary64)","#s(literal 6 binary64)","#s(literal 5 binary64)","#s(literal 4 binary64)","#s(literal -4 binary64)","#s(literal -3 binary64)","#s(literal 9 binary64)","#s(literal 8 binary64)","#s(literal -6 binary64)","#s(literal -5 binary64)","#s(literal 1 binary64)","#s(literal -1 binary64)","#s(literal 2 binary64)","#s(literal -2 binary64)","#s(literal 3 binary64)","#s(literal 0 binary64)","#s(literal 6 binary64)","#s(literal 5 binary64)","#s(literal 4 binary64)","#s(literal -4 binary64)","#s(literal -3 binary64)","#s(literal 9 binary64)","#s(literal 8 binary64)","#s(literal -6 binary64)","#s(literal -5 binary64)","#s(literal 1 binary64)","#s(literal -1 binary64)","#s(literal 2 binary64)","#s(literal -2 binary64)","#s(literal 3 binary64)","#s(literal 0 binary64)","#s(literal 6 binary64)","#s(literal 5 binary64)","#s(literal 4 binary64)","#s(literal -4 binary64)","#s(literal -3 binary64)","#s(literal 9 binary64)","#s(literal 8 binary64)","#s(literal -6 binary64)","#s(literal -5 binary64)"]],"time":325.864013671875,"type":"rewrite"},{"compiler":[[15,17]],"memory":[[-6879680,1335568]],"time":2.33203125,"type":"eval"},{"alts":[["(-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) n)) (pow.f64 x (/.f64 #s(literal 1 binary64) n)))","done",26.379112794158548,"binary64"],["(-.f64 (/.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 3 binary64) n)) (+.f64 (+.f64 (pow.f64 x (/.f64 #s(literal 2 binary64) n)) (pow.f64 (fma.f64 x x x) (/.f64 #s(literal 1 binary64) n))) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n)))) (/.f64 (pow.f64 x (/.f64 #s(literal 3 binary64) n)) (+.f64 (+.f64 (pow.f64 x (/.f64 #s(literal 2 binary64) n)) (pow.f64 (fma.f64 x x x) (/.f64 #s(literal 1 binary64) n))) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n)))))","fresh",47.110819177826635,"binary64"],["(-.f64 (/.f64 #s(literal 1 binary64) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal -1 binary64) n))) (pow.f64 x (/.f64 #s(literal 1 binary64) n)))","done",26.372546347291255,"binary64"],["(-.f64 (*.f64 (pow.f64 (fma.f64 x x #s(literal -1 binary64)) (/.f64 #s(literal 1 binary64) n)) (pow.f64 (/.f64 #s(literal -1 binary64) (-.f64 #s(literal 1 binary64) x)) (/.f64 #s(literal 1 binary64) n))) (pow.f64 x (/.f64 #s(literal 1 binary64) n)))","done",48.040867596378874,"binary64"],["(-.f64 (exp.f64 (/.f64 (log1p.f64 x) n)) (pow.f64 x (/.f64 #s(literal 1 binary64) n)))","done",23.62068660141691,"binary64"],["(*.f64 (+.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal -1 binary64) (*.f64 #s(literal -2 binary64) n))) (pow.f64 x (/.f64 #s(literal -1 binary64) (*.f64 #s(literal -2 binary64) n)))) (-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal -1 binary64) (*.f64 #s(literal -2 binary64) n))) (pow.f64 x (/.f64 #s(literal -1 binary64) (*.f64 #s(literal -2 binary64) n)))))","done",26.382971987288293,"binary64"],["(neg.f64 (/.f64 (-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 3 binary64) n)) (pow.f64 x (/.f64 #s(literal 3 binary64) n))) (neg.f64 (+.f64 (+.f64 (pow.f64 x (/.f64 #s(literal 2 binary64) n)) (pow.f64 (fma.f64 x x x) (/.f64 #s(literal 1 binary64) n))) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n))))))","fresh",47.071010483381436,"binary64"],["(neg.f64 (/.f64 (-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n)) (pow.f64 x (/.f64 #s(literal 2 binary64) n))) (neg.f64 (+.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) n)) (pow.f64 x (/.f64 #s(literal 1 binary64) n))))))","done",47.117247739693944,"binary64"],["#s(literal 9 binary64)","next",61.34505580224115,"binary64"],["#s(literal 1 binary64)","next",56.614648591765935,"binary64"],["#s(literal 0 binary64)","next",43.52246756051288,"binary64"],["#s(literal -1 binary64)","next",61.96383712690421,"binary64"],["#s(literal -6 binary64)","next",61.9862555597654,"binary64"]],"compiler":[[13,8],[59,20],[15,11],[24,13],[11,9],[35,13],[38,21],[29,16],[1,3],[1,3],[1,3],[1,3],[1,3],[59,20],[38,21],[1,3],[1,3],[1,3],[1,3],[1,3]],"count":[[23,13]],"kept":[{"done":[1,1],"fresh":[2,2],"new":[15,5],"picked":[5,5]}],"memory":[[4472576,4472576]],"min-error":[[23.27015044042459,"binary64"]],"time":8.02294921875,"type":"prune"},{"inputs":[["#s(literal 0 binary64)","#s(literal -6 binary64)","#s(literal -1 binary64)","#s(literal 1 binary64)","#s(literal 9 binary64)"]],"memory":[[-8768000,9744800]],"method":["egg-herbie"],"outputs":[["#s(literal 0 binary64)","#s(literal -6 binary64)","#s(literal -1 binary64)","#s(literal 1 binary64)","#s(literal 9 binary64)"]],"time":205.073974609375,"type":"simplify"},{"compiler":[[7,9]],"memory":[[-2974160,5216160]],"mixsample":[[0.42822265625,"ival-true",0],[1.09814453125,"exact",0],[0.18896484375,"ival-assert",0]],"outcomes":[[81.03369140625,0,"valid",256]],"time":88.322998046875,"type":"localize"},{"count":[[0,0]],"inputs":[[]],"memory":[[51584,51584]],"outputs":[[]],"series":[[0.0029296875,"()","n","-inf"],[0.0029296875,"()","n","inf"],[0.00390625,"()","n","0"],[0.00390625,"()","x","-inf"],[0.011962890625,"()","x","inf"],[0.047119140625,"()","x","0"]],"time":0.199951171875,"type":"series"},{"count":[[0,0]],"inputs":[[]],"memory":[[1075216,9241504]],"method":["egg-herbie"],"outputs":[[]],"time":149.0751953125,"type":"simplify"},{"count":[[0,0]],"inputs":[[]],"memory":[[3697872,11872736]],"outputs":[[]],"time":186.620849609375,"type":"rewrite"},{"compiler":[[0,2]],"memory":[[55872,55872]],"time":0.1669921875,"type":"eval"},{"alts":[["(-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) n)) (pow.f64 x (/.f64 #s(literal 1 binary64) n)))","done",26.379112794158548,"binary64"],["(-.f64 (/.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 3 binary64) n)) (+.f64 (+.f64 (pow.f64 x (/.f64 #s(literal 2 binary64) n)) (pow.f64 (fma.f64 x x x) (/.f64 #s(literal 1 binary64) n))) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n)))) (/.f64 (pow.f64 x (/.f64 #s(literal 3 binary64) n)) (+.f64 (+.f64 (pow.f64 x (/.f64 #s(literal 2 binary64) n)) (pow.f64 (fma.f64 x x x) (/.f64 #s(literal 1 binary64) n))) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n)))))","next",47.110819177826635,"binary64"],["(-.f64 (/.f64 #s(literal 1 binary64) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal -1 binary64) n))) (pow.f64 x (/.f64 #s(literal 1 binary64) n)))","done",26.372546347291255,"binary64"],["(-.f64 (*.f64 (pow.f64 (fma.f64 x x #s(literal -1 binary64)) (/.f64 #s(literal 1 binary64) n)) (pow.f64 (/.f64 #s(literal -1 binary64) (-.f64 #s(literal 1 binary64) x)) (/.f64 #s(literal 1 binary64) n))) (pow.f64 x (/.f64 #s(literal 1 binary64) n)))","done",48.040867596378874,"binary64"],["(-.f64 (exp.f64 (/.f64 (log1p.f64 x) n)) (pow.f64 x (/.f64 #s(literal 1 binary64) n)))","done",23.62068660141691,"binary64"],["(*.f64 (+.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal -1 binary64) (*.f64 #s(literal -2 binary64) n))) (pow.f64 x (/.f64 #s(literal -1 binary64) (*.f64 #s(literal -2 binary64) n)))) (-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal -1 binary64) (*.f64 #s(literal -2 binary64) n))) (pow.f64 x (/.f64 #s(literal -1 binary64) (*.f64 #s(literal -2 binary64) n)))))","done",26.382971987288293,"binary64"],["(neg.f64 (/.f64 (-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 3 binary64) n)) (pow.f64 x (/.f64 #s(literal 3 binary64) n))) (neg.f64 (+.f64 (+.f64 (pow.f64 x (/.f64 #s(literal 2 binary64) n)) (pow.f64 (fma.f64 x x x) (/.f64 #s(literal 1 binary64) n))) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n))))))","next",47.071010483381436,"binary64"],["(neg.f64 (/.f64 (-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n)) (pow.f64 x (/.f64 #s(literal 2 binary64) n))) (neg.f64 (+.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) n)) (pow.f64 x (/.f64 #s(literal 1 binary64) n))))))","done",47.117247739693944,"binary64"],["#s(literal 9 binary64)","done",61.34505580224115,"binary64"],["#s(literal 1 binary64)","done",56.614648591765935,"binary64"],["#s(literal 0 binary64)","done",43.52246756051288,"binary64"],["#s(literal -1 binary64)","done",61.96383712690421,"binary64"],["#s(literal -6 binary64)","done",61.9862555597654,"binary64"]],"compiler":[[13,8],[59,20],[15,11],[24,13],[11,9],[35,13],[38,21],[29,16],[1,3],[1,3],[1,3],[1,3],[1,3]],"count":[[13,13]],"kept":[{"done":[6,6],"fresh":[2,2],"new":[0,0],"picked":[5,5]}],"memory":[[-6533488,2642512]],"min-error":[[23.27015044042459,"binary64"]],"time":6.876953125,"type":"prune"},{"inputs":[["(neg.f64 (/.f64 (-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 3 binary64) n)) (pow.f64 x (/.f64 #s(literal 3 binary64) n))) (neg.f64 (+.f64 (+.f64 (pow.f64 x (/.f64 #s(literal 2 binary64) n)) (pow.f64 (fma.f64 x x x) (/.f64 #s(literal 1 binary64) n))) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n))))))","(/.f64 (-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 3 binary64) n)) (pow.f64 x (/.f64 #s(literal 3 binary64) n))) (neg.f64 (+.f64 (+.f64 (pow.f64 x (/.f64 #s(literal 2 binary64) n)) (pow.f64 (fma.f64 x x x) (/.f64 #s(literal 1 binary64) n))) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n)))))","(-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 3 binary64) n)) (pow.f64 x (/.f64 #s(literal 3 binary64) n)))","(pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 3 binary64) n))","(+.f64 x #s(literal 1 binary64))","x","#s(literal 1 binary64)","(/.f64 #s(literal 3 binary64) n)","#s(literal 3 binary64)","n","(pow.f64 x (/.f64 #s(literal 3 binary64) n))","(neg.f64 (+.f64 (+.f64 (pow.f64 x (/.f64 #s(literal 2 binary64) n)) (pow.f64 (fma.f64 x x x) (/.f64 #s(literal 1 binary64) n))) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n))))","(+.f64 (+.f64 (pow.f64 x (/.f64 #s(literal 2 binary64) n)) (pow.f64 (fma.f64 x x x) (/.f64 #s(literal 1 binary64) n))) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n)))","(+.f64 (pow.f64 x (/.f64 #s(literal 2 binary64) n)) (pow.f64 (fma.f64 x x x) (/.f64 #s(literal 1 binary64) n)))","(pow.f64 x (/.f64 #s(literal 2 binary64) n))","(/.f64 #s(literal 2 binary64) n)","#s(literal 2 binary64)","(pow.f64 (fma.f64 x x x) (/.f64 #s(literal 1 binary64) n))","(fma.f64 x x x)","(/.f64 #s(literal 1 binary64) n)","(pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n))","(-.f64 (/.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 3 binary64) n)) (+.f64 (+.f64 (pow.f64 x (/.f64 #s(literal 2 binary64) n)) (pow.f64 (fma.f64 x x x) (/.f64 #s(literal 1 binary64) n))) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n)))) (/.f64 (pow.f64 x (/.f64 #s(literal 3 binary64) n)) (+.f64 (+.f64 (pow.f64 x (/.f64 #s(literal 2 binary64) n)) (pow.f64 (fma.f64 x x x) (/.f64 #s(literal 1 binary64) n))) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n)))))","(/.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 3 binary64) n)) (+.f64 (+.f64 (pow.f64 x (/.f64 #s(literal 2 binary64) n)) (pow.f64 (fma.f64 x x x) (/.f64 #s(literal 1 binary64) n))) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n))))","(pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 3 binary64) n))","(+.f64 x #s(literal 1 binary64))","x","#s(literal 1 binary64)","(/.f64 #s(literal 3 binary64) n)","#s(literal 3 binary64)","n","(+.f64 (+.f64 (pow.f64 x (/.f64 #s(literal 2 binary64) n)) (pow.f64 (fma.f64 x x x) (/.f64 #s(literal 1 binary64) n))) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n)))","(+.f64 (pow.f64 x (/.f64 #s(literal 2 binary64) n)) (pow.f64 (fma.f64 x x x) (/.f64 #s(literal 1 binary64) n)))","(pow.f64 x (/.f64 #s(literal 2 binary64) n))","(/.f64 #s(literal 2 binary64) n)","#s(literal 2 binary64)","(pow.f64 (fma.f64 x x x) (/.f64 #s(literal 1 binary64) n))","(fma.f64 x x x)","(/.f64 #s(literal 1 binary64) n)","(pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n))","(/.f64 (pow.f64 x (/.f64 #s(literal 3 binary64) n)) (+.f64 (+.f64 (pow.f64 x (/.f64 #s(literal 2 binary64) n)) (pow.f64 (fma.f64 x x x) (/.f64 #s(literal 1 binary64) n))) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n))))","(pow.f64 x (/.f64 #s(literal 3 binary64) n))"]],"locations":[["(+.f64 x #s(literal 1 binary64))","cost-diff",0],["(pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 3 binary64) n))","cost-diff",0],["(/.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 3 binary64) n)) (+.f64 (+.f64 (pow.f64 x (/.f64 #s(literal 2 binary64) n)) (pow.f64 (fma.f64 x x x) (/.f64 #s(literal 1 binary64) n))) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n))))","cost-diff",0],["(-.f64 (/.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 3 binary64) n)) (+.f64 (+.f64 (pow.f64 x (/.f64 #s(literal 2 binary64) n)) (pow.f64 (fma.f64 x x x) (/.f64 #s(literal 1 binary64) n))) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n)))) (/.f64 (pow.f64 x (/.f64 #s(literal 3 binary64) n)) (+.f64 (+.f64 (pow.f64 x (/.f64 #s(literal 2 binary64) n)) (pow.f64 (fma.f64 x x x) (/.f64 #s(literal 1 binary64) n))) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n)))))","cost-diff",23],["(pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 3 binary64) n))","cost-diff",0],["(-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 3 binary64) n)) (pow.f64 x (/.f64 #s(literal 3 binary64) n)))","cost-diff",0],["(/.f64 (-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 3 binary64) n)) (pow.f64 x (/.f64 #s(literal 3 binary64) n))) (neg.f64 (+.f64 (+.f64 (pow.f64 x (/.f64 #s(literal 2 binary64) n)) (pow.f64 (fma.f64 x x x) (/.f64 #s(literal 1 binary64) n))) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n)))))","cost-diff",1],["(neg.f64 (/.f64 (-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 3 binary64) n)) (pow.f64 x (/.f64 #s(literal 3 binary64) n))) (neg.f64 (+.f64 (+.f64 (pow.f64 x (/.f64 #s(literal 2 binary64) n)) (pow.f64 (fma.f64 x x x) (/.f64 #s(literal 1 binary64) n))) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n))))))","cost-diff",1]],"memory":[[5650064,13878496]],"method":["egg-herbie"],"outputs":[["(neg.f64 (/.f64 (-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 3 binary64) n)) (pow.f64 x (/.f64 #s(literal 3 binary64) n))) (neg.f64 (+.f64 (+.f64 (pow.f64 x (/.f64 #s(literal 2 binary64) n)) (pow.f64 (fma.f64 x x x) (/.f64 #s(literal 1 binary64) n))) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n))))))","(/.f64 (-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 3 binary64) n)) (pow.f64 x (/.f64 #s(literal 3 binary64) n))) (+.f64 (+.f64 (pow.f64 x (/.f64 #s(literal 2 binary64) n)) (pow.f64 (fma.f64 x x x) (/.f64 #s(literal 1 binary64) n))) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n))))","(/.f64 (-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 3 binary64) n)) (pow.f64 x (/.f64 #s(literal 3 binary64) n))) (neg.f64 (+.f64 (+.f64 (pow.f64 x (/.f64 #s(literal 2 binary64) n)) (pow.f64 (fma.f64 x x x) (/.f64 #s(literal 1 binary64) n))) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n)))))","(/.f64 (-.f64 (pow.f64 x (/.f64 #s(literal 3 binary64) n)) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 3 binary64) n))) (+.f64 (+.f64 (pow.f64 x (/.f64 #s(literal 2 binary64) n)) (pow.f64 (fma.f64 x x x) (/.f64 #s(literal 1 binary64) n))) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n))))","(-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 3 binary64) n)) (pow.f64 x (/.f64 #s(literal 3 binary64) n)))","(pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 3 binary64) n))","(+.f64 x #s(literal 1 binary64))","x","#s(literal 1 binary64)","(/.f64 #s(literal 3 binary64) n)","#s(literal 3 binary64)","n","(pow.f64 x (/.f64 #s(literal 3 binary64) n))","(neg.f64 (+.f64 (+.f64 (pow.f64 x (/.f64 #s(literal 2 binary64) n)) (pow.f64 (fma.f64 x x x) (/.f64 #s(literal 1 binary64) n))) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n))))","(-.f64 (neg.f64 (pow.f64 (fma.f64 x x x) (/.f64 #s(literal 1 binary64) n))) (+.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n)) (pow.f64 x (/.f64 #s(literal 2 binary64) n))))","(+.f64 (+.f64 (pow.f64 x (/.f64 #s(literal 2 binary64) n)) (pow.f64 (fma.f64 x x x) (/.f64 #s(literal 1 binary64) n))) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n)))","(+.f64 (pow.f64 x (/.f64 #s(literal 2 binary64) n)) (pow.f64 (fma.f64 x x x) (/.f64 #s(literal 1 binary64) n)))","(pow.f64 x (/.f64 #s(literal 2 binary64) n))","(/.f64 #s(literal 2 binary64) n)","#s(literal 2 binary64)","(pow.f64 (fma.f64 x x x) (/.f64 #s(literal 1 binary64) n))","(fma.f64 x x x)","(/.f64 #s(literal 1 binary64) n)","(pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n))","(-.f64 (/.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 3 binary64) n)) (+.f64 (+.f64 (pow.f64 x (/.f64 #s(literal 2 binary64) n)) (pow.f64 (fma.f64 x x x) (/.f64 #s(literal 1 binary64) n))) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n)))) (/.f64 (pow.f64 x (/.f64 #s(literal 3 binary64) n)) (+.f64 (+.f64 (pow.f64 x (/.f64 #s(literal 2 binary64) n)) (pow.f64 (fma.f64 x x x) (/.f64 #s(literal 1 binary64) n))) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n)))))","(/.f64 (-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 3 binary64) n)) (pow.f64 x (/.f64 #s(literal 3 binary64) n))) (+.f64 (+.f64 (pow.f64 x (/.f64 #s(literal 2 binary64) n)) (pow.f64 (fma.f64 x x x) (/.f64 #s(literal 1 binary64) n))) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n))))","(/.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 3 binary64) n)) (+.f64 (+.f64 (pow.f64 x (/.f64 #s(literal 2 binary64) n)) (pow.f64 (fma.f64 x x x) (/.f64 #s(literal 1 binary64) n))) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n))))","(pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 3 binary64) n))","(+.f64 x #s(literal 1 binary64))","x","#s(literal 1 binary64)","(/.f64 #s(literal 3 binary64) n)","#s(literal 3 binary64)","n","(+.f64 (+.f64 (pow.f64 x (/.f64 #s(literal 2 binary64) n)) (pow.f64 (fma.f64 x x x) (/.f64 #s(literal 1 binary64) n))) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n)))","(+.f64 (pow.f64 x (/.f64 #s(literal 2 binary64) n)) (pow.f64 (fma.f64 x x x) (/.f64 #s(literal 1 binary64) n)))","(pow.f64 x (/.f64 #s(literal 2 binary64) n))","(/.f64 #s(literal 2 binary64) n)","#s(literal 2 binary64)","(pow.f64 (fma.f64 x x x) (/.f64 #s(literal 1 binary64) n))","(fma.f64 x x x)","(/.f64 #s(literal 1 binary64) n)","(pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n))","(/.f64 (pow.f64 x (/.f64 #s(literal 3 binary64) n)) (+.f64 (+.f64 (pow.f64 x (/.f64 #s(literal 2 binary64) n)) (pow.f64 (fma.f64 x x x) (/.f64 #s(literal 1 binary64) n))) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n))))","(pow.f64 x (/.f64 #s(literal 3 binary64) n))"]],"time":327.192138671875,"type":"simplify"},{"compiler":[[423,27]],"locations":[["(+.f64 (+.f64 (pow.f64 x (/.f64 #s(literal 2 binary64) n)) (pow.f64 (fma.f64 x x x) (/.f64 #s(literal 1 binary64) n))) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n)))","accuracy",0.00390625],["(/.f64 (pow.f64 x (/.f64 #s(literal 3 binary64) n)) (+.f64 (+.f64 (pow.f64 x (/.f64 #s(literal 2 binary64) n)) (pow.f64 (fma.f64 x x x) (/.f64 #s(literal 1 binary64) n))) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n))))","accuracy",0.40625000000000006],["(pow.f64 (fma.f64 x x x) (/.f64 #s(literal 1 binary64) n))","accuracy",9.203031395725276],["(-.f64 (/.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 3 binary64) n)) (+.f64 (+.f64 (pow.f64 x (/.f64 #s(literal 2 binary64) n)) (pow.f64 (fma.f64 x x x) (/.f64 #s(literal 1 binary64) n))) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n)))) (/.f64 (pow.f64 x (/.f64 #s(literal 3 binary64) n)) (+.f64 (+.f64 (pow.f64 x (/.f64 #s(literal 2 binary64) n)) (pow.f64 (fma.f64 x x x) (/.f64 #s(literal 1 binary64) n))) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n)))))","accuracy",23.60369260442944],["(+.f64 (+.f64 (pow.f64 x (/.f64 #s(literal 2 binary64) n)) (pow.f64 (fma.f64 x x x) (/.f64 #s(literal 1 binary64) n))) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n)))","accuracy",0.00390625],["(/.f64 (-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 3 binary64) n)) (pow.f64 x (/.f64 #s(literal 3 binary64) n))) (neg.f64 (+.f64 (+.f64 (pow.f64 x (/.f64 #s(literal 2 binary64) n)) (pow.f64 (fma.f64 x x x) (/.f64 #s(literal 1 binary64) n))) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n)))))","accuracy",0.53125],["(pow.f64 (fma.f64 x x x) (/.f64 #s(literal 1 binary64) n))","accuracy",9.203031395725276],["(-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 3 binary64) n)) (pow.f64 x (/.f64 #s(literal 3 binary64) n)))","accuracy",23.5965918538331]],"memory":[[-3427408,44819904]],"mixsample":[[0.4248046875,"ival-add",1200],[13.064697265625,"ival-div",0],[12.836181640625,"adjust",800],[3.050537109375,"ival-div",400],[58.39404296875,"ival-pow",1600],[0.15771484375,"ival-assert",0],[2.310302734375,"ival-div",1600],[5.18359375,"ival-sub",0],[0.056640625,"ival-div",3200],[32.415283203125,"ival-pow",0],[0.068115234375,"ival-div",2800],[6.189697265625,"adjust",2000],[0.846435546875,"ival-div",1200],[6.2080078125,"ival-add",0],[1.97314453125,"ival-mult",0],[1.040771484375,"ival-add",1600],[1.330810546875,"ival-div",800],[2.78857421875,"ival-add",400],[0.02001953125,"ival-div",3600],[0.375244140625,"ival-true",0],[0.34228515625,"ival-div",2000],[35.546875,"ival-pow",400],[0.62353515625,"ival-add",800],[0.586669921875,"exact",0],[0.27734375,"ival-div",2400],[4.75,"ival-neg",0]],"outcomes":[[49.23486328125,1,"valid",56],[138.082763671875,2,"valid",80],[27.012939453125,0,"exit",82],[11.138916015625,1,"exit",29],[3.574951171875,0,"valid",9]],"time":267.694091796875,"type":"localize"},{"count":[[10,178]],"inputs":[["(neg.f64 (/.f64 (-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 3 binary64) n)) (pow.f64 x (/.f64 #s(literal 3 binary64) n))) (neg.f64 (+.f64 (+.f64 (pow.f64 x (/.f64 #s(literal 2 binary64) n)) (pow.f64 (fma.f64 x x x) (/.f64 #s(literal 1 binary64) n))) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n))))))","(/.f64 (-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 3 binary64) n)) (pow.f64 x (/.f64 #s(literal 3 binary64) n))) (neg.f64 (+.f64 (+.f64 (pow.f64 x (/.f64 #s(literal 2 binary64) n)) (pow.f64 (fma.f64 x x x) (/.f64 #s(literal 1 binary64) n))) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n)))))","(-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 3 binary64) n)) (pow.f64 x (/.f64 #s(literal 3 binary64) n)))","(pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 3 binary64) n))","(-.f64 (/.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 3 binary64) n)) (+.f64 (+.f64 (pow.f64 x (/.f64 #s(literal 2 binary64) n)) (pow.f64 (fma.f64 x x x) (/.f64 #s(literal 1 binary64) n))) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n)))) (/.f64 (pow.f64 x (/.f64 #s(literal 3 binary64) n)) (+.f64 (+.f64 (pow.f64 x (/.f64 #s(literal 2 binary64) n)) (pow.f64 (fma.f64 x x x) (/.f64 #s(literal 1 binary64) n))) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n)))))","(/.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 3 binary64) n)) (+.f64 (+.f64 (pow.f64 x (/.f64 #s(literal 2 binary64) n)) (pow.f64 (fma.f64 x x x) (/.f64 #s(literal 1 binary64) n))) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n))))","(+.f64 x #s(literal 1 binary64))","(pow.f64 (fma.f64 x x x) (/.f64 #s(literal 1 binary64) n))","(+.f64 (+.f64 (pow.f64 x (/.f64 #s(literal 2 binary64) n)) (pow.f64 (fma.f64 x x x) (/.f64 #s(literal 1 binary64) n))) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n)))","(/.f64 (pow.f64 x (/.f64 #s(literal 3 binary64) n)) (+.f64 (+.f64 (pow.f64 x (/.f64 #s(literal 2 binary64) n)) (pow.f64 (fma.f64 x x x) (/.f64 #s(literal 1 binary64) n))) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n))))"]],"memory":[[1921008,34044848]],"outputs":[["(/ (- 1 (exp (* 3 (/ (log x) n)))) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))))","(- (* x (- (* 3 (/ 1 (* n (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (/ (* (+ (* 2 (/ 1 n)) (/ (exp (/ (log x) n)) n)) (- 1 (exp (* 3 (/ (log x) n))))) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))) (* -1 (/ (- 1 (exp (* 3 (/ (log x) n)))) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))))))","(- (* x (- (* x (- (* 9/2 (/ 1 (* (pow n 2) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (+ (* 3/2 (/ 1 (* n (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (+ (/ (* (+ (* 2 (/ 1 n)) (/ (exp (/ (log x) n)) n)) (- (* 3 (/ 1 (* n (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (/ (* (+ (* 2 (/ 1 n)) (/ (exp (/ (log x) n)) n)) (- 1 (exp (* 3 (/ (log x) n))))) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))) (/ (* (- 1 (exp (* 3 (/ (log x) n)))) (- (+ (* 2 (/ 1 (pow n 2))) (* (exp (/ (log x) n)) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n))))) (/ 1 n))) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))))) (* -1 (- (* 3 (/ 1 (* n (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (/ (* (+ (* 2 (/ 1 n)) (/ (exp (/ (log x) n)) n)) (- 1 (exp (* 3 (/ (log x) n))))) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))))) (* -1 (/ (- 1 (exp (* 3 (/ (log x) n)))) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))))))","(- (* x (- (* x (- (* x (- (+ (* 9/2 (/ 1 (* (pow n 3) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (/ 1 (* n (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (+ (* 9/2 (/ 1 (* (pow n 2) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (+ (/ (* (+ (* 2 (/ 1 n)) (/ (exp (/ (log x) n)) n)) (- (* 9/2 (/ 1 (* (pow n 2) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (+ (* 3/2 (/ 1 (* n (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (+ (/ (* (+ (* 2 (/ 1 n)) (/ (exp (/ (log x) n)) n)) (- (* 3 (/ 1 (* n (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (/ (* (+ (* 2 (/ 1 n)) (/ (exp (/ (log x) n)) n)) (- 1 (exp (* 3 (/ (log x) n))))) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))) (/ (* (- 1 (exp (* 3 (/ (log x) n)))) (- (+ (* 2 (/ 1 (pow n 2))) (* (exp (/ (log x) n)) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n))))) (/ 1 n))) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))))) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))) (+ (/ (* (- 1 (exp (* 3 (/ (log x) n)))) (- (+ (* 2/3 (/ 1 n)) (+ (* 4/3 (/ 1 (pow n 3))) (* (exp (/ (log x) n)) (- (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))) (* 1/2 (/ 1 (pow n 2))))))) (* 2 (/ 1 (pow n 2))))) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)) (/ (* (- (* 3 (/ 1 (* n (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (/ (* (+ (* 2 (/ 1 n)) (/ (exp (/ (log x) n)) n)) (- 1 (exp (* 3 (/ (log x) n))))) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2))) (- (+ (* 2 (/ 1 (pow n 2))) (* (exp (/ (log x) n)) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n))))) (/ 1 n))) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))))))))) (* -1 (- (* 9/2 (/ 1 (* (pow n 2) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (+ (* 3/2 (/ 1 (* n (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (+ (/ (* (+ (* 2 (/ 1 n)) (/ (exp (/ (log x) n)) n)) (- (* 3 (/ 1 (* n (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (/ (* (+ (* 2 (/ 1 n)) (/ (exp (/ (log x) n)) n)) (- 1 (exp (* 3 (/ (log x) n))))) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))) (/ (* (- 1 (exp (* 3 (/ (log x) n)))) (- (+ (* 2 (/ 1 (pow n 2))) (* (exp (/ (log x) n)) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n))))) (/ 1 n))) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))))))) (* -1 (- (* 3 (/ 1 (* n (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (/ (* (+ (* 2 (/ 1 n)) (/ (exp (/ (log x) n)) n)) (- 1 (exp (* 3 (/ (log x) n))))) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))))) (* -1 (/ (- 1 (exp (* 3 (/ (log x) n)))) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))))))","(* -1 (/ (- 1 (exp (* 3 (/ (log x) n)))) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))","(+ (* -1 (* x (- (* 3 (/ 1 (* n (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (/ (* (+ (* 2 (/ 1 n)) (/ (exp (/ (log x) n)) n)) (- 1 (exp (* 3 (/ (log x) n))))) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2))))) (* -1 (/ (- 1 (exp (* 3 (/ (log x) n)))) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))))))","(+ (* -1 (/ (- 1 (exp (* 3 (/ (log x) n)))) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))))) (* x (+ (* -1 (* x (- (* 9/2 (/ 1 (* (pow n 2) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (+ (* 3/2 (/ 1 (* n (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (+ (/ (* (+ (* 2 (/ 1 n)) (/ (exp (/ (log x) n)) n)) (- (* 3 (/ 1 (* n (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (/ (* (+ (* 2 (/ 1 n)) (/ (exp (/ (log x) n)) n)) (- 1 (exp (* 3 (/ (log x) n))))) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))) (/ (* (- 1 (exp (* 3 (/ (log x) n)))) (- (+ (* 2 (/ 1 (pow n 2))) (* (exp (/ (log x) n)) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n))))) (/ 1 n))) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2))))))) (* -1 (- (* 3 (/ 1 (* n (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (/ (* (+ (* 2 (/ 1 n)) (/ (exp (/ (log x) n)) n)) (- 1 (exp (* 3 (/ (log x) n))))) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))))))","(+ (* -1 (/ (- 1 (exp (* 3 (/ (log x) n)))) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))))) (* x (+ (* -1 (- (* 3 (/ 1 (* n (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (/ (* (+ (* 2 (/ 1 n)) (/ (exp (/ (log x) n)) n)) (- 1 (exp (* 3 (/ (log x) n))))) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))) (* x (+ (* -1 (* x (- (+ (* 9/2 (/ 1 (* (pow n 3) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (/ 1 (* n (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (+ (* 9/2 (/ 1 (* (pow n 2) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (+ (/ (* (+ (* 2 (/ 1 n)) (/ (exp (/ (log x) n)) n)) (- (* 9/2 (/ 1 (* (pow n 2) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (+ (* 3/2 (/ 1 (* n (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (+ (/ (* (+ (* 2 (/ 1 n)) (/ (exp (/ (log x) n)) n)) (- (* 3 (/ 1 (* n (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (/ (* (+ (* 2 (/ 1 n)) (/ (exp (/ (log x) n)) n)) (- 1 (exp (* 3 (/ (log x) n))))) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))) (/ (* (- 1 (exp (* 3 (/ (log x) n)))) (- (+ (* 2 (/ 1 (pow n 2))) (* (exp (/ (log x) n)) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n))))) (/ 1 n))) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))))) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))) (+ (/ (* (- 1 (exp (* 3 (/ (log x) n)))) (- (+ (* 2/3 (/ 1 n)) (+ (* 4/3 (/ 1 (pow n 3))) (* (exp (/ (log x) n)) (- (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))) (* 1/2 (/ 1 (pow n 2))))))) (* 2 (/ 1 (pow n 2))))) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)) (/ (* (- (* 3 (/ 1 (* n (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (/ (* (+ (* 2 (/ 1 n)) (/ (exp (/ (log x) n)) n)) (- 1 (exp (* 3 (/ (log x) n))))) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2))) (- (+ (* 2 (/ 1 (pow n 2))) (* (exp (/ (log x) n)) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n))))) (/ 1 n))) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))))))) (* -1 (- (* 9/2 (/ 1 (* (pow n 2) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (+ (* 3/2 (/ 1 (* n (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (+ (/ (* (+ (* 2 (/ 1 n)) (/ (exp (/ (log x) n)) n)) (- (* 3 (/ 1 (* n (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (/ (* (+ (* 2 (/ 1 n)) (/ (exp (/ (log x) n)) n)) (- 1 (exp (* 3 (/ (log x) n))))) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))) (/ (* (- 1 (exp (* 3 (/ (log x) n)))) (- (+ (* 2 (/ 1 (pow n 2))) (* (exp (/ (log x) n)) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n))))) (/ 1 n))) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))))))))))","(- 1 (exp (* 3 (/ (log x) n))))","(- (+ 1 (* 3 (/ x n))) (exp (* 3 (/ (log x) n))))","(- (+ 1 (* x (+ (* x (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (* 3 (/ 1 n))))) (exp (* 3 (/ (log x) n))))","(- (+ 1 (* x (+ (* x (- (+ (* 9/2 (/ 1 (pow n 2))) (* x (- (+ (* 9/2 (/ 1 (pow n 3))) (/ 1 n)) (* 9/2 (/ 1 (pow n 2)))))) (* 3/2 (/ 1 n)))) (* 3 (/ 1 n))))) (exp (* 3 (/ (log x) n))))","1","(+ 1 (* 3 (/ x n)))","(+ 1 (* x (+ (* x (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (* 3 (/ 1 n)))))","(+ 1 (* x (+ (* x (- (+ (* 9/2 (/ 1 (pow n 2))) (* x (- (+ (* 9/2 (/ 1 (pow n 3))) (/ 1 n)) (* 9/2 (/ 1 (pow n 2)))))) (* 3/2 (/ 1 n)))) (* 3 (/ 1 n)))))","(- (/ 1 (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))) (/ (exp (* 3 (/ (log x) n))) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))","(- (+ (* x (- (+ (* 3 (/ 1 (* n (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (/ (* (exp (* 3 (/ (log x) n))) (+ (* 2 (/ 1 n)) (/ (exp (/ (log x) n)) n))) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2))) (+ (* 2 (/ 1 (* n (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))) (/ (exp (/ (log x) n)) (* n (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))))) (/ 1 (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))))) (/ (exp (* 3 (/ (log x) n))) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))","(- (+ (* x (- (+ (* 3 (/ 1 (* n (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (+ (* x (- (+ (* -1 (/ (* (exp (* 3 (/ (log x) n))) (pow (+ (* 2 (/ 1 n)) (/ (exp (/ (log x) n)) n)) 2)) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 3))) (+ (* 9/2 (/ 1 (* (pow n 2) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (+ (/ 1 (* n (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2))) (/ (* (exp (* 3 (/ (log x) n))) (- (+ (* 2 (/ 1 (pow n 2))) (* (exp (/ (log x) n)) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n))))) (/ 1 n))) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2))))) (+ (* 3/2 (/ 1 (* n (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (+ (* 2 (/ 1 (* (pow n 2) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))) (+ (/ (* (exp (/ (log x) n)) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)) (/ (* (+ (* 2 (/ 1 n)) (/ (exp (/ (log x) n)) n)) (- (* 3 (/ 1 (* n (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (+ (* 2 (/ 1 (* n (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))) (/ (exp (/ (log x) n)) (* n (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))))) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))))))))) (/ (* (exp (* 3 (/ (log x) n))) (+ (* 2 (/ 1 n)) (/ (exp (/ (log x) n)) n))) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))) (+ (* 2 (/ 1 (* n (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))) (/ (exp (/ (log x) n)) (* n (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))))) (/ 1 (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))))) (/ (exp (* 3 (/ (log x) n))) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))","(- (+ (* x (- (+ (* 3 (/ 1 (* n (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (+ (* x (- (+ (* -1 (/ (* (exp (* 3 (/ (log x) n))) (pow (+ (* 2 (/ 1 n)) (/ (exp (/ (log x) n)) n)) 2)) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 3))) (+ (* 9/2 (/ 1 (* (pow n 2) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (+ (* x (- (+ (* -1 (/ (* (exp (* 3 (/ (log x) n))) (* (+ (* 2 (/ 1 n)) (/ (exp (/ (log x) n)) n)) (- (+ (* 2 (/ 1 (pow n 2))) (* (exp (/ (log x) n)) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n))))) (/ 1 n)))) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 3))) (+ (* -1 (/ (* (+ (* -1 (/ (* (exp (* 3 (/ (log x) n))) (pow (+ (* 2 (/ 1 n)) (/ (exp (/ (log x) n)) n)) 2)) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 3))) (/ (* (exp (* 3 (/ (log x) n))) (- (+ (* 2 (/ 1 (pow n 2))) (* (exp (/ (log x) n)) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n))))) (/ 1 n))) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2))) (+ (* 2 (/ 1 n)) (/ (exp (/ (log x) n)) n))) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))))) (+ (* 2 (/ 1 (* (pow n 2) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))) (+ (* 9/2 (/ 1 (* (pow n 3) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (+ (/ 1 (* n (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))))) (/ (* (exp (* 3 (/ (log x) n))) (- (+ (* 2/3 (/ 1 n)) (+ (* 4/3 (/ 1 (pow n 3))) (* (exp (/ (log x) n)) (- (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))) (* 1/2 (/ 1 (pow n 2))))))) (* 2 (/ 1 (pow n 2))))) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2))))))) (+ (* 2/3 (/ 1 (* n (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))) (+ (* 4/3 (/ 1 (* (pow n 3) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))) (+ (* 9/2 (/ 1 (* (pow n 2) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (+ (/ (* (exp (/ (log x) n)) (- (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))) (* 1/2 (/ 1 (pow n 2))))) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)) (+ (/ (* (+ (* 2 (/ 1 n)) (/ (exp (/ (log x) n)) n)) (- (+ (* 9/2 (/ 1 (* (pow n 2) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (/ 1 (* n (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))) (+ (* 3/2 (/ 1 (* n (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (+ (* 2 (/ 1 (* (pow n 2) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))) (+ (/ (* (exp (/ (log x) n)) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)) (/ (* (+ (* 2 (/ 1 n)) (/ (exp (/ (log x) n)) n)) (- (* 3 (/ 1 (* n (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (+ (* 2 (/ 1 (* n (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))) (/ (exp (/ (log x) n)) (* n (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))))) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))))))))) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))) (/ (* (- (* 3 (/ 1 (* n (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (+ (* 2 (/ 1 (* n (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))) (/ (exp (/ (log x) n)) (* n (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2))))) (- (+ (* 2 (/ 1 (pow n 2))) (* (exp (/ (log x) n)) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n))))) (/ 1 n))) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))))))))))) (+ (/ 1 (* n (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2))) (/ (* (exp (* 3 (/ (log x) n))) (- (+ (* 2 (/ 1 (pow n 2))) (* (exp (/ (log x) n)) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n))))) (/ 1 n))) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))))) (+ (* 3/2 (/ 1 (* n (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (+ (* 2 (/ 1 (* (pow n 2) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))) (+ (/ (* (exp (/ (log x) n)) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)) (/ (* (+ (* 2 (/ 1 n)) (/ (exp (/ (log x) n)) n)) (- (* 3 (/ 1 (* n (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (+ (* 2 (/ 1 (* n (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))) (/ (exp (/ (log x) n)) (* n (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))))) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))))))))) (/ (* (exp (* 3 (/ (log x) n))) (+ (* 2 (/ 1 n)) (/ (exp (/ (log x) n)) n))) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))) (+ (* 2 (/ 1 (* n (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))) (/ (exp (/ (log x) n)) (* n (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))))) (/ 1 (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))))) (/ (exp (* 3 (/ (log x) n))) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))","(/ 1 (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))))","(+ (* x (- (* 3 (/ 1 (* n (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (+ (* 2 (/ 1 (* n (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))) (/ (exp (/ (log x) n)) (* n (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))))) (/ 1 (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))","(+ (* x (- (+ (* 3 (/ 1 (* n (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (* x (- (+ (* 9/2 (/ 1 (* (pow n 2) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (/ 1 (* n (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))) (+ (* 3/2 (/ 1 (* n (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (+ (* 2 (/ 1 (* (pow n 2) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))) (+ (/ (* (exp (/ (log x) n)) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)) (/ (* (+ (* 2 (/ 1 n)) (/ (exp (/ (log x) n)) n)) (- (* 3 (/ 1 (* n (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (+ (* 2 (/ 1 (* n (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))) (/ (exp (/ (log x) n)) (* n (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))))) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))))))) (+ (* 2 (/ 1 (* n (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))) (/ (exp (/ (log x) n)) (* n (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))))) (/ 1 (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))","(+ (* x (- (+ (* 3 (/ 1 (* n (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (* x (- (+ (* 9/2 (/ 1 (* (pow n 2) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (+ (* x (- (+ (* 2 (/ 1 (* (pow n 2) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))) (+ (* 9/2 (/ 1 (* (pow n 3) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (/ 1 (* n (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))))))) (+ (* 2/3 (/ 1 (* n (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))) (+ (* 4/3 (/ 1 (* (pow n 3) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))) (+ (* 9/2 (/ 1 (* (pow n 2) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (+ (/ (* (exp (/ (log x) n)) (- (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))) (* 1/2 (/ 1 (pow n 2))))) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)) (+ (/ (* (+ (* 2 (/ 1 n)) (/ (exp (/ (log x) n)) n)) (- (+ (* 9/2 (/ 1 (* (pow n 2) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (/ 1 (* n (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))) (+ (* 3/2 (/ 1 (* n (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (+ (* 2 (/ 1 (* (pow n 2) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))) (+ (/ (* (exp (/ (log x) n)) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)) (/ (* (+ (* 2 (/ 1 n)) (/ (exp (/ (log x) n)) n)) (- (* 3 (/ 1 (* n (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (+ (* 2 (/ 1 (* n (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))) (/ (exp (/ (log x) n)) (* n (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))))) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))))))))) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))) (/ (* (- (* 3 (/ 1 (* n (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (+ (* 2 (/ 1 (* n (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))) (/ (exp (/ (log x) n)) (* n (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2))))) (- (+ (* 2 (/ 1 (pow n 2))) (* (exp (/ (log x) n)) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n))))) (/ 1 n))) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))))))))))) (/ 1 (* n (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2))))) (+ (* 3/2 (/ 1 (* n (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (+ (* 2 (/ 1 (* (pow n 2) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))) (+ (/ (* (exp (/ (log x) n)) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)) (/ (* (+ (* 2 (/ 1 n)) (/ (exp (/ (log x) n)) n)) (- (* 3 (/ 1 (* n (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (+ (* 2 (/ 1 (* n (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))) (/ (exp (/ (log x) n)) (* n (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))))) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))))))) (+ (* 2 (/ 1 (* n (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))) (/ (exp (/ (log x) n)) (* n (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))))) (/ 1 (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))","(+ 1 x)","(exp (/ (log x) n))","(+ (exp (/ (log x) n)) (/ (* x (exp (/ (log x) n))) n))","(+ (exp (/ (log x) n)) (* x (+ (* x (* (exp (/ (log x) n)) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n))))) (/ (exp (/ (log x) n)) n))))","(+ (exp (/ (log x) n)) (* x (+ (* x (+ (* x (* (exp (/ (log x) n)) (- (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))) (* 1/2 (/ 1 (pow n 2)))))) (* (exp (/ (log x) n)) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))))) (/ (exp (/ (log x) n)) n))))","(+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))","(+ 1 (+ (exp (* 2 (/ (log x) n))) (+ (exp (/ (log x) n)) (* x (+ (* 2 (/ 1 n)) (/ (exp (/ (log x) n)) n))))))","(+ 1 (+ (exp (* 2 (/ (log x) n))) (+ (exp (/ (log x) n)) (* x (+ (* 2 (/ 1 n)) (+ (* x (- (+ (* 2 (/ 1 (pow n 2))) (* (exp (/ (log x) n)) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n))))) (/ 1 n))) (/ (exp (/ (log x) n)) n)))))))","(+ 1 (+ (exp (* 2 (/ (log x) n))) (+ (exp (/ (log x) n)) (* x (+ (* 2 (/ 1 n)) (+ (* x (- (+ (* 2 (/ 1 (pow n 2))) (+ (* x (- (+ (* 2/3 (/ 1 n)) (+ (* 4/3 (/ 1 (pow n 3))) (* (exp (/ (log x) n)) (- (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))) (* 1/2 (/ 1 (pow n 2))))))) (* 2 (/ 1 (pow n 2))))) (* (exp (/ (log x) n)) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))))) (/ 1 n))) (/ (exp (/ (log x) n)) n)))))))","(/ (exp (* 3 (/ (log x) n))) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))))","(+ (* -1 (/ (* x (* (exp (* 3 (/ (log x) n))) (+ (* 2 (/ 1 n)) (/ (exp (/ (log x) n)) n)))) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2))) (/ (exp (* 3 (/ (log x) n))) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))","(+ (* x (- (* -1 (* x (+ (* -1 (/ (* (exp (* 3 (/ (log x) n))) (pow (+ (* 2 (/ 1 n)) (/ (exp (/ (log x) n)) n)) 2)) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 3))) (/ (* (exp (* 3 (/ (log x) n))) (- (+ (* 2 (/ 1 (pow n 2))) (* (exp (/ (log x) n)) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n))))) (/ 1 n))) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2))))) (/ (* (exp (* 3 (/ (log x) n))) (+ (* 2 (/ 1 n)) (/ (exp (/ (log x) n)) n))) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))) (/ (exp (* 3 (/ (log x) n))) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))","(+ (* x (- (* x (- (* -1 (* x (+ (* -1 (/ (* (exp (* 3 (/ (log x) n))) (* (+ (* 2 (/ 1 n)) (/ (exp (/ (log x) n)) n)) (- (+ (* 2 (/ 1 (pow n 2))) (* (exp (/ (log x) n)) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n))))) (/ 1 n)))) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 3))) (+ (* -1 (/ (* (+ (* -1 (/ (* (exp (* 3 (/ (log x) n))) (pow (+ (* 2 (/ 1 n)) (/ (exp (/ (log x) n)) n)) 2)) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 3))) (/ (* (exp (* 3 (/ (log x) n))) (- (+ (* 2 (/ 1 (pow n 2))) (* (exp (/ (log x) n)) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n))))) (/ 1 n))) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2))) (+ (* 2 (/ 1 n)) (/ (exp (/ (log x) n)) n))) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))))) (/ (* (exp (* 3 (/ (log x) n))) (- (+ (* 2/3 (/ 1 n)) (+ (* 4/3 (/ 1 (pow n 3))) (* (exp (/ (log x) n)) (- (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))) (* 1/2 (/ 1 (pow n 2))))))) (* 2 (/ 1 (pow n 2))))) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))))) (+ (* -1 (/ (* (exp (* 3 (/ (log x) n))) (pow (+ (* 2 (/ 1 n)) (/ (exp (/ (log x) n)) n)) 2)) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 3))) (/ (* (exp (* 3 (/ (log x) n))) (- (+ (* 2 (/ 1 (pow n 2))) (* (exp (/ (log x) n)) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n))))) (/ 1 n))) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2))))) (/ (* (exp (* 3 (/ (log x) n))) (+ (* 2 (/ 1 n)) (/ (exp (/ (log x) n)) n))) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))) (/ (exp (* 3 (/ (log x) n))) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))","(* 3 (/ (exp (* -3 (/ (log (/ 1 x)) n))) (* n (* x (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))))))","(/ (- (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (* x (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))))) (+ (* -3 (/ (exp (* -3 (/ (log (/ 1 x)) n))) (* n (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))))) (* 3 (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n))) (* n (* x (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2))))))) x)","(/ (- (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (- (+ (* 9/2 (/ 1 (pow n 3))) (/ 1 n)) (* 9/2 (/ 1 (pow n 2))))) (* (pow x 2) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))))) (+ (* -3 (/ (exp (* -3 (/ (log (/ 1 x)) n))) (* n (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))))) (+ (* -1 (/ (- (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))) (* 3 (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n))) (* n (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2))))) x)) (+ (* 3 (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))))) (* n (* (pow x 2) (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2))))) (/ (* (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (- (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))) (* 3 (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n))) (* n (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2)))))) (* (pow x 2) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))))))))) x)","(/ (- (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (- (+ (* 27/8 (/ 1 (pow n 4))) (* 33/8 (/ 1 (pow n 2)))) (+ (* 3/4 (/ 1 n)) (* 27/4 (/ 1 (pow n 3)))))) (* (pow x 3) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))))) (+ (* -3 (/ (exp (* -3 (/ (log (/ 1 x)) n))) (* n (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))))) (+ (* -1 (/ (- (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))) (* 3 (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n))) (* n (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2))))) x)) (+ (* -1 (/ (- (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (- (+ (* 9/2 (/ 1 (pow n 3))) (/ 1 n)) (* 9/2 (/ 1 (pow n 2))))) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))) (+ (* 3 (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))))) (* n (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2)))) (/ (* (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (- (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))) (* 3 (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n))) (* n (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2)))))) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))))) (pow x 2))) (+ (* 3 (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))) (* 1/2 (/ 1 (pow n 2))))) (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (+ (* 2/3 (/ 1 n)) (* 4/3 (/ 1 (pow n 3)))) (* 2 (/ 1 (pow n 2))))))) (* n (* (pow x 3) (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2))))) (+ (/ (* (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (- (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (- (+ (* 9/2 (/ 1 (pow n 3))) (/ 1 n)) (* 9/2 (/ 1 (pow n 2))))) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))) (+ (* 3 (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))))) (* n (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2)))) (/ (* (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (- (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))) (* 3 (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n))) (* n (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2)))))) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))))))) (* (pow x 3) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))))) (/ (* (+ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n)))) (- (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))) (* 3 (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n))) (* n (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2)))))) (* (pow x 3) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))))))))))) x)","(* -3 (/ (exp (* -3 (/ (log (/ 1 x)) n))) (* n (* x (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))))))","(/ (+ (* -3 (/ (exp (* -3 (/ (log (/ 1 x)) n))) (* n (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))))) (* -1 (/ (- (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))) (* 3 (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n))) (* n (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2))))) x))) x)","(/ (+ (* -3 (/ (exp (* -3 (/ (log (/ 1 x)) n))) (* n (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))))) (+ (* -1 (/ (- (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))) (* 3 (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n))) (* n (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2))))) x)) (* -1 (/ (- (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (- (+ (* 9/2 (/ 1 (pow n 3))) (/ 1 n)) (* 9/2 (/ 1 (pow n 2))))) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))) (+ (* 3 (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))))) (* n (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2)))) (/ (* (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (- (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))) (* 3 (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n))) (* n (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2)))))) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))))) (pow x 2))))) x)","(/ (+ (* -3 (/ (exp (* -3 (/ (log (/ 1 x)) n))) (* n (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))))) (+ (* -1 (/ (- (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))) (* 3 (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n))) (* n (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2))))) x)) (+ (* -1 (/ (- (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (- (+ (* 27/8 (/ 1 (pow n 4))) (* 33/8 (/ 1 (pow n 2)))) (+ (* 3/4 (/ 1 n)) (* 27/4 (/ 1 (pow n 3)))))) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))) (+ (* 3 (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))) (* 1/2 (/ 1 (pow n 2))))) (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (+ (* 2/3 (/ 1 n)) (* 4/3 (/ 1 (pow n 3)))) (* 2 (/ 1 (pow n 2))))))) (* n (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2)))) (+ (/ (* (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (- (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (- (+ (* 9/2 (/ 1 (pow n 3))) (/ 1 n)) (* 9/2 (/ 1 (pow n 2))))) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))) (+ (* 3 (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))))) (* n (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2)))) (/ (* (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (- (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))) (* 3 (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n))) (* n (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2)))))) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))))))) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))) (/ (* (+ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n)))) (- (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))) (* 3 (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n))) (* n (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2)))))) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))))))) (pow x 3))) (* -1 (/ (- (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (- (+ (* 9/2 (/ 1 (pow n 3))) (/ 1 n)) (* 9/2 (/ 1 (pow n 2))))) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))) (+ (* 3 (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))))) (* n (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2)))) (/ (* (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (- (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))) (* 3 (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n))) (* n (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2)))))) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))))) (pow x 2)))))) x)","(* 3 (/ (exp (* -3 (/ (log (/ 1 x)) n))) (* n x)))","(/ (+ (* 3 (/ (exp (* -3 (/ (log (/ 1 x)) n))) n)) (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) x)) x)","(/ (+ (* 3 (/ (exp (* -3 (/ (log (/ 1 x)) n))) n)) (+ (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) x) (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (- (+ (* 9/2 (/ 1 (pow n 3))) (/ 1 n)) (* 9/2 (/ 1 (pow n 2))))) (pow x 2)))) x)","(/ (+ (* 3 (/ (exp (* -3 (/ (log (/ 1 x)) n))) n)) (+ (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) x) (+ (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (- (+ (* 27/8 (/ 1 (pow n 4))) (* 33/8 (/ 1 (pow n 2)))) (+ (* 3/4 (/ 1 n)) (* 27/4 (/ 1 (pow n 3)))))) (pow x 3)) (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (- (+ (* 9/2 (/ 1 (pow n 3))) (/ 1 n)) (* 9/2 (/ 1 (pow n 2))))) (pow x 2))))) x)","(exp (* -3 (/ (log (/ 1 x)) n)))","(+ (exp (* -3 (/ (log (/ 1 x)) n))) (* 3 (/ (exp (* -3 (/ (log (/ 1 x)) n))) (* n x))))","(+ (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* 3 (/ (exp (* -3 (/ (log (/ 1 x)) n))) (* n x))) (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (pow x 2))))","(+ (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* 3 (/ (exp (* -3 (/ (log (/ 1 x)) n))) (* n x))) (+ (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (pow x 2)) (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (- (+ (* 9/2 (/ 1 (pow n 3))) (/ 1 n)) (* 9/2 (/ 1 (pow n 2))))) (pow x 3)))))","(/ (- (+ (* -1 (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (pow (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) 2)) (* x (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 3)))) (+ (* 3 (/ (exp (* -3 (/ (log (/ 1 x)) n))) (* n (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))))) (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (* x (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))))))) (/ (* (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (- (* 3 (/ (exp (* -3 (/ (log (/ 1 x)) n))) (* n (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))))) (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n))) (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2)))) (* x (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))))) x)","(/ (- (+ (* -1 (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (* (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (+ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n)))))) (* (pow x 2) (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 3)))) (+ (* -1 (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (pow (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) 2)) (* x (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 3)))) (+ (* -1 (/ (* (+ (* -1 (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (pow (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) 2)) (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 3))) (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))))) (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2))) (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n))) (* (pow x 2) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))))) (+ (* 3 (/ (exp (* -3 (/ (log (/ 1 x)) n))) (* n (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))))) (+ (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (* x (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))))) (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (- (+ (* 9/2 (/ 1 (pow n 3))) (/ 1 n)) (* 9/2 (/ 1 (pow n 2))))) (* (pow x 2) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))))))))) (+ (/ (* (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (- (* 3 (/ (exp (* -3 (/ (log (/ 1 x)) n))) (* n (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))))) (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n))) (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2)))) (* x (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))))) (+ (/ (* (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (- (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))) (+ (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))))) (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2)) (/ (* (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (- (* 3 (/ (exp (* -3 (/ (log (/ 1 x)) n))) (* n (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))))) (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n))) (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2)))) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))))))) (* (pow x 2) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))))) (/ (* (+ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n)))) (- (* 3 (/ (exp (* -3 (/ (log (/ 1 x)) n))) (* n (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))))) (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n))) (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2)))) (* (pow x 2) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))))))) x)","(/ (- (+ (* -1 (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (* (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (+ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n)))))) (* (pow x 2) (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 3)))) (+ (* -1 (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (* (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (+ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))) (* 1/2 (/ 1 (pow n 2))))) (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (+ (* 2/3 (/ 1 n)) (* 4/3 (/ 1 (pow n 3)))) (* 2 (/ 1 (pow n 2)))))))) (* (pow x 3) (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 3)))) (+ (* -1 (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (pow (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) 2)) (* x (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 3)))) (+ (* -1 (/ (* (+ (* -1 (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (* (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (+ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n)))))) (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 3))) (+ (* -1 (/ (* (+ (* -1 (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (pow (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) 2)) (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 3))) (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))))) (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2))) (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n))) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))))) (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))) (* 1/2 (/ 1 (pow n 2))))) (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (+ (* 2/3 (/ 1 n)) (* 4/3 (/ 1 (pow n 3)))) (* 2 (/ 1 (pow n 2))))))) (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2)))) (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n))) (* (pow x 3) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))))) (+ (* -1 (/ (* (+ (* -1 (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (pow (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) 2)) (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 3))) (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))))) (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2))) (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n))) (* (pow x 2) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))))) (+ (* -1 (/ (* (+ (* -1 (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (pow (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) 2)) (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 3))) (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))))) (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2))) (+ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))))) (* (pow x 3) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))))) (+ (* 3 (/ (exp (* -3 (/ (log (/ 1 x)) n))) (* n (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))))) (+ (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (* x (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))))) (+ (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (- (+ (* 27/8 (/ 1 (pow n 4))) (* 33/8 (/ 1 (pow n 2)))) (+ (* 3/4 (/ 1 n)) (* 27/4 (/ 1 (pow n 3)))))) (* (pow x 3) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))))) (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (- (+ (* 9/2 (/ 1 (pow n 3))) (/ 1 n)) (* 9/2 (/ 1 (pow n 2))))) (* (pow x 2) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))))))))))))) (+ (/ (* (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (- (* 3 (/ (exp (* -3 (/ (log (/ 1 x)) n))) (* n (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))))) (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n))) (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2)))) (* x (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))))) (+ (/ (* (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (- (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))) (+ (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))))) (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2)) (/ (* (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (- (* 3 (/ (exp (* -3 (/ (log (/ 1 x)) n))) (* n (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))))) (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n))) (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2)))) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))))))) (* (pow x 2) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))))) (+ (/ (* (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (- (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (- (+ (* 9/2 (/ 1 (pow n 3))) (/ 1 n)) (* 9/2 (/ 1 (pow n 2))))) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))) (+ (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))) (* 1/2 (/ 1 (pow n 2))))) (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (+ (* 2/3 (/ 1 n)) (* 4/3 (/ 1 (pow n 3)))) (* 2 (/ 1 (pow n 2))))))) (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2)) (+ (/ (* (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (- (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))) (+ (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))))) (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2)) (/ (* (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (- (* 3 (/ (exp (* -3 (/ (log (/ 1 x)) n))) (* n (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))))) (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n))) (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2)))) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))))))) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))) (/ (* (+ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n)))) (- (* 3 (/ (exp (* -3 (/ (log (/ 1 x)) n))) (* n (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))))) (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n))) (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2)))) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))))))) (* (pow x 3) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))))) (+ (/ (* (+ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n)))) (- (* 3 (/ (exp (* -3 (/ (log (/ 1 x)) n))) (* n (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))))) (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n))) (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2)))) (* (pow x 2) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))))) (+ (/ (* (+ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n)))) (- (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))) (+ (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))))) (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2)) (/ (* (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (- (* 3 (/ (exp (* -3 (/ (log (/ 1 x)) n))) (* n (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))))) (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n))) (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2)))) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))))))) (* (pow x 3) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))))) (/ (* (+ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))) (* 1/2 (/ 1 (pow n 2))))) (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (+ (* 2/3 (/ 1 n)) (* 4/3 (/ 1 (pow n 3)))) (* 2 (/ 1 (pow n 2)))))) (- (* 3 (/ (exp (* -3 (/ (log (/ 1 x)) n))) (* n (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))))) (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n))) (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2)))) (* (pow x 3) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))))))))))) x)","(/ (exp (* -3 (/ (log (/ 1 x)) n))) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))))","(- (+ (* 3 (/ (exp (* -3 (/ (log (/ 1 x)) n))) (* n (* x (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))))))) (/ (exp (* -3 (/ (log (/ 1 x)) n))) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))))) (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n))) (* x (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2))))","(- (+ (* 3 (/ (exp (* -3 (/ (log (/ 1 x)) n))) (* n (* x (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))))))) (+ (/ (exp (* -3 (/ (log (/ 1 x)) n))) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))) (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (* (pow x 2) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))))))) (+ (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n))) (* x (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2))) (+ (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))))) (* (pow x 2) (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2))) (/ (* (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (- (* 3 (/ (exp (* -3 (/ (log (/ 1 x)) n))) (* n (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))))) (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n))) (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2)))) (* (pow x 2) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))))))))","(- (+ (* 3 (/ (exp (* -3 (/ (log (/ 1 x)) n))) (* n (* x (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))))))) (+ (/ (exp (* -3 (/ (log (/ 1 x)) n))) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))) (+ (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (* (pow x 2) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))))) (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (- (+ (* 9/2 (/ 1 (pow n 3))) (/ 1 n)) (* 9/2 (/ 1 (pow n 2))))) (* (pow x 3) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))))))) (+ (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n))) (* x (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2))) (+ (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))))) (* (pow x 2) (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2))) (+ (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))) (* 1/2 (/ 1 (pow n 2))))) (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (+ (* 2/3 (/ 1 n)) (* 4/3 (/ 1 (pow n 3)))) (* 2 (/ 1 (pow n 2))))))) (* (pow x 3) (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2))) (+ (/ (* (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (- (* 3 (/ (exp (* -3 (/ (log (/ 1 x)) n))) (* n (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))))) (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n))) (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2)))) (* (pow x 2) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))))) (+ (/ (* (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (- (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))) (+ (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))))) (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2)) (/ (* (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (- (* 3 (/ (exp (* -3 (/ (log (/ 1 x)) n))) (* n (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))))) (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n))) (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2)))) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))))))) (* (pow x 3) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))))) (/ (* (+ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n)))) (- (* 3 (/ (exp (* -3 (/ (log (/ 1 x)) n))) (* n (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))))) (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n))) (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2)))) (* (pow x 3) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))))))))))","x","(* x (+ 1 (/ 1 x)))","(exp (* -2 (/ (log (/ 1 x)) n)))","(+ (exp (* -2 (/ (log (/ 1 x)) n))) (/ (exp (* -2 (/ (log (/ 1 x)) n))) (* n x)))","(+ (exp (* -2 (/ (log (/ 1 x)) n))) (+ (/ (exp (* -2 (/ (log (/ 1 x)) n))) (* n x)) (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (pow x 2))))","(+ (exp (* -2 (/ (log (/ 1 x)) n))) (+ (/ (exp (* -2 (/ (log (/ 1 x)) n))) (* n x)) (+ (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (pow x 2)) (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))) (* 1/2 (/ 1 (pow n 2))))) (pow x 3)))))","(+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))","(+ (exp (* -2 (/ (log (/ 1 x)) n))) (+ (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))) (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) (* n x))) (/ (exp (* -2 (/ (log (/ 1 x)) n))) (* n x)))))","(+ (exp (* -2 (/ (log (/ 1 x)) n))) (+ (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))) (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) (* n x))) (+ (/ (exp (* -2 (/ (log (/ 1 x)) n))) (* n x)) (+ (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (pow x 2)) (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))) (pow x 2)))))))","(+ (exp (* -2 (/ (log (/ 1 x)) n))) (+ (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))) (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) (* n x))) (+ (/ (exp (* -2 (/ (log (/ 1 x)) n))) (* n x)) (+ (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (pow x 2)) (+ (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))) (pow x 2)) (+ (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))) (* 1/2 (/ 1 (pow n 2))))) (pow x 3)) (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (+ (* 2/3 (/ 1 n)) (* 4/3 (/ 1 (pow n 3)))) (* 2 (/ 1 (pow n 2))))) (pow x 3)))))))))","(+ (* -1 (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n))) (* x (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2)))) (/ (exp (* -3 (/ (log (/ 1 x)) n))) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))))","(- (+ (* -1 (/ (+ (* -1 (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (pow (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) 2)) (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 3))) (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))))) (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2))) (pow x 2))) (/ (exp (* -3 (/ (log (/ 1 x)) n))) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))))) (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n))) (* x (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2))))","(- (+ (* -1 (/ (+ (* -1 (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (* (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (+ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n)))))) (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 3))) (+ (* -1 (/ (* (+ (* -1 (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (pow (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) 2)) (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 3))) (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))))) (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2))) (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n))) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))))) (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))) (* 1/2 (/ 1 (pow n 2))))) (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (+ (* 2/3 (/ 1 n)) (* 4/3 (/ 1 (pow n 3)))) (* 2 (/ 1 (pow n 2))))))) (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2)))) (pow x 3))) (/ (exp (* -3 (/ (log (/ 1 x)) n))) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))))) (+ (* -1 (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (pow (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) 2)) (* (pow x 2) (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 3)))) (+ (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n))) (* x (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2))) (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))))) (* (pow x 2) (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2))))))","(* 3 (/ (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* n (* x (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))))))","(* -1 (/ (- (* -1 (/ (- (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) (* -3 (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n)))) (* n (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2))))) x)) (* 3 (/ (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* n (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))))) x))","(* -1 (/ (- (* -1 (/ (- (* -1 (/ (- (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 9/2 (/ 1 (pow n 2))) (+ (* 9/2 (/ 1 (pow n 3))) (/ 1 n)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) (+ (* -3 (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))))) (* n (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2)))) (/ (* (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n))) (- (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) (* -3 (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n)))) (* n (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2)))))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))))) x)) (* -1 (- (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) (* -3 (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n)))) (* n (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2))))))) x)) (* 3 (/ (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* n (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))))) x))","(* -1 (/ (- (* -1 (/ (- (* -1 (/ (- (* -1 (/ (- (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (+ (* 27/8 (/ 1 (pow n 4))) (* 33/8 (/ 1 (pow n 2)))) (+ (* 3/4 (/ 1 n)) (* 27/4 (/ 1 (pow n 3)))))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) (+ (* -3 (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))))) (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (+ (* 2/3 (/ 1 n)) (* 4/3 (/ 1 (pow n 3)))))))) (* n (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2)))) (+ (/ (* (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n))) (- (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 9/2 (/ 1 (pow n 2))) (+ (* 9/2 (/ 1 (pow n 3))) (/ 1 n)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) (+ (* -3 (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))))) (* n (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2)))) (/ (* (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n))) (- (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) (* -3 (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n)))) (* n (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2)))))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) (/ (* (+ (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n)))) (- (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) (* -3 (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n)))) (* n (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2)))))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))))) x)) (* -1 (- (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 9/2 (/ 1 (pow n 2))) (+ (* 9/2 (/ 1 (pow n 3))) (/ 1 n)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) (+ (* -3 (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))))) (* n (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2)))) (/ (* (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n))) (- (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) (* -3 (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n)))) (* n (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2)))))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))))))) x)) (* -1 (- (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) (* -3 (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n)))) (* n (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2))))))) x)) (* 3 (/ (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* n (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))))) x))","(* -3 (/ (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* n (* x (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))))))","(* -1 (/ (- (+ (* 3 (/ (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* n (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))))) (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (* x (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))))) (* -3 (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n)))) (* n (* x (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2)))))) x))","(* -1 (/ (+ (* -1 (/ (- (+ (* -1 (- (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) (* -3 (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n)))) (* n (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2)))))) (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 9/2 (/ 1 (pow n 2))) (+ (* 9/2 (/ 1 (pow n 3))) (/ 1 n)))) (* x (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))))) (+ (* -3 (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))))) (* n (* x (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2))))) (/ (* (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n))) (- (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) (* -3 (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n)))) (* n (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2)))))) (* x (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))))) x)) (* 3 (/ (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* n (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))))) x))","(* -1 (/ (+ (* -1 (/ (+ (* -1 (- (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) (* -3 (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n)))) (* n (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2)))))) (* -1 (/ (- (+ (* -1 (- (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 9/2 (/ 1 (pow n 2))) (+ (* 9/2 (/ 1 (pow n 3))) (/ 1 n)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) (+ (* -3 (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))))) (* n (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2)))) (/ (* (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n))) (- (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) (* -3 (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n)))) (* n (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2)))))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))))) (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (+ (* 27/8 (/ 1 (pow n 4))) (* 33/8 (/ 1 (pow n 2)))) (+ (* 3/4 (/ 1 n)) (* 27/4 (/ 1 (pow n 3)))))) (* x (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))))) (+ (* -3 (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))))) (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (+ (* 2/3 (/ 1 n)) (* 4/3 (/ 1 (pow n 3)))))))) (* n (* x (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2))))) (+ (/ (* (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n))) (- (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 9/2 (/ 1 (pow n 2))) (+ (* 9/2 (/ 1 (pow n 3))) (/ 1 n)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) (+ (* -3 (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))))) (* n (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2)))) (/ (* (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n))) (- (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) (* -3 (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n)))) (* n (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2)))))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))))) (* x (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))) (/ (* (+ (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n)))) (- (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) (* -3 (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n)))) (* n (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2)))))) (* x (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))))))) x))) x)) (* 3 (/ (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* n (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))))) x))","(* 3 (/ (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* n x)))","(* -1 (/ (+ (* -3 (/ (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) x))) x))","(* -1 (/ (+ (* -3 (/ (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (+ (* -1 (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 9/2 (/ 1 (pow n 2))) (+ (* 9/2 (/ 1 (pow n 3))) (/ 1 n)))) x)) (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n))))) x))) x))","(* -1 (/ (+ (* -3 (/ (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (+ (* -1 (/ (+ (* -1 (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (+ (* 27/8 (/ 1 (pow n 4))) (* 33/8 (/ 1 (pow n 2)))) (+ (* 3/4 (/ 1 n)) (* 27/4 (/ 1 (pow n 3)))))) x)) (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 9/2 (/ 1 (pow n 2))) (+ (* 9/2 (/ 1 (pow n 3))) (/ 1 n))))) x)) (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n))))) x))) x))","(exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))","(+ (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* 3 (/ (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* n x))))","(+ (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* -1 (/ (+ (* -3 (/ (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) x))) x)))","(+ (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* -1 (/ (+ (* -3 (/ (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (+ (* -1 (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 9/2 (/ 1 (pow n 2))) (+ (* 9/2 (/ 1 (pow n 3))) (/ 1 n)))) x)) (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n))))) x))) x)))","(* -1 (/ (+ (* -3 (/ (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* n (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))))) (* -1 (/ (- (+ (* -1 (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (pow (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n))) 2)) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 3))) (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))) (/ (* (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n))) (- (* -3 (/ (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* n (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))))) (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n)))) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))) x))) x))","(* -1 (/ (+ (* -3 (/ (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* n (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))))) (* -1 (/ (- (+ (* -1 (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (pow (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n))) 2)) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 3))) (+ (* -1 (/ (- (+ (* -1 (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n))) (+ (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n)))))) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 3))) (+ (* -1 (/ (* (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n))) (+ (* -1 (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (pow (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n))) 2)) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 3))) (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))))) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))) (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 9/2 (/ 1 (pow n 2))) (+ (* 9/2 (/ 1 (pow n 3))) (/ 1 n)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))))) (+ (/ (* (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n))) (- (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) (+ (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))))) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2)) (/ (* (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n))) (- (* -3 (/ (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* n (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))))) (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n)))) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) (/ (* (+ (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n)))) (- (* -3 (/ (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* n (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))))) (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n)))) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))))) x)) (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))))) (/ (* (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n))) (- (* -3 (/ (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* n (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))))) (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n)))) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))) x))) x))","(* -1 (/ (+ (* -3 (/ (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* n (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))))) (* -1 (/ (- (+ (* -1 (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (pow (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n))) 2)) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 3))) (+ (* -1 (/ (- (+ (* -1 (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n))) (+ (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n)))))) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 3))) (+ (* -1 (/ (* (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n))) (+ (* -1 (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (pow (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n))) 2)) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 3))) (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))))) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))) (+ (* -1 (/ (- (+ (* -1 (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n))) (+ (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))))) (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (+ (* 2/3 (/ 1 n)) (* 4/3 (/ 1 (pow n 3))))))))) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 3))) (+ (* -1 (/ (* (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n))) (+ (* -1 (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n))) (+ (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n)))))) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 3))) (+ (* -1 (/ (* (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n))) (+ (* -1 (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (pow (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n))) 2)) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 3))) (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))))) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))) (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))))) (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (+ (* 2/3 (/ 1 n)) (* 4/3 (/ 1 (pow n 3)))))))) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2))))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))) (+ (* -1 (/ (* (+ (* -1 (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (pow (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n))) 2)) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 3))) (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))))) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2))) (+ (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))) (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (+ (* 27/8 (/ 1 (pow n 4))) (* 33/8 (/ 1 (pow n 2)))) (+ (* 3/4 (/ 1 n)) (* 27/4 (/ 1 (pow n 3)))))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))))) (+ (/ (* (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n))) (- (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 9/2 (/ 1 (pow n 2))) (+ (* 9/2 (/ 1 (pow n 3))) (/ 1 n)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) (+ (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))))) (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (+ (* 2/3 (/ 1 n)) (* 4/3 (/ 1 (pow n 3)))))))) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2)) (+ (/ (* (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n))) (- (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) (+ (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))))) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2)) (/ (* (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n))) (- (* -3 (/ (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* n (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))))) (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n)))) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) (/ (* (+ (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n)))) (- (* -3 (/ (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* n (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))))) (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n)))) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))))))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) (+ (/ (* (+ (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n)))) (- (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) (+ (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))))) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2)) (/ (* (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n))) (- (* -3 (/ (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* n (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))))) (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n)))) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) (/ (* (+ (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))))) (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (+ (* 2/3 (/ 1 n)) (* 4/3 (/ 1 (pow n 3))))))) (- (* -3 (/ (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* n (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))))) (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n)))) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))))) x)) (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 9/2 (/ 1 (pow n 2))) (+ (* 9/2 (/ 1 (pow n 3))) (/ 1 n)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))))) (+ (/ (* (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n))) (- (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) (+ (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))))) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2)) (/ (* (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n))) (- (* -3 (/ (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* n (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))))) (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n)))) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) (/ (* (+ (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n)))) (- (* -3 (/ (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* n (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))))) (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n)))) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))))) x)) (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))))) (/ (* (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n))) (- (* -3 (/ (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* n (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))))) (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n)))) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))) x))) x))","(/ (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))","(+ (* -1 (/ (- (* -3 (/ (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* n (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))))) (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n)))) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2))) x)) (/ (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))))","(+ (* -1 (/ (- (+ (* -3 (/ (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* n (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))))) (* -1 (/ (- (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) (+ (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))))) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2)) (/ (* (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n))) (- (* -3 (/ (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* n (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))))) (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n)))) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))))) x))) (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n)))) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2))) x)) (/ (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))))","(+ (* -1 (/ (- (+ (* -3 (/ (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* n (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))))) (* -1 (/ (- (+ (* -1 (/ (- (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 9/2 (/ 1 (pow n 2))) (+ (* 9/2 (/ 1 (pow n 3))) (/ 1 n)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) (+ (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))))) (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (+ (* 2/3 (/ 1 n)) (* 4/3 (/ 1 (pow n 3)))))))) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2)) (+ (/ (* (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n))) (- (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) (+ (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))))) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2)) (/ (* (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n))) (- (* -3 (/ (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* n (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))))) (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n)))) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) (/ (* (+ (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n)))) (- (* -3 (/ (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* n (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))))) (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n)))) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))))) x)) (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))) (+ (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))))) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2)) (/ (* (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n))) (- (* -3 (/ (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* n (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))))) (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n)))) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))))) x))) (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n)))) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2))) x)) (/ (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))))","(exp (* -2 (/ (log (/ -1 x)) n)))","(+ (exp (* -2 (/ (log (/ -1 x)) n))) (/ (exp (* -2 (/ (log (/ -1 x)) n))) (* n x)))","(+ (exp (* -2 (/ (log (/ -1 x)) n))) (* -1 (/ (+ (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n)) (* -1 (/ (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) x))) x)))","(+ (exp (* -2 (/ (log (/ -1 x)) n))) (* -1 (/ (+ (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n)) (* -1 (/ (+ (* -1 (/ (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))))) x)) (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n))))) x))) x)))","(+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))","(+ (exp (* -2 (/ (log (/ -1 x)) n))) (+ (* -1 (/ (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n))) x)) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))","(+ (exp (* -2 (/ (log (/ -1 x)) n))) (+ (* -1 (/ (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (+ (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n)) (* -1 (/ (+ (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n)))) x)))) x)) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))","(+ (exp (* -2 (/ (log (/ -1 x)) n))) (+ (* -1 (/ (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (+ (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n)) (* -1 (/ (+ (* -1 (/ (+ (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))))) (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (+ (* 2/3 (/ 1 n)) (* 4/3 (/ 1 (pow n 3))))))) x)) (+ (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))))) x)))) x)) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))","(+ (/ (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n)))) (* x (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2))))","(+ (* -1 (/ (- (+ (* -1 (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (pow (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n))) 2)) (* x (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 3)))) (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))))) (* x (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2)))) (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n)))) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2))) x)) (/ (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))))","(+ (* -1 (/ (- (* -1 (/ (- (+ (* -1 (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n))) (+ (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n)))))) (* x (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 3)))) (+ (* -1 (/ (* (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n))) (+ (* -1 (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (pow (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n))) 2)) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 3))) (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))))) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2)))) (* x (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))))) (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))))) (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (+ (* 2/3 (/ 1 n)) (* 4/3 (/ 1 (pow n 3)))))))) (* x (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2))))) (+ (* -1 (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (pow (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n))) 2)) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 3))) (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))))) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2)))) x)) (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n)))) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2))) x)) (/ (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))))","(/ (- (exp (* 3 (/ (log (+ 1 x)) n))) (exp (* 3 (/ (log x) n)))) (+ (exp (* 2 (/ (log x) n))) (+ (exp (* 2 (/ (log (+ 1 x)) n))) (exp (/ (log (+ x (pow x 2))) n)))))","(* -1 (/ (- (exp (* 3 (/ (log (+ 1 x)) n))) (exp (* 3 (/ (log x) n)))) (+ (exp (* 2 (/ (log x) n))) (+ (exp (* 2 (/ (log (+ 1 x)) n))) (exp (/ (log (+ x (pow x 2))) n))))))","(- (exp (* 3 (/ (log (+ 1 x)) n))) (exp (* 3 (/ (log x) n))))","(exp (* 3 (/ (log (+ 1 x)) n)))","(- (/ (exp (* 3 (/ (log (+ 1 x)) n))) (+ (exp (* 2 (/ (log x) n))) (+ (exp (* 2 (/ (log (+ 1 x)) n))) (exp (/ (log (+ x (pow x 2))) n))))) (/ (exp (* 3 (/ (log x) n))) (+ (exp (* 2 (/ (log x) n))) (+ (exp (* 2 (/ (log (+ 1 x)) n))) (exp (/ (log (+ x (pow x 2))) n))))))","(/ (exp (* 3 (/ (log (+ 1 x)) n))) (+ (exp (* 2 (/ (log x) n))) (+ (exp (* 2 (/ (log (+ 1 x)) n))) (exp (/ (log (+ x (pow x 2))) n)))))","(exp (/ (log (+ x (pow x 2))) n))","(+ (exp (* 2 (/ (log x) n))) (+ (exp (* 2 (/ (log (+ 1 x)) n))) (exp (/ (log (+ x (pow x 2))) n))))","(/ (exp (* 3 (/ (log x) n))) (+ (exp (* 2 (/ (log x) n))) (+ (exp (* 2 (/ (log (+ 1 x)) n))) (exp (/ (log (+ x (pow x 2))) n)))))","(* 1/3 (/ (- (* 3 (log (+ 1 x))) (* 3 (log x))) n))","(/ (- (* 1/3 (/ (- (* 9/2 (pow (log (+ 1 x)) 2)) (* 9/2 (pow (log x) 2))) n)) (+ (* -1/3 (- (* 3 (log (+ 1 x))) (* 3 (log x)))) (* 1/9 (/ (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (* 3 (log (+ 1 x))) (* 3 (log x)))) n)))) n)","(/ (- (* 1/3 (/ (- (* 9/2 (pow (log (+ 1 x)) 3)) (* 9/2 (pow (log x) 3))) (pow n 2))) (+ (* -1 (/ (- (* 1/3 (- (* 9/2 (pow (log (+ 1 x)) 2)) (* 9/2 (pow (log x) 2)))) (* 1/9 (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (* 3 (log (+ 1 x))) (* 3 (log x)))))) n)) (+ (* -1/3 (- (* 3 (log (+ 1 x))) (* 3 (log x)))) (+ (* 1/9 (/ (* (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2)))) (- (* 3 (log (+ 1 x))) (* 3 (log x)))) (pow n 2))) (* 1/3 (/ (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (* 1/3 (- (* 9/2 (pow (log (+ 1 x)) 2)) (* 9/2 (pow (log x) 2)))) (* 1/9 (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (* 3 (log (+ 1 x))) (* 3 (log x))))))) (pow n 2))))))) n)","(/ (- (* 1/3 (/ (- (* 27/8 (pow (log (+ 1 x)) 4)) (* 27/8 (pow (log x) 4))) (pow n 3))) (+ (* -1 (/ (- (* 1/3 (- (* 9/2 (pow (log (+ 1 x)) 2)) (* 9/2 (pow (log x) 2)))) (* 1/9 (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (* 3 (log (+ 1 x))) (* 3 (log x)))))) n)) (+ (* -1 (/ (- (* 1/3 (- (* 9/2 (pow (log (+ 1 x)) 3)) (* 9/2 (pow (log x) 3)))) (+ (* 1/9 (* (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2)))) (- (* 3 (log (+ 1 x))) (* 3 (log x))))) (* 1/3 (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (* 1/3 (- (* 9/2 (pow (log (+ 1 x)) 2)) (* 9/2 (pow (log x) 2)))) (* 1/9 (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (* 3 (log (+ 1 x))) (* 3 (log x)))))))))) (pow n 2))) (+ (* -1/3 (- (* 3 (log (+ 1 x))) (* 3 (log x)))) (+ (* 1/9 (/ (* (+ (* 1/6 (pow (log (+ x (pow x 2))) 3)) (+ (* 4/3 (pow (log x) 3)) (* 4/3 (pow (log (+ 1 x)) 3)))) (- (* 3 (log (+ 1 x))) (* 3 (log x)))) (pow n 3))) (+ (* 1/3 (/ (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (* 1/3 (- (* 9/2 (pow (log (+ 1 x)) 3)) (* 9/2 (pow (log x) 3)))) (+ (* 1/9 (* (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2)))) (- (* 3 (log (+ 1 x))) (* 3 (log x))))) (* 1/3 (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (* 1/3 (- (* 9/2 (pow (log (+ 1 x)) 2)) (* 9/2 (pow (log x) 2)))) (* 1/9 (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (* 3 (log (+ 1 x))) (* 3 (log x))))))))))) (pow n 3))) (* 1/3 (/ (* (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2)))) (- (* 1/3 (- (* 9/2 (pow (log (+ 1 x)) 2)) (* 9/2 (pow (log x) 2)))) (* 1/9 (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (* 3 (log (+ 1 x))) (* 3 (log x))))))) (pow n 3))))))))) n)","(* -1/3 (/ (- (* 3 (log (+ 1 x))) (* 3 (log x))) n))","(/ (+ (* -1 (/ (- (* 1/3 (- (* 9/2 (pow (log (+ 1 x)) 2)) (* 9/2 (pow (log x) 2)))) (* 1/9 (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (* 3 (log (+ 1 x))) (* 3 (log x)))))) n)) (* -1/3 (- (* 3 (log (+ 1 x))) (* 3 (log x))))) n)","(/ (+ (* -1 (/ (- (* 1/3 (- (* 9/2 (pow (log (+ 1 x)) 2)) (* 9/2 (pow (log x) 2)))) (* 1/9 (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (* 3 (log (+ 1 x))) (* 3 (log x)))))) n)) (+ (* -1 (/ (- (* 1/3 (- (* 9/2 (pow (log (+ 1 x)) 3)) (* 9/2 (pow (log x) 3)))) (+ (* 1/9 (* (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2)))) (- (* 3 (log (+ 1 x))) (* 3 (log x))))) (* 1/3 (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (* 1/3 (- (* 9/2 (pow (log (+ 1 x)) 2)) (* 9/2 (pow (log x) 2)))) (* 1/9 (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (* 3 (log (+ 1 x))) (* 3 (log x)))))))))) (pow n 2))) (* -1/3 (- (* 3 (log (+ 1 x))) (* 3 (log x)))))) n)","(/ (+ (* -1 (/ (- (* 1/3 (- (* 27/8 (pow (log (+ 1 x)) 4)) (* 27/8 (pow (log x) 4)))) (+ (* 1/9 (* (+ (* 1/6 (pow (log (+ x (pow x 2))) 3)) (+ (* 4/3 (pow (log x) 3)) (* 4/3 (pow (log (+ 1 x)) 3)))) (- (* 3 (log (+ 1 x))) (* 3 (log x))))) (+ (* 1/3 (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (* 1/3 (- (* 9/2 (pow (log (+ 1 x)) 3)) (* 9/2 (pow (log x) 3)))) (+ (* 1/9 (* (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2)))) (- (* 3 (log (+ 1 x))) (* 3 (log x))))) (* 1/3 (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (* 1/3 (- (* 9/2 (pow (log (+ 1 x)) 2)) (* 9/2 (pow (log x) 2)))) (* 1/9 (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (* 3 (log (+ 1 x))) (* 3 (log x)))))))))))) (* 1/3 (* (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2)))) (- (* 1/3 (- (* 9/2 (pow (log (+ 1 x)) 2)) (* 9/2 (pow (log x) 2)))) (* 1/9 (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (* 3 (log (+ 1 x))) (* 3 (log x))))))))))) (pow n 3))) (+ (* -1 (/ (- (* 1/3 (- (* 9/2 (pow (log (+ 1 x)) 2)) (* 9/2 (pow (log x) 2)))) (* 1/9 (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (* 3 (log (+ 1 x))) (* 3 (log x)))))) n)) (+ (* -1 (/ (- (* 1/3 (- (* 9/2 (pow (log (+ 1 x)) 3)) (* 9/2 (pow (log x) 3)))) (+ (* 1/9 (* (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2)))) (- (* 3 (log (+ 1 x))) (* 3 (log x))))) (* 1/3 (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (* 1/3 (- (* 9/2 (pow (log (+ 1 x)) 2)) (* 9/2 (pow (log x) 2)))) (* 1/9 (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (* 3 (log (+ 1 x))) (* 3 (log x)))))))))) (pow n 2))) (* -1/3 (- (* 3 (log (+ 1 x))) (* 3 (log x))))))) n)","(/ (- (* 3 (log (+ 1 x))) (* 3 (log x))) n)","(/ (- (+ (* 3 (log (+ 1 x))) (* 9/2 (/ (pow (log (+ 1 x)) 2) n))) (+ (* 3 (log x)) (* 9/2 (/ (pow (log x) 2) n)))) n)","(/ (- (+ (* 3 (log (+ 1 x))) (+ (* 9/2 (/ (pow (log (+ 1 x)) 2) n)) (* 9/2 (/ (pow (log (+ 1 x)) 3) (pow n 2))))) (+ (* 3 (log x)) (+ (* 9/2 (/ (pow (log x) 2) n)) (* 9/2 (/ (pow (log x) 3) (pow n 2)))))) n)","(/ (- (+ (* 3 (log (+ 1 x))) (+ (* 27/8 (/ (pow (log (+ 1 x)) 4) (pow n 3))) (+ (* 9/2 (/ (pow (log (+ 1 x)) 2) n)) (* 9/2 (/ (pow (log (+ 1 x)) 3) (pow n 2)))))) (+ (* 3 (log x)) (+ (* 27/8 (/ (pow (log x) 4) (pow n 3))) (+ (* 9/2 (/ (pow (log x) 2) n)) (* 9/2 (/ (pow (log x) 3) (pow n 2))))))) n)","(+ 1 (* 3 (/ (log (+ 1 x)) n)))","(+ 1 (+ (* 3 (/ (log (+ 1 x)) n)) (* 9/2 (/ (pow (log (+ 1 x)) 2) (pow n 2)))))","(+ 1 (+ (* 3 (/ (log (+ 1 x)) n)) (+ (* 9/2 (/ (pow (log (+ 1 x)) 2) (pow n 2))) (* 9/2 (/ (pow (log (+ 1 x)) 3) (pow n 3))))))","(/ (- (log (+ 1 x)) (log x)) n)","(/ (- (+ (log (+ 1 x)) (+ (* 1/3 (/ (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (log x) (* 1/9 (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x)))))))) n)) (* 3/2 (/ (pow (log (+ 1 x)) 2) n)))) (+ (log x) (+ (* 1/3 (/ (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (log (+ 1 x)) (* 1/9 (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x)))))))) n)) (* 3/2 (/ (pow (log x) 2) n))))) n)","(/ (- (+ (log (+ 1 x)) (+ (* 1/3 (/ (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (log x) (* 1/9 (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x)))))))) n)) (+ (* 1/3 (/ (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (* 3/2 (pow (log x) 2)) (+ (* 1/9 (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2))))) (* 1/3 (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (log x) (* 1/9 (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x)))))))))))) (pow n 2))) (+ (* 1/3 (/ (* (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2)))) (- (log x) (* 1/9 (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x)))))))) (pow n 2))) (+ (* 3/2 (/ (pow (log (+ 1 x)) 2) n)) (* 3/2 (/ (pow (log (+ 1 x)) 3) (pow n 2)))))))) (+ (log x) (+ (* 1/3 (/ (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (log (+ 1 x)) (* 1/9 (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x)))))))) n)) (+ (* 1/3 (/ (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (* 3/2 (pow (log (+ 1 x)) 2)) (+ (* 1/9 (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2))))) (* 1/3 (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (log (+ 1 x)) (* 1/9 (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x)))))))))))) (pow n 2))) (+ (* 1/3 (/ (* (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2)))) (- (log (+ 1 x)) (* 1/9 (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x)))))))) (pow n 2))) (+ (* 3/2 (/ (pow (log x) 2) n)) (* 3/2 (/ (pow (log x) 3) (pow n 2))))))))) n)","(/ (- (+ (log (+ 1 x)) (+ (* 1/3 (/ (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (log x) (* 1/9 (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x)))))))) n)) (+ (* 1/3 (/ (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (* 3/2 (pow (log x) 2)) (+ (* 1/9 (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2))))) (* 1/3 (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (log x) (* 1/9 (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x)))))))))))) (pow n 2))) (+ (* 1/3 (/ (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (* 3/2 (pow (log x) 3)) (+ (* 1/9 (+ (* 1/6 (pow (log (+ x (pow x 2))) 3)) (+ (* 4/3 (pow (log x) 3)) (* 4/3 (pow (log (+ 1 x)) 3))))) (+ (* 1/3 (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (* 3/2 (pow (log x) 2)) (+ (* 1/9 (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2))))) (* 1/3 (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (log x) (* 1/9 (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))))))))))) (* 1/3 (* (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2)))) (- (log x) (* 1/9 (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))))))))))) (pow n 3))) (+ (* 1/3 (/ (* (+ (* 1/6 (pow (log (+ x (pow x 2))) 3)) (+ (* 4/3 (pow (log x) 3)) (* 4/3 (pow (log (+ 1 x)) 3)))) (- (log x) (* 1/9 (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x)))))))) (pow n 3))) (+ (* 1/3 (/ (* (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2)))) (- (log x) (* 1/9 (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x)))))))) (pow n 2))) (+ (* 1/3 (/ (* (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2)))) (- (* 3/2 (pow (log x) 2)) (+ (* 1/9 (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2))))) (* 1/3 (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (log x) (* 1/9 (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x)))))))))))) (pow n 3))) (+ (* 9/8 (/ (pow (log (+ 1 x)) 4) (pow n 3))) (+ (* 3/2 (/ (pow (log (+ 1 x)) 2) n)) (* 3/2 (/ (pow (log (+ 1 x)) 3) (pow n 2)))))))))))) (+ (log x) (+ (* 1/3 (/ (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (log (+ 1 x)) (* 1/9 (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x)))))))) n)) (+ (* 1/3 (/ (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (* 3/2 (pow (log (+ 1 x)) 2)) (+ (* 1/9 (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2))))) (* 1/3 (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (log (+ 1 x)) (* 1/9 (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x)))))))))))) (pow n 2))) (+ (* 1/3 (/ (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (* 3/2 (pow (log (+ 1 x)) 3)) (+ (* 1/9 (+ (* 1/6 (pow (log (+ x (pow x 2))) 3)) (+ (* 4/3 (pow (log x) 3)) (* 4/3 (pow (log (+ 1 x)) 3))))) (+ (* 1/3 (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (* 3/2 (pow (log (+ 1 x)) 2)) (+ (* 1/9 (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2))))) (* 1/3 (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (log (+ 1 x)) (* 1/9 (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))))))))))) (* 1/3 (* (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2)))) (- (log (+ 1 x)) (* 1/9 (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))))))))))) (pow n 3))) (+ (* 1/3 (/ (* (+ (* 1/6 (pow (log (+ x (pow x 2))) 3)) (+ (* 4/3 (pow (log x) 3)) (* 4/3 (pow (log (+ 1 x)) 3)))) (- (log (+ 1 x)) (* 1/9 (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x)))))))) (pow n 3))) (+ (* 1/3 (/ (* (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2)))) (- (log (+ 1 x)) (* 1/9 (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x)))))))) (pow n 2))) (+ (* 1/3 (/ (* (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2)))) (- (* 3/2 (pow (log (+ 1 x)) 2)) (+ (* 1/9 (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2))))) (* 1/3 (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (log (+ 1 x)) (* 1/9 (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x)))))))))))) (pow n 3))) (+ (* 9/8 (/ (pow (log x) 4) (pow n 3))) (+ (* 3/2 (/ (pow (log x) 2) n)) (* 3/2 (/ (pow (log x) 3) (pow n 2))))))))))))) n)","1/3","(- (+ 1/3 (/ (log (+ 1 x)) n)) (* 1/9 (/ (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) n)))","(- (+ 1/3 (+ (* 3/2 (/ (pow (log (+ 1 x)) 2) (pow n 2))) (/ (log (+ 1 x)) n))) (+ (* 1/9 (/ (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) n)) (+ (* 1/9 (/ (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2)))) (pow n 2))) (* 1/3 (/ (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (log (+ 1 x)) (* 1/9 (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x)))))))) (pow n 2))))))","(- (+ 1/3 (+ (* 3/2 (/ (pow (log (+ 1 x)) 2) (pow n 2))) (+ (* 3/2 (/ (pow (log (+ 1 x)) 3) (pow n 3))) (/ (log (+ 1 x)) n)))) (+ (* 1/9 (/ (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) n)) (+ (* 1/9 (/ (+ (* 1/6 (pow (log (+ x (pow x 2))) 3)) (+ (* 4/3 (pow (log x) 3)) (* 4/3 (pow (log (+ 1 x)) 3)))) (pow n 3))) (+ (* 1/9 (/ (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2)))) (pow n 2))) (+ (* 1/3 (/ (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (log (+ 1 x)) (* 1/9 (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x)))))))) (pow n 2))) (+ (* 1/3 (/ (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (* 3/2 (pow (log (+ 1 x)) 2)) (+ (* 1/9 (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2))))) (* 1/3 (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (log (+ 1 x)) (* 1/9 (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x)))))))))))) (pow n 3))) (* 1/3 (/ (* (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2)))) (- (log (+ 1 x)) (* 1/9 (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x)))))))) (pow n 3)))))))))","(+ 1 (/ (log (+ x (pow x 2))) n))","(+ 1 (+ (* 1/2 (/ (pow (log (+ x (pow x 2))) 2) (pow n 2))) (/ (log (+ x (pow x 2))) n)))","(+ 1 (+ (* 1/6 (/ (pow (log (+ x (pow x 2))) 3) (pow n 3))) (+ (* 1/2 (/ (pow (log (+ x (pow x 2))) 2) (pow n 2))) (/ (log (+ x (pow x 2))) n))))","3","(+ 3 (+ (* 2 (/ (log x) n)) (+ (* 2 (/ (log (+ 1 x)) n)) (/ (log (+ x (pow x 2))) n))))","(+ 3 (+ (* 1/2 (/ (pow (log (+ x (pow x 2))) 2) (pow n 2))) (+ (* 2 (/ (log x) n)) (+ (* 2 (/ (log (+ 1 x)) n)) (+ (* 2 (/ (pow (log x) 2) (pow n 2))) (+ (* 2 (/ (pow (log (+ 1 x)) 2) (pow n 2))) (/ (log (+ x (pow x 2))) n)))))))","(+ 3 (+ (* 1/6 (/ (pow (log (+ x (pow x 2))) 3) (pow n 3))) (+ (* 1/2 (/ (pow (log (+ x (pow x 2))) 2) (pow n 2))) (+ (* 4/3 (/ (pow (log x) 3) (pow n 3))) (+ (* 4/3 (/ (pow (log (+ 1 x)) 3) (pow n 3))) (+ (* 2 (/ (log x) n)) (+ (* 2 (/ (log (+ 1 x)) n)) (+ (* 2 (/ (pow (log x) 2) (pow n 2))) (+ (* 2 (/ (pow (log (+ 1 x)) 2) (pow n 2))) (/ (log (+ x (pow x 2))) n))))))))))","(- (+ 1/3 (/ (log x) n)) (* 1/9 (/ (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) n)))","(- (+ 1/3 (+ (* 3/2 (/ (pow (log x) 2) (pow n 2))) (/ (log x) n))) (+ (* 1/9 (/ (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) n)) (+ (* 1/9 (/ (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2)))) (pow n 2))) (* 1/3 (/ (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (log x) (* 1/9 (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x)))))))) (pow n 2))))))","(- (+ 1/3 (+ (* 3/2 (/ (pow (log x) 2) (pow n 2))) (+ (* 3/2 (/ (pow (log x) 3) (pow n 3))) (/ (log x) n)))) (+ (* 1/9 (/ (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) n)) (+ (* 1/9 (/ (+ (* 1/6 (pow (log (+ x (pow x 2))) 3)) (+ (* 4/3 (pow (log x) 3)) (* 4/3 (pow (log (+ 1 x)) 3)))) (pow n 3))) (+ (* 1/9 (/ (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2)))) (pow n 2))) (+ (* 1/3 (/ (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (log x) (* 1/9 (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x)))))))) (pow n 2))) (+ (* 1/3 (/ (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (* 3/2 (pow (log x) 2)) (+ (* 1/9 (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2))))) (* 1/3 (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (log x) (* 1/9 (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x)))))))))))) (pow n 3))) (* 1/3 (/ (* (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2)))) (- (log x) (* 1/9 (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x)))))))) (pow n 3)))))))))","(* -1/3 (/ (- (* -3 (log (+ 1 x))) (* -3 (log x))) n))","(* -1 (/ (- (* -1 (/ (- (* 1/3 (- (* 9/2 (pow (log (+ 1 x)) 2)) (* 9/2 (pow (log x) 2)))) (* 1/9 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* -3 (log (+ 1 x))) (* -3 (log x)))))) n)) (* -1/3 (- (* -3 (log (+ 1 x))) (* -3 (log x))))) n))","(* -1 (/ (- (* -1 (/ (- (* -1 (/ (- (* 1/3 (- (* -9/2 (pow (log (+ 1 x)) 3)) (* -9/2 (pow (log x) 3)))) (+ (* 1/9 (* (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2)))) (- (* -3 (log (+ 1 x))) (* -3 (log x))))) (* 1/3 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* 1/3 (- (* 9/2 (pow (log (+ 1 x)) 2)) (* 9/2 (pow (log x) 2)))) (* 1/9 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* -3 (log (+ 1 x))) (* -3 (log x)))))))))) n)) (* -1 (- (* 1/3 (- (* 9/2 (pow (log (+ 1 x)) 2)) (* 9/2 (pow (log x) 2)))) (* 1/9 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* -3 (log (+ 1 x))) (* -3 (log x)))))))) n)) (* -1/3 (- (* -3 (log (+ 1 x))) (* -3 (log x))))) n))","(* -1 (/ (- (* -1 (/ (- (* -1 (/ (- (* -1 (/ (- (* 1/3 (- (* 27/8 (pow (log (+ 1 x)) 4)) (* 27/8 (pow (log x) 4)))) (+ (* 1/9 (* (+ (* -4/3 (pow (log x) 3)) (+ (* -4/3 (pow (log (+ 1 x)) 3)) (* -1/6 (pow (log (+ x (pow x 2))) 3)))) (- (* -3 (log (+ 1 x))) (* -3 (log x))))) (+ (* 1/3 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* 1/3 (- (* -9/2 (pow (log (+ 1 x)) 3)) (* -9/2 (pow (log x) 3)))) (+ (* 1/9 (* (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2)))) (- (* -3 (log (+ 1 x))) (* -3 (log x))))) (* 1/3 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* 1/3 (- (* 9/2 (pow (log (+ 1 x)) 2)) (* 9/2 (pow (log x) 2)))) (* 1/9 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* -3 (log (+ 1 x))) (* -3 (log x)))))))))))) (* 1/3 (* (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2)))) (- (* 1/3 (- (* 9/2 (pow (log (+ 1 x)) 2)) (* 9/2 (pow (log x) 2)))) (* 1/9 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* -3 (log (+ 1 x))) (* -3 (log x))))))))))) n)) (* -1 (- (* 1/3 (- (* -9/2 (pow (log (+ 1 x)) 3)) (* -9/2 (pow (log x) 3)))) (+ (* 1/9 (* (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2)))) (- (* -3 (log (+ 1 x))) (* -3 (log x))))) (* 1/3 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* 1/3 (- (* 9/2 (pow (log (+ 1 x)) 2)) (* 9/2 (pow (log x) 2)))) (* 1/9 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* -3 (log (+ 1 x))) (* -3 (log x)))))))))))) n)) (* -1 (- (* 1/3 (- (* 9/2 (pow (log (+ 1 x)) 2)) (* 9/2 (pow (log x) 2)))) (* 1/9 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* -3 (log (+ 1 x))) (* -3 (log x)))))))) n)) (* -1/3 (- (* -3 (log (+ 1 x))) (* -3 (log x))))) n))","(* 1/3 (/ (- (* -3 (log (+ 1 x))) (* -3 (log x))) n))","(* -1 (/ (- (+ (* -1/3 (- (* -3 (log (+ 1 x))) (* -3 (log x)))) (* 1/3 (/ (- (* 9/2 (pow (log (+ 1 x)) 2)) (* 9/2 (pow (log x) 2))) n))) (* 1/9 (/ (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* -3 (log (+ 1 x))) (* -3 (log x)))) n))) n))","(* -1 (/ (+ (* -1 (/ (- (+ (* -1 (- (* 1/3 (- (* 9/2 (pow (log (+ 1 x)) 2)) (* 9/2 (pow (log x) 2)))) (* 1/9 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* -3 (log (+ 1 x))) (* -3 (log x))))))) (* 1/3 (/ (- (* -9/2 (pow (log (+ 1 x)) 3)) (* -9/2 (pow (log x) 3))) n))) (+ (* 1/9 (/ (* (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2)))) (- (* -3 (log (+ 1 x))) (* -3 (log x)))) n)) (* 1/3 (/ (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* 1/3 (- (* 9/2 (pow (log (+ 1 x)) 2)) (* 9/2 (pow (log x) 2)))) (* 1/9 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* -3 (log (+ 1 x))) (* -3 (log x))))))) n)))) n)) (* -1/3 (- (* -3 (log (+ 1 x))) (* -3 (log x))))) n))","(* -1 (/ (+ (* -1 (/ (+ (* -1 (- (* 1/3 (- (* 9/2 (pow (log (+ 1 x)) 2)) (* 9/2 (pow (log x) 2)))) (* 1/9 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* -3 (log (+ 1 x))) (* -3 (log x))))))) (* -1 (/ (- (+ (* -1 (- (* 1/3 (- (* -9/2 (pow (log (+ 1 x)) 3)) (* -9/2 (pow (log x) 3)))) (+ (* 1/9 (* (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2)))) (- (* -3 (log (+ 1 x))) (* -3 (log x))))) (* 1/3 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* 1/3 (- (* 9/2 (pow (log (+ 1 x)) 2)) (* 9/2 (pow (log x) 2)))) (* 1/9 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* -3 (log (+ 1 x))) (* -3 (log x))))))))))) (* 1/3 (/ (- (* 27/8 (pow (log (+ 1 x)) 4)) (* 27/8 (pow (log x) 4))) n))) (+ (* 1/9 (/ (* (+ (* -4/3 (pow (log x) 3)) (+ (* -4/3 (pow (log (+ 1 x)) 3)) (* -1/6 (pow (log (+ x (pow x 2))) 3)))) (- (* -3 (log (+ 1 x))) (* -3 (log x)))) n)) (+ (* 1/3 (/ (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* 1/3 (- (* -9/2 (pow (log (+ 1 x)) 3)) (* -9/2 (pow (log x) 3)))) (+ (* 1/9 (* (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2)))) (- (* -3 (log (+ 1 x))) (* -3 (log x))))) (* 1/3 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* 1/3 (- (* 9/2 (pow (log (+ 1 x)) 2)) (* 9/2 (pow (log x) 2)))) (* 1/9 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* -3 (log (+ 1 x))) (* -3 (log x))))))))))) n)) (* 1/3 (/ (* (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2)))) (- (* 1/3 (- (* 9/2 (pow (log (+ 1 x)) 2)) (* 9/2 (pow (log x) 2)))) (* 1/9 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* -3 (log (+ 1 x))) (* -3 (log x))))))) n))))) n))) n)) (* -1/3 (- (* -3 (log (+ 1 x))) (* -3 (log x))))) n))","(* -1 (/ (- (* -3 (log (+ 1 x))) (* -3 (log x))) n))","(* -1 (/ (- (+ (* -3 (log (+ 1 x))) (* -1 (/ (- (* 9/2 (pow (log (+ 1 x)) 2)) (* 9/2 (pow (log x) 2))) n))) (* -3 (log x))) n))","(* -1 (/ (- (+ (* -3 (log (+ 1 x))) (* -1 (/ (- (+ (* -1 (/ (- (* -9/2 (pow (log (+ 1 x)) 3)) (* -9/2 (pow (log x) 3))) n)) (* 9/2 (pow (log (+ 1 x)) 2))) (* 9/2 (pow (log x) 2))) n))) (* -3 (log x))) n))","(* -1 (/ (- (+ (* -3 (log (+ 1 x))) (* -1 (/ (- (+ (* -1 (/ (- (+ (* -9/2 (pow (log (+ 1 x)) 3)) (* -1 (/ (- (* 27/8 (pow (log (+ 1 x)) 4)) (* 27/8 (pow (log x) 4))) n))) (* -9/2 (pow (log x) 3))) n)) (* 9/2 (pow (log (+ 1 x)) 2))) (* 9/2 (pow (log x) 2))) n))) (* -3 (log x))) n))","(+ 1 (* -1 (/ (+ (* -9/2 (/ (pow (log (+ 1 x)) 2) n)) (* -3 (log (+ 1 x)))) n)))","(+ 1 (* -1 (/ (+ (* -3 (log (+ 1 x))) (* -1 (/ (+ (* 9/2 (/ (pow (log (+ 1 x)) 3) n)) (* 9/2 (pow (log (+ 1 x)) 2))) n))) n)))","(* -1 (/ (- (* -1 (log (+ 1 x))) (* -1 (log x))) n))","(* -1 (/ (- (+ (* -1 (log (+ 1 x))) (* -1 (/ (- (+ (* 1/3 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* -1 (log x)) (* 1/9 (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))))))) (* 3/2 (pow (log (+ 1 x)) 2))) (+ (* 1/3 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* -1 (log (+ 1 x))) (* 1/9 (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))))))) (* 3/2 (pow (log x) 2)))) n))) (* -1 (log x))) n))","(* -1 (/ (- (+ (* -1 (log (+ 1 x))) (* -1 (/ (- (+ (* -1 (/ (- (+ (* -3/2 (pow (log (+ 1 x)) 3)) (+ (* 1/3 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* 3/2 (pow (log x) 2)) (+ (* 1/9 (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2))))) (* 1/3 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* -1 (log x)) (* 1/9 (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))))))))))) (* 1/3 (* (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2)))) (- (* -1 (log x)) (* 1/9 (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))))))))) (+ (* -3/2 (pow (log x) 3)) (+ (* 1/3 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* 3/2 (pow (log (+ 1 x)) 2)) (+ (* 1/9 (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2))))) (* 1/3 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* -1 (log (+ 1 x))) (* 1/9 (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))))))))))) (* 1/3 (* (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2)))) (- (* -1 (log (+ 1 x))) (* 1/9 (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2))))))))))))) n)) (+ (* 1/3 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* -1 (log x)) (* 1/9 (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))))))) (* 3/2 (pow (log (+ 1 x)) 2)))) (+ (* 1/3 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* -1 (log (+ 1 x))) (* 1/9 (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))))))) (* 3/2 (pow (log x) 2)))) n))) (* -1 (log x))) n))","(* -1 (/ (- (+ (* -1 (log (+ 1 x))) (* -1 (/ (- (+ (* -1 (/ (- (+ (* -3/2 (pow (log (+ 1 x)) 3)) (+ (* -1 (/ (- (+ (* 1/3 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* -3/2 (pow (log x) 3)) (+ (* 1/9 (+ (* -4/3 (pow (log x) 3)) (+ (* -4/3 (pow (log (+ 1 x)) 3)) (* -1/6 (pow (log (+ x (pow x 2))) 3))))) (+ (* 1/3 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* 3/2 (pow (log x) 2)) (+ (* 1/9 (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2))))) (* 1/3 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* -1 (log x)) (* 1/9 (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))))))))))) (* 1/3 (* (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2)))) (- (* -1 (log x)) (* 1/9 (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2))))))))))))))) (+ (* 1/3 (* (+ (* -4/3 (pow (log x) 3)) (+ (* -4/3 (pow (log (+ 1 x)) 3)) (* -1/6 (pow (log (+ x (pow x 2))) 3)))) (- (* -1 (log x)) (* 1/9 (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))))))) (+ (* 1/3 (* (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2)))) (- (* 3/2 (pow (log x) 2)) (+ (* 1/9 (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2))))) (* 1/3 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* -1 (log x)) (* 1/9 (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))))))))))) (* 9/8 (pow (log (+ 1 x)) 4))))) (+ (* 1/3 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* -3/2 (pow (log (+ 1 x)) 3)) (+ (* 1/9 (+ (* -4/3 (pow (log x) 3)) (+ (* -4/3 (pow (log (+ 1 x)) 3)) (* -1/6 (pow (log (+ x (pow x 2))) 3))))) (+ (* 1/3 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* 3/2 (pow (log (+ 1 x)) 2)) (+ (* 1/9 (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2))))) (* 1/3 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* -1 (log (+ 1 x))) (* 1/9 (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))))))))))) (* 1/3 (* (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2)))) (- (* -1 (log (+ 1 x))) (* 1/9 (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2))))))))))))))) (+ (* 1/3 (* (+ (* -4/3 (pow (log x) 3)) (+ (* -4/3 (pow (log (+ 1 x)) 3)) (* -1/6 (pow (log (+ x (pow x 2))) 3)))) (- (* -1 (log (+ 1 x))) (* 1/9 (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))))))) (+ (* 1/3 (* (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2)))) (- (* 3/2 (pow (log (+ 1 x)) 2)) (+ (* 1/9 (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2))))) (* 1/3 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* -1 (log (+ 1 x))) (* 1/9 (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))))))))))) (* 9/8 (pow (log x) 4)))))) n)) (+ (* 1/3 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* 3/2 (pow (log x) 2)) (+ (* 1/9 (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2))))) (* 1/3 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* -1 (log x)) (* 1/9 (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))))))))))) (* 1/3 (* (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2)))) (- (* -1 (log x)) (* 1/9 (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2))))))))))))) (+ (* -3/2 (pow (log x) 3)) (+ (* 1/3 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* 3/2 (pow (log (+ 1 x)) 2)) (+ (* 1/9 (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2))))) (* 1/3 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* -1 (log (+ 1 x))) (* 1/9 (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))))))))))) (* 1/3 (* (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2)))) (- (* -1 (log (+ 1 x))) (* 1/9 (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2))))))))))))) n)) (+ (* 1/3 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* -1 (log x)) (* 1/9 (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))))))) (* 3/2 (pow (log (+ 1 x)) 2)))) (+ (* 1/3 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* -1 (log (+ 1 x))) (* 1/9 (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))))))) (* 3/2 (pow (log x) 2)))) n))) (* -1 (log x))) n))","(+ 1/3 (* -1 (/ (- (* -1 (log (+ 1 x))) (* 1/9 (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))))) n)))","(+ 1/3 (* -1 (/ (- (+ (* -1 (log (+ 1 x))) (* -1 (/ (- (* 3/2 (pow (log (+ 1 x)) 2)) (+ (* 1/9 (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2))))) (* 1/3 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* -1 (log (+ 1 x))) (* 1/9 (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))))))))) n))) (* 1/9 (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))))) n)))","(+ 1/3 (* -1 (/ (- (+ (* -1 (log (+ 1 x))) (* -1 (/ (- (+ (* -1 (/ (- (* -3/2 (pow (log (+ 1 x)) 3)) (+ (* 1/9 (+ (* -4/3 (pow (log x) 3)) (+ (* -4/3 (pow (log (+ 1 x)) 3)) (* -1/6 (pow (log (+ x (pow x 2))) 3))))) (+ (* 1/3 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* 3/2 (pow (log (+ 1 x)) 2)) (+ (* 1/9 (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2))))) (* 1/3 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* -1 (log (+ 1 x))) (* 1/9 (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))))))))))) (* 1/3 (* (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2)))) (- (* -1 (log (+ 1 x))) (* 1/9 (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2))))))))))))) n)) (* 3/2 (pow (log (+ 1 x)) 2))) (+ (* 1/9 (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2))))) (* 1/3 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* -1 (log (+ 1 x))) (* 1/9 (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))))))))) n))) (* 1/9 (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))))) n)))","(+ 1 (* -1 (/ (+ (* -1 (log (+ x (pow x 2)))) (* -1/2 (/ (pow (log (+ x (pow x 2))) 2) n))) n)))","(+ 1 (* -1 (/ (+ (* -1 (log (+ x (pow x 2)))) (* -1 (/ (+ (* 1/6 (/ (pow (log (+ x (pow x 2))) 3) n)) (* 1/2 (pow (log (+ x (pow x 2))) 2))) n))) n)))","(+ 3 (* -1 (/ (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) n)))","(+ 3 (* -1 (/ (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (+ (* -1 (log (+ x (pow x 2)))) (* -1 (/ (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2)))) n))))) n)))","(+ 3 (* -1 (/ (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (+ (* -1 (log (+ x (pow x 2)))) (* -1 (/ (+ (* -1 (/ (+ (* -4/3 (pow (log x) 3)) (+ (* -4/3 (pow (log (+ 1 x)) 3)) (* -1/6 (pow (log (+ x (pow x 2))) 3)))) n)) (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2))))) n))))) n)))","(+ 1/3 (* -1 (/ (- (* -1 (log x)) (* 1/9 (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))))) n)))","(+ 1/3 (* -1 (/ (- (+ (* -1 (log x)) (* -1 (/ (- (* 3/2 (pow (log x) 2)) (+ (* 1/9 (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2))))) (* 1/3 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* -1 (log x)) (* 1/9 (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))))))))) n))) (* 1/9 (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))))) n)))","(+ 1/3 (* -1 (/ (- (+ (* -1 (log x)) (* -1 (/ (- (+ (* -1 (/ (- (* -3/2 (pow (log x) 3)) (+ (* 1/9 (+ (* -4/3 (pow (log x) 3)) (+ (* -4/3 (pow (log (+ 1 x)) 3)) (* -1/6 (pow (log (+ x (pow x 2))) 3))))) (+ (* 1/3 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* 3/2 (pow (log x) 2)) (+ (* 1/9 (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2))))) (* 1/3 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* -1 (log x)) (* 1/9 (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))))))))))) (* 1/3 (* (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2)))) (- (* -1 (log x)) (* 1/9 (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2))))))))))))) n)) (* 3/2 (pow (log x) 2))) (+ (* 1/9 (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2))))) (* 1/3 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* -1 (log x)) (* 1/9 (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))))))))) n))) (* 1/9 (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))))) n)))"]],"series":[[13.10205078125,"((neg (/ (- (pow (+ x 1) (/ 3 n)) (pow x (/ 3 n))) (neg (+ (+ (pow x (/ 2 n)) (pow (+ (* x x) x) (/ 1 n))) (pow (+ x 1) (/ 2 n)))))) (/ (- (pow (+ x 1) (/ 3 n)) (pow x (/ 3 n))) (neg (+ (+ (pow x (/ 2 n)) (pow (+ (* x x) x) (/ 1 n))) (pow (+ x 1) (/ 2 n))))) (- (pow (+ x 1) (/ 3 n)) (pow x (/ 3 n))) (pow (+ x 1) (/ 3 n)) (- (/ (pow (+ x 1) (/ 3 n)) (+ (+ (pow x (/ 2 n)) (pow (+ (* x x) x) (/ 1 n))) (pow (+ x 1) (/ 2 n)))) (/ (pow x (/ 3 n)) (+ (+ (pow x (/ 2 n)) (pow (+ (* x x) x) (/ 1 n))) (pow (+ x 1) (/ 2 n))))) (/ (pow (+ x 1) (/ 3 n)) (+ (+ (pow x (/ 2 n)) (pow (+ (* x x) x) (/ 1 n))) (pow (+ x 1) (/ 2 n)))) (+ x 1) (pow (+ (* x x) x) (/ 1 n)) (+ (+ (pow x (/ 2 n)) (pow (+ (* x x) x) (/ 1 n))) (pow (+ x 1) (/ 2 n))) (/ (pow x (/ 3 n)) (+ (+ (pow x (/ 2 n)) (pow (+ (* x x) x) (/ 1 n))) (pow (+ x 1) (/ 2 n)))))","n","-inf"],[15.77197265625,"((neg (/ (- (pow (+ x 1) (/ 3 n)) (pow x (/ 3 n))) (neg (+ (+ (pow x (/ 2 n)) (pow (+ (* x x) x) (/ 1 n))) (pow (+ x 1) (/ 2 n)))))) (/ (- (pow (+ x 1) (/ 3 n)) (pow x (/ 3 n))) (neg (+ (+ (pow x (/ 2 n)) (pow (+ (* x x) x) (/ 1 n))) (pow (+ x 1) (/ 2 n))))) (- (pow (+ x 1) (/ 3 n)) (pow x (/ 3 n))) (pow (+ x 1) (/ 3 n)) (- (/ (pow (+ x 1) (/ 3 n)) (+ (+ (pow x (/ 2 n)) (pow (+ (* x x) x) (/ 1 n))) (pow (+ x 1) (/ 2 n)))) (/ (pow x (/ 3 n)) (+ (+ (pow x (/ 2 n)) (pow (+ (* x x) x) (/ 1 n))) (pow (+ x 1) (/ 2 n))))) (/ (pow (+ x 1) (/ 3 n)) (+ (+ (pow x (/ 2 n)) (pow (+ (* x x) x) (/ 1 n))) (pow (+ x 1) (/ 2 n)))) (+ x 1) (pow (+ (* x x) x) (/ 1 n)) (+ (+ (pow x (/ 2 n)) (pow (+ (* x x) x) (/ 1 n))) (pow (+ x 1) (/ 2 n))) (/ (pow x (/ 3 n)) (+ (+ (pow x (/ 2 n)) (pow (+ (* x x) x) (/ 1 n))) (pow (+ x 1) (/ 2 n)))))","n","inf"],[4.488037109375,"((neg (/ (- (pow (+ x 1) (/ 3 n)) (pow x (/ 3 n))) (neg (+ (+ (pow x (/ 2 n)) (pow (+ (* x x) x) (/ 1 n))) (pow (+ x 1) (/ 2 n)))))) (/ (- (pow (+ x 1) (/ 3 n)) (pow x (/ 3 n))) (neg (+ (+ (pow x (/ 2 n)) (pow (+ (* x x) x) (/ 1 n))) (pow (+ x 1) (/ 2 n))))) (- (pow (+ x 1) (/ 3 n)) (pow x (/ 3 n))) (pow (+ x 1) (/ 3 n)) (- (/ (pow (+ x 1) (/ 3 n)) (+ (+ (pow x (/ 2 n)) (pow (+ (* x x) x) (/ 1 n))) (pow (+ x 1) (/ 2 n)))) (/ (pow x (/ 3 n)) (+ (+ (pow x (/ 2 n)) (pow (+ (* x x) x) (/ 1 n))) (pow (+ x 1) (/ 2 n))))) (/ (pow (+ x 1) (/ 3 n)) (+ (+ (pow x (/ 2 n)) (pow (+ (* x x) x) (/ 1 n))) (pow (+ x 1) (/ 2 n)))) (+ x 1) (pow (+ (* x x) x) (/ 1 n)) (+ (+ (pow x (/ 2 n)) (pow (+ (* x x) x) (/ 1 n))) (pow (+ x 1) (/ 2 n))) (/ (pow x (/ 3 n)) (+ (+ (pow x (/ 2 n)) (pow (+ (* x x) x) (/ 1 n))) (pow (+ x 1) (/ 2 n)))))","n","0"],[24.041015625,"((neg (/ (- (pow (+ x 1) (/ 3 n)) (pow x (/ 3 n))) (neg (+ (+ (pow x (/ 2 n)) (pow (+ (* x x) x) (/ 1 n))) (pow (+ x 1) (/ 2 n)))))) (/ (- (pow (+ x 1) (/ 3 n)) (pow x (/ 3 n))) (neg (+ (+ (pow x (/ 2 n)) (pow (+ (* x x) x) (/ 1 n))) (pow (+ x 1) (/ 2 n))))) (- (pow (+ x 1) (/ 3 n)) (pow x (/ 3 n))) (pow (+ x 1) (/ 3 n)) (- (/ (pow (+ x 1) (/ 3 n)) (+ (+ (pow x (/ 2 n)) (pow (+ (* x x) x) (/ 1 n))) (pow (+ x 1) (/ 2 n)))) (/ (pow x (/ 3 n)) (+ (+ (pow x (/ 2 n)) (pow (+ (* x x) x) (/ 1 n))) (pow (+ x 1) (/ 2 n))))) (/ (pow (+ x 1) (/ 3 n)) (+ (+ (pow x (/ 2 n)) (pow (+ (* x x) x) (/ 1 n))) (pow (+ x 1) (/ 2 n)))) (+ x 1) (pow (+ (* x x) x) (/ 1 n)) (+ (+ (pow x (/ 2 n)) (pow (+ (* x x) x) (/ 1 n))) (pow (+ x 1) (/ 2 n))) (/ (pow x (/ 3 n)) (+ (+ (pow x (/ 2 n)) (pow (+ (* x x) x) (/ 1 n))) (pow (+ x 1) (/ 2 n)))))","x","-inf"],[27.802978515625,"((neg (/ (- (pow (+ x 1) (/ 3 n)) (pow x (/ 3 n))) (neg (+ (+ (pow x (/ 2 n)) (pow (+ (* x x) x) (/ 1 n))) (pow (+ x 1) (/ 2 n)))))) (/ (- (pow (+ x 1) (/ 3 n)) (pow x (/ 3 n))) (neg (+ (+ (pow x (/ 2 n)) (pow (+ (* x x) x) (/ 1 n))) (pow (+ x 1) (/ 2 n))))) (- (pow (+ x 1) (/ 3 n)) (pow x (/ 3 n))) (pow (+ x 1) (/ 3 n)) (- (/ (pow (+ x 1) (/ 3 n)) (+ (+ (pow x (/ 2 n)) (pow (+ (* x x) x) (/ 1 n))) (pow (+ x 1) (/ 2 n)))) (/ (pow x (/ 3 n)) (+ (+ (pow x (/ 2 n)) (pow (+ (* x x) x) (/ 1 n))) (pow (+ x 1) (/ 2 n))))) (/ (pow (+ x 1) (/ 3 n)) (+ (+ (pow x (/ 2 n)) (pow (+ (* x x) x) (/ 1 n))) (pow (+ x 1) (/ 2 n)))) (+ x 1) (pow (+ (* x x) x) (/ 1 n)) (+ (+ (pow x (/ 2 n)) (pow (+ (* x x) x) (/ 1 n))) (pow (+ x 1) (/ 2 n))) (/ (pow x (/ 3 n)) (+ (+ (pow x (/ 2 n)) (pow (+ (* x x) x) (/ 1 n))) (pow (+ x 1) (/ 2 n)))))","x","inf"],[23.671142578125,"((neg (/ (- (pow (+ x 1) (/ 3 n)) (pow x (/ 3 n))) (neg (+ (+ (pow x (/ 2 n)) (pow (+ (* x x) x) (/ 1 n))) (pow (+ x 1) (/ 2 n)))))) (/ (- (pow (+ x 1) (/ 3 n)) (pow x (/ 3 n))) (neg (+ (+ (pow x (/ 2 n)) (pow (+ (* x x) x) (/ 1 n))) (pow (+ x 1) (/ 2 n))))) (- (pow (+ x 1) (/ 3 n)) (pow x (/ 3 n))) (pow (+ x 1) (/ 3 n)) (- (/ (pow (+ x 1) (/ 3 n)) (+ (+ (pow x (/ 2 n)) (pow (+ (* x x) x) (/ 1 n))) (pow (+ x 1) (/ 2 n)))) (/ (pow x (/ 3 n)) (+ (+ (pow x (/ 2 n)) (pow (+ (* x x) x) (/ 1 n))) (pow (+ x 1) (/ 2 n))))) (/ (pow (+ x 1) (/ 3 n)) (+ (+ (pow x (/ 2 n)) (pow (+ (* x x) x) (/ 1 n))) (pow (+ x 1) (/ 2 n)))) (+ x 1) (pow (+ (* x x) x) (/ 1 n)) (+ (+ (pow x (/ 2 n)) (pow (+ (* x x) x) (/ 1 n))) (pow (+ x 1) (/ 2 n))) (/ (pow x (/ 3 n)) (+ (+ (pow x (/ 2 n)) (pow (+ (* x x) x) (/ 1 n))) (pow (+ x 1) (/ 2 n)))))","x","0"]],"time":139.86279296875,"type":"series"},{"count":[[178,0]],"inputs":[["(/ (- 1 (exp (* 3 (/ (log x) n)))) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))))","(- (* x (- (* 3 (/ 1 (* n (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (/ (* (+ (* 2 (/ 1 n)) (/ (exp (/ (log x) n)) n)) (- 1 (exp (* 3 (/ (log x) n))))) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))) (* -1 (/ (- 1 (exp (* 3 (/ (log x) n)))) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))))))","(- (* x (- (* x (- (* 9/2 (/ 1 (* (pow n 2) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (+ (* 3/2 (/ 1 (* n (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (+ (/ (* (+ (* 2 (/ 1 n)) (/ (exp (/ (log x) n)) n)) (- (* 3 (/ 1 (* n (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (/ (* (+ (* 2 (/ 1 n)) (/ (exp (/ (log x) n)) n)) (- 1 (exp (* 3 (/ (log x) n))))) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))) (/ (* (- 1 (exp (* 3 (/ (log x) n)))) (- (+ (* 2 (/ 1 (pow n 2))) (* (exp (/ (log x) n)) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n))))) (/ 1 n))) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))))) (* -1 (- (* 3 (/ 1 (* n (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (/ (* (+ (* 2 (/ 1 n)) (/ (exp (/ (log x) n)) n)) (- 1 (exp (* 3 (/ (log x) n))))) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))))) (* -1 (/ (- 1 (exp (* 3 (/ (log x) n)))) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))))))","(- (* x (- (* x (- (* x (- (+ (* 9/2 (/ 1 (* (pow n 3) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (/ 1 (* n (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (+ (* 9/2 (/ 1 (* (pow n 2) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (+ (/ (* (+ (* 2 (/ 1 n)) (/ (exp (/ (log x) n)) n)) (- (* 9/2 (/ 1 (* (pow n 2) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (+ (* 3/2 (/ 1 (* n (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (+ (/ (* (+ (* 2 (/ 1 n)) (/ (exp (/ (log x) n)) n)) (- (* 3 (/ 1 (* n (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (/ (* (+ (* 2 (/ 1 n)) (/ (exp (/ (log x) n)) n)) (- 1 (exp (* 3 (/ (log x) n))))) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))) (/ (* (- 1 (exp (* 3 (/ (log x) n)))) (- (+ (* 2 (/ 1 (pow n 2))) (* (exp (/ (log x) n)) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n))))) (/ 1 n))) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))))) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))) (+ (/ (* (- 1 (exp (* 3 (/ (log x) n)))) (- (+ (* 2/3 (/ 1 n)) (+ (* 4/3 (/ 1 (pow n 3))) (* (exp (/ (log x) n)) (- (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))) (* 1/2 (/ 1 (pow n 2))))))) (* 2 (/ 1 (pow n 2))))) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)) (/ (* (- (* 3 (/ 1 (* n (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (/ (* (+ (* 2 (/ 1 n)) (/ (exp (/ (log x) n)) n)) (- 1 (exp (* 3 (/ (log x) n))))) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2))) (- (+ (* 2 (/ 1 (pow n 2))) (* (exp (/ (log x) n)) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n))))) (/ 1 n))) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))))))))) (* -1 (- (* 9/2 (/ 1 (* (pow n 2) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (+ (* 3/2 (/ 1 (* n (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (+ (/ (* (+ (* 2 (/ 1 n)) (/ (exp (/ (log x) n)) n)) (- (* 3 (/ 1 (* n (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (/ (* (+ (* 2 (/ 1 n)) (/ (exp (/ (log x) n)) n)) (- 1 (exp (* 3 (/ (log x) n))))) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))) (/ (* (- 1 (exp (* 3 (/ (log x) n)))) (- (+ (* 2 (/ 1 (pow n 2))) (* (exp (/ (log x) n)) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n))))) (/ 1 n))) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))))))) (* -1 (- (* 3 (/ 1 (* n (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (/ (* (+ (* 2 (/ 1 n)) (/ (exp (/ (log x) n)) n)) (- 1 (exp (* 3 (/ (log x) n))))) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))))) (* -1 (/ (- 1 (exp (* 3 (/ (log x) n)))) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))))))","(* -1 (/ (- 1 (exp (* 3 (/ (log x) n)))) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))","(+ (* -1 (* x (- (* 3 (/ 1 (* n (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (/ (* (+ (* 2 (/ 1 n)) (/ (exp (/ (log x) n)) n)) (- 1 (exp (* 3 (/ (log x) n))))) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2))))) (* -1 (/ (- 1 (exp (* 3 (/ (log x) n)))) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))))))","(+ (* -1 (/ (- 1 (exp (* 3 (/ (log x) n)))) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))))) (* x (+ (* -1 (* x (- (* 9/2 (/ 1 (* (pow n 2) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (+ (* 3/2 (/ 1 (* n (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (+ (/ (* (+ (* 2 (/ 1 n)) (/ (exp (/ (log x) n)) n)) (- (* 3 (/ 1 (* n (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (/ (* (+ (* 2 (/ 1 n)) (/ (exp (/ (log x) n)) n)) (- 1 (exp (* 3 (/ (log x) n))))) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))) (/ (* (- 1 (exp (* 3 (/ (log x) n)))) (- (+ (* 2 (/ 1 (pow n 2))) (* (exp (/ (log x) n)) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n))))) (/ 1 n))) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2))))))) (* -1 (- (* 3 (/ 1 (* n (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (/ (* (+ (* 2 (/ 1 n)) (/ (exp (/ (log x) n)) n)) (- 1 (exp (* 3 (/ (log x) n))))) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))))))","(+ (* -1 (/ (- 1 (exp (* 3 (/ (log x) n)))) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))))) (* x (+ (* -1 (- (* 3 (/ 1 (* n (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (/ (* (+ (* 2 (/ 1 n)) (/ (exp (/ (log x) n)) n)) (- 1 (exp (* 3 (/ (log x) n))))) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))) (* x (+ (* -1 (* x (- (+ (* 9/2 (/ 1 (* (pow n 3) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (/ 1 (* n (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (+ (* 9/2 (/ 1 (* (pow n 2) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (+ (/ (* (+ (* 2 (/ 1 n)) (/ (exp (/ (log x) n)) n)) (- (* 9/2 (/ 1 (* (pow n 2) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (+ (* 3/2 (/ 1 (* n (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (+ (/ (* (+ (* 2 (/ 1 n)) (/ (exp (/ (log x) n)) n)) (- (* 3 (/ 1 (* n (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (/ (* (+ (* 2 (/ 1 n)) (/ (exp (/ (log x) n)) n)) (- 1 (exp (* 3 (/ (log x) n))))) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))) (/ (* (- 1 (exp (* 3 (/ (log x) n)))) (- (+ (* 2 (/ 1 (pow n 2))) (* (exp (/ (log x) n)) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n))))) (/ 1 n))) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))))) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))) (+ (/ (* (- 1 (exp (* 3 (/ (log x) n)))) (- (+ (* 2/3 (/ 1 n)) (+ (* 4/3 (/ 1 (pow n 3))) (* (exp (/ (log x) n)) (- (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))) (* 1/2 (/ 1 (pow n 2))))))) (* 2 (/ 1 (pow n 2))))) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)) (/ (* (- (* 3 (/ 1 (* n (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (/ (* (+ (* 2 (/ 1 n)) (/ (exp (/ (log x) n)) n)) (- 1 (exp (* 3 (/ (log x) n))))) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2))) (- (+ (* 2 (/ 1 (pow n 2))) (* (exp (/ (log x) n)) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n))))) (/ 1 n))) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))))))) (* -1 (- (* 9/2 (/ 1 (* (pow n 2) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (+ (* 3/2 (/ 1 (* n (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (+ (/ (* (+ (* 2 (/ 1 n)) (/ (exp (/ (log x) n)) n)) (- (* 3 (/ 1 (* n (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (/ (* (+ (* 2 (/ 1 n)) (/ (exp (/ (log x) n)) n)) (- 1 (exp (* 3 (/ (log x) n))))) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))) (/ (* (- 1 (exp (* 3 (/ (log x) n)))) (- (+ (* 2 (/ 1 (pow n 2))) (* (exp (/ (log x) n)) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n))))) (/ 1 n))) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))))))))))","(- 1 (exp (* 3 (/ (log x) n))))","(- (+ 1 (* 3 (/ x n))) (exp (* 3 (/ (log x) n))))","(- (+ 1 (* x (+ (* x (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (* 3 (/ 1 n))))) (exp (* 3 (/ (log x) n))))","(- (+ 1 (* x (+ (* x (- (+ (* 9/2 (/ 1 (pow n 2))) (* x (- (+ (* 9/2 (/ 1 (pow n 3))) (/ 1 n)) (* 9/2 (/ 1 (pow n 2)))))) (* 3/2 (/ 1 n)))) (* 3 (/ 1 n))))) (exp (* 3 (/ (log x) n))))","1","(+ 1 (* 3 (/ x n)))","(+ 1 (* x (+ (* x (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (* 3 (/ 1 n)))))","(+ 1 (* x (+ (* x (- (+ (* 9/2 (/ 1 (pow n 2))) (* x (- (+ (* 9/2 (/ 1 (pow n 3))) (/ 1 n)) (* 9/2 (/ 1 (pow n 2)))))) (* 3/2 (/ 1 n)))) (* 3 (/ 1 n)))))","(- (/ 1 (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))) (/ (exp (* 3 (/ (log x) n))) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))","(- (+ (* x (- (+ (* 3 (/ 1 (* n (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (/ (* (exp (* 3 (/ (log x) n))) (+ (* 2 (/ 1 n)) (/ (exp (/ (log x) n)) n))) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2))) (+ (* 2 (/ 1 (* n (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))) (/ (exp (/ (log x) n)) (* n (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))))) (/ 1 (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))))) (/ (exp (* 3 (/ (log x) n))) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))","(- (+ (* x (- (+ (* 3 (/ 1 (* n (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (+ (* x (- (+ (* -1 (/ (* (exp (* 3 (/ (log x) n))) (pow (+ (* 2 (/ 1 n)) (/ (exp (/ (log x) n)) n)) 2)) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 3))) (+ (* 9/2 (/ 1 (* (pow n 2) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (+ (/ 1 (* n (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2))) (/ (* (exp (* 3 (/ (log x) n))) (- (+ (* 2 (/ 1 (pow n 2))) (* (exp (/ (log x) n)) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n))))) (/ 1 n))) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2))))) (+ (* 3/2 (/ 1 (* n (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (+ (* 2 (/ 1 (* (pow n 2) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))) (+ (/ (* (exp (/ (log x) n)) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)) (/ (* (+ (* 2 (/ 1 n)) (/ (exp (/ (log x) n)) n)) (- (* 3 (/ 1 (* n (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (+ (* 2 (/ 1 (* n (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))) (/ (exp (/ (log x) n)) (* n (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))))) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))))))))) (/ (* (exp (* 3 (/ (log x) n))) (+ (* 2 (/ 1 n)) (/ (exp (/ (log x) n)) n))) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))) (+ (* 2 (/ 1 (* n (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))) (/ (exp (/ (log x) n)) (* n (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))))) (/ 1 (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))))) (/ (exp (* 3 (/ (log x) n))) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))","(- (+ (* x (- (+ (* 3 (/ 1 (* n (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (+ (* x (- (+ (* -1 (/ (* (exp (* 3 (/ (log x) n))) (pow (+ (* 2 (/ 1 n)) (/ (exp (/ (log x) n)) n)) 2)) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 3))) (+ (* 9/2 (/ 1 (* (pow n 2) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (+ (* x (- (+ (* -1 (/ (* (exp (* 3 (/ (log x) n))) (* (+ (* 2 (/ 1 n)) (/ (exp (/ (log x) n)) n)) (- (+ (* 2 (/ 1 (pow n 2))) (* (exp (/ (log x) n)) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n))))) (/ 1 n)))) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 3))) (+ (* -1 (/ (* (+ (* -1 (/ (* (exp (* 3 (/ (log x) n))) (pow (+ (* 2 (/ 1 n)) (/ (exp (/ (log x) n)) n)) 2)) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 3))) (/ (* (exp (* 3 (/ (log x) n))) (- (+ (* 2 (/ 1 (pow n 2))) (* (exp (/ (log x) n)) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n))))) (/ 1 n))) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2))) (+ (* 2 (/ 1 n)) (/ (exp (/ (log x) n)) n))) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))))) (+ (* 2 (/ 1 (* (pow n 2) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))) (+ (* 9/2 (/ 1 (* (pow n 3) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (+ (/ 1 (* n (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))))) (/ (* (exp (* 3 (/ (log x) n))) (- (+ (* 2/3 (/ 1 n)) (+ (* 4/3 (/ 1 (pow n 3))) (* (exp (/ (log x) n)) (- (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))) (* 1/2 (/ 1 (pow n 2))))))) (* 2 (/ 1 (pow n 2))))) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2))))))) (+ (* 2/3 (/ 1 (* n (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))) (+ (* 4/3 (/ 1 (* (pow n 3) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))) (+ (* 9/2 (/ 1 (* (pow n 2) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (+ (/ (* (exp (/ (log x) n)) (- (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))) (* 1/2 (/ 1 (pow n 2))))) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)) (+ (/ (* (+ (* 2 (/ 1 n)) (/ (exp (/ (log x) n)) n)) (- (+ (* 9/2 (/ 1 (* (pow n 2) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (/ 1 (* n (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))) (+ (* 3/2 (/ 1 (* n (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (+ (* 2 (/ 1 (* (pow n 2) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))) (+ (/ (* (exp (/ (log x) n)) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)) (/ (* (+ (* 2 (/ 1 n)) (/ (exp (/ (log x) n)) n)) (- (* 3 (/ 1 (* n (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (+ (* 2 (/ 1 (* n (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))) (/ (exp (/ (log x) n)) (* n (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))))) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))))))))) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))) (/ (* (- (* 3 (/ 1 (* n (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (+ (* 2 (/ 1 (* n (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))) (/ (exp (/ (log x) n)) (* n (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2))))) (- (+ (* 2 (/ 1 (pow n 2))) (* (exp (/ (log x) n)) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n))))) (/ 1 n))) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))))))))))) (+ (/ 1 (* n (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2))) (/ (* (exp (* 3 (/ (log x) n))) (- (+ (* 2 (/ 1 (pow n 2))) (* (exp (/ (log x) n)) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n))))) (/ 1 n))) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))))) (+ (* 3/2 (/ 1 (* n (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (+ (* 2 (/ 1 (* (pow n 2) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))) (+ (/ (* (exp (/ (log x) n)) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)) (/ (* (+ (* 2 (/ 1 n)) (/ (exp (/ (log x) n)) n)) (- (* 3 (/ 1 (* n (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (+ (* 2 (/ 1 (* n (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))) (/ (exp (/ (log x) n)) (* n (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))))) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))))))))) (/ (* (exp (* 3 (/ (log x) n))) (+ (* 2 (/ 1 n)) (/ (exp (/ (log x) n)) n))) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))) (+ (* 2 (/ 1 (* n (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))) (/ (exp (/ (log x) n)) (* n (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))))) (/ 1 (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))))) (/ (exp (* 3 (/ (log x) n))) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))","(/ 1 (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))))","(+ (* x (- (* 3 (/ 1 (* n (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (+ (* 2 (/ 1 (* n (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))) (/ (exp (/ (log x) n)) (* n (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))))) (/ 1 (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))","(+ (* x (- (+ (* 3 (/ 1 (* n (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (* x (- (+ (* 9/2 (/ 1 (* (pow n 2) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (/ 1 (* n (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))) (+ (* 3/2 (/ 1 (* n (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (+ (* 2 (/ 1 (* (pow n 2) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))) (+ (/ (* (exp (/ (log x) n)) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)) (/ (* (+ (* 2 (/ 1 n)) (/ (exp (/ (log x) n)) n)) (- (* 3 (/ 1 (* n (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (+ (* 2 (/ 1 (* n (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))) (/ (exp (/ (log x) n)) (* n (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))))) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))))))) (+ (* 2 (/ 1 (* n (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))) (/ (exp (/ (log x) n)) (* n (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))))) (/ 1 (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))","(+ (* x (- (+ (* 3 (/ 1 (* n (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (* x (- (+ (* 9/2 (/ 1 (* (pow n 2) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (+ (* x (- (+ (* 2 (/ 1 (* (pow n 2) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))) (+ (* 9/2 (/ 1 (* (pow n 3) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (/ 1 (* n (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))))))) (+ (* 2/3 (/ 1 (* n (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))) (+ (* 4/3 (/ 1 (* (pow n 3) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))) (+ (* 9/2 (/ 1 (* (pow n 2) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (+ (/ (* (exp (/ (log x) n)) (- (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))) (* 1/2 (/ 1 (pow n 2))))) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)) (+ (/ (* (+ (* 2 (/ 1 n)) (/ (exp (/ (log x) n)) n)) (- (+ (* 9/2 (/ 1 (* (pow n 2) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (/ 1 (* n (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))) (+ (* 3/2 (/ 1 (* n (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (+ (* 2 (/ 1 (* (pow n 2) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))) (+ (/ (* (exp (/ (log x) n)) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)) (/ (* (+ (* 2 (/ 1 n)) (/ (exp (/ (log x) n)) n)) (- (* 3 (/ 1 (* n (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (+ (* 2 (/ 1 (* n (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))) (/ (exp (/ (log x) n)) (* n (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))))) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))))))))) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))) (/ (* (- (* 3 (/ 1 (* n (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (+ (* 2 (/ 1 (* n (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))) (/ (exp (/ (log x) n)) (* n (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2))))) (- (+ (* 2 (/ 1 (pow n 2))) (* (exp (/ (log x) n)) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n))))) (/ 1 n))) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))))))))))) (/ 1 (* n (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2))))) (+ (* 3/2 (/ 1 (* n (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (+ (* 2 (/ 1 (* (pow n 2) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))) (+ (/ (* (exp (/ (log x) n)) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)) (/ (* (+ (* 2 (/ 1 n)) (/ (exp (/ (log x) n)) n)) (- (* 3 (/ 1 (* n (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))) (+ (* 2 (/ 1 (* n (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))) (/ (exp (/ (log x) n)) (* n (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))))) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))))))) (+ (* 2 (/ 1 (* n (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))) (/ (exp (/ (log x) n)) (* n (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))))) (/ 1 (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))","(+ 1 x)","(exp (/ (log x) n))","(+ (exp (/ (log x) n)) (/ (* x (exp (/ (log x) n))) n))","(+ (exp (/ (log x) n)) (* x (+ (* x (* (exp (/ (log x) n)) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n))))) (/ (exp (/ (log x) n)) n))))","(+ (exp (/ (log x) n)) (* x (+ (* x (+ (* x (* (exp (/ (log x) n)) (- (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))) (* 1/2 (/ 1 (pow n 2)))))) (* (exp (/ (log x) n)) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))))) (/ (exp (/ (log x) n)) n))))","(+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))","(+ 1 (+ (exp (* 2 (/ (log x) n))) (+ (exp (/ (log x) n)) (* x (+ (* 2 (/ 1 n)) (/ (exp (/ (log x) n)) n))))))","(+ 1 (+ (exp (* 2 (/ (log x) n))) (+ (exp (/ (log x) n)) (* x (+ (* 2 (/ 1 n)) (+ (* x (- (+ (* 2 (/ 1 (pow n 2))) (* (exp (/ (log x) n)) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n))))) (/ 1 n))) (/ (exp (/ (log x) n)) n)))))))","(+ 1 (+ (exp (* 2 (/ (log x) n))) (+ (exp (/ (log x) n)) (* x (+ (* 2 (/ 1 n)) (+ (* x (- (+ (* 2 (/ 1 (pow n 2))) (+ (* x (- (+ (* 2/3 (/ 1 n)) (+ (* 4/3 (/ 1 (pow n 3))) (* (exp (/ (log x) n)) (- (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))) (* 1/2 (/ 1 (pow n 2))))))) (* 2 (/ 1 (pow n 2))))) (* (exp (/ (log x) n)) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))))) (/ 1 n))) (/ (exp (/ (log x) n)) n)))))))","(/ (exp (* 3 (/ (log x) n))) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))))","(+ (* -1 (/ (* x (* (exp (* 3 (/ (log x) n))) (+ (* 2 (/ 1 n)) (/ (exp (/ (log x) n)) n)))) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2))) (/ (exp (* 3 (/ (log x) n))) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))","(+ (* x (- (* -1 (* x (+ (* -1 (/ (* (exp (* 3 (/ (log x) n))) (pow (+ (* 2 (/ 1 n)) (/ (exp (/ (log x) n)) n)) 2)) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 3))) (/ (* (exp (* 3 (/ (log x) n))) (- (+ (* 2 (/ 1 (pow n 2))) (* (exp (/ (log x) n)) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n))))) (/ 1 n))) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2))))) (/ (* (exp (* 3 (/ (log x) n))) (+ (* 2 (/ 1 n)) (/ (exp (/ (log x) n)) n))) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))) (/ (exp (* 3 (/ (log x) n))) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))","(+ (* x (- (* x (- (* -1 (* x (+ (* -1 (/ (* (exp (* 3 (/ (log x) n))) (* (+ (* 2 (/ 1 n)) (/ (exp (/ (log x) n)) n)) (- (+ (* 2 (/ 1 (pow n 2))) (* (exp (/ (log x) n)) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n))))) (/ 1 n)))) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 3))) (+ (* -1 (/ (* (+ (* -1 (/ (* (exp (* 3 (/ (log x) n))) (pow (+ (* 2 (/ 1 n)) (/ (exp (/ (log x) n)) n)) 2)) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 3))) (/ (* (exp (* 3 (/ (log x) n))) (- (+ (* 2 (/ 1 (pow n 2))) (* (exp (/ (log x) n)) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n))))) (/ 1 n))) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2))) (+ (* 2 (/ 1 n)) (/ (exp (/ (log x) n)) n))) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))))) (/ (* (exp (* 3 (/ (log x) n))) (- (+ (* 2/3 (/ 1 n)) (+ (* 4/3 (/ 1 (pow n 3))) (* (exp (/ (log x) n)) (- (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))) (* 1/2 (/ 1 (pow n 2))))))) (* 2 (/ 1 (pow n 2))))) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))))) (+ (* -1 (/ (* (exp (* 3 (/ (log x) n))) (pow (+ (* 2 (/ 1 n)) (/ (exp (/ (log x) n)) n)) 2)) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 3))) (/ (* (exp (* 3 (/ (log x) n))) (- (+ (* 2 (/ 1 (pow n 2))) (* (exp (/ (log x) n)) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n))))) (/ 1 n))) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2))))) (/ (* (exp (* 3 (/ (log x) n))) (+ (* 2 (/ 1 n)) (/ (exp (/ (log x) n)) n))) (pow (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n)))) 2)))) (/ (exp (* 3 (/ (log x) n))) (+ 1 (+ (exp (* 2 (/ (log x) n))) (exp (/ (log x) n))))))","(* 3 (/ (exp (* -3 (/ (log (/ 1 x)) n))) (* n (* x (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))))))","(/ (- (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (* x (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))))) (+ (* -3 (/ (exp (* -3 (/ (log (/ 1 x)) n))) (* n (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))))) (* 3 (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n))) (* n (* x (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2))))))) x)","(/ (- (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (- (+ (* 9/2 (/ 1 (pow n 3))) (/ 1 n)) (* 9/2 (/ 1 (pow n 2))))) (* (pow x 2) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))))) (+ (* -3 (/ (exp (* -3 (/ (log (/ 1 x)) n))) (* n (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))))) (+ (* -1 (/ (- (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))) (* 3 (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n))) (* n (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2))))) x)) (+ (* 3 (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))))) (* n (* (pow x 2) (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2))))) (/ (* (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (- (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))) (* 3 (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n))) (* n (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2)))))) (* (pow x 2) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))))))))) x)","(/ (- (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (- (+ (* 27/8 (/ 1 (pow n 4))) (* 33/8 (/ 1 (pow n 2)))) (+ (* 3/4 (/ 1 n)) (* 27/4 (/ 1 (pow n 3)))))) (* (pow x 3) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))))) (+ (* -3 (/ (exp (* -3 (/ (log (/ 1 x)) n))) (* n (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))))) (+ (* -1 (/ (- (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))) (* 3 (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n))) (* n (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2))))) x)) (+ (* -1 (/ (- (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (- (+ (* 9/2 (/ 1 (pow n 3))) (/ 1 n)) (* 9/2 (/ 1 (pow n 2))))) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))) (+ (* 3 (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))))) (* n (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2)))) (/ (* (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (- (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))) (* 3 (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n))) (* n (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2)))))) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))))) (pow x 2))) (+ (* 3 (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))) (* 1/2 (/ 1 (pow n 2))))) (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (+ (* 2/3 (/ 1 n)) (* 4/3 (/ 1 (pow n 3)))) (* 2 (/ 1 (pow n 2))))))) (* n (* (pow x 3) (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2))))) (+ (/ (* (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (- (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (- (+ (* 9/2 (/ 1 (pow n 3))) (/ 1 n)) (* 9/2 (/ 1 (pow n 2))))) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))) (+ (* 3 (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))))) (* n (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2)))) (/ (* (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (- (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))) (* 3 (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n))) (* n (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2)))))) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))))))) (* (pow x 3) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))))) (/ (* (+ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n)))) (- (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))) (* 3 (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n))) (* n (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2)))))) (* (pow x 3) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))))))))))) x)","(* -3 (/ (exp (* -3 (/ (log (/ 1 x)) n))) (* n (* x (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))))))","(/ (+ (* -3 (/ (exp (* -3 (/ (log (/ 1 x)) n))) (* n (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))))) (* -1 (/ (- (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))) (* 3 (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n))) (* n (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2))))) x))) x)","(/ (+ (* -3 (/ (exp (* -3 (/ (log (/ 1 x)) n))) (* n (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))))) (+ (* -1 (/ (- (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))) (* 3 (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n))) (* n (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2))))) x)) (* -1 (/ (- (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (- (+ (* 9/2 (/ 1 (pow n 3))) (/ 1 n)) (* 9/2 (/ 1 (pow n 2))))) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))) (+ (* 3 (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))))) (* n (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2)))) (/ (* (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (- (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))) (* 3 (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n))) (* n (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2)))))) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))))) (pow x 2))))) x)","(/ (+ (* -3 (/ (exp (* -3 (/ (log (/ 1 x)) n))) (* n (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))))) (+ (* -1 (/ (- (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))) (* 3 (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n))) (* n (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2))))) x)) (+ (* -1 (/ (- (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (- (+ (* 27/8 (/ 1 (pow n 4))) (* 33/8 (/ 1 (pow n 2)))) (+ (* 3/4 (/ 1 n)) (* 27/4 (/ 1 (pow n 3)))))) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))) (+ (* 3 (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))) (* 1/2 (/ 1 (pow n 2))))) (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (+ (* 2/3 (/ 1 n)) (* 4/3 (/ 1 (pow n 3)))) (* 2 (/ 1 (pow n 2))))))) (* n (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2)))) (+ (/ (* (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (- (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (- (+ (* 9/2 (/ 1 (pow n 3))) (/ 1 n)) (* 9/2 (/ 1 (pow n 2))))) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))) (+ (* 3 (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))))) (* n (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2)))) (/ (* (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (- (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))) (* 3 (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n))) (* n (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2)))))) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))))))) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))) (/ (* (+ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n)))) (- (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))) (* 3 (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n))) (* n (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2)))))) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))))))) (pow x 3))) (* -1 (/ (- (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (- (+ (* 9/2 (/ 1 (pow n 3))) (/ 1 n)) (* 9/2 (/ 1 (pow n 2))))) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))) (+ (* 3 (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))))) (* n (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2)))) (/ (* (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (- (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))) (* 3 (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n))) (* n (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2)))))) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))))) (pow x 2)))))) x)","(* 3 (/ (exp (* -3 (/ (log (/ 1 x)) n))) (* n x)))","(/ (+ (* 3 (/ (exp (* -3 (/ (log (/ 1 x)) n))) n)) (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) x)) x)","(/ (+ (* 3 (/ (exp (* -3 (/ (log (/ 1 x)) n))) n)) (+ (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) x) (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (- (+ (* 9/2 (/ 1 (pow n 3))) (/ 1 n)) (* 9/2 (/ 1 (pow n 2))))) (pow x 2)))) x)","(/ (+ (* 3 (/ (exp (* -3 (/ (log (/ 1 x)) n))) n)) (+ (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) x) (+ (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (- (+ (* 27/8 (/ 1 (pow n 4))) (* 33/8 (/ 1 (pow n 2)))) (+ (* 3/4 (/ 1 n)) (* 27/4 (/ 1 (pow n 3)))))) (pow x 3)) (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (- (+ (* 9/2 (/ 1 (pow n 3))) (/ 1 n)) (* 9/2 (/ 1 (pow n 2))))) (pow x 2))))) x)","(exp (* -3 (/ (log (/ 1 x)) n)))","(+ (exp (* -3 (/ (log (/ 1 x)) n))) (* 3 (/ (exp (* -3 (/ (log (/ 1 x)) n))) (* n x))))","(+ (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* 3 (/ (exp (* -3 (/ (log (/ 1 x)) n))) (* n x))) (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (pow x 2))))","(+ (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* 3 (/ (exp (* -3 (/ (log (/ 1 x)) n))) (* n x))) (+ (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (pow x 2)) (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (- (+ (* 9/2 (/ 1 (pow n 3))) (/ 1 n)) (* 9/2 (/ 1 (pow n 2))))) (pow x 3)))))","(/ (- (+ (* -1 (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (pow (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) 2)) (* x (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 3)))) (+ (* 3 (/ (exp (* -3 (/ (log (/ 1 x)) n))) (* n (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))))) (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (* x (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))))))) (/ (* (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (- (* 3 (/ (exp (* -3 (/ (log (/ 1 x)) n))) (* n (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))))) (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n))) (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2)))) (* x (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))))) x)","(/ (- (+ (* -1 (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (* (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (+ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n)))))) (* (pow x 2) (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 3)))) (+ (* -1 (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (pow (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) 2)) (* x (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 3)))) (+ (* -1 (/ (* (+ (* -1 (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (pow (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) 2)) (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 3))) (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))))) (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2))) (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n))) (* (pow x 2) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))))) (+ (* 3 (/ (exp (* -3 (/ (log (/ 1 x)) n))) (* n (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))))) (+ (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (* x (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))))) (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (- (+ (* 9/2 (/ 1 (pow n 3))) (/ 1 n)) (* 9/2 (/ 1 (pow n 2))))) (* (pow x 2) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))))))))) (+ (/ (* (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (- (* 3 (/ (exp (* -3 (/ (log (/ 1 x)) n))) (* n (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))))) (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n))) (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2)))) (* x (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))))) (+ (/ (* (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (- (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))) (+ (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))))) (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2)) (/ (* (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (- (* 3 (/ (exp (* -3 (/ (log (/ 1 x)) n))) (* n (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))))) (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n))) (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2)))) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))))))) (* (pow x 2) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))))) (/ (* (+ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n)))) (- (* 3 (/ (exp (* -3 (/ (log (/ 1 x)) n))) (* n (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))))) (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n))) (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2)))) (* (pow x 2) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))))))) x)","(/ (- (+ (* -1 (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (* (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (+ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n)))))) (* (pow x 2) (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 3)))) (+ (* -1 (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (* (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (+ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))) (* 1/2 (/ 1 (pow n 2))))) (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (+ (* 2/3 (/ 1 n)) (* 4/3 (/ 1 (pow n 3)))) (* 2 (/ 1 (pow n 2)))))))) (* (pow x 3) (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 3)))) (+ (* -1 (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (pow (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) 2)) (* x (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 3)))) (+ (* -1 (/ (* (+ (* -1 (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (* (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (+ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n)))))) (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 3))) (+ (* -1 (/ (* (+ (* -1 (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (pow (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) 2)) (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 3))) (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))))) (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2))) (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n))) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))))) (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))) (* 1/2 (/ 1 (pow n 2))))) (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (+ (* 2/3 (/ 1 n)) (* 4/3 (/ 1 (pow n 3)))) (* 2 (/ 1 (pow n 2))))))) (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2)))) (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n))) (* (pow x 3) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))))) (+ (* -1 (/ (* (+ (* -1 (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (pow (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) 2)) (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 3))) (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))))) (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2))) (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n))) (* (pow x 2) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))))) (+ (* -1 (/ (* (+ (* -1 (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (pow (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) 2)) (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 3))) (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))))) (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2))) (+ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))))) (* (pow x 3) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))))) (+ (* 3 (/ (exp (* -3 (/ (log (/ 1 x)) n))) (* n (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))))) (+ (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (* x (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))))) (+ (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (- (+ (* 27/8 (/ 1 (pow n 4))) (* 33/8 (/ 1 (pow n 2)))) (+ (* 3/4 (/ 1 n)) (* 27/4 (/ 1 (pow n 3)))))) (* (pow x 3) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))))) (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (- (+ (* 9/2 (/ 1 (pow n 3))) (/ 1 n)) (* 9/2 (/ 1 (pow n 2))))) (* (pow x 2) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))))))))))))) (+ (/ (* (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (- (* 3 (/ (exp (* -3 (/ (log (/ 1 x)) n))) (* n (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))))) (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n))) (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2)))) (* x (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))))) (+ (/ (* (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (- (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))) (+ (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))))) (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2)) (/ (* (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (- (* 3 (/ (exp (* -3 (/ (log (/ 1 x)) n))) (* n (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))))) (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n))) (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2)))) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))))))) (* (pow x 2) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))))) (+ (/ (* (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (- (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (- (+ (* 9/2 (/ 1 (pow n 3))) (/ 1 n)) (* 9/2 (/ 1 (pow n 2))))) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))) (+ (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))) (* 1/2 (/ 1 (pow n 2))))) (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (+ (* 2/3 (/ 1 n)) (* 4/3 (/ 1 (pow n 3)))) (* 2 (/ 1 (pow n 2))))))) (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2)) (+ (/ (* (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (- (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))) (+ (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))))) (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2)) (/ (* (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (- (* 3 (/ (exp (* -3 (/ (log (/ 1 x)) n))) (* n (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))))) (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n))) (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2)))) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))))))) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))) (/ (* (+ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n)))) (- (* 3 (/ (exp (* -3 (/ (log (/ 1 x)) n))) (* n (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))))) (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n))) (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2)))) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))))))) (* (pow x 3) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))))) (+ (/ (* (+ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n)))) (- (* 3 (/ (exp (* -3 (/ (log (/ 1 x)) n))) (* n (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))))) (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n))) (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2)))) (* (pow x 2) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))))) (+ (/ (* (+ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n)))) (- (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))) (+ (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))))) (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2)) (/ (* (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (- (* 3 (/ (exp (* -3 (/ (log (/ 1 x)) n))) (* n (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))))) (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n))) (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2)))) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))))))) (* (pow x 3) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))))) (/ (* (+ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))) (* 1/2 (/ 1 (pow n 2))))) (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (+ (* 2/3 (/ 1 n)) (* 4/3 (/ 1 (pow n 3)))) (* 2 (/ 1 (pow n 2)))))) (- (* 3 (/ (exp (* -3 (/ (log (/ 1 x)) n))) (* n (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))))) (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n))) (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2)))) (* (pow x 3) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))))))))))) x)","(/ (exp (* -3 (/ (log (/ 1 x)) n))) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))))","(- (+ (* 3 (/ (exp (* -3 (/ (log (/ 1 x)) n))) (* n (* x (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))))))) (/ (exp (* -3 (/ (log (/ 1 x)) n))) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))))) (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n))) (* x (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2))))","(- (+ (* 3 (/ (exp (* -3 (/ (log (/ 1 x)) n))) (* n (* x (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))))))) (+ (/ (exp (* -3 (/ (log (/ 1 x)) n))) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))) (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (* (pow x 2) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))))))) (+ (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n))) (* x (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2))) (+ (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))))) (* (pow x 2) (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2))) (/ (* (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (- (* 3 (/ (exp (* -3 (/ (log (/ 1 x)) n))) (* n (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))))) (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n))) (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2)))) (* (pow x 2) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))))))))","(- (+ (* 3 (/ (exp (* -3 (/ (log (/ 1 x)) n))) (* n (* x (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))))))) (+ (/ (exp (* -3 (/ (log (/ 1 x)) n))) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))) (+ (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (* (pow x 2) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))))) (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (- (+ (* 9/2 (/ 1 (pow n 3))) (/ 1 n)) (* 9/2 (/ 1 (pow n 2))))) (* (pow x 3) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))))))) (+ (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n))) (* x (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2))) (+ (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))))) (* (pow x 2) (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2))) (+ (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))) (* 1/2 (/ 1 (pow n 2))))) (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (+ (* 2/3 (/ 1 n)) (* 4/3 (/ 1 (pow n 3)))) (* 2 (/ 1 (pow n 2))))))) (* (pow x 3) (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2))) (+ (/ (* (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (- (* 3 (/ (exp (* -3 (/ (log (/ 1 x)) n))) (* n (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))))) (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n))) (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2)))) (* (pow x 2) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))))) (+ (/ (* (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (- (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))) (+ (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))))) (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2)) (/ (* (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (- (* 3 (/ (exp (* -3 (/ (log (/ 1 x)) n))) (* n (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))))) (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n))) (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2)))) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))))))) (* (pow x 3) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))))) (/ (* (+ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n)))) (- (* 3 (/ (exp (* -3 (/ (log (/ 1 x)) n))) (* n (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))))) (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n))) (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2)))) (* (pow x 3) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))))))))))","x","(* x (+ 1 (/ 1 x)))","(exp (* -2 (/ (log (/ 1 x)) n)))","(+ (exp (* -2 (/ (log (/ 1 x)) n))) (/ (exp (* -2 (/ (log (/ 1 x)) n))) (* n x)))","(+ (exp (* -2 (/ (log (/ 1 x)) n))) (+ (/ (exp (* -2 (/ (log (/ 1 x)) n))) (* n x)) (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (pow x 2))))","(+ (exp (* -2 (/ (log (/ 1 x)) n))) (+ (/ (exp (* -2 (/ (log (/ 1 x)) n))) (* n x)) (+ (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (pow x 2)) (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))) (* 1/2 (/ 1 (pow n 2))))) (pow x 3)))))","(+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))","(+ (exp (* -2 (/ (log (/ 1 x)) n))) (+ (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))) (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) (* n x))) (/ (exp (* -2 (/ (log (/ 1 x)) n))) (* n x)))))","(+ (exp (* -2 (/ (log (/ 1 x)) n))) (+ (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))) (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) (* n x))) (+ (/ (exp (* -2 (/ (log (/ 1 x)) n))) (* n x)) (+ (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (pow x 2)) (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))) (pow x 2)))))))","(+ (exp (* -2 (/ (log (/ 1 x)) n))) (+ (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))) (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) (* n x))) (+ (/ (exp (* -2 (/ (log (/ 1 x)) n))) (* n x)) (+ (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (pow x 2)) (+ (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))) (pow x 2)) (+ (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))) (* 1/2 (/ 1 (pow n 2))))) (pow x 3)) (/ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (+ (* 2/3 (/ 1 n)) (* 4/3 (/ 1 (pow n 3)))) (* 2 (/ 1 (pow n 2))))) (pow x 3)))))))))","(+ (* -1 (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n))) (* x (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2)))) (/ (exp (* -3 (/ (log (/ 1 x)) n))) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n)))))))","(- (+ (* -1 (/ (+ (* -1 (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (pow (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) 2)) (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 3))) (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))))) (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2))) (pow x 2))) (/ (exp (* -3 (/ (log (/ 1 x)) n))) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))))) (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n))) (* x (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2))))","(- (+ (* -1 (/ (+ (* -1 (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (* (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (+ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n)))))) (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 3))) (+ (* -1 (/ (* (+ (* -1 (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (pow (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) 2)) (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 3))) (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))))) (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2))) (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n))) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))))) (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))) (* 1/2 (/ 1 (pow n 2))))) (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (+ (* 2/3 (/ 1 n)) (* 4/3 (/ 1 (pow n 3)))) (* 2 (/ 1 (pow n 2))))))) (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2)))) (pow x 3))) (/ (exp (* -3 (/ (log (/ 1 x)) n))) (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))))) (+ (* -1 (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (pow (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) 2)) (* (pow x 2) (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 3)))) (+ (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* 2 (/ (exp (* -2 (/ (log (/ 1 x)) n))) n)) (/ (exp (* -2 (/ (log (/ 1 x)) n))) n))) (* x (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2))) (/ (* (exp (* -3 (/ (log (/ 1 x)) n))) (+ (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* -2 (/ (log (/ 1 x)) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))))) (* (pow x 2) (pow (+ (exp (* -2 (/ (log (/ 1 x)) n))) (* 2 (exp (* -2 (/ (log (/ 1 x)) n))))) 2))))))","(* 3 (/ (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* n (* x (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))))))","(* -1 (/ (- (* -1 (/ (- (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) (* -3 (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n)))) (* n (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2))))) x)) (* 3 (/ (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* n (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))))) x))","(* -1 (/ (- (* -1 (/ (- (* -1 (/ (- (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 9/2 (/ 1 (pow n 2))) (+ (* 9/2 (/ 1 (pow n 3))) (/ 1 n)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) (+ (* -3 (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))))) (* n (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2)))) (/ (* (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n))) (- (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) (* -3 (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n)))) (* n (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2)))))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))))) x)) (* -1 (- (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) (* -3 (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n)))) (* n (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2))))))) x)) (* 3 (/ (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* n (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))))) x))","(* -1 (/ (- (* -1 (/ (- (* -1 (/ (- (* -1 (/ (- (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (+ (* 27/8 (/ 1 (pow n 4))) (* 33/8 (/ 1 (pow n 2)))) (+ (* 3/4 (/ 1 n)) (* 27/4 (/ 1 (pow n 3)))))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) (+ (* -3 (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))))) (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (+ (* 2/3 (/ 1 n)) (* 4/3 (/ 1 (pow n 3)))))))) (* n (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2)))) (+ (/ (* (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n))) (- (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 9/2 (/ 1 (pow n 2))) (+ (* 9/2 (/ 1 (pow n 3))) (/ 1 n)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) (+ (* -3 (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))))) (* n (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2)))) (/ (* (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n))) (- (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) (* -3 (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n)))) (* n (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2)))))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) (/ (* (+ (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n)))) (- (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) (* -3 (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n)))) (* n (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2)))))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))))) x)) (* -1 (- (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 9/2 (/ 1 (pow n 2))) (+ (* 9/2 (/ 1 (pow n 3))) (/ 1 n)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) (+ (* -3 (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))))) (* n (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2)))) (/ (* (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n))) (- (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) (* -3 (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n)))) (* n (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2)))))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))))))) x)) (* -1 (- (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) (* -3 (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n)))) (* n (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2))))))) x)) (* 3 (/ (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* n (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))))) x))","(* -3 (/ (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* n (* x (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))))))","(* -1 (/ (- (+ (* 3 (/ (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* n (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))))) (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (* x (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))))) (* -3 (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n)))) (* n (* x (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2)))))) x))","(* -1 (/ (+ (* -1 (/ (- (+ (* -1 (- (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) (* -3 (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n)))) (* n (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2)))))) (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 9/2 (/ 1 (pow n 2))) (+ (* 9/2 (/ 1 (pow n 3))) (/ 1 n)))) (* x (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))))) (+ (* -3 (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))))) (* n (* x (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2))))) (/ (* (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n))) (- (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) (* -3 (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n)))) (* n (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2)))))) (* x (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))))) x)) (* 3 (/ (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* n (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))))) x))","(* -1 (/ (+ (* -1 (/ (+ (* -1 (- (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) (* -3 (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n)))) (* n (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2)))))) (* -1 (/ (- (+ (* -1 (- (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 9/2 (/ 1 (pow n 2))) (+ (* 9/2 (/ 1 (pow n 3))) (/ 1 n)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) (+ (* -3 (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))))) (* n (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2)))) (/ (* (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n))) (- (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) (* -3 (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n)))) (* n (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2)))))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))))) (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (+ (* 27/8 (/ 1 (pow n 4))) (* 33/8 (/ 1 (pow n 2)))) (+ (* 3/4 (/ 1 n)) (* 27/4 (/ 1 (pow n 3)))))) (* x (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))))) (+ (* -3 (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))))) (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (+ (* 2/3 (/ 1 n)) (* 4/3 (/ 1 (pow n 3)))))))) (* n (* x (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2))))) (+ (/ (* (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n))) (- (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 9/2 (/ 1 (pow n 2))) (+ (* 9/2 (/ 1 (pow n 3))) (/ 1 n)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) (+ (* -3 (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))))) (* n (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2)))) (/ (* (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n))) (- (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) (* -3 (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n)))) (* n (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2)))))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))))) (* x (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))) (/ (* (+ (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n)))) (- (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) (* -3 (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n)))) (* n (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2)))))) (* x (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))))))) x))) x)) (* 3 (/ (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* n (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))))) x))","(* 3 (/ (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* n x)))","(* -1 (/ (+ (* -3 (/ (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) x))) x))","(* -1 (/ (+ (* -3 (/ (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (+ (* -1 (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 9/2 (/ 1 (pow n 2))) (+ (* 9/2 (/ 1 (pow n 3))) (/ 1 n)))) x)) (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n))))) x))) x))","(* -1 (/ (+ (* -3 (/ (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (+ (* -1 (/ (+ (* -1 (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (+ (* 27/8 (/ 1 (pow n 4))) (* 33/8 (/ 1 (pow n 2)))) (+ (* 3/4 (/ 1 n)) (* 27/4 (/ 1 (pow n 3)))))) x)) (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 9/2 (/ 1 (pow n 2))) (+ (* 9/2 (/ 1 (pow n 3))) (/ 1 n))))) x)) (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n))))) x))) x))","(exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))","(+ (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* 3 (/ (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* n x))))","(+ (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* -1 (/ (+ (* -3 (/ (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) x))) x)))","(+ (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* -1 (/ (+ (* -3 (/ (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (+ (* -1 (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 9/2 (/ 1 (pow n 2))) (+ (* 9/2 (/ 1 (pow n 3))) (/ 1 n)))) x)) (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n))))) x))) x)))","(* -1 (/ (+ (* -3 (/ (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* n (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))))) (* -1 (/ (- (+ (* -1 (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (pow (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n))) 2)) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 3))) (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))) (/ (* (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n))) (- (* -3 (/ (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* n (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))))) (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n)))) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))) x))) x))","(* -1 (/ (+ (* -3 (/ (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* n (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))))) (* -1 (/ (- (+ (* -1 (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (pow (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n))) 2)) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 3))) (+ (* -1 (/ (- (+ (* -1 (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n))) (+ (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n)))))) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 3))) (+ (* -1 (/ (* (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n))) (+ (* -1 (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (pow (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n))) 2)) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 3))) (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))))) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))) (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 9/2 (/ 1 (pow n 2))) (+ (* 9/2 (/ 1 (pow n 3))) (/ 1 n)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))))) (+ (/ (* (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n))) (- (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) (+ (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))))) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2)) (/ (* (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n))) (- (* -3 (/ (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* n (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))))) (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n)))) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) (/ (* (+ (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n)))) (- (* -3 (/ (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* n (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))))) (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n)))) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))))) x)) (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))))) (/ (* (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n))) (- (* -3 (/ (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* n (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))))) (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n)))) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))) x))) x))","(* -1 (/ (+ (* -3 (/ (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* n (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))))) (* -1 (/ (- (+ (* -1 (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (pow (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n))) 2)) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 3))) (+ (* -1 (/ (- (+ (* -1 (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n))) (+ (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n)))))) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 3))) (+ (* -1 (/ (* (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n))) (+ (* -1 (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (pow (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n))) 2)) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 3))) (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))))) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))) (+ (* -1 (/ (- (+ (* -1 (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n))) (+ (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))))) (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (+ (* 2/3 (/ 1 n)) (* 4/3 (/ 1 (pow n 3))))))))) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 3))) (+ (* -1 (/ (* (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n))) (+ (* -1 (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n))) (+ (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n)))))) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 3))) (+ (* -1 (/ (* (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n))) (+ (* -1 (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (pow (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n))) 2)) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 3))) (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))))) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))) (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))))) (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (+ (* 2/3 (/ 1 n)) (* 4/3 (/ 1 (pow n 3)))))))) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2))))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))) (+ (* -1 (/ (* (+ (* -1 (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (pow (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n))) 2)) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 3))) (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))))) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2))) (+ (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))) (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (+ (* 27/8 (/ 1 (pow n 4))) (* 33/8 (/ 1 (pow n 2)))) (+ (* 3/4 (/ 1 n)) (* 27/4 (/ 1 (pow n 3)))))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))))) (+ (/ (* (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n))) (- (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 9/2 (/ 1 (pow n 2))) (+ (* 9/2 (/ 1 (pow n 3))) (/ 1 n)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) (+ (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))))) (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (+ (* 2/3 (/ 1 n)) (* 4/3 (/ 1 (pow n 3)))))))) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2)) (+ (/ (* (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n))) (- (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) (+ (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))))) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2)) (/ (* (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n))) (- (* -3 (/ (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* n (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))))) (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n)))) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) (/ (* (+ (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n)))) (- (* -3 (/ (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* n (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))))) (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n)))) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))))))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) (+ (/ (* (+ (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n)))) (- (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) (+ (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))))) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2)) (/ (* (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n))) (- (* -3 (/ (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* n (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))))) (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n)))) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) (/ (* (+ (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))))) (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (+ (* 2/3 (/ 1 n)) (* 4/3 (/ 1 (pow n 3))))))) (- (* -3 (/ (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* n (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))))) (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n)))) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))))) x)) (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 9/2 (/ 1 (pow n 2))) (+ (* 9/2 (/ 1 (pow n 3))) (/ 1 n)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))))) (+ (/ (* (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n))) (- (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) (+ (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))))) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2)) (/ (* (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n))) (- (* -3 (/ (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* n (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))))) (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n)))) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) (/ (* (+ (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n)))) (- (* -3 (/ (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* n (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))))) (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n)))) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))))) x)) (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))))) (/ (* (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n))) (- (* -3 (/ (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* n (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))))) (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n)))) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))) x))) x))","(/ (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))","(+ (* -1 (/ (- (* -3 (/ (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* n (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))))) (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n)))) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2))) x)) (/ (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))))","(+ (* -1 (/ (- (+ (* -3 (/ (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* n (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))))) (* -1 (/ (- (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) (+ (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))))) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2)) (/ (* (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n))) (- (* -3 (/ (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* n (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))))) (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n)))) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))))) x))) (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n)))) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2))) x)) (/ (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))))","(+ (* -1 (/ (- (+ (* -3 (/ (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* n (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))))) (* -1 (/ (- (+ (* -1 (/ (- (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 9/2 (/ 1 (pow n 2))) (+ (* 9/2 (/ 1 (pow n 3))) (/ 1 n)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) (+ (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))))) (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (+ (* 2/3 (/ 1 n)) (* 4/3 (/ 1 (pow n 3)))))))) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2)) (+ (/ (* (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n))) (- (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) (+ (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))))) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2)) (/ (* (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n))) (- (* -3 (/ (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* n (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))))) (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n)))) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) (/ (* (+ (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n)))) (- (* -3 (/ (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* n (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))))) (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n)))) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))))) x)) (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 9/2 (/ 1 (pow n 2))) (* 3/2 (/ 1 n)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))) (+ (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))))) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2)) (/ (* (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n))) (- (* -3 (/ (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* n (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))))) (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n)))) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2)))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))))) x))) (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n)))) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2))) x)) (/ (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))))","(exp (* -2 (/ (log (/ -1 x)) n)))","(+ (exp (* -2 (/ (log (/ -1 x)) n))) (/ (exp (* -2 (/ (log (/ -1 x)) n))) (* n x)))","(+ (exp (* -2 (/ (log (/ -1 x)) n))) (* -1 (/ (+ (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n)) (* -1 (/ (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) x))) x)))","(+ (exp (* -2 (/ (log (/ -1 x)) n))) (* -1 (/ (+ (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n)) (* -1 (/ (+ (* -1 (/ (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))))) x)) (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n))))) x))) x)))","(+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))","(+ (exp (* -2 (/ (log (/ -1 x)) n))) (+ (* -1 (/ (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n))) x)) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))","(+ (exp (* -2 (/ (log (/ -1 x)) n))) (+ (* -1 (/ (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (+ (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n)) (* -1 (/ (+ (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n)))) x)))) x)) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))","(+ (exp (* -2 (/ (log (/ -1 x)) n))) (+ (* -1 (/ (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (+ (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n)) (* -1 (/ (+ (* -1 (/ (+ (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))))) (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (+ (* 2/3 (/ 1 n)) (* 4/3 (/ 1 (pow n 3))))))) x)) (+ (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))))) x)))) x)) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))))","(+ (/ (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))) (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n)))) (* x (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2))))","(+ (* -1 (/ (- (+ (* -1 (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (pow (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n))) 2)) (* x (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 3)))) (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))))) (* x (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2)))) (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n)))) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2))) x)) (/ (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))))","(+ (* -1 (/ (- (* -1 (/ (- (+ (* -1 (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (* (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n))) (+ (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n)))))) (* x (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 3)))) (+ (* -1 (/ (* (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n))) (+ (* -1 (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (pow (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n))) 2)) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 3))) (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))))) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2)))) (* x (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))))) (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (+ (* 1/6 (/ 1 (pow n 3))) (* 1/3 (/ 1 n))))) (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (+ (* 2/3 (/ 1 n)) (* 4/3 (/ 1 (pow n 3)))))))) (* x (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2))))) (+ (* -1 (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (pow (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n))) 2)) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 3))) (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* (exp (* -2 (/ (log (/ -1 x)) n))) (- (* 1/2 (/ 1 (pow n 2))) (* 1/2 (/ 1 n)))) (* (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (- (* 2 (/ 1 (pow n 2))) (/ 1 n))))) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2)))) x)) (/ (* (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (* -2 (/ (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) n)) (* -1 (/ (exp (* -2 (/ (log (/ -1 x)) n))) n)))) (pow (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))))) 2))) x)) (/ (exp (* 3 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n))) (+ (exp (* -2 (/ (log (/ -1 x)) n))) (* 2 (exp (* 2 (/ (+ (log -1) (* -1 (log (/ -1 x)))) n)))))))","(/ (- (exp (* 3 (/ (log (+ 1 x)) n))) (exp (* 3 (/ (log x) n)))) (+ (exp (* 2 (/ (log x) n))) (+ (exp (* 2 (/ (log (+ 1 x)) n))) (exp (/ (log (+ x (pow x 2))) n)))))","(* -1 (/ (- (exp (* 3 (/ (log (+ 1 x)) n))) (exp (* 3 (/ (log x) n)))) (+ (exp (* 2 (/ (log x) n))) (+ (exp (* 2 (/ (log (+ 1 x)) n))) (exp (/ (log (+ x (pow x 2))) n))))))","(- (exp (* 3 (/ (log (+ 1 x)) n))) (exp (* 3 (/ (log x) n))))","(exp (* 3 (/ (log (+ 1 x)) n)))","(- (/ (exp (* 3 (/ (log (+ 1 x)) n))) (+ (exp (* 2 (/ (log x) n))) (+ (exp (* 2 (/ (log (+ 1 x)) n))) (exp (/ (log (+ x (pow x 2))) n))))) (/ (exp (* 3 (/ (log x) n))) (+ (exp (* 2 (/ (log x) n))) (+ (exp (* 2 (/ (log (+ 1 x)) n))) (exp (/ (log (+ x (pow x 2))) n))))))","(/ (exp (* 3 (/ (log (+ 1 x)) n))) (+ (exp (* 2 (/ (log x) n))) (+ (exp (* 2 (/ (log (+ 1 x)) n))) (exp (/ (log (+ x (pow x 2))) n)))))","(exp (/ (log (+ x (pow x 2))) n))","(+ (exp (* 2 (/ (log x) n))) (+ (exp (* 2 (/ (log (+ 1 x)) n))) (exp (/ (log (+ x (pow x 2))) n))))","(/ (exp (* 3 (/ (log x) n))) (+ (exp (* 2 (/ (log x) n))) (+ (exp (* 2 (/ (log (+ 1 x)) n))) (exp (/ (log (+ x (pow x 2))) n)))))","(* 1/3 (/ (- (* 3 (log (+ 1 x))) (* 3 (log x))) n))","(/ (- (* 1/3 (/ (- (* 9/2 (pow (log (+ 1 x)) 2)) (* 9/2 (pow (log x) 2))) n)) (+ (* -1/3 (- (* 3 (log (+ 1 x))) (* 3 (log x)))) (* 1/9 (/ (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (* 3 (log (+ 1 x))) (* 3 (log x)))) n)))) n)","(/ (- (* 1/3 (/ (- (* 9/2 (pow (log (+ 1 x)) 3)) (* 9/2 (pow (log x) 3))) (pow n 2))) (+ (* -1 (/ (- (* 1/3 (- (* 9/2 (pow (log (+ 1 x)) 2)) (* 9/2 (pow (log x) 2)))) (* 1/9 (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (* 3 (log (+ 1 x))) (* 3 (log x)))))) n)) (+ (* -1/3 (- (* 3 (log (+ 1 x))) (* 3 (log x)))) (+ (* 1/9 (/ (* (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2)))) (- (* 3 (log (+ 1 x))) (* 3 (log x)))) (pow n 2))) (* 1/3 (/ (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (* 1/3 (- (* 9/2 (pow (log (+ 1 x)) 2)) (* 9/2 (pow (log x) 2)))) (* 1/9 (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (* 3 (log (+ 1 x))) (* 3 (log x))))))) (pow n 2))))))) n)","(/ (- (* 1/3 (/ (- (* 27/8 (pow (log (+ 1 x)) 4)) (* 27/8 (pow (log x) 4))) (pow n 3))) (+ (* -1 (/ (- (* 1/3 (- (* 9/2 (pow (log (+ 1 x)) 2)) (* 9/2 (pow (log x) 2)))) (* 1/9 (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (* 3 (log (+ 1 x))) (* 3 (log x)))))) n)) (+ (* -1 (/ (- (* 1/3 (- (* 9/2 (pow (log (+ 1 x)) 3)) (* 9/2 (pow (log x) 3)))) (+ (* 1/9 (* (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2)))) (- (* 3 (log (+ 1 x))) (* 3 (log x))))) (* 1/3 (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (* 1/3 (- (* 9/2 (pow (log (+ 1 x)) 2)) (* 9/2 (pow (log x) 2)))) (* 1/9 (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (* 3 (log (+ 1 x))) (* 3 (log x)))))))))) (pow n 2))) (+ (* -1/3 (- (* 3 (log (+ 1 x))) (* 3 (log x)))) (+ (* 1/9 (/ (* (+ (* 1/6 (pow (log (+ x (pow x 2))) 3)) (+ (* 4/3 (pow (log x) 3)) (* 4/3 (pow (log (+ 1 x)) 3)))) (- (* 3 (log (+ 1 x))) (* 3 (log x)))) (pow n 3))) (+ (* 1/3 (/ (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (* 1/3 (- (* 9/2 (pow (log (+ 1 x)) 3)) (* 9/2 (pow (log x) 3)))) (+ (* 1/9 (* (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2)))) (- (* 3 (log (+ 1 x))) (* 3 (log x))))) (* 1/3 (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (* 1/3 (- (* 9/2 (pow (log (+ 1 x)) 2)) (* 9/2 (pow (log x) 2)))) (* 1/9 (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (* 3 (log (+ 1 x))) (* 3 (log x))))))))))) (pow n 3))) (* 1/3 (/ (* (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2)))) (- (* 1/3 (- (* 9/2 (pow (log (+ 1 x)) 2)) (* 9/2 (pow (log x) 2)))) (* 1/9 (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (* 3 (log (+ 1 x))) (* 3 (log x))))))) (pow n 3))))))))) n)","(* -1/3 (/ (- (* 3 (log (+ 1 x))) (* 3 (log x))) n))","(/ (+ (* -1 (/ (- (* 1/3 (- (* 9/2 (pow (log (+ 1 x)) 2)) (* 9/2 (pow (log x) 2)))) (* 1/9 (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (* 3 (log (+ 1 x))) (* 3 (log x)))))) n)) (* -1/3 (- (* 3 (log (+ 1 x))) (* 3 (log x))))) n)","(/ (+ (* -1 (/ (- (* 1/3 (- (* 9/2 (pow (log (+ 1 x)) 2)) (* 9/2 (pow (log x) 2)))) (* 1/9 (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (* 3 (log (+ 1 x))) (* 3 (log x)))))) n)) (+ (* -1 (/ (- (* 1/3 (- (* 9/2 (pow (log (+ 1 x)) 3)) (* 9/2 (pow (log x) 3)))) (+ (* 1/9 (* (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2)))) (- (* 3 (log (+ 1 x))) (* 3 (log x))))) (* 1/3 (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (* 1/3 (- (* 9/2 (pow (log (+ 1 x)) 2)) (* 9/2 (pow (log x) 2)))) (* 1/9 (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (* 3 (log (+ 1 x))) (* 3 (log x)))))))))) (pow n 2))) (* -1/3 (- (* 3 (log (+ 1 x))) (* 3 (log x)))))) n)","(/ (+ (* -1 (/ (- (* 1/3 (- (* 27/8 (pow (log (+ 1 x)) 4)) (* 27/8 (pow (log x) 4)))) (+ (* 1/9 (* (+ (* 1/6 (pow (log (+ x (pow x 2))) 3)) (+ (* 4/3 (pow (log x) 3)) (* 4/3 (pow (log (+ 1 x)) 3)))) (- (* 3 (log (+ 1 x))) (* 3 (log x))))) (+ (* 1/3 (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (* 1/3 (- (* 9/2 (pow (log (+ 1 x)) 3)) (* 9/2 (pow (log x) 3)))) (+ (* 1/9 (* (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2)))) (- (* 3 (log (+ 1 x))) (* 3 (log x))))) (* 1/3 (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (* 1/3 (- (* 9/2 (pow (log (+ 1 x)) 2)) (* 9/2 (pow (log x) 2)))) (* 1/9 (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (* 3 (log (+ 1 x))) (* 3 (log x)))))))))))) (* 1/3 (* (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2)))) (- (* 1/3 (- (* 9/2 (pow (log (+ 1 x)) 2)) (* 9/2 (pow (log x) 2)))) (* 1/9 (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (* 3 (log (+ 1 x))) (* 3 (log x))))))))))) (pow n 3))) (+ (* -1 (/ (- (* 1/3 (- (* 9/2 (pow (log (+ 1 x)) 2)) (* 9/2 (pow (log x) 2)))) (* 1/9 (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (* 3 (log (+ 1 x))) (* 3 (log x)))))) n)) (+ (* -1 (/ (- (* 1/3 (- (* 9/2 (pow (log (+ 1 x)) 3)) (* 9/2 (pow (log x) 3)))) (+ (* 1/9 (* (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2)))) (- (* 3 (log (+ 1 x))) (* 3 (log x))))) (* 1/3 (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (* 1/3 (- (* 9/2 (pow (log (+ 1 x)) 2)) (* 9/2 (pow (log x) 2)))) (* 1/9 (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (* 3 (log (+ 1 x))) (* 3 (log x)))))))))) (pow n 2))) (* -1/3 (- (* 3 (log (+ 1 x))) (* 3 (log x))))))) n)","(/ (- (* 3 (log (+ 1 x))) (* 3 (log x))) n)","(/ (- (+ (* 3 (log (+ 1 x))) (* 9/2 (/ (pow (log (+ 1 x)) 2) n))) (+ (* 3 (log x)) (* 9/2 (/ (pow (log x) 2) n)))) n)","(/ (- (+ (* 3 (log (+ 1 x))) (+ (* 9/2 (/ (pow (log (+ 1 x)) 2) n)) (* 9/2 (/ (pow (log (+ 1 x)) 3) (pow n 2))))) (+ (* 3 (log x)) (+ (* 9/2 (/ (pow (log x) 2) n)) (* 9/2 (/ (pow (log x) 3) (pow n 2)))))) n)","(/ (- (+ (* 3 (log (+ 1 x))) (+ (* 27/8 (/ (pow (log (+ 1 x)) 4) (pow n 3))) (+ (* 9/2 (/ (pow (log (+ 1 x)) 2) n)) (* 9/2 (/ (pow (log (+ 1 x)) 3) (pow n 2)))))) (+ (* 3 (log x)) (+ (* 27/8 (/ (pow (log x) 4) (pow n 3))) (+ (* 9/2 (/ (pow (log x) 2) n)) (* 9/2 (/ (pow (log x) 3) (pow n 2))))))) n)","(+ 1 (* 3 (/ (log (+ 1 x)) n)))","(+ 1 (+ (* 3 (/ (log (+ 1 x)) n)) (* 9/2 (/ (pow (log (+ 1 x)) 2) (pow n 2)))))","(+ 1 (+ (* 3 (/ (log (+ 1 x)) n)) (+ (* 9/2 (/ (pow (log (+ 1 x)) 2) (pow n 2))) (* 9/2 (/ (pow (log (+ 1 x)) 3) (pow n 3))))))","(/ (- (log (+ 1 x)) (log x)) n)","(/ (- (+ (log (+ 1 x)) (+ (* 1/3 (/ (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (log x) (* 1/9 (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x)))))))) n)) (* 3/2 (/ (pow (log (+ 1 x)) 2) n)))) (+ (log x) (+ (* 1/3 (/ (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (log (+ 1 x)) (* 1/9 (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x)))))))) n)) (* 3/2 (/ (pow (log x) 2) n))))) n)","(/ (- (+ (log (+ 1 x)) (+ (* 1/3 (/ (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (log x) (* 1/9 (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x)))))))) n)) (+ (* 1/3 (/ (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (* 3/2 (pow (log x) 2)) (+ (* 1/9 (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2))))) (* 1/3 (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (log x) (* 1/9 (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x)))))))))))) (pow n 2))) (+ (* 1/3 (/ (* (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2)))) (- (log x) (* 1/9 (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x)))))))) (pow n 2))) (+ (* 3/2 (/ (pow (log (+ 1 x)) 2) n)) (* 3/2 (/ (pow (log (+ 1 x)) 3) (pow n 2)))))))) (+ (log x) (+ (* 1/3 (/ (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (log (+ 1 x)) (* 1/9 (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x)))))))) n)) (+ (* 1/3 (/ (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (* 3/2 (pow (log (+ 1 x)) 2)) (+ (* 1/9 (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2))))) (* 1/3 (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (log (+ 1 x)) (* 1/9 (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x)))))))))))) (pow n 2))) (+ (* 1/3 (/ (* (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2)))) (- (log (+ 1 x)) (* 1/9 (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x)))))))) (pow n 2))) (+ (* 3/2 (/ (pow (log x) 2) n)) (* 3/2 (/ (pow (log x) 3) (pow n 2))))))))) n)","(/ (- (+ (log (+ 1 x)) (+ (* 1/3 (/ (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (log x) (* 1/9 (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x)))))))) n)) (+ (* 1/3 (/ (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (* 3/2 (pow (log x) 2)) (+ (* 1/9 (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2))))) (* 1/3 (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (log x) (* 1/9 (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x)))))))))))) (pow n 2))) (+ (* 1/3 (/ (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (* 3/2 (pow (log x) 3)) (+ (* 1/9 (+ (* 1/6 (pow (log (+ x (pow x 2))) 3)) (+ (* 4/3 (pow (log x) 3)) (* 4/3 (pow (log (+ 1 x)) 3))))) (+ (* 1/3 (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (* 3/2 (pow (log x) 2)) (+ (* 1/9 (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2))))) (* 1/3 (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (log x) (* 1/9 (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))))))))))) (* 1/3 (* (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2)))) (- (log x) (* 1/9 (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))))))))))) (pow n 3))) (+ (* 1/3 (/ (* (+ (* 1/6 (pow (log (+ x (pow x 2))) 3)) (+ (* 4/3 (pow (log x) 3)) (* 4/3 (pow (log (+ 1 x)) 3)))) (- (log x) (* 1/9 (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x)))))))) (pow n 3))) (+ (* 1/3 (/ (* (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2)))) (- (log x) (* 1/9 (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x)))))))) (pow n 2))) (+ (* 1/3 (/ (* (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2)))) (- (* 3/2 (pow (log x) 2)) (+ (* 1/9 (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2))))) (* 1/3 (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (log x) (* 1/9 (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x)))))))))))) (pow n 3))) (+ (* 9/8 (/ (pow (log (+ 1 x)) 4) (pow n 3))) (+ (* 3/2 (/ (pow (log (+ 1 x)) 2) n)) (* 3/2 (/ (pow (log (+ 1 x)) 3) (pow n 2)))))))))))) (+ (log x) (+ (* 1/3 (/ (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (log (+ 1 x)) (* 1/9 (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x)))))))) n)) (+ (* 1/3 (/ (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (* 3/2 (pow (log (+ 1 x)) 2)) (+ (* 1/9 (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2))))) (* 1/3 (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (log (+ 1 x)) (* 1/9 (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x)))))))))))) (pow n 2))) (+ (* 1/3 (/ (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (* 3/2 (pow (log (+ 1 x)) 3)) (+ (* 1/9 (+ (* 1/6 (pow (log (+ x (pow x 2))) 3)) (+ (* 4/3 (pow (log x) 3)) (* 4/3 (pow (log (+ 1 x)) 3))))) (+ (* 1/3 (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (* 3/2 (pow (log (+ 1 x)) 2)) (+ (* 1/9 (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2))))) (* 1/3 (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (log (+ 1 x)) (* 1/9 (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))))))))))) (* 1/3 (* (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2)))) (- (log (+ 1 x)) (* 1/9 (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))))))))))) (pow n 3))) (+ (* 1/3 (/ (* (+ (* 1/6 (pow (log (+ x (pow x 2))) 3)) (+ (* 4/3 (pow (log x) 3)) (* 4/3 (pow (log (+ 1 x)) 3)))) (- (log (+ 1 x)) (* 1/9 (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x)))))))) (pow n 3))) (+ (* 1/3 (/ (* (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2)))) (- (log (+ 1 x)) (* 1/9 (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x)))))))) (pow n 2))) (+ (* 1/3 (/ (* (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2)))) (- (* 3/2 (pow (log (+ 1 x)) 2)) (+ (* 1/9 (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2))))) (* 1/3 (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (log (+ 1 x)) (* 1/9 (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x)))))))))))) (pow n 3))) (+ (* 9/8 (/ (pow (log x) 4) (pow n 3))) (+ (* 3/2 (/ (pow (log x) 2) n)) (* 3/2 (/ (pow (log x) 3) (pow n 2))))))))))))) n)","1/3","(- (+ 1/3 (/ (log (+ 1 x)) n)) (* 1/9 (/ (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) n)))","(- (+ 1/3 (+ (* 3/2 (/ (pow (log (+ 1 x)) 2) (pow n 2))) (/ (log (+ 1 x)) n))) (+ (* 1/9 (/ (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) n)) (+ (* 1/9 (/ (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2)))) (pow n 2))) (* 1/3 (/ (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (log (+ 1 x)) (* 1/9 (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x)))))))) (pow n 2))))))","(- (+ 1/3 (+ (* 3/2 (/ (pow (log (+ 1 x)) 2) (pow n 2))) (+ (* 3/2 (/ (pow (log (+ 1 x)) 3) (pow n 3))) (/ (log (+ 1 x)) n)))) (+ (* 1/9 (/ (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) n)) (+ (* 1/9 (/ (+ (* 1/6 (pow (log (+ x (pow x 2))) 3)) (+ (* 4/3 (pow (log x) 3)) (* 4/3 (pow (log (+ 1 x)) 3)))) (pow n 3))) (+ (* 1/9 (/ (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2)))) (pow n 2))) (+ (* 1/3 (/ (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (log (+ 1 x)) (* 1/9 (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x)))))))) (pow n 2))) (+ (* 1/3 (/ (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (* 3/2 (pow (log (+ 1 x)) 2)) (+ (* 1/9 (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2))))) (* 1/3 (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (log (+ 1 x)) (* 1/9 (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x)))))))))))) (pow n 3))) (* 1/3 (/ (* (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2)))) (- (log (+ 1 x)) (* 1/9 (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x)))))))) (pow n 3)))))))))","(+ 1 (/ (log (+ x (pow x 2))) n))","(+ 1 (+ (* 1/2 (/ (pow (log (+ x (pow x 2))) 2) (pow n 2))) (/ (log (+ x (pow x 2))) n)))","(+ 1 (+ (* 1/6 (/ (pow (log (+ x (pow x 2))) 3) (pow n 3))) (+ (* 1/2 (/ (pow (log (+ x (pow x 2))) 2) (pow n 2))) (/ (log (+ x (pow x 2))) n))))","3","(+ 3 (+ (* 2 (/ (log x) n)) (+ (* 2 (/ (log (+ 1 x)) n)) (/ (log (+ x (pow x 2))) n))))","(+ 3 (+ (* 1/2 (/ (pow (log (+ x (pow x 2))) 2) (pow n 2))) (+ (* 2 (/ (log x) n)) (+ (* 2 (/ (log (+ 1 x)) n)) (+ (* 2 (/ (pow (log x) 2) (pow n 2))) (+ (* 2 (/ (pow (log (+ 1 x)) 2) (pow n 2))) (/ (log (+ x (pow x 2))) n)))))))","(+ 3 (+ (* 1/6 (/ (pow (log (+ x (pow x 2))) 3) (pow n 3))) (+ (* 1/2 (/ (pow (log (+ x (pow x 2))) 2) (pow n 2))) (+ (* 4/3 (/ (pow (log x) 3) (pow n 3))) (+ (* 4/3 (/ (pow (log (+ 1 x)) 3) (pow n 3))) (+ (* 2 (/ (log x) n)) (+ (* 2 (/ (log (+ 1 x)) n)) (+ (* 2 (/ (pow (log x) 2) (pow n 2))) (+ (* 2 (/ (pow (log (+ 1 x)) 2) (pow n 2))) (/ (log (+ x (pow x 2))) n))))))))))","(- (+ 1/3 (/ (log x) n)) (* 1/9 (/ (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) n)))","(- (+ 1/3 (+ (* 3/2 (/ (pow (log x) 2) (pow n 2))) (/ (log x) n))) (+ (* 1/9 (/ (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) n)) (+ (* 1/9 (/ (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2)))) (pow n 2))) (* 1/3 (/ (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (log x) (* 1/9 (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x)))))))) (pow n 2))))))","(- (+ 1/3 (+ (* 3/2 (/ (pow (log x) 2) (pow n 2))) (+ (* 3/2 (/ (pow (log x) 3) (pow n 3))) (/ (log x) n)))) (+ (* 1/9 (/ (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) n)) (+ (* 1/9 (/ (+ (* 1/6 (pow (log (+ x (pow x 2))) 3)) (+ (* 4/3 (pow (log x) 3)) (* 4/3 (pow (log (+ 1 x)) 3)))) (pow n 3))) (+ (* 1/9 (/ (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2)))) (pow n 2))) (+ (* 1/3 (/ (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (log x) (* 1/9 (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x)))))))) (pow n 2))) (+ (* 1/3 (/ (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (* 3/2 (pow (log x) 2)) (+ (* 1/9 (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2))))) (* 1/3 (* (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x))))) (- (log x) (* 1/9 (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x)))))))))))) (pow n 3))) (* 1/3 (/ (* (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2)))) (- (log x) (* 1/9 (+ (log (+ x (pow x 2))) (+ (* 2 (log x)) (* 2 (log (+ 1 x)))))))) (pow n 3)))))))))","(* -1/3 (/ (- (* -3 (log (+ 1 x))) (* -3 (log x))) n))","(* -1 (/ (- (* -1 (/ (- (* 1/3 (- (* 9/2 (pow (log (+ 1 x)) 2)) (* 9/2 (pow (log x) 2)))) (* 1/9 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* -3 (log (+ 1 x))) (* -3 (log x)))))) n)) (* -1/3 (- (* -3 (log (+ 1 x))) (* -3 (log x))))) n))","(* -1 (/ (- (* -1 (/ (- (* -1 (/ (- (* 1/3 (- (* -9/2 (pow (log (+ 1 x)) 3)) (* -9/2 (pow (log x) 3)))) (+ (* 1/9 (* (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2)))) (- (* -3 (log (+ 1 x))) (* -3 (log x))))) (* 1/3 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* 1/3 (- (* 9/2 (pow (log (+ 1 x)) 2)) (* 9/2 (pow (log x) 2)))) (* 1/9 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* -3 (log (+ 1 x))) (* -3 (log x)))))))))) n)) (* -1 (- (* 1/3 (- (* 9/2 (pow (log (+ 1 x)) 2)) (* 9/2 (pow (log x) 2)))) (* 1/9 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* -3 (log (+ 1 x))) (* -3 (log x)))))))) n)) (* -1/3 (- (* -3 (log (+ 1 x))) (* -3 (log x))))) n))","(* -1 (/ (- (* -1 (/ (- (* -1 (/ (- (* -1 (/ (- (* 1/3 (- (* 27/8 (pow (log (+ 1 x)) 4)) (* 27/8 (pow (log x) 4)))) (+ (* 1/9 (* (+ (* -4/3 (pow (log x) 3)) (+ (* -4/3 (pow (log (+ 1 x)) 3)) (* -1/6 (pow (log (+ x (pow x 2))) 3)))) (- (* -3 (log (+ 1 x))) (* -3 (log x))))) (+ (* 1/3 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* 1/3 (- (* -9/2 (pow (log (+ 1 x)) 3)) (* -9/2 (pow (log x) 3)))) (+ (* 1/9 (* (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2)))) (- (* -3 (log (+ 1 x))) (* -3 (log x))))) (* 1/3 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* 1/3 (- (* 9/2 (pow (log (+ 1 x)) 2)) (* 9/2 (pow (log x) 2)))) (* 1/9 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* -3 (log (+ 1 x))) (* -3 (log x)))))))))))) (* 1/3 (* (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2)))) (- (* 1/3 (- (* 9/2 (pow (log (+ 1 x)) 2)) (* 9/2 (pow (log x) 2)))) (* 1/9 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* -3 (log (+ 1 x))) (* -3 (log x))))))))))) n)) (* -1 (- (* 1/3 (- (* -9/2 (pow (log (+ 1 x)) 3)) (* -9/2 (pow (log x) 3)))) (+ (* 1/9 (* (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2)))) (- (* -3 (log (+ 1 x))) (* -3 (log x))))) (* 1/3 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* 1/3 (- (* 9/2 (pow (log (+ 1 x)) 2)) (* 9/2 (pow (log x) 2)))) (* 1/9 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* -3 (log (+ 1 x))) (* -3 (log x)))))))))))) n)) (* -1 (- (* 1/3 (- (* 9/2 (pow (log (+ 1 x)) 2)) (* 9/2 (pow (log x) 2)))) (* 1/9 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* -3 (log (+ 1 x))) (* -3 (log x)))))))) n)) (* -1/3 (- (* -3 (log (+ 1 x))) (* -3 (log x))))) n))","(* 1/3 (/ (- (* -3 (log (+ 1 x))) (* -3 (log x))) n))","(* -1 (/ (- (+ (* -1/3 (- (* -3 (log (+ 1 x))) (* -3 (log x)))) (* 1/3 (/ (- (* 9/2 (pow (log (+ 1 x)) 2)) (* 9/2 (pow (log x) 2))) n))) (* 1/9 (/ (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* -3 (log (+ 1 x))) (* -3 (log x)))) n))) n))","(* -1 (/ (+ (* -1 (/ (- (+ (* -1 (- (* 1/3 (- (* 9/2 (pow (log (+ 1 x)) 2)) (* 9/2 (pow (log x) 2)))) (* 1/9 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* -3 (log (+ 1 x))) (* -3 (log x))))))) (* 1/3 (/ (- (* -9/2 (pow (log (+ 1 x)) 3)) (* -9/2 (pow (log x) 3))) n))) (+ (* 1/9 (/ (* (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2)))) (- (* -3 (log (+ 1 x))) (* -3 (log x)))) n)) (* 1/3 (/ (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* 1/3 (- (* 9/2 (pow (log (+ 1 x)) 2)) (* 9/2 (pow (log x) 2)))) (* 1/9 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* -3 (log (+ 1 x))) (* -3 (log x))))))) n)))) n)) (* -1/3 (- (* -3 (log (+ 1 x))) (* -3 (log x))))) n))","(* -1 (/ (+ (* -1 (/ (+ (* -1 (- (* 1/3 (- (* 9/2 (pow (log (+ 1 x)) 2)) (* 9/2 (pow (log x) 2)))) (* 1/9 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* -3 (log (+ 1 x))) (* -3 (log x))))))) (* -1 (/ (- (+ (* -1 (- (* 1/3 (- (* -9/2 (pow (log (+ 1 x)) 3)) (* -9/2 (pow (log x) 3)))) (+ (* 1/9 (* (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2)))) (- (* -3 (log (+ 1 x))) (* -3 (log x))))) (* 1/3 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* 1/3 (- (* 9/2 (pow (log (+ 1 x)) 2)) (* 9/2 (pow (log x) 2)))) (* 1/9 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* -3 (log (+ 1 x))) (* -3 (log x))))))))))) (* 1/3 (/ (- (* 27/8 (pow (log (+ 1 x)) 4)) (* 27/8 (pow (log x) 4))) n))) (+ (* 1/9 (/ (* (+ (* -4/3 (pow (log x) 3)) (+ (* -4/3 (pow (log (+ 1 x)) 3)) (* -1/6 (pow (log (+ x (pow x 2))) 3)))) (- (* -3 (log (+ 1 x))) (* -3 (log x)))) n)) (+ (* 1/3 (/ (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* 1/3 (- (* -9/2 (pow (log (+ 1 x)) 3)) (* -9/2 (pow (log x) 3)))) (+ (* 1/9 (* (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2)))) (- (* -3 (log (+ 1 x))) (* -3 (log x))))) (* 1/3 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* 1/3 (- (* 9/2 (pow (log (+ 1 x)) 2)) (* 9/2 (pow (log x) 2)))) (* 1/9 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* -3 (log (+ 1 x))) (* -3 (log x))))))))))) n)) (* 1/3 (/ (* (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2)))) (- (* 1/3 (- (* 9/2 (pow (log (+ 1 x)) 2)) (* 9/2 (pow (log x) 2)))) (* 1/9 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* -3 (log (+ 1 x))) (* -3 (log x))))))) n))))) n))) n)) (* -1/3 (- (* -3 (log (+ 1 x))) (* -3 (log x))))) n))","(* -1 (/ (- (* -3 (log (+ 1 x))) (* -3 (log x))) n))","(* -1 (/ (- (+ (* -3 (log (+ 1 x))) (* -1 (/ (- (* 9/2 (pow (log (+ 1 x)) 2)) (* 9/2 (pow (log x) 2))) n))) (* -3 (log x))) n))","(* -1 (/ (- (+ (* -3 (log (+ 1 x))) (* -1 (/ (- (+ (* -1 (/ (- (* -9/2 (pow (log (+ 1 x)) 3)) (* -9/2 (pow (log x) 3))) n)) (* 9/2 (pow (log (+ 1 x)) 2))) (* 9/2 (pow (log x) 2))) n))) (* -3 (log x))) n))","(* -1 (/ (- (+ (* -3 (log (+ 1 x))) (* -1 (/ (- (+ (* -1 (/ (- (+ (* -9/2 (pow (log (+ 1 x)) 3)) (* -1 (/ (- (* 27/8 (pow (log (+ 1 x)) 4)) (* 27/8 (pow (log x) 4))) n))) (* -9/2 (pow (log x) 3))) n)) (* 9/2 (pow (log (+ 1 x)) 2))) (* 9/2 (pow (log x) 2))) n))) (* -3 (log x))) n))","(+ 1 (* -1 (/ (+ (* -9/2 (/ (pow (log (+ 1 x)) 2) n)) (* -3 (log (+ 1 x)))) n)))","(+ 1 (* -1 (/ (+ (* -3 (log (+ 1 x))) (* -1 (/ (+ (* 9/2 (/ (pow (log (+ 1 x)) 3) n)) (* 9/2 (pow (log (+ 1 x)) 2))) n))) n)))","(* -1 (/ (- (* -1 (log (+ 1 x))) (* -1 (log x))) n))","(* -1 (/ (- (+ (* -1 (log (+ 1 x))) (* -1 (/ (- (+ (* 1/3 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* -1 (log x)) (* 1/9 (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))))))) (* 3/2 (pow (log (+ 1 x)) 2))) (+ (* 1/3 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* -1 (log (+ 1 x))) (* 1/9 (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))))))) (* 3/2 (pow (log x) 2)))) n))) (* -1 (log x))) n))","(* -1 (/ (- (+ (* -1 (log (+ 1 x))) (* -1 (/ (- (+ (* -1 (/ (- (+ (* -3/2 (pow (log (+ 1 x)) 3)) (+ (* 1/3 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* 3/2 (pow (log x) 2)) (+ (* 1/9 (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2))))) (* 1/3 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* -1 (log x)) (* 1/9 (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))))))))))) (* 1/3 (* (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2)))) (- (* -1 (log x)) (* 1/9 (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))))))))) (+ (* -3/2 (pow (log x) 3)) (+ (* 1/3 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* 3/2 (pow (log (+ 1 x)) 2)) (+ (* 1/9 (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2))))) (* 1/3 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* -1 (log (+ 1 x))) (* 1/9 (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))))))))))) (* 1/3 (* (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2)))) (- (* -1 (log (+ 1 x))) (* 1/9 (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2))))))))))))) n)) (+ (* 1/3 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* -1 (log x)) (* 1/9 (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))))))) (* 3/2 (pow (log (+ 1 x)) 2)))) (+ (* 1/3 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* -1 (log (+ 1 x))) (* 1/9 (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))))))) (* 3/2 (pow (log x) 2)))) n))) (* -1 (log x))) n))","(* -1 (/ (- (+ (* -1 (log (+ 1 x))) (* -1 (/ (- (+ (* -1 (/ (- (+ (* -3/2 (pow (log (+ 1 x)) 3)) (+ (* -1 (/ (- (+ (* 1/3 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* -3/2 (pow (log x) 3)) (+ (* 1/9 (+ (* -4/3 (pow (log x) 3)) (+ (* -4/3 (pow (log (+ 1 x)) 3)) (* -1/6 (pow (log (+ x (pow x 2))) 3))))) (+ (* 1/3 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* 3/2 (pow (log x) 2)) (+ (* 1/9 (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2))))) (* 1/3 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* -1 (log x)) (* 1/9 (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))))))))))) (* 1/3 (* (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2)))) (- (* -1 (log x)) (* 1/9 (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2))))))))))))))) (+ (* 1/3 (* (+ (* -4/3 (pow (log x) 3)) (+ (* -4/3 (pow (log (+ 1 x)) 3)) (* -1/6 (pow (log (+ x (pow x 2))) 3)))) (- (* -1 (log x)) (* 1/9 (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))))))) (+ (* 1/3 (* (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2)))) (- (* 3/2 (pow (log x) 2)) (+ (* 1/9 (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2))))) (* 1/3 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* -1 (log x)) (* 1/9 (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))))))))))) (* 9/8 (pow (log (+ 1 x)) 4))))) (+ (* 1/3 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* -3/2 (pow (log (+ 1 x)) 3)) (+ (* 1/9 (+ (* -4/3 (pow (log x) 3)) (+ (* -4/3 (pow (log (+ 1 x)) 3)) (* -1/6 (pow (log (+ x (pow x 2))) 3))))) (+ (* 1/3 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* 3/2 (pow (log (+ 1 x)) 2)) (+ (* 1/9 (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2))))) (* 1/3 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* -1 (log (+ 1 x))) (* 1/9 (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))))))))))) (* 1/3 (* (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2)))) (- (* -1 (log (+ 1 x))) (* 1/9 (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2))))))))))))))) (+ (* 1/3 (* (+ (* -4/3 (pow (log x) 3)) (+ (* -4/3 (pow (log (+ 1 x)) 3)) (* -1/6 (pow (log (+ x (pow x 2))) 3)))) (- (* -1 (log (+ 1 x))) (* 1/9 (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))))))) (+ (* 1/3 (* (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2)))) (- (* 3/2 (pow (log (+ 1 x)) 2)) (+ (* 1/9 (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2))))) (* 1/3 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* -1 (log (+ 1 x))) (* 1/9 (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))))))))))) (* 9/8 (pow (log x) 4)))))) n)) (+ (* 1/3 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* 3/2 (pow (log x) 2)) (+ (* 1/9 (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2))))) (* 1/3 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* -1 (log x)) (* 1/9 (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))))))))))) (* 1/3 (* (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2)))) (- (* -1 (log x)) (* 1/9 (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2))))))))))))) (+ (* -3/2 (pow (log x) 3)) (+ (* 1/3 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* 3/2 (pow (log (+ 1 x)) 2)) (+ (* 1/9 (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2))))) (* 1/3 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* -1 (log (+ 1 x))) (* 1/9 (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))))))))))) (* 1/3 (* (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2)))) (- (* -1 (log (+ 1 x))) (* 1/9 (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2))))))))))))) n)) (+ (* 1/3 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* -1 (log x)) (* 1/9 (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))))))) (* 3/2 (pow (log (+ 1 x)) 2)))) (+ (* 1/3 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* -1 (log (+ 1 x))) (* 1/9 (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))))))) (* 3/2 (pow (log x) 2)))) n))) (* -1 (log x))) n))","(+ 1/3 (* -1 (/ (- (* -1 (log (+ 1 x))) (* 1/9 (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))))) n)))","(+ 1/3 (* -1 (/ (- (+ (* -1 (log (+ 1 x))) (* -1 (/ (- (* 3/2 (pow (log (+ 1 x)) 2)) (+ (* 1/9 (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2))))) (* 1/3 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* -1 (log (+ 1 x))) (* 1/9 (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))))))))) n))) (* 1/9 (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))))) n)))","(+ 1/3 (* -1 (/ (- (+ (* -1 (log (+ 1 x))) (* -1 (/ (- (+ (* -1 (/ (- (* -3/2 (pow (log (+ 1 x)) 3)) (+ (* 1/9 (+ (* -4/3 (pow (log x) 3)) (+ (* -4/3 (pow (log (+ 1 x)) 3)) (* -1/6 (pow (log (+ x (pow x 2))) 3))))) (+ (* 1/3 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* 3/2 (pow (log (+ 1 x)) 2)) (+ (* 1/9 (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2))))) (* 1/3 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* -1 (log (+ 1 x))) (* 1/9 (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))))))))))) (* 1/3 (* (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2)))) (- (* -1 (log (+ 1 x))) (* 1/9 (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2))))))))))))) n)) (* 3/2 (pow (log (+ 1 x)) 2))) (+ (* 1/9 (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2))))) (* 1/3 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* -1 (log (+ 1 x))) (* 1/9 (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))))))))) n))) (* 1/9 (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))))) n)))","(+ 1 (* -1 (/ (+ (* -1 (log (+ x (pow x 2)))) (* -1/2 (/ (pow (log (+ x (pow x 2))) 2) n))) n)))","(+ 1 (* -1 (/ (+ (* -1 (log (+ x (pow x 2)))) (* -1 (/ (+ (* 1/6 (/ (pow (log (+ x (pow x 2))) 3) n)) (* 1/2 (pow (log (+ x (pow x 2))) 2))) n))) n)))","(+ 3 (* -1 (/ (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) n)))","(+ 3 (* -1 (/ (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (+ (* -1 (log (+ x (pow x 2)))) (* -1 (/ (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2)))) n))))) n)))","(+ 3 (* -1 (/ (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (+ (* -1 (log (+ x (pow x 2)))) (* -1 (/ (+ (* -1 (/ (+ (* -4/3 (pow (log x) 3)) (+ (* -4/3 (pow (log (+ 1 x)) 3)) (* -1/6 (pow (log (+ x (pow x 2))) 3)))) n)) (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2))))) n))))) n)))","(+ 1/3 (* -1 (/ (- (* -1 (log x)) (* 1/9 (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))))) n)))","(+ 1/3 (* -1 (/ (- (+ (* -1 (log x)) (* -1 (/ (- (* 3/2 (pow (log x) 2)) (+ (* 1/9 (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2))))) (* 1/3 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* -1 (log x)) (* 1/9 (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))))))))) n))) (* 1/9 (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))))) n)))","(+ 1/3 (* -1 (/ (- (+ (* -1 (log x)) (* -1 (/ (- (+ (* -1 (/ (- (* -3/2 (pow (log x) 3)) (+ (* 1/9 (+ (* -4/3 (pow (log x) 3)) (+ (* -4/3 (pow (log (+ 1 x)) 3)) (* -1/6 (pow (log (+ x (pow x 2))) 3))))) (+ (* 1/3 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* 3/2 (pow (log x) 2)) (+ (* 1/9 (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2))))) (* 1/3 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* -1 (log x)) (* 1/9 (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))))))))))) (* 1/3 (* (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2)))) (- (* -1 (log x)) (* 1/9 (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2))))))))))))) n)) (* 3/2 (pow (log x) 2))) (+ (* 1/9 (+ (* 1/2 (pow (log (+ x (pow x 2))) 2)) (+ (* 2 (pow (log x) 2)) (* 2 (pow (log (+ 1 x)) 2))))) (* 1/3 (* (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))) (- (* -1 (log x)) (* 1/9 (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))))))))) n))) (* 1/9 (+ (* -2 (log x)) (+ (* -2 (log (+ 1 x))) (* -1 (log (+ x (pow x 2)))))))) n)))"]],"memory":[[-537440,17184000]],"method":["egg-herbie"],"outputs":[[]],"time":148.43408203125,"type":"simplify"},{"count":[[10,150]],"inputs":[["(neg.f64 (/.f64 (-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 3 binary64) n)) (pow.f64 x (/.f64 #s(literal 3 binary64) n))) (neg.f64 (+.f64 (+.f64 (pow.f64 x (/.f64 #s(literal 2 binary64) n)) (pow.f64 (fma.f64 x x x) (/.f64 #s(literal 1 binary64) n))) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n))))))","(/.f64 (-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 3 binary64) n)) (pow.f64 x (/.f64 #s(literal 3 binary64) n))) (neg.f64 (+.f64 (+.f64 (pow.f64 x (/.f64 #s(literal 2 binary64) n)) (pow.f64 (fma.f64 x x x) (/.f64 #s(literal 1 binary64) n))) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n)))))","(-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 3 binary64) n)) (pow.f64 x (/.f64 #s(literal 3 binary64) n)))","(pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 3 binary64) n))","(-.f64 (/.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 3 binary64) n)) (+.f64 (+.f64 (pow.f64 x (/.f64 #s(literal 2 binary64) n)) (pow.f64 (fma.f64 x x x) (/.f64 #s(literal 1 binary64) n))) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n)))) (/.f64 (pow.f64 x (/.f64 #s(literal 3 binary64) n)) (+.f64 (+.f64 (pow.f64 x (/.f64 #s(literal 2 binary64) n)) (pow.f64 (fma.f64 x x x) (/.f64 #s(literal 1 binary64) n))) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n)))))","(/.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 3 binary64) n)) (+.f64 (+.f64 (pow.f64 x (/.f64 #s(literal 2 binary64) n)) (pow.f64 (fma.f64 x x x) (/.f64 #s(literal 1 binary64) n))) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n))))","(+.f64 x #s(literal 1 binary64))","(pow.f64 (fma.f64 x x x) (/.f64 #s(literal 1 binary64) n))","(+.f64 (+.f64 (pow.f64 x (/.f64 #s(literal 2 binary64) n)) (pow.f64 (fma.f64 x x x) (/.f64 #s(literal 1 binary64) n))) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n)))","(/.f64 (pow.f64 x (/.f64 #s(literal 3 binary64) n)) (+.f64 (+.f64 (pow.f64 x (/.f64 #s(literal 2 binary64) n)) (pow.f64 (fma.f64 x x x) (/.f64 #s(literal 1 binary64) n))) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n))))"]],"memory":[[-585728,15588496]],"outputs":[["#s(literal 1 binary64)","#s(literal 3 binary64)","#s(literal 2 binary64)","#s(literal -27 binary64)","#s(literal 5 binary64)","#s(literal 27 binary64)","#s(literal 6 binary64)","#s(literal -6 binary64)","#s(literal 18 binary64)","#s(literal -1 binary64)","#s(literal -2 binary64)","#s(literal -3 binary64)","#s(literal 9 binary64)","#s(literal 12 binary64)","#s(literal 16 binary64)","#s(literal 1 binary64)","#s(literal 3 binary64)","#s(literal 2 binary64)","#s(literal -27 binary64)","#s(literal 5 binary64)","#s(literal 27 binary64)","#s(literal 6 binary64)","#s(literal -6 binary64)","#s(literal 18 binary64)","#s(literal -1 binary64)","#s(literal -2 binary64)","#s(literal -3 binary64)","#s(literal 9 binary64)","#s(literal 12 binary64)","#s(literal 16 binary64)","#s(literal 1 binary64)","#s(literal 3 binary64)","#s(literal 2 binary64)","#s(literal -27 binary64)","#s(literal 5 binary64)","#s(literal 27 binary64)","#s(literal 6 binary64)","#s(literal -6 binary64)","#s(literal 18 binary64)","#s(literal -1 binary64)","#s(literal -2 binary64)","#s(literal -3 binary64)","#s(literal 9 binary64)","#s(literal 12 binary64)","#s(literal 16 binary64)","#s(literal 1 binary64)","#s(literal 3 binary64)","#s(literal 2 binary64)","#s(literal -27 binary64)","#s(literal 5 binary64)","#s(literal 27 binary64)","#s(literal 6 binary64)","#s(literal -6 binary64)","#s(literal 18 binary64)","#s(literal -1 binary64)","#s(literal -2 binary64)","#s(literal -3 binary64)","#s(literal 9 binary64)","#s(literal 12 binary64)","#s(literal 16 binary64)","#s(literal 1 binary64)","#s(literal 3 binary64)","#s(literal 2 binary64)","#s(literal -27 binary64)","#s(literal 5 binary64)","#s(literal 27 binary64)","#s(literal 6 binary64)","#s(literal -6 binary64)","#s(literal 18 binary64)","#s(literal -1 binary64)","#s(literal -2 binary64)","#s(literal -3 binary64)","#s(literal 9 binary64)","#s(literal 12 binary64)","#s(literal 16 binary64)","#s(literal 1 binary64)","#s(literal 3 binary64)","#s(literal 2 binary64)","#s(literal -27 binary64)","#s(literal 5 binary64)","#s(literal 27 binary64)","#s(literal 6 binary64)","#s(literal -6 binary64)","#s(literal 18 binary64)","#s(literal -1 binary64)","#s(literal -2 binary64)","#s(literal -3 binary64)","#s(literal 9 binary64)","#s(literal 12 binary64)","#s(literal 16 binary64)","#s(literal 1 binary64)","#s(literal 3 binary64)","#s(literal 2 binary64)","#s(literal -27 binary64)","#s(literal 5 binary64)","#s(literal 27 binary64)","#s(literal 6 binary64)","#s(literal -6 binary64)","#s(literal 18 binary64)","#s(literal -1 binary64)","#s(literal -2 binary64)","#s(literal -3 binary64)","#s(literal 9 binary64)","#s(literal 12 binary64)","#s(literal 16 binary64)","#s(literal 1 binary64)","#s(literal 3 binary64)","#s(literal 2 binary64)","#s(literal -27 binary64)","#s(literal 5 binary64)","#s(literal 27 binary64)","#s(literal 6 binary64)","#s(literal -6 binary64)","#s(literal 18 binary64)","#s(literal -1 binary64)","#s(literal -2 binary64)","#s(literal -3 binary64)","#s(literal 9 binary64)","#s(literal 12 binary64)","#s(literal 16 binary64)","#s(literal 1 binary64)","#s(literal 3 binary64)","#s(literal 2 binary64)","#s(literal -27 binary64)","#s(literal 5 binary64)","#s(literal 27 binary64)","#s(literal 6 binary64)","#s(literal -6 binary64)","#s(literal 18 binary64)","#s(literal -1 binary64)","#s(literal -2 binary64)","#s(literal -3 binary64)","#s(literal 9 binary64)","#s(literal 12 binary64)","#s(literal 16 binary64)","#s(literal 1 binary64)","#s(literal 3 binary64)","#s(literal 2 binary64)","#s(literal -27 binary64)","#s(literal 5 binary64)","#s(literal 27 binary64)","#s(literal 6 binary64)","#s(literal -6 binary64)","#s(literal 18 binary64)","#s(literal -1 binary64)","#s(literal -2 binary64)","#s(literal -3 binary64)","#s(literal 9 binary64)","#s(literal 12 binary64)","#s(literal 16 binary64)"]],"time":276.47802734375,"type":"rewrite"},{"compiler":[[15,17]],"memory":[[1346144,1346144]],"time":2.1220703125,"type":"eval"},{"alts":[["(-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) n)) (pow.f64 x (/.f64 #s(literal 1 binary64) n)))","done",26.379112794158548,"binary64"],["(-.f64 (/.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 3 binary64) n)) (+.f64 (+.f64 (pow.f64 x (/.f64 #s(literal 2 binary64) n)) (pow.f64 (fma.f64 x x x) (/.f64 #s(literal 1 binary64) n))) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n)))) (/.f64 (pow.f64 x (/.f64 #s(literal 3 binary64) n)) (+.f64 (+.f64 (pow.f64 x (/.f64 #s(literal 2 binary64) n)) (pow.f64 (fma.f64 x x x) (/.f64 #s(literal 1 binary64) n))) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n)))))","done",47.110819177826635,"binary64"],["(-.f64 (/.f64 #s(literal 1 binary64) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal -1 binary64) n))) (pow.f64 x (/.f64 #s(literal 1 binary64) n)))","done",26.372546347291255,"binary64"],["(-.f64 (*.f64 (pow.f64 (fma.f64 x x #s(literal -1 binary64)) (/.f64 #s(literal 1 binary64) n)) (pow.f64 (/.f64 #s(literal -1 binary64) (-.f64 #s(literal 1 binary64) x)) (/.f64 #s(literal 1 binary64) n))) (pow.f64 x (/.f64 #s(literal 1 binary64) n)))","done",48.040867596378874,"binary64"],["(-.f64 (exp.f64 (/.f64 (log1p.f64 x) n)) (pow.f64 x (/.f64 #s(literal 1 binary64) n)))","done",23.62068660141691,"binary64"],["(*.f64 (+.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal -1 binary64) (*.f64 #s(literal -2 binary64) n))) (pow.f64 x (/.f64 #s(literal -1 binary64) (*.f64 #s(literal -2 binary64) n)))) (-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal -1 binary64) (*.f64 #s(literal -2 binary64) n))) (pow.f64 x (/.f64 #s(literal -1 binary64) (*.f64 #s(literal -2 binary64) n)))))","done",26.382971987288293,"binary64"],["(neg.f64 (/.f64 (-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 3 binary64) n)) (pow.f64 x (/.f64 #s(literal 3 binary64) n))) (neg.f64 (+.f64 (+.f64 (pow.f64 x (/.f64 #s(literal 2 binary64) n)) (pow.f64 (fma.f64 x x x) (/.f64 #s(literal 1 binary64) n))) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n))))))","done",47.071010483381436,"binary64"],["(neg.f64 (/.f64 (-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n)) (pow.f64 x (/.f64 #s(literal 2 binary64) n))) (neg.f64 (+.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) n)) (pow.f64 x (/.f64 #s(literal 1 binary64) n))))))","done",47.117247739693944,"binary64"],["#s(literal 27 binary64)","fresh",61.40017571018527,"binary64"],["#s(literal 1 binary64)","done",56.614648591765935,"binary64"],["#s(literal 0 binary64)","done",43.52246756051288,"binary64"],["#s(literal -1 binary64)","done",61.96383712690421,"binary64"],["#s(literal -27 binary64)","fresh",61.99398089965643,"binary64"]],"compiler":[[231,61],[13,8],[59,20],[15,11],[24,13],[11,9],[35,13],[38,21],[29,16],[1,3],[1,3],[1,3],[1,3],[1,3]],"count":[[28,13]],"kept":[{"done":[11,9],"fresh":[0,0],"new":[15,2],"picked":[2,2]}],"memory":[[-3449744,5509744]],"min-error":[[23.27015044042459,"binary64"]],"time":9.367919921875,"type":"prune"},{"accuracy":[23.62068660141691],"baseline":[23.62068660141691],"branch":[["x",23.62068660141691,1,"binary64"],["n",23.620686601416917,1,"binary64"],["(-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) n)) (pow.f64 x (/.f64 #s(literal 1 binary64) n)))",23.620686601416917,1,"binary64"],["(/.f64 #s(literal 1 binary64) n)",23.620686601416914,1,"binary64"]],"compiler":[[1,2],[1,2],[13,8],[3,4]],"count":[[15,1]],"inputs":[["#s(literal -27 binary64)","#s(literal -6 binary64)","#s(literal -1 binary64)","#s(literal 0 binary64)","#s(literal 1 binary64)","#s(literal 9 binary64)","#s(literal 27 binary64)","(-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) n)) (pow.f64 x (/.f64 #s(literal 1 binary64) n)))","(-.f64 (/.f64 #s(literal 1 binary64) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal -1 binary64) n))) (pow.f64 x (/.f64 #s(literal 1 binary64) n)))","(-.f64 (exp.f64 (/.f64 (log1p.f64 x) n)) (pow.f64 x (/.f64 #s(literal 1 binary64) n)))","(-.f64 (*.f64 (pow.f64 (fma.f64 x x #s(literal -1 binary64)) (/.f64 #s(literal 1 binary64) n)) (pow.f64 (/.f64 #s(literal -1 binary64) (-.f64 #s(literal 1 binary64) x)) (/.f64 #s(literal 1 binary64) n))) (pow.f64 x (/.f64 #s(literal 1 binary64) n)))","(neg.f64 (/.f64 (-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n)) (pow.f64 x (/.f64 #s(literal 2 binary64) n))) (neg.f64 (+.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) n)) (pow.f64 x (/.f64 #s(literal 1 binary64) n))))))","(*.f64 (+.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal -1 binary64) (*.f64 #s(literal -2 binary64) n))) (pow.f64 x (/.f64 #s(literal -1 binary64) (*.f64 #s(literal -2 binary64) n)))) (-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal -1 binary64) (*.f64 #s(literal -2 binary64) n))) (pow.f64 x (/.f64 #s(literal -1 binary64) (*.f64 #s(literal -2 binary64) n)))))","(neg.f64 (/.f64 (-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 3 binary64) n)) (pow.f64 x (/.f64 #s(literal 3 binary64) n))) (neg.f64 (+.f64 (+.f64 (pow.f64 x (/.f64 #s(literal 2 binary64) n)) (pow.f64 (fma.f64 x x x) (/.f64 #s(literal 1 binary64) n))) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n))))))","(-.f64 (/.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 3 binary64) n)) (+.f64 (+.f64 (pow.f64 x (/.f64 #s(literal 2 binary64) n)) (pow.f64 (fma.f64 x x x) (/.f64 #s(literal 1 binary64) n))) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n)))) (/.f64 (pow.f64 x (/.f64 #s(literal 3 binary64) n)) (+.f64 (+.f64 (pow.f64 x (/.f64 #s(literal 2 binary64) n)) (pow.f64 (fma.f64 x x x) (/.f64 #s(literal 1 binary64) n))) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 2 binary64) n)))))"]],"memory":[[3330320,11625008]],"oracle":[63.47895803097717],"outputs":[["(-.f64 (exp.f64 (/.f64 (log1p.f64 x) n)) (pow.f64 x (/.f64 #s(literal 1 binary64) n)))"]],"repr":["binary64"],"time":23.80908203125,"times":[[5.7880859375,"x"],[4.73486328125,"n"],[4.64892578125,"(-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) n)) (pow.f64 x (/.f64 #s(literal 1 binary64) n)))"],[6.860107421875,"(/.f64 #s(literal 1 binary64) n)"]],"type":"regimes"},{"accuracy":[26.37254634729125],"baseline":[26.372546347291255],"branch":[["n",26.37254634729126,1,"binary64"],["(-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) n)) (pow.f64 x (/.f64 #s(literal 1 binary64) n)))",26.37254634729126,1,"binary64"],["(/.f64 #s(literal 1 binary64) n)",26.372546347291255,1,"binary64"],["x",26.37254634729125,1,"binary64"]],"compiler":[[1,2],[13,8],[3,4],[1,2]],"count":[[9,1]],"inputs":[["#s(literal -27 binary64)","#s(literal -6 binary64)","#s(literal -1 binary64)","#s(literal 0 binary64)","#s(literal 1 binary64)","#s(literal 9 binary64)","#s(literal 27 binary64)","(-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) n)) (pow.f64 x (/.f64 #s(literal 1 binary64) n)))","(-.f64 (/.f64 #s(literal 1 binary64) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal -1 binary64) n))) (pow.f64 x (/.f64 #s(literal 1 binary64) n)))"]],"memory":[[807856,9052128]],"oracle":[62.64614373842508],"outputs":[["(-.f64 (/.f64 #s(literal 1 binary64) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal -1 binary64) n))) (pow.f64 x (/.f64 #s(literal 1 binary64) n)))"]],"repr":["binary64"],"time":15.426025390625,"times":[[3.278076171875,"n"],[3.9609375,"(-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) n)) (pow.f64 x (/.f64 #s(literal 1 binary64) n)))"],[3.014892578125,"(/.f64 #s(literal 1 binary64) n)"],[3.787109375,"x"]],"type":"regimes"},{"accuracy":[26.379112794158544],"baseline":[26.379112794158548],"branch":[["n",26.37911279415855,1,"binary64"],["(-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) n)) (pow.f64 x (/.f64 #s(literal 1 binary64) n)))",26.37911279415855,1,"binary64"],["(/.f64 #s(literal 1 binary64) n)",26.379112794158548,1,"binary64"],["x",26.379112794158544,1,"binary64"]],"compiler":[[1,2],[13,8],[3,4],[1,2]],"count":[[8,1]],"inputs":[["#s(literal -27 binary64)","#s(literal -6 binary64)","#s(literal -1 binary64)","#s(literal 0 binary64)","#s(literal 1 binary64)","#s(literal 9 binary64)","#s(literal 27 binary64)","(-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) n)) (pow.f64 x (/.f64 #s(literal 1 binary64) n)))"]],"memory":[[394304,8671920]],"oracle":[62.64614373842508],"outputs":[["(-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) n)) (pow.f64 x (/.f64 #s(literal 1 binary64) n)))"]],"repr":["binary64"],"time":14.31396484375,"times":[[3.10498046875,"n"],[2.52001953125,"(-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) n)) (pow.f64 x (/.f64 #s(literal 1 binary64) n)))"],[3.700927734375,"(/.f64 #s(literal 1 binary64) n)"],[3.64697265625,"x"]],"type":"regimes"},{"accuracy":[37.89279150980728],"baseline":[43.52246756051288],"branch":[["n",37.89279150980725,3,"binary64"],["(-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) n)) (pow.f64 x (/.f64 #s(literal 1 binary64) n)))",37.96626075073482,2,"binary64"],["(/.f64 #s(literal 1 binary64) n)",37.89279150980728,2,"binary64"],["x",38.177963352421685,2,"binary64"]],"compiler":[[1,2],[13,8],[3,4],[1,2]],"count":[[7,2]],"inputs":[["#s(literal -27 binary64)","#s(literal -6 binary64)","#s(literal -1 binary64)","#s(literal 0 binary64)","#s(literal 1 binary64)","#s(literal 9 binary64)","#s(literal 27 binary64)"]],"memory":[[-304240,8303104]],"oracle":[62.64614373842508],"outputs":[["#s(literal 0 binary64)","#s(literal 1 binary64)"]],"repr":["binary64"],"time":11.791015625,"times":[[2.802001953125,"n"],[2.06591796875,"(-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) n)) (pow.f64 x (/.f64 #s(literal 1 binary64) n)))"],[3.382080078125,"(/.f64 #s(literal 1 binary64) n)"],[2.52880859375,"x"]],"type":"regimes"},{"accuracy":[43.52246756051285],"baseline":[43.52246756051288],"branch":[["n",43.52246756051285,1,"binary64"],["x",43.52246756051288,1,"binary64"],["(-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) n)) (pow.f64 x (/.f64 #s(literal 1 binary64) n)))",43.52246756051287,1,"binary64"],["(/.f64 #s(literal 1 binary64) n)",43.52246756051288,1,"binary64"]],"compiler":[[1,2],[1,2],[13,8],[3,4]],"count":[[4,1]],"inputs":[["#s(literal -27 binary64)","#s(literal -6 binary64)","#s(literal -1 binary64)","#s(literal 0 binary64)"]],"memory":[[-1080848,7161504]],"oracle":[62.3737745415281],"outputs":[["#s(literal 0 binary64)"]],"repr":["binary64"],"time":8.93994140625,"times":[[1.822021484375,"n"],[1.972900390625,"x"],[1.6181640625,"(-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) n)) (pow.f64 x (/.f64 #s(literal 1 binary64) n)))"],[2.18505859375,"(/.f64 #s(literal 1 binary64) n)"]],"type":"regimes"},{"accuracy":[61.96383712690412],"baseline":[61.96383712690421],"branch":[["x",61.96383712690412,1,"binary64"],["(/.f64 #s(literal 1 binary64) n)",61.96383712690427,1,"binary64"],["(-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) n)) (pow.f64 x (/.f64 #s(literal 1 binary64) n)))",61.96383712690424,1,"binary64"],["n",61.96383712690426,1,"binary64"]],"compiler":[[1,2],[3,4],[13,8],[1,2]],"count":[[3,1]],"inputs":[["#s(literal -27 binary64)","#s(literal -6 binary64)","#s(literal -1 binary64)"]],"memory":[[-1566576,6733152]],"oracle":[61.99498930799242],"outputs":[["#s(literal -1 binary64)"]],"repr":["binary64"],"time":7.928955078125,"times":[[1.7998046875,"x"],[1.7890625,"(/.f64 #s(literal 1 binary64) n)"],[1.51708984375,"(-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) n)) (pow.f64 x (/.f64 #s(literal 1 binary64) n)))"],[1.89794921875,"n"]],"type":"regimes"},{"accuracy":[61.98625555976531],"baseline":[61.9862555597654],"branch":[["(/.f64 #s(literal 1 binary64) n)",61.98625555976547,1,"binary64"],["n",61.986255559765475,1,"binary64"],["(-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) n)) (pow.f64 x (/.f64 #s(literal 1 binary64) n)))",61.98625555976543,1,"binary64"],["x",61.98625555976531,1,"binary64"]],"compiler":[[3,4],[1,2],[13,8],[1,2]],"count":[[2,1]],"inputs":[["#s(literal -27 binary64)","#s(literal -6 binary64)"]],"memory":[[6242976,6242976]],"oracle":[61.994452066041596],"outputs":[["#s(literal -6 binary64)"]],"repr":["binary64"],"time":5.779052734375,"times":[[1.3349609375,"(/.f64 #s(literal 1 binary64) n)"],[1.35693359375,"n"],[1.14208984375,"(-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) n)) (pow.f64 x (/.f64 #s(literal 1 binary64) n)))"],[1.277099609375,"x"]],"type":"regimes"},{"accuracy":[61.99398089965643],"baseline":[61.99398089965643],"branch":[["n",61.99398089965645,1,"binary64"],["(/.f64 #s(literal 1 binary64) n)",61.99398089965643,1,"binary64"],["(-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) n)) (pow.f64 x (/.f64 #s(literal 1 binary64) n)))",61.99398089965644,1,"binary64"],["x",61.9939808996565,1,"binary64"]],"compiler":[[1,2],[3,4],[13,8],[1,2]],"count":[[1,1]],"inputs":[["#s(literal -27 binary64)"]],"link":["."],"memory":[[-2460784,5874752]],"name":["2nthrt (problem 3.4.6)"],"oracle":[61.99398089965643],"outputs":[["#s(literal -27 binary64)"]],"repr":["binary64"],"time":5.27001953125,"times":[[1.0341796875,"n"],[1.10205078125,"(/.f64 #s(literal 1 binary64) n)"],[1.254150390625,"(-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) n)) (pow.f64 x (/.f64 #s(literal 1 binary64) n)))"],[1.15087890625,"x"]],"type":"regimes"},{"bstep":[[58.47412109375,1.3044950566468558e-65,1.6062351741781196e-57]],"compiler":[[1,4],[1,4],[1,4],[1,4],[1,4],[1,4],[1,4],[1,4],[1,4],[1,4],[1,4],[1,4],[1,4],[1,4],[1,4],[1,4],[1,4],[1,4],[11,10],[3,4]],"memory":[[-1775984,6734016]],"method":["binary-search"],"mixsample":[[0.0263671875,"ival-add",1200],[3.808349609375,"adjust",800],[0.99658203125,"ival-add",0],[0.15771484375,"ival-add",1600],[6.626708984375,"ival-pow",1600],[0.063232421875,"ival-assert",0],[1.79248046875,"ival-sub",0],[0.748779296875,"ival-add",400],[0.130615234375,"ival-true",0],[24.42626953125,"ival-pow",400],[0.108154296875,"exact",0],[0.792724609375,"adjust",2000],[6.6181640625,"ival-pow",0]],"outcomes":[[36.404541015625,1,"valid",112],[15.95166015625,2,"valid",32]],"stop":[["narrow-enough",1]],"time":61.64697265625,"type":"bsearch"},{"inputs":[["(-.f64 (exp.f64 (/.f64 (log1p.f64 x) n)) (pow.f64 x (/.f64 #s(literal 1 binary64) n)))","(-.f64 (/.f64 #s(literal 1 binary64) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal -1 binary64) n))) (pow.f64 x (/.f64 #s(literal 1 binary64) n)))","(-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) n)) (pow.f64 x (/.f64 #s(literal 1 binary64) n)))","(if (<=.f64 (/.f64 #s(literal 1 binary64) n) #s(literal 7114265962740707/7410693711188236507108543040556026102609279018600996098525285376506440296955904 binary64)) #s(literal 0 binary64) #s(literal 1 binary64))","#s(literal 0 binary64)","#s(literal -1 binary64)","#s(literal -6 binary64)","#s(literal -27 binary64)"]],"memory":[[34816,16100624]],"method":["egg-herbie"],"outputs":[["(-.f64 (exp.f64 (/.f64 (log1p.f64 x) n)) (pow.f64 x (/.f64 #s(literal 1 binary64) n)))","(-.f64 (/.f64 #s(literal 1 binary64) (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal -1 binary64) n))) (pow.f64 x (/.f64 #s(literal 1 binary64) n)))","(-.f64 (pow.f64 (+.f64 x #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) n)) (pow.f64 x (/.f64 #s(literal 1 binary64) n)))","(if (<=.f64 (/.f64 #s(literal 1 binary64) n) #s(literal 7114265962740707/7410693711188236507108543040556026102609279018600996098525285376506440296955904 binary64)) #s(literal 0 binary64) #s(literal 1 binary64))","#s(literal 0 binary64)","#s(literal -1 binary64)","#s(literal -6 binary64)","#s(literal -27 binary64)"]],"time":142.041015625,"type":"simplify"},{"compiler":[[51,23]],"memory":[[1639872,1639872]],"stop":[["fuel",1]],"time":2.597900390625,"type":"soundness"},{"compiler":[[51,23],[51,23],[13,8],[13,8]],"memory":[[3272272,27763792]],"remove-preprocessing":[[],[],[],[],[],[],[],[],[]],"time":51.125,"type":"preprocess"},{"memory":[[2000,2000]],"time":0.01611328125,"type":"end"}]