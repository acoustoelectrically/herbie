[{"memory":[[15120,15120]],"time":0.030029296875,"type":"start"},{"compiler":[[15,10]],"memory":[[83728,83728]],"method":["search"],"sampling":[[1,{"invalid":0.0,"precondition":0.967569162616416,"unknown":0.0,"valid":0.03243083738358394}],[0,{"invalid":0.0,"precondition":0.967569162616416,"unknown":0.03243083738358394,"valid":0.0}]],"time":0.40185546875,"type":"analyze"},{"bogosity":[{"invalid":0.0,"precondition":0.967569162616416,"valid":0.03243083738358394}],"memory":[[16452080,289098752]],"mixsample":[[159.13916015625,"adjust",800],[107.864013671875,"ival-log",400],[4.7783203125,"ival-assert",0],[107.74267578125,"ival-sub",0],[187.702392578125,"ival-log",0],[246.39208984375,"ival-log1p",0],[17.05126953125,"ival-and",0],[0.59521484375,"ival-sub",400],[129.6123046875,"ival-log1p",400],[32.879150390625,"ival->",0],[15.334228515625,"exact",0],[22.46630859375,"ival-<",0]],"outcomes":[[1165.173828125,1,"valid",6354],[153.931884765625,0,"valid",1902]],"time":1668.7041015625,"type":"sample"},{"compiler":[[7,6],[20,8],[20,8]],"confusion":[[249,2,0,5]],"explanations":[["-.f64","(-.f64 (log.f64 (+.f64 N #s(literal 1 binary64))) (log.f64 N))","cancellation",249,3,[],[[]]]],"fperrors":[["(-.f64 (log.f64 (+.f64 N #s(literal 1 binary64))) (log.f64 N))",251,0,false,2,[15.63414525507389]],["N",0,0,false,0,false],["(log.f64 N)",0,0,false,0,false],["(+.f64 N #s(literal 1 binary64))",0,0,false,0,false],["(log.f64 (+.f64 N #s(literal 1 binary64)))",0,0,false,0,false],["#s(literal 1 binary64)",0,0,false,0,false]],"freqs":[[1,249],[0,7]],"maybe-confusion":[[249,2,0,0,1,4]],"memory":[[-7179744,42957888]],"mixsample":[[9.6015625,"adjust",800],[2.8486328125,"ival-add",0],[5.88330078125,"ival-log",400],[0.2392578125,"ival-assert",0],[5.6318359375,"ival-sub",0],[11.057861328125,"ival-log",0],[0.53271484375,"ival-true",0],[11.025390625,"ival-log1p",0],[0.01953125,"ival-sub",400],[5.95556640625,"ival-log1p",400],[0.387451171875,"exact",0]],"outcomes":[[65.5986328125,1,"valid",396],[8.353271484375,0,"valid",116]],"time":126.166015625,"total-confusion":[[1,0,0,0,0,0]],"type":"explain"},{"compiler":[[7,6]],"inputs":[["(-.f64 (log.f64 (+.f64 N #s(literal 1 binary64))) (log.f64 N))"]],"memory":[[-5322688,20317584]],"method":["egg-herbie"],"outputs":[["(-.f64 (log.f64 (+.f64 N #s(literal 1 binary64))) (log.f64 N))","(-.f64 (log1p.f64 N) (log.f64 N))"]],"symmetry":[[]],"time":306.10498046875,"type":"preprocess"},{"compiler":[[0,1]],"memory":[[41072,41072]],"time":0.1708984375,"type":"eval"},{"alts":[["(-.f64 (log.f64 (+.f64 N #s(literal 1 binary64))) (log.f64 N))","next",48.976030472678374,"binary64"]],"compiler":[[7,6]],"memory":[[311440,311440]],"time":0.68603515625,"type":"prune"},{"inputs":[["(-.f64 (log.f64 (+.f64 N #s(literal 1 binary64))) (log.f64 N))","(log.f64 (+.f64 N #s(literal 1 binary64)))","(+.f64 N #s(literal 1 binary64))","N","#s(literal 1 binary64)","(log.f64 N)"]],"locations":[["(log.f64 N)","cost-diff",0],["(+.f64 N #s(literal 1 binary64))","cost-diff",0],["(-.f64 (log.f64 (+.f64 N #s(literal 1 binary64))) (log.f64 N))","cost-diff",0],["(log.f64 (+.f64 N #s(literal 1 binary64)))","cost-diff",2]],"memory":[[1825344,9782960]],"method":["egg-herbie"],"outputs":[["(-.f64 (log.f64 (+.f64 N #s(literal 1 binary64))) (log.f64 N))","(-.f64 (log1p.f64 N) (log.f64 N))","(log.f64 (+.f64 N #s(literal 1 binary64)))","(log1p.f64 N)","(+.f64 N #s(literal 1 binary64))","N","#s(literal 1 binary64)","(log.f64 N)"]],"time":251.22998046875,"type":"simplify"},{"compiler":[[20,8]],"locations":[["(+.f64 N #s(literal 1 binary64))","accuracy",0.0],["(log.f64 N)","accuracy",0.0],["(log.f64 (+.f64 N #s(literal 1 binary64)))","accuracy",0.00390625],["(-.f64 (log.f64 (+.f64 N #s(literal 1 binary64))) (log.f64 N))","accuracy",48.976030472678374]],"memory":[[1937808,9816832]],"mixsample":[[10.78515625,"adjust",800],[1.699951171875,"ival-add",0],[3.95263671875,"ival-log",400],[0.1650390625,"ival-assert",0],[3.408203125,"ival-sub",0],[6.6123046875,"ival-log",0],[0.3076171875,"ival-true",0],[8.47216796875,"ival-log1p",0],[0.010009765625,"ival-sub",400],[4.438720703125,"ival-log1p",400],[0.25341796875,"exact",0]],"outcomes":[[48.678466796875,1,"valid",198],[5.614990234375,0,"valid",58]],"time":66.9990234375,"type":"localize"},{"count":[[4,27]],"inputs":[["(log.f64 (+.f64 N #s(literal 1 binary64)))","(-.f64 (log.f64 (+.f64 N #s(literal 1 binary64))) (log.f64 N))","(+.f64 N #s(literal 1 binary64))","(log.f64 N)"]],"memory":[[-1591232,21106480]],"outputs":[["N","(* N (+ 1 (* -1/2 N)))","(* N (+ 1 (* N (- (* 1/3 N) 1/2))))","(* N (+ 1 (* N (- (* N (+ 1/3 (* -1/4 N))) 1/2))))","(* -1 (log N))","(- N (log N))","(- (* N (+ 1 (* -1/2 N))) (log N))","(- (* N (+ 1 (* N (- (* 1/3 N) 1/2)))) (log N))","1","(+ 1 N)","(log N)","(* -1 (log (/ 1 N)))","(+ (* -1 (log (/ 1 N))) (/ 1 N))","(- (+ (* -1 (log (/ 1 N))) (/ 1 N)) (/ 1/2 (pow N 2)))","(- (+ (* -1 (log (/ 1 N))) (+ (/ 1 N) (* 1/3 (/ 1 (pow N 3))))) (/ 1/2 (pow N 2)))","(/ 1 N)","(/ (- 1 (* 1/2 (/ 1 N))) N)","(/ (- (+ 1 (/ 1/3 (pow N 2))) (* 1/2 (/ 1 N))) N)","(/ (- (+ 1 (/ 1/3 (pow N 2))) (+ (* 1/2 (/ 1 N)) (* 1/4 (/ 1 (pow N 3))))) N)","(* N (+ 1 (/ 1 N)))","(+ (log -1) (* -1 (log (/ -1 N))))","(+ (log -1) (+ (* -1 (log (/ -1 N))) (/ 1 N)))","(+ (log -1) (+ (* -1 (log (/ -1 N))) (* -1 (/ (- (* 1/2 (/ 1 N)) 1) N))))","(+ (log -1) (+ (* -1 (log (/ -1 N))) (* -1 (/ (- (* -1 (/ (- (* 1/3 (/ 1 N)) 1/2) N)) 1) N))))","(* -1 (/ (- (* 1/2 (/ 1 N)) 1) N))","(* -1 (/ (- (* -1 (/ (- (* 1/3 (/ 1 N)) 1/2) N)) 1) N))","(* -1 (/ (- (* -1 (/ (- (* -1 (/ (- (* 1/4 (/ 1 N)) 1/3) N)) 1/2) N)) 1) N))"]],"series":[[25.18212890625,"((log (+ N 1)) (- (log (+ N 1)) (log N)) (+ N 1) (log N))","N","-inf"],[10.0068359375,"((log (+ N 1)) (- (log (+ N 1)) (log N)) (+ N 1) (log N))","N","inf"],[34.905029296875,"((log (+ N 1)) (- (log (+ N 1)) (log N)) (+ N 1) (log N))","N","0"]],"time":70.64501953125,"type":"series"},{"count":[[27,0]],"inputs":[["N","(* N (+ 1 (* -1/2 N)))","(* N (+ 1 (* N (- (* 1/3 N) 1/2))))","(* N (+ 1 (* N (- (* N (+ 1/3 (* -1/4 N))) 1/2))))","(* -1 (log N))","(- N (log N))","(- (* N (+ 1 (* -1/2 N))) (log N))","(- (* N (+ 1 (* N (- (* 1/3 N) 1/2)))) (log N))","1","(+ 1 N)","(log N)","(* -1 (log (/ 1 N)))","(+ (* -1 (log (/ 1 N))) (/ 1 N))","(- (+ (* -1 (log (/ 1 N))) (/ 1 N)) (/ 1/2 (pow N 2)))","(- (+ (* -1 (log (/ 1 N))) (+ (/ 1 N) (* 1/3 (/ 1 (pow N 3))))) (/ 1/2 (pow N 2)))","(/ 1 N)","(/ (- 1 (* 1/2 (/ 1 N))) N)","(/ (- (+ 1 (/ 1/3 (pow N 2))) (* 1/2 (/ 1 N))) N)","(/ (- (+ 1 (/ 1/3 (pow N 2))) (+ (* 1/2 (/ 1 N)) (* 1/4 (/ 1 (pow N 3))))) N)","(* N (+ 1 (/ 1 N)))","(+ (log -1) (* -1 (log (/ -1 N))))","(+ (log -1) (+ (* -1 (log (/ -1 N))) (/ 1 N)))","(+ (log -1) (+ (* -1 (log (/ -1 N))) (* -1 (/ (- (* 1/2 (/ 1 N)) 1) N))))","(+ (log -1) (+ (* -1 (log (/ -1 N))) (* -1 (/ (- (* -1 (/ (- (* 1/3 (/ 1 N)) 1/2) N)) 1) N))))","(* -1 (/ (- (* 1/2 (/ 1 N)) 1) N))","(* -1 (/ (- (* -1 (/ (- (* 1/3 (/ 1 N)) 1/2) N)) 1) N))","(* -1 (/ (- (* -1 (/ (- (* -1 (/ (- (* 1/4 (/ 1 N)) 1/3) N)) 1/2) N)) 1) N))"]],"memory":[[1438864,9664480]],"method":["egg-herbie"],"outputs":[[]],"time":128.948974609375,"type":"simplify"},{"count":[[4,53]],"inputs":[["(log.f64 (+.f64 N #s(literal 1 binary64)))","(-.f64 (log.f64 (+.f64 N #s(literal 1 binary64))) (log.f64 N))","(+.f64 N #s(literal 1 binary64))","(log.f64 N)"]],"memory":[[-2358272,15157664]],"outputs":[["(neg.f64 (log.f64 (/.f64 #s(literal 1 binary64) (+.f64 N #s(literal 1 binary64)))))","(+.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (/.f64 #s(literal -1 binary64) (-.f64 #s(literal 1 binary64) N))))","(+.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (neg.f64 (log.f64 (+.f64 N #s(literal -1 binary64)))))","(+.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log.f64 (/.f64 #s(literal 1 binary64) (fma.f64 (+.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)))))","(+.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (neg.f64 (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N))))","(-.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64))))","(-.f64 (log1p.f64 (*.f64 (neg.f64 N) N)) (log1p.f64 (neg.f64 N)))","(-.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)))","(-.f64 #s(literal 0 binary64) (log.f64 (/.f64 #s(literal 1 binary64) (+.f64 N #s(literal 1 binary64)))))","(-.f64 (log.f64 (neg.f64 (fma.f64 (*.f64 N N) N #s(literal 1 binary64)))) (log.f64 (neg.f64 (fma.f64 (+.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)))))","(/.f64 (-.f64 (*.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (fma.f64 N N #s(literal -1 binary64)))) (*.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64))))) (+.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64)))))","(/.f64 (-.f64 (*.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (*.f64 N N) N))) (*.f64 (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)))) (+.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N))))","(/.f64 (-.f64 (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 3 binary64)) (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 3 binary64))) (fma.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (fma.f64 N N #s(literal -1 binary64))) (fma.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64))) (*.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64)))))))","(/.f64 (-.f64 (pow.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) #s(literal 3 binary64)) (pow.f64 (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) #s(literal 3 binary64))) (fma.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (*.f64 N N) N)) (fma.f64 (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) (*.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N))))))","(log.f64 (+.f64 N #s(literal 1 binary64)))","(neg.f64 (log.f64 (/.f64 N (+.f64 N #s(literal 1 binary64)))))","(neg.f64 (/.f64 (*.f64 (log.f64 (fma.f64 N N N)) (log.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) N))) (neg.f64 (log.f64 (fma.f64 N N N)))))","(neg.f64 (/.f64 (-.f64 (pow.f64 (log1p.f64 N) #s(literal 3 binary64)) (pow.f64 (log.f64 N) #s(literal 3 binary64))) (neg.f64 (fma.f64 (log.f64 (fma.f64 N N N)) (log.f64 N) (pow.f64 (log1p.f64 N) #s(literal 2 binary64))))))","(neg.f64 (/.f64 (neg.f64 (-.f64 (pow.f64 (log1p.f64 N) #s(literal 3 binary64)) (pow.f64 (log.f64 N) #s(literal 3 binary64)))) (fma.f64 (log.f64 (fma.f64 N N N)) (log.f64 N) (pow.f64 (log1p.f64 N) #s(literal 2 binary64)))))","(neg.f64 (/.f64 (*.f64 (neg.f64 (log.f64 (fma.f64 N N N))) (log.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) N))) (log.f64 (fma.f64 N N N))))","(+.f64 (neg.f64 (log.f64 N)) (log1p.f64 N))","(+.f64 (log1p.f64 N) (neg.f64 (log.f64 N)))","(+.f64 (/.f64 (pow.f64 (log1p.f64 N) #s(literal 2 binary64)) (log.f64 (fma.f64 N N N))) (neg.f64 (/.f64 (pow.f64 (log.f64 N) #s(literal 2 binary64)) (log.f64 (fma.f64 N N N)))))","(+.f64 (/.f64 (pow.f64 (log1p.f64 N) #s(literal 3 binary64)) (fma.f64 (log.f64 (fma.f64 N N N)) (log.f64 N) (pow.f64 (log1p.f64 N) #s(literal 2 binary64)))) (neg.f64 (/.f64 (pow.f64 (log.f64 N) #s(literal 3 binary64)) (fma.f64 (log.f64 (fma.f64 N N N)) (log.f64 N) (pow.f64 (log1p.f64 N) #s(literal 2 binary64))))))","(-.f64 (log1p.f64 N) (log.f64 N))","(-.f64 (log.f64 (+.f64 (neg.f64 N) #s(literal -1 binary64))) (log.f64 (neg.f64 N)))","(-.f64 (+.f64 (log1p.f64 N) #s(literal 0 binary64)) (log.f64 N))","(-.f64 #s(literal 0 binary64) (-.f64 (log.f64 N) (log1p.f64 N)))","(-.f64 (+.f64 (neg.f64 (log.f64 N)) (log1p.f64 (*.f64 (*.f64 N N) N))) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)))","(-.f64 (+.f64 (neg.f64 (log.f64 N)) (log.f64 (fma.f64 N N #s(literal -1 binary64)))) (log.f64 (+.f64 N #s(literal -1 binary64))))","(neg.f64 (+.f64 (neg.f64 N) #s(literal -1 binary64)))","(+.f64 N #s(literal 1 binary64))","(+.f64 #s(literal 1 binary64) N)","(+.f64 (/.f64 (*.f64 N N) (+.f64 N #s(literal -1 binary64))) (neg.f64 (/.f64 #s(literal -1 binary64) (-.f64 #s(literal 1 binary64) N))))","(-.f64 (/.f64 (*.f64 N N) (+.f64 N #s(literal -1 binary64))) (/.f64 #s(literal -1 binary64) (-.f64 #s(literal 1 binary64) N)))","(-.f64 (/.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) N)) (/.f64 (*.f64 N N) (-.f64 #s(literal 1 binary64) N)))","(*.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))","(*.f64 #s(literal 1 binary64) (+.f64 N #s(literal 1 binary64)))","(*.f64 (neg.f64 (fma.f64 N N #s(literal -1 binary64))) (/.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) N)))","(*.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (+.f64 N #s(literal 1 binary64)))","(*.f64 (/.f64 #s(literal -1 binary64) (-.f64 #s(literal 1 binary64) N)) (fma.f64 N N #s(literal -1 binary64)))","(*.f64 (+.f64 N #s(literal 1 binary64)) (/.f64 (+.f64 N #s(literal -1 binary64)) (+.f64 N #s(literal -1 binary64))))","(*.f64 (fma.f64 N N #s(literal -1 binary64)) (/.f64 #s(literal -1 binary64) (-.f64 #s(literal 1 binary64) N)))","(*.f64 (/.f64 (neg.f64 (fma.f64 N N #s(literal -1 binary64))) (neg.f64 (fma.f64 N N #s(literal -1 binary64)))) (+.f64 N #s(literal 1 binary64)))","(*.f64 (/.f64 #s(literal 1 binary64) (fma.f64 (+.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64))) (fma.f64 (*.f64 N N) N #s(literal 1 binary64)))","(+.f64 (log.f64 N) #s(literal 0 binary64))","(+.f64 #s(literal 0 binary64) (log.f64 N))","(log.f64 N)","(fma.f64 #s(literal 0 binary64) #s(literal 3 binary64) (log.f64 N))","(fma.f64 #s(literal 0 binary64) #s(literal 2 binary64) (log.f64 N))","(fma.f64 #s(literal 0 binary64) #s(literal 0 binary64) (log.f64 N))","(fma.f64 #s(literal 3 binary64) #s(literal 0 binary64) (log.f64 N))","(fma.f64 #s(literal 2 binary64) #s(literal 0 binary64) (log.f64 N))"]],"time":326.964111328125,"type":"rewrite"},{"compiler":[[846,201]],"memory":[[5256832,5256832]],"time":7.52001953125,"type":"eval"},{"alts":[["(-.f64 (/.f64 (-.f64 (pow.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) #s(literal 3 binary64)) (pow.f64 (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) #s(literal 3 binary64))) (fma.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (*.f64 N N) N)) (fma.f64 (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) (*.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)))))) (log.f64 N))","fresh",48.45388129268919,"binary64"],["(-.f64 (/.f64 (-.f64 (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 3 binary64)) (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 3 binary64))) (fma.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (fma.f64 N N #s(literal -1 binary64))) (fma.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64))) (*.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64))))))) (log.f64 N))","fresh",48.86788817146941,"binary64"],["(-.f64 (/.f64 (-.f64 (*.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (*.f64 N N) N))) (*.f64 (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)))) (+.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)))) (log.f64 N))","next",48.62788034417751,"binary64"],["(-.f64 (/.f64 (-.f64 (*.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (fma.f64 N N #s(literal -1 binary64)))) (*.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64))))) (+.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64))))) (log.f64 N))","fresh",48.96618890513321,"binary64"],["(-.f64 (-.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N))) (log.f64 N))","fresh",48.58560594139277,"binary64"],["(-.f64 (+.f64 (neg.f64 (log.f64 N)) (log1p.f64 (*.f64 (*.f64 N N) N))) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)))","fresh",48.78744101692509,"binary64"],["(-.f64 (+.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (/.f64 #s(literal -1 binary64) (-.f64 #s(literal 1 binary64) N)))) (log.f64 N))","next",49.134008003385,"binary64"],["(-.f64 (log1p.f64 N) (log.f64 N))","next",48.976030472678374,"binary64"],["(neg.f64 (/.f64 (*.f64 (neg.f64 (log.f64 (fma.f64 N N N))) (log.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) N))) (log.f64 (fma.f64 N N N))))","next",47.10482384744166,"binary64"],["(neg.f64 (log.f64 (/.f64 N (+.f64 N #s(literal 1 binary64)))))","next",46.77664099805991,"binary64"]],"compiler":[[60,18],[48,16],[44,15],[35,13],[16,11],[17,12],[15,11],[5,4],[20,11],[7,6],[60,18],[48,16],[44,15],[35,13],[16,11],[17,12],[15,11],[5,4],[20,11],[7,6]],"count":[[54,10]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[53,10],"picked":[1,0]}],"memory":[[-1765648,6572112]],"min-error":[[44.823533058917775,"binary64"]],"time":9.97998046875,"type":"prune"},{"inputs":[["(neg.f64 (log.f64 (/.f64 N (+.f64 N #s(literal 1 binary64)))))","(log.f64 (/.f64 N (+.f64 N #s(literal 1 binary64))))","(/.f64 N (+.f64 N #s(literal 1 binary64)))","N","(+.f64 N #s(literal 1 binary64))","#s(literal 1 binary64)","(-.f64 (log1p.f64 N) (log.f64 N))","(log1p.f64 N)","N","(log.f64 N)","(-.f64 (+.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (/.f64 #s(literal -1 binary64) (-.f64 #s(literal 1 binary64) N)))) (log.f64 N))","(+.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (/.f64 #s(literal -1 binary64) (-.f64 #s(literal 1 binary64) N))))","(log.f64 (fma.f64 N N #s(literal -1 binary64)))","(fma.f64 N N #s(literal -1 binary64))","N","#s(literal -1 binary64)","(log.f64 (/.f64 #s(literal -1 binary64) (-.f64 #s(literal 1 binary64) N)))","(/.f64 #s(literal -1 binary64) (-.f64 #s(literal 1 binary64) N))","(-.f64 #s(literal 1 binary64) N)","#s(literal 1 binary64)","(log.f64 N)","(neg.f64 (/.f64 (*.f64 (neg.f64 (log.f64 (fma.f64 N N N))) (log.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) N))) (log.f64 (fma.f64 N N N))))","(/.f64 (*.f64 (neg.f64 (log.f64 (fma.f64 N N N))) (log.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) N))) (log.f64 (fma.f64 N N N)))","(*.f64 (neg.f64 (log.f64 (fma.f64 N N N))) (log.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) N)))","(neg.f64 (log.f64 (fma.f64 N N N)))","(log.f64 (fma.f64 N N N))","(fma.f64 N N N)","N","(log.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) N))","(/.f64 (+.f64 N #s(literal 1 binary64)) N)","(+.f64 N #s(literal 1 binary64))","#s(literal 1 binary64)","(-.f64 (/.f64 (-.f64 (*.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (*.f64 N N) N))) (*.f64 (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)))) (+.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)))) (log.f64 N))","(/.f64 (-.f64 (*.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (*.f64 N N) N))) (*.f64 (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)))) (+.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N))))","(-.f64 (*.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (*.f64 N N) N))) (*.f64 (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N))))","(*.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (*.f64 N N) N)))","(log1p.f64 (*.f64 (*.f64 N N) N))","(*.f64 (*.f64 N N) N)","(*.f64 N N)","N","(*.f64 (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)))","(log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N))","(*.f64 (+.f64 N #s(literal -1 binary64)) N)","(+.f64 N #s(literal -1 binary64))","#s(literal -1 binary64)","(+.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)))","(log.f64 N)"]],"locations":[["(*.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (*.f64 N N) N)))","cost-diff",0],["(-.f64 (*.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (*.f64 N N) N))) (*.f64 (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N))))","cost-diff",0],["(/.f64 (-.f64 (*.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (*.f64 N N) N))) (*.f64 (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)))) (+.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N))))","cost-diff",0],["(-.f64 (/.f64 (-.f64 (*.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (*.f64 N N) N))) (*.f64 (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)))) (+.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)))) (log.f64 N))","cost-diff",0],["(neg.f64 (log.f64 (fma.f64 N N N)))","cost-diff",0],["(*.f64 (neg.f64 (log.f64 (fma.f64 N N N))) (log.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) N)))","cost-diff",0],["(neg.f64 (/.f64 (*.f64 (neg.f64 (log.f64 (fma.f64 N N N))) (log.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) N))) (log.f64 (fma.f64 N N N))))","cost-diff",0],["(/.f64 (*.f64 (neg.f64 (log.f64 (fma.f64 N N N))) (log.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) N))) (log.f64 (fma.f64 N N N)))","cost-diff",12],["(fma.f64 N N #s(literal -1 binary64))","cost-diff",0],["(log.f64 (fma.f64 N N #s(literal -1 binary64)))","cost-diff",0],["(+.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (/.f64 #s(literal -1 binary64) (-.f64 #s(literal 1 binary64) N))))","cost-diff",0],["(-.f64 (+.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (/.f64 #s(literal -1 binary64) (-.f64 #s(literal 1 binary64) N)))) (log.f64 N))","cost-diff",0],["(log.f64 N)","cost-diff",0],["(log1p.f64 N)","cost-diff",0],["(-.f64 (log1p.f64 N) (log.f64 N))","cost-diff",0],["(+.f64 N #s(literal 1 binary64))","cost-diff",0],["(/.f64 N (+.f64 N #s(literal 1 binary64)))","cost-diff",0],["(log.f64 (/.f64 N (+.f64 N #s(literal 1 binary64))))","cost-diff",0],["(neg.f64 (log.f64 (/.f64 N (+.f64 N #s(literal 1 binary64)))))","cost-diff",0]],"memory":[[-12008784,13467232]],"method":["egg-herbie"],"outputs":[["(neg.f64 (log.f64 (/.f64 N (+.f64 N #s(literal 1 binary64)))))","(log.f64 (/.f64 N (+.f64 N #s(literal 1 binary64))))","(/.f64 N (+.f64 N #s(literal 1 binary64)))","N","(+.f64 N #s(literal 1 binary64))","#s(literal 1 binary64)","(-.f64 (log1p.f64 N) (log.f64 N))","(log1p.f64 N)","N","(log.f64 N)","(-.f64 (+.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (/.f64 #s(literal -1 binary64) (-.f64 #s(literal 1 binary64) N)))) (log.f64 N))","(+.f64 (-.f64 (log.f64 (/.f64 #s(literal -1 binary64) (-.f64 #s(literal 1 binary64) N))) (log.f64 N)) (log.f64 (fma.f64 N N #s(literal -1 binary64))))","(+.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (/.f64 #s(literal -1 binary64) (-.f64 #s(literal 1 binary64) N))))","(log.f64 (fma.f64 N N #s(literal -1 binary64)))","(fma.f64 N N #s(literal -1 binary64))","N","#s(literal -1 binary64)","(log.f64 (/.f64 #s(literal -1 binary64) (-.f64 #s(literal 1 binary64) N)))","(/.f64 #s(literal -1 binary64) (-.f64 #s(literal 1 binary64) N))","(-.f64 #s(literal 1 binary64) N)","#s(literal 1 binary64)","(log.f64 N)","(neg.f64 (/.f64 (*.f64 (neg.f64 (log.f64 (fma.f64 N N N))) (log.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) N))) (log.f64 (fma.f64 N N N))))","(neg.f64 (neg.f64 (log.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) N))))","(/.f64 (*.f64 (neg.f64 (log.f64 (fma.f64 N N N))) (log.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) N))) (log.f64 (fma.f64 N N N)))","(neg.f64 (log.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) N)))","(*.f64 (neg.f64 (log.f64 (fma.f64 N N N))) (log.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) N)))","(neg.f64 (log.f64 (fma.f64 N N N)))","(log.f64 (fma.f64 N N N))","(fma.f64 N N N)","N","(log.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) N))","(/.f64 (+.f64 N #s(literal 1 binary64)) N)","(+.f64 N #s(literal 1 binary64))","#s(literal 1 binary64)","(-.f64 (/.f64 (-.f64 (*.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (*.f64 N N) N))) (*.f64 (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)))) (+.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)))) (log.f64 N))","(fma.f64 (/.f64 (-.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N))) (+.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)))) (+.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N))) (neg.f64 (log.f64 N)))","(/.f64 (-.f64 (*.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (*.f64 N N) N))) (*.f64 (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)))) (+.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N))))","(/.f64 (*.f64 (+.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N))) (-.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)))) (+.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N))))","(-.f64 (*.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (*.f64 N N) N))) (*.f64 (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N))))","(*.f64 (+.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N))) (-.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N))))","(*.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (*.f64 N N) N)))","(log1p.f64 (*.f64 (*.f64 N N) N))","(*.f64 (*.f64 N N) N)","(*.f64 N N)","N","(*.f64 (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)))","(log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N))","(*.f64 (+.f64 N #s(literal -1 binary64)) N)","(+.f64 N #s(literal -1 binary64))","#s(literal -1 binary64)","(+.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)))","(log.f64 N)"]],"time":337.575927734375,"type":"simplify"},{"compiler":[[420,39]],"locations":[["(-.f64 (*.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (*.f64 N N) N))) (*.f64 (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N))))","accuracy",0.45541000976844204],["(*.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (*.f64 N N) N)))","accuracy",0.5045700195368841],["(*.f64 (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)))","accuracy",0.5263862793053261],["(-.f64 (/.f64 (-.f64 (*.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (*.f64 N N) N))) (*.f64 (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)))) (+.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)))) (log.f64 N))","accuracy",48.976030472678374],["(log.f64 (fma.f64 N N N))","accuracy",0.01171875],["(/.f64 (*.f64 (neg.f64 (log.f64 (fma.f64 N N N))) (log.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) N))) (log.f64 (fma.f64 N N N)))","accuracy",0.32421875],["(*.f64 (neg.f64 (log.f64 (fma.f64 N N N))) (log.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) N)))","accuracy",0.33822250976844204],["(log.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) N))","accuracy",47.13789438886579],["(log.f64 (fma.f64 N N #s(literal -1 binary64)))","accuracy",0.00390625],["(log.f64 (/.f64 #s(literal -1 binary64) (-.f64 #s(literal 1 binary64) N)))","accuracy",0.01171875],["(+.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (/.f64 #s(literal -1 binary64) (-.f64 #s(literal 1 binary64) N))))","accuracy",0.19140625],["(-.f64 (+.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (/.f64 #s(literal -1 binary64) (-.f64 #s(literal 1 binary64) N)))) (log.f64 N))","accuracy",48.976030472678374],["(log1p.f64 N)","accuracy",0.0],["(log.f64 N)","accuracy",0.0],["(-.f64 (log1p.f64 N) (log.f64 N))","accuracy",48.976030472678374],["(+.f64 N #s(literal 1 binary64))","accuracy",0.0],["(neg.f64 (log.f64 (/.f64 N (+.f64 N #s(literal 1 binary64)))))","accuracy",0.0],["(/.f64 N (+.f64 N #s(literal 1 binary64)))","accuracy",0.00390625],["(log.f64 (/.f64 N (+.f64 N #s(literal 1 binary64))))","accuracy",46.77044973829147]],"memory":[[4200928,59676208]],"mixsample":[[15.159423828125,"ival-div",0],[20.738525390625,"adjust",800],[3.281005859375,"ival-div",400],[0.157958984375,"ival-assert",0],[9.7841796875,"ival-sub",0],[0.987060546875,"ival-sub",400],[9.0625,"ival-log1p",400],[0.09716796875,"ival-neg",400],[11.88720703125,"ival-add",0],[1.08740234375,"ival-mult",800],[14.068359375,"ival-mult",0],[1.48388671875,"ival-mult",400],[9.4580078125,"ival-log",400],[1.9638671875,"ival-add",400],[42.366943359375,"ival-log",0],[0.34912109375,"ival-true",0],[17.171142578125,"ival-log1p",0],[0.246826171875,"ival-add",800],[0.40966796875,"exact",0],[5.778076171875,"ival-neg",0]],"outcomes":[[179.263671875,1,"valid",198],[26.42041015625,0,"valid",58]],"time":250.448974609375,"type":"localize"},{"count":[[23,182]],"inputs":[["(neg.f64 (log.f64 (/.f64 N (+.f64 N #s(literal 1 binary64)))))","(log.f64 (/.f64 N (+.f64 N #s(literal 1 binary64))))","(/.f64 N (+.f64 N #s(literal 1 binary64)))","(+.f64 N #s(literal 1 binary64))","(-.f64 (log1p.f64 N) (log.f64 N))","(log1p.f64 N)","(log.f64 N)","(-.f64 (+.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (/.f64 #s(literal -1 binary64) (-.f64 #s(literal 1 binary64) N)))) (log.f64 N))","(+.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (/.f64 #s(literal -1 binary64) (-.f64 #s(literal 1 binary64) N))))","(log.f64 (fma.f64 N N #s(literal -1 binary64)))","(fma.f64 N N #s(literal -1 binary64))","(/.f64 (*.f64 (neg.f64 (log.f64 (fma.f64 N N N))) (log.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) N))) (log.f64 (fma.f64 N N N)))","(neg.f64 (/.f64 (*.f64 (neg.f64 (log.f64 (fma.f64 N N N))) (log.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) N))) (log.f64 (fma.f64 N N N))))","(*.f64 (neg.f64 (log.f64 (fma.f64 N N N))) (log.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) N)))","(neg.f64 (log.f64 (fma.f64 N N N)))","(-.f64 (/.f64 (-.f64 (*.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (*.f64 N N) N))) (*.f64 (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)))) (+.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)))) (log.f64 N))","(/.f64 (-.f64 (*.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (*.f64 N N) N))) (*.f64 (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)))) (+.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N))))","(-.f64 (*.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (*.f64 N N) N))) (*.f64 (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N))))","(*.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (*.f64 N N) N)))","(log.f64 (/.f64 #s(literal -1 binary64) (-.f64 #s(literal 1 binary64) N)))","(log.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) N))","(log.f64 (fma.f64 N N N))","(*.f64 (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)))"]],"memory":[[2049840,28294544]],"outputs":[["(* -1 (log N))","(- N (log N))","(- (* N (+ 1 (* -1/2 N))) (log N))","(- (* N (+ 1 (* N (- (* 1/3 N) 1/2)))) (log N))","(log N)","(+ (log N) (* -1 N))","(+ (log N) (* N (- (* 1/2 N) 1)))","(+ (log N) (* N (- (* N (+ 1/2 (* -1/3 N))) 1)))","N","(* N (+ 1 (* -1 N)))","(* N (+ 1 (* N (- N 1))))","(* N (+ 1 (* N (- (* N (+ 1 (* -1 N))) 1))))","1","(+ 1 N)","(* N (+ 1 (* -1/2 N)))","(* N (+ 1 (* N (- (* 1/3 N) 1/2))))","(* N (+ 1 (* N (- (* N (+ 1/3 (* -1/4 N))) 1/2))))","(- (* 2 (log -1)) (log N))","(- (+ N (* 2 (log -1))) (log N))","(- (+ (* 2 (log -1)) (* N (+ 1 (* -1/2 N)))) (log N))","(- (+ (* 2 (log -1)) (* N (+ 1 (* N (- (* 1/3 N) 1/2))))) (log N))","(* 2 (log -1))","(+ N (* 2 (log -1)))","(+ (* 2 (log -1)) (* N (+ 1 (* -1/2 N))))","(+ (* 2 (log -1)) (* N (+ 1 (* N (- (* 1/3 N) 1/2)))))","(log -1)","(+ (log -1) (* -1 (pow N 2)))","(+ (log -1) (* (pow N 2) (- (* -1/2 (pow N 2)) 1)))","(+ (log -1) (* (pow N 2) (- (* (pow N 2) (- (* -1/3 (pow N 2)) 1/2)) 1)))","-1","(- (pow N 2) 1)","(pow (log N) 2)","(+ (* -1 (* N (+ (log N) (* -1 (log N))))) (pow (log N) 2))","(+ (* N (+ (* -1 (* N (+ 1 (+ (* -1/2 (log N)) (* 1/2 (log N)))))) (* -1 (+ (log N) (* -1 (log N)))))) (pow (log N) 2))","(+ (* N (+ (* -1 (+ (log N) (* -1 (log N)))) (* N (+ (* -1 (* N (- (+ (* -1/3 (log N)) (* 1/3 (log N))) 1))) (* -1 (+ 1 (+ (* -1/2 (log N)) (* 1/2 (log N))))))))) (pow (log N) 2))","(- (* -1 N) (log N))","(- (* N (- (* 1/2 N) 1)) (log N))","(- (* N (- (* N (+ 1/2 (* -1/3 N))) 1)) (log N))","(* -1 (pow N 2))","(* (pow N 2) (- N 1))","(* (pow N 2) (- (* N (+ 1 (* 13/12 N))) 1))","(* (pow N 2) (- (* N (+ 1 (* N (+ 13/12 (* -1/6 N))))) 1))","(pow N 6)","(* (pow N 6) (+ 1 (* -1 (pow N 3))))","(* (pow N 6) (+ 1 (* (pow N 3) (- (* 11/12 (pow N 3)) 1))))","(* (pow N 6) (+ 1 (* (pow N 3) (- (* (pow N 3) (+ 11/12 (* -5/6 (pow N 3)))) 1))))","(+ N (log -1))","(+ (log -1) (* N (+ 1 (* 1/2 N))))","(+ (log -1) (* N (+ 1 (* N (+ 1/2 (* 1/3 N))))))","(+ N (* -1 (log N)))","(+ (* -1 (log N)) (* N (+ 1 (* -1/2 N))))","(+ (* -1 (log N)) (* N (+ 1 (* N (- (* 1/3 N) 1/2)))))","(+ N (log N))","(+ (log N) (* N (+ 1 (* -1/2 N))))","(+ (log N) (* N (+ 1 (* N (- (* 1/3 N) 1/2)))))","(pow N 2)","(* (pow N 2) (+ 1 (* -1 N)))","(* (pow N 2) (+ 1 (* N (- (* -13/12 N) 1))))","(* (pow N 2) (+ 1 (* N (- (* N (- (* 1/6 N) 13/12)) 1))))","(/ 1 N)","(/ (- 1 (* 1/2 (/ 1 N))) N)","(/ (- (+ 1 (/ 1/3 (pow N 2))) (* 1/2 (/ 1 N))) N)","(/ (- (+ 1 (/ 1/3 (pow N 2))) (+ (* 1/2 (/ 1 N)) (* 1/4 (/ 1 (pow N 3))))) N)","(/ -1 N)","(/ (- (* 1/2 (/ 1 N)) 1) N)","(/ (- (* 1/2 (/ 1 N)) (+ 1 (/ 1/3 (pow N 2)))) N)","(/ (- (+ (* 1/2 (/ 1 N)) (* 1/4 (/ 1 (pow N 3)))) (+ 1 (/ 1/3 (pow N 2)))) N)","(- 1 (/ 1 N))","(- (+ 1 (/ 1 (pow N 2))) (/ 1 N))","(- (+ 1 (/ 1 (pow N 2))) (+ (/ 1 N) (/ 1 (pow N 3))))","(* N (+ 1 (/ 1 N)))","(* -1 (log (/ 1 N)))","(+ (* -1 (log (/ 1 N))) (/ 1 N))","(- (+ (* -1 (log (/ 1 N))) (/ 1 N)) (/ 1/2 (pow N 2)))","(- (+ (* -1 (log (/ 1 N))) (+ (/ 1 N) (* 1/3 (/ 1 (pow N 3))))) (/ 1/2 (pow N 2)))","(- (+ (log (/ 1 N)) (* -2 (log (/ 1 N)))) (* -1 (log (/ 1 N))))","(- (+ (log (/ 1 N)) (+ (* -2 (log (/ 1 N))) (/ 1 N))) (* -1 (log (/ 1 N))))","(- (+ (log (/ 1 N)) (+ (* -2 (log (/ 1 N))) (/ 1 N))) (+ (* -1 (log (/ 1 N))) (/ 1/2 (pow N 2))))","(- (+ (log (/ 1 N)) (+ (* -2 (log (/ 1 N))) (+ (/ 1 N) (* 1/3 (/ 1 (pow N 3)))))) (+ (* -1 (log (/ 1 N))) (/ 1/2 (pow N 2))))","(+ (log (/ 1 N)) (* -2 (log (/ 1 N))))","(+ (log (/ 1 N)) (+ (* -2 (log (/ 1 N))) (/ 1 N)))","(- (+ (log (/ 1 N)) (+ (* -2 (log (/ 1 N))) (/ 1 N))) (/ 1/2 (pow N 2)))","(- (+ (log (/ 1 N)) (+ (* -2 (log (/ 1 N))) (+ (/ 1 N) (* 1/3 (/ 1 (pow N 3)))))) (/ 1/2 (pow N 2)))","(* -2 (log (/ 1 N)))","(- (* -2 (log (/ 1 N))) (/ 1 (pow N 2)))","(+ (* -2 (log (/ 1 N))) (* -1 (/ (+ 1 (* 1/2 (/ 1 (pow N 2)))) (pow N 2))))","(- (+ (* -2 (log (/ 1 N))) (* -1 (/ (+ 1/2 (* 1/3 (/ 1 (pow N 2)))) (pow N 4)))) (/ 1 (pow N 2)))","(* (pow N 2) (- 1 (/ 1 (pow N 2))))","(* 2 (/ (log (/ 1 N)) N))","(/ (+ (* -1 (/ (+ 1 (log (/ 1 N))) N)) (* 2 (log (/ 1 N)))) N)","(/ (+ (* -1 (/ (+ 1 (log (/ 1 N))) N)) (+ (* -1 (/ (- (* -2/3 (log (/ 1 N))) 1) (pow N 2))) (* 2 (log (/ 1 N))))) N)","(/ (+ (* -1 (/ (+ 11/12 (* 1/2 (log (/ 1 N)))) (pow N 3))) (+ (* -1 (/ (+ 1 (log (/ 1 N))) N)) (+ (* -1 (/ (- (* -2/3 (log (/ 1 N))) 1) (pow N 2))) (* 2 (log (/ 1 N)))))) N)","(* 2 (log (/ 1 N)))","(* -1 (+ (* -2 (log (/ 1 N))) (/ 1 N)))","(- (/ 1/2 (pow N 2)) (+ (* -2 (log (/ 1 N))) (/ 1 N)))","(- (/ 1/2 (pow N 2)) (+ (* -2 (log (/ 1 N))) (+ (/ 1 N) (* 1/3 (/ 1 (pow N 3))))))","(- (* 9 (/ (pow (log (/ 1 N)) 2) (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))))) (+ (* -1 (log (/ 1 N))) (* 4 (/ (pow (log (/ 1 N)) 2) (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N))))))))","(- (+ (* -4 (/ (pow (log (/ 1 N)) 2) (* N (pow (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))) 2)))) (* 9 (/ (pow (log (/ 1 N)) 2) (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N))))))) (+ (* -9 (/ (pow (log (/ 1 N)) 2) (* N (pow (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))) 2)))) (+ (* -1 (log (/ 1 N))) (+ (* 4 (/ (log (/ 1 N)) (* N (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N))))))) (* 4 (/ (pow (log (/ 1 N)) 2) (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N))))))))))","(- (+ (* -4 (/ (pow (log (/ 1 N)) 2) (* N (pow (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))) 2)))) (+ (* -1 (/ (- (* 4 (/ (log (/ 1 N)) (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))))) (* -4 (/ (pow (log (/ 1 N)) 2) (pow (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))) 2)))) (* (pow N 2) (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N))))))) (+ (* 2 (/ (pow (log (/ 1 N)) 2) (* (pow N 2) (pow (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))) 2)))) (* 9 (/ (pow (log (/ 1 N)) 2) (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N))))))))) (+ (* -9 (/ (pow (log (/ 1 N)) 2) (* N (pow (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))) 2)))) (+ (* -9 (/ (pow (log (/ 1 N)) 2) (* (pow N 2) (pow (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))) 3)))) (+ (* -2 (/ (log (/ 1 N)) (* (pow N 2) (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N))))))) (+ (* -1 (log (/ 1 N))) (+ (* 4 (/ (log (/ 1 N)) (* N (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N))))))) (+ (* 4 (/ (pow (log (/ 1 N)) 2) (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))))) (+ (* 9/2 (/ (pow (log (/ 1 N)) 2) (* (pow N 2) (pow (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))) 2)))) (/ 1 (* (pow N 2) (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N))))))))))))))","(- (+ (* -6 (/ (log (/ 1 N)) (* (pow N 3) (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N))))))) (+ (* -4 (/ (pow (log (/ 1 N)) 2) (* N (pow (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))) 2)))) (+ (* -1 (/ (- (* 4 (/ (log (/ 1 N)) (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))))) (* -4 (/ (pow (log (/ 1 N)) 2) (pow (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))) 2)))) (* (pow N 2) (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N))))))) (+ (* -1 (/ (- (+ (* -2 (/ (log (/ 1 N)) (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))))) (/ 1 (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))))) (+ (* -1 (/ (- (* 4 (/ (log (/ 1 N)) (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))))) (* -4 (/ (pow (log (/ 1 N)) 2) (pow (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))) 2)))) (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))))) (* 2 (/ (pow (log (/ 1 N)) 2) (pow (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))) 2))))) (* (pow N 3) (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N))))))) (+ (* 1/2 (/ (- (* 4 (/ (log (/ 1 N)) (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))))) (* -4 (/ (pow (log (/ 1 N)) 2) (pow (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))) 2)))) (* (pow N 3) (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N))))))) (+ (* 2 (/ (pow (log (/ 1 N)) 2) (* (pow N 2) (pow (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))) 2)))) (+ (* 20/3 (/ (pow (log (/ 1 N)) 2) (* (pow N 3) (pow (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))) 2)))) (+ (* 9 (/ (pow (log (/ 1 N)) 2) (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))))) (/ 1 (* (pow N 3) (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))))))))))))) (+ (* -9 (/ (pow (log (/ 1 N)) 2) (* N (pow (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))) 2)))) (+ (* -9 (/ (pow (log (/ 1 N)) 2) (* (pow N 2) (pow (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))) 3)))) (+ (* -9 (/ (pow (log (/ 1 N)) 2) (* (pow N 3) (pow (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))) 4)))) (+ (* -8/3 (/ (log (/ 1 N)) (* (pow N 3) (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N))))))) (+ (* -2 (/ (log (/ 1 N)) (* (pow N 2) (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N))))))) (+ (* -1 (log (/ 1 N))) (+ (* 4 (/ (log (/ 1 N)) (* N (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N))))))) (+ (* 4 (/ (pow (log (/ 1 N)) 2) (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))))) (+ (* 9/2 (/ (pow (log (/ 1 N)) 2) (* (pow N 2) (pow (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))) 2)))) (+ (* 9 (/ (pow (log (/ 1 N)) 2) (* (pow N 3) (pow (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))) 3)))) (+ (* 15 (/ (pow (log (/ 1 N)) 2) (* (pow N 3) (pow (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))) 2)))) (/ 1 (* (pow N 2) (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N))))))))))))))))))","(/ (- (* 9 (pow (log (/ 1 N)) 2)) (* 4 (pow (log (/ 1 N)) 2))) (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))))","(- (+ (* -4 (/ (log (/ 1 N)) (* N (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N))))))) (* 9 (/ (pow (log (/ 1 N)) 2) (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N))))))) (+ (* -1 (/ (- (* 9 (pow (log (/ 1 N)) 2)) (* 4 (pow (log (/ 1 N)) 2))) (* N (pow (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))) 2)))) (* 4 (/ (pow (log (/ 1 N)) 2) (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N))))))))","(- (+ (* -4 (/ (log (/ 1 N)) (* N (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N))))))) (+ (* -1 (/ (+ 1 (* -2 (log (/ 1 N)))) (* (pow N 2) (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N))))))) (* 9 (/ (pow (log (/ 1 N)) 2) (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))))))) (+ (* -1 (/ (- (* -4 (/ (log (/ 1 N)) (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))))) (* -1 (/ (- (* 9 (pow (log (/ 1 N)) 2)) (* 4 (pow (log (/ 1 N)) 2))) (pow (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))) 2)))) (* (pow N 2) (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N))))))) (+ (* -1 (/ (- (* 9 (pow (log (/ 1 N)) 2)) (* 4 (pow (log (/ 1 N)) 2))) (* N (pow (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))) 2)))) (+ (* 1/2 (/ (- (* 9 (pow (log (/ 1 N)) 2)) (* 4 (pow (log (/ 1 N)) 2))) (* (pow N 2) (pow (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))) 2)))) (* 4 (/ (pow (log (/ 1 N)) 2) (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N))))))))))","(- (+ (* -6 (/ (log (/ 1 N)) (* (pow N 3) (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N))))))) (+ (* -4 (/ (log (/ 1 N)) (* N (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N))))))) (+ (* -1 (/ (+ 1 (* -2 (log (/ 1 N)))) (* (pow N 2) (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N))))))) (+ (* 9 (/ (pow (log (/ 1 N)) 2) (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))))) (/ 1 (* (pow N 3) (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))))))))) (+ (* -8/3 (/ (log (/ 1 N)) (* (pow N 3) (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N))))))) (+ (* -1 (/ (- (* -4 (/ (log (/ 1 N)) (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))))) (* -1 (/ (- (* 9 (pow (log (/ 1 N)) 2)) (* 4 (pow (log (/ 1 N)) 2))) (pow (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))) 2)))) (* (pow N 2) (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N))))))) (+ (* -1 (/ (- (* -1 (/ (+ 1 (* -2 (log (/ 1 N)))) (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))))) (+ (* -1 (/ (- (* -4 (/ (log (/ 1 N)) (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))))) (* -1 (/ (- (* 9 (pow (log (/ 1 N)) 2)) (* 4 (pow (log (/ 1 N)) 2))) (pow (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))) 2)))) (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))))) (* 1/2 (/ (- (* 9 (pow (log (/ 1 N)) 2)) (* 4 (pow (log (/ 1 N)) 2))) (pow (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))) 2))))) (* (pow N 3) (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N))))))) (+ (* -1 (/ (- (* 9 (pow (log (/ 1 N)) 2)) (* 4 (pow (log (/ 1 N)) 2))) (* N (pow (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))) 2)))) (+ (* 1/2 (/ (- (* -4 (/ (log (/ 1 N)) (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))))) (* -1 (/ (- (* 9 (pow (log (/ 1 N)) 2)) (* 4 (pow (log (/ 1 N)) 2))) (pow (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))) 2)))) (* (pow N 3) (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N))))))) (+ (* 1/2 (/ (- (* 9 (pow (log (/ 1 N)) 2)) (* 4 (pow (log (/ 1 N)) 2))) (* (pow N 2) (pow (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))) 2)))) (+ (* 5/3 (/ (- (* 9 (pow (log (/ 1 N)) 2)) (* 4 (pow (log (/ 1 N)) 2))) (* (pow N 3) (pow (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))) 2)))) (* 4 (/ (pow (log (/ 1 N)) 2) (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N))))))))))))))","(- (* 9 (pow (log (/ 1 N)) 2)) (* 4 (pow (log (/ 1 N)) 2)))","(- (+ (* -4 (/ (log (/ 1 N)) N)) (* 9 (pow (log (/ 1 N)) 2))) (* 4 (pow (log (/ 1 N)) 2)))","(- (+ (* -1 (/ (+ 1 (* -2 (log (/ 1 N)))) (pow N 2))) (* 9 (pow (log (/ 1 N)) 2))) (+ (* 4 (/ (log (/ 1 N)) N)) (* 4 (pow (log (/ 1 N)) 2))))","(- (+ (* -6 (/ (log (/ 1 N)) (pow N 3))) (+ (* 9 (pow (log (/ 1 N)) 2)) (/ 1 (pow N 3)))) (+ (* -8/3 (/ (log (/ 1 N)) (pow N 3))) (+ (* -2 (/ (log (/ 1 N)) (pow N 2))) (+ (* 4 (/ (log (/ 1 N)) N)) (+ (* 4 (pow (log (/ 1 N)) 2)) (/ 1 (pow N 2)))))))","(* 9 (pow (log (/ 1 N)) 2))","(+ (* -6 (/ (log (/ 1 N)) (pow N 3))) (* 9 (pow (log (/ 1 N)) 2)))","(+ (* -6 (/ (log (/ 1 N)) (pow N 3))) (+ (* 3 (/ (log (/ 1 N)) (pow N 6))) (+ (* 9 (pow (log (/ 1 N)) 2)) (/ 1 (pow N 6)))))","(- (+ (* -6 (/ (log (/ 1 N)) (pow N 3))) (+ (* -2 (/ (log (/ 1 N)) (pow N 9))) (+ (* 3 (/ (log (/ 1 N)) (pow N 6))) (+ (* 9 (pow (log (/ 1 N)) 2)) (/ 1 (pow N 6)))))) (/ 1 (pow N 9)))","(log (/ 1 N))","(+ (log (/ 1 N)) (/ 1 N))","(+ (log (/ 1 N)) (+ (/ 1/2 (pow N 2)) (/ 1 N)))","(+ (log (/ 1 N)) (+ (/ 1/2 (pow N 2)) (+ (/ 1 N) (* 1/3 (/ 1 (pow N 3))))))","(+ (* -2 (log (/ 1 N))) (/ 1 N))","(- (+ (* -2 (log (/ 1 N))) (/ 1 N)) (/ 1/2 (pow N 2)))","(- (+ (* -2 (log (/ 1 N))) (+ (/ 1 N) (* 1/3 (/ 1 (pow N 3))))) (/ 1/2 (pow N 2)))","(* 4 (pow (log (/ 1 N)) 2))","(+ (* 4 (/ (log (/ 1 N)) N)) (* 4 (pow (log (/ 1 N)) 2)))","(+ (* -2 (/ (log (/ 1 N)) (pow N 2))) (+ (* 4 (/ (log (/ 1 N)) N)) (+ (* 4 (pow (log (/ 1 N)) 2)) (/ 1 (pow N 2)))))","(- (+ (* -8/3 (/ (log (/ 1 N)) (pow N 3))) (+ (* -2 (/ (log (/ 1 N)) (pow N 2))) (+ (* 4 (/ (log (/ 1 N)) N)) (+ (* 4 (pow (log (/ 1 N)) 2)) (/ 1 (pow N 2)))))) (/ 1 (pow N 3)))","(* -1 (/ (- (* 1/2 (/ 1 N)) 1) N))","(* -1 (/ (- (* -1 (/ (- (* 1/3 (/ 1 N)) 1/2) N)) 1) N))","(* -1 (/ (- (* -1 (/ (- (* -1 (/ (- (* 1/4 (/ 1 N)) 1/3) N)) 1/2) N)) 1) N))","(* -1 (/ (- 1 (* 1/2 (/ 1 N))) N))","(* -1 (/ (+ 1 (* -1 (/ (- 1/2 (* 1/3 (/ 1 N))) N))) N))","(* -1 (/ (+ 1 (* -1 (/ (+ 1/2 (* -1 (/ (- 1/3 (* 1/4 (/ 1 N))) N))) N))) N))","(+ 1 (* -1 (/ (- 1 (/ 1 N)) N)))","(+ 1 (* -1 (/ (+ 1 (* -1 (/ (- 1 (/ 1 N)) N))) N)))","(+ (log -1) (* -1 (log (/ -1 N))))","(+ (log -1) (+ (* -1 (log (/ -1 N))) (/ 1 N)))","(+ (log -1) (+ (* -1 (log (/ -1 N))) (* -1 (/ (- (* 1/2 (/ 1 N)) 1) N))))","(+ (log -1) (+ (* -1 (log (/ -1 N))) (* -1 (/ (- (* -1 (/ (- (* 1/3 (/ 1 N)) 1/2) N)) 1) N))))","(- (+ (log (/ -1 N)) (* -2 (log (/ -1 N)))) (* -1 (log (/ -1 N))))","(- (+ (log (/ -1 N)) (+ (* -2 (log (/ -1 N))) (/ 1 N))) (* -1 (log (/ -1 N))))","(- (+ (log (/ -1 N)) (+ (* -2 (log (/ -1 N))) (* -1 (/ (- (* 1/2 (/ 1 N)) 1) N)))) (* -1 (log (/ -1 N))))","(- (+ (log (/ -1 N)) (+ (* -2 (log (/ -1 N))) (* -1 (/ (- (* -1 (/ (- (* 1/3 (/ 1 N)) 1/2) N)) 1) N)))) (* -1 (log (/ -1 N))))","(+ (log -1) (+ (log (/ -1 N)) (* -2 (log (/ -1 N)))))","(+ (log -1) (+ (log (/ -1 N)) (+ (* -2 (log (/ -1 N))) (/ 1 N))))","(+ (log -1) (+ (log (/ -1 N)) (+ (* -2 (log (/ -1 N))) (* -1 (/ (- (* 1/2 (/ 1 N)) 1) N)))))","(+ (log -1) (+ (log (/ -1 N)) (+ (* -2 (log (/ -1 N))) (* -1 (/ (- (* -1 (/ (- (* 1/3 (/ 1 N)) 1/2) N)) 1) N)))))","(* -2 (log (/ -1 N)))","(- (* -2 (log (/ -1 N))) (/ 1 (pow N 2)))","(+ (* -2 (log (/ -1 N))) (* -1 (/ (+ 1 (* 1/2 (/ 1 (pow N 2)))) (pow N 2))))","(- (+ (* -2 (log (/ -1 N))) (* -1 (/ (+ 1/2 (* 1/3 (/ 1 (pow N 2)))) (pow N 4)))) (/ 1 (pow N 2)))","(* 2 (/ (log (/ -1 N)) N))","(* -1 (/ (+ (* -2 (log (/ -1 N))) (+ (/ 1 N) (/ (log (/ -1 N)) N))) N))","(* -1 (/ (+ (* -2 (log (/ -1 N))) (* -1 (/ (+ (* -1 (+ 1 (log (/ -1 N)))) (+ (* 2/3 (/ (log (/ -1 N)) N)) (/ 1 N))) N))) N))","(* -1 (/ (+ (* -2 (log (/ -1 N))) (* -1 (/ (+ (* -1 (+ 1 (log (/ -1 N)))) (* -1 (/ (+ (* -1 (+ 1 (* 2/3 (log (/ -1 N))))) (+ (* 1/2 (/ (log (/ -1 N)) N)) (* 11/12 (/ 1 N)))) N))) N))) N))","(* 2 (log (/ -1 N)))","(* -1 (+ (* -2 (log (/ -1 N))) (/ 1 N)))","(- (* -1 (/ (- 1 (* 1/2 (/ 1 N))) N)) (* -2 (log (/ -1 N))))","(- (* -1 (/ (+ 1 (* -1 (/ (- 1/2 (* 1/3 (/ 1 N))) N))) N)) (* -2 (log (/ -1 N))))","(- (/ (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2) (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N)))))) (+ (log -1) (+ (* -1 (log (/ -1 N))) (* 4 (/ (pow (log (/ -1 N)) 2) (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))))))))","(- (+ (* -1 (/ (- (* 4 (/ (pow (log (/ -1 N)) 2) (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 2))) (+ (* -4 (/ (log (/ -1 N)) (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))))) (/ (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2) (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 2)))) N)) (/ (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2) (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))))) (+ (log -1) (+ (* -1 (log (/ -1 N))) (* 4 (/ (pow (log (/ -1 N)) 2) (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))))))))","(- (+ (* -1 (/ (- (+ (* -1 (/ (- (+ (* -4 (/ (log (/ -1 N)) (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 2))) (* 2 (/ (pow (log (/ -1 N)) 2) (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 2)))) (+ (* -2 (/ (log (/ -1 N)) (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))))) (+ (* -1 (/ (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2) (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 3))) (+ (* 1/2 (/ (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2) (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 2))) (+ (* 4 (/ (pow (log (/ -1 N)) 2) (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 3))) (/ 1 (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))))))))) N)) (* 4 (/ (pow (log (/ -1 N)) 2) (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 2)))) (+ (* -4 (/ (log (/ -1 N)) (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))))) (/ (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2) (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 2)))) N)) (/ (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2) (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))))) (+ (log -1) (+ (* -1 (log (/ -1 N))) (* 4 (/ (pow (log (/ -1 N)) 2) (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))))))))","(- (+ (* -1 (/ (- (+ (* -1 (/ (- (+ (* -4 (/ (log (/ -1 N)) (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 2))) (+ (* -1 (/ (- (+ (* -20/3 (/ (pow (log (/ -1 N)) 2) (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 2))) (+ (* -2 (/ (log (/ -1 N)) (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 2))) (+ (* -2 (/ (+ (log -1) (* -3 (log (/ -1 N)))) (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))))) (+ (* 1/2 (/ (- (* -4 (/ (log (/ -1 N)) (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))))) (* 4 (/ (pow (log (/ -1 N)) 2) (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 2)))) (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))))) (+ (* 4 (/ (pow (log (/ -1 N)) 2) (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 4))) (/ 1 (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 2))))))) (+ (* -4 (/ (log (/ -1 N)) (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 3))) (+ (* -5/3 (/ (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2) (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 2))) (+ (* -1 (/ (+ (* -1 (/ (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2) (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 3))) (* 1/2 (/ (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2) (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 2)))) (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))))) (+ (* -1/2 (/ (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2) (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 3))) (+ (* 2 (/ (pow (log (/ -1 N)) 2) (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 3))) (+ (* 8/3 (/ (log (/ -1 N)) (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))))) (/ 1 (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))))))))))) N)) (* 2 (/ (pow (log (/ -1 N)) 2) (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 2))))) (+ (* -2 (/ (log (/ -1 N)) (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))))) (+ (* -1 (/ (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2) (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 3))) (+ (* 1/2 (/ (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2) (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 2))) (+ (* 4 (/ (pow (log (/ -1 N)) 2) (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 3))) (/ 1 (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))))))))) N)) (* 4 (/ (pow (log (/ -1 N)) 2) (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 2)))) (+ (* -4 (/ (log (/ -1 N)) (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))))) (/ (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2) (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 2)))) N)) (/ (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2) (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))))) (+ (log -1) (+ (* -1 (log (/ -1 N))) (* 4 (/ (pow (log (/ -1 N)) 2) (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))))))))","(/ (- (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2) (* 4 (pow (log (/ -1 N)) 2))) (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))))","(- (+ (* -1 (/ (- (+ (* 4 (/ (log (/ -1 N)) (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))))) (* 4 (/ (pow (log (/ -1 N)) 2) (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 2)))) (/ (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2) (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 2))) N)) (/ (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2) (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))))) (* 4 (/ (pow (log (/ -1 N)) 2) (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))))))","(- (+ (* -1 (/ (- (+ (* -1 (/ (- (+ (* -1 (/ (+ 1 (* -2 (log (/ -1 N)))) (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))))) (/ (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2) (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 3))) (+ (* 1/2 (/ (- (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2) (* 4 (pow (log (/ -1 N)) 2))) (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 2))) (+ (* 4 (/ (log (/ -1 N)) (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 2))) (* 4 (/ (pow (log (/ -1 N)) 2) (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 3)))))) N)) (+ (* 4 (/ (log (/ -1 N)) (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))))) (* 4 (/ (pow (log (/ -1 N)) 2) (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 2))))) (/ (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2) (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 2))) N)) (/ (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2) (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))))) (* 4 (/ (pow (log (/ -1 N)) 2) (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))))))","(- (+ (* -1 (/ (- (+ (* -1 (/ (- (+ (* -1 (/ (+ 1 (* -2 (log (/ -1 N)))) (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))))) (+ (* -1 (/ (- (+ (* -2 (/ (+ (log -1) (* -3 (log (/ -1 N)))) (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))))) (+ (* 1/2 (/ (- (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2) (* 4 (pow (log (/ -1 N)) 2))) (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 3))) (+ (* 4 (/ (log (/ -1 N)) (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 3))) (* 4 (/ (pow (log (/ -1 N)) 2) (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 4)))))) (+ (* -5/3 (/ (- (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2) (* 4 (pow (log (/ -1 N)) 2))) (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 2))) (+ (* -1 (/ (+ 1 (* -2 (log (/ -1 N)))) (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 2))) (+ (* 1/2 (/ (- (+ (* 4 (/ (log (/ -1 N)) (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))))) (* 4 (/ (pow (log (/ -1 N)) 2) (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 2)))) (/ (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2) (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 2))) (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))))) (+ (* 8/3 (/ (log (/ -1 N)) (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))))) (+ (/ 1 (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N)))))) (/ (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2) (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 4)))))))) N)) (/ (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2) (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 3)))) (+ (* 1/2 (/ (- (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2) (* 4 (pow (log (/ -1 N)) 2))) (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 2))) (+ (* 4 (/ (log (/ -1 N)) (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 2))) (* 4 (/ (pow (log (/ -1 N)) 2) (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 3)))))) N)) (+ (* 4 (/ (log (/ -1 N)) (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))))) (* 4 (/ (pow (log (/ -1 N)) 2) (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 2))))) (/ (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2) (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 2))) N)) (/ (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2) (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))))) (* 4 (/ (pow (log (/ -1 N)) 2) (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))))))","(- (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2) (* 4 (pow (log (/ -1 N)) 2)))","(- (+ (* -4 (/ (log (/ -1 N)) N)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2)) (* 4 (pow (log (/ -1 N)) 2)))","(- (+ (* -1 (/ (- (+ (* -2 (/ (log (/ -1 N)) N)) (/ 1 N)) (* -4 (log (/ -1 N)))) N)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2)) (* 4 (pow (log (/ -1 N)) 2)))","(- (+ (* -1 (/ (- (* -1 (/ (- (* -1 (/ (- (* -2 (+ (log -1) (* -3 (log (/ -1 N))))) (+ 1 (* 8/3 (log (/ -1 N))))) N)) (+ 1 (* -2 (log (/ -1 N))))) N)) (* -4 (log (/ -1 N)))) N)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2)) (* 4 (pow (log (/ -1 N)) 2)))","(pow (+ (log -1) (* -3 (log (/ -1 N)))) 2)","(+ (* 2 (/ (+ (log -1) (* -3 (log (/ -1 N)))) (pow N 3))) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))","(+ (* -1 (/ (+ (* -2 (+ (log -1) (* -3 (log (/ -1 N))))) (* -1 (/ (+ 1 (* -1 (+ (log -1) (* -3 (log (/ -1 N)))))) (pow N 3)))) (pow N 3))) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))","(+ (* -1 (/ (+ (* -2 (+ (log -1) (* -3 (log (/ -1 N))))) (* -1 (/ (+ 1 (+ (* -1 (+ (log -1) (* -3 (log (/ -1 N))))) (* -1 (/ (+ 1 (* -2/3 (+ (log -1) (* -3 (log (/ -1 N)))))) (pow N 3))))) (pow N 3)))) (pow N 3))) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))","(+ (log -1) (log (/ -1 N)))","(+ (log -1) (+ (log (/ -1 N)) (/ 1 N)))","(+ (log -1) (+ (log (/ -1 N)) (+ (/ 1/2 (pow N 2)) (/ 1 N))))","(+ (log -1) (+ (log (/ -1 N)) (* -1 (/ (- (* -1 (/ (+ 1/2 (* 1/3 (/ 1 N))) N)) 1) N))))","(+ (* -2 (log (/ -1 N))) (/ 1 N))","(+ (* -2 (log (/ -1 N))) (* -1 (/ (- (* 1/2 (/ 1 N)) 1) N)))","(+ (* -2 (log (/ -1 N))) (* -1 (/ (- (* -1 (/ (- (* 1/3 (/ 1 N)) 1/2) N)) 1) N)))","(* 4 (pow (log (/ -1 N)) 2))","(+ (* 4 (/ (log (/ -1 N)) N)) (* 4 (pow (log (/ -1 N)) 2)))","(+ (* -1 (/ (+ (* -4 (log (/ -1 N))) (* -1 (/ (+ 1 (* -2 (log (/ -1 N)))) N))) N)) (* 4 (pow (log (/ -1 N)) 2)))","(+ (* -1 (/ (+ (* -4 (log (/ -1 N))) (* -1 (/ (+ 1 (+ (* -2 (log (/ -1 N))) (* -1 (/ (+ 1 (* 8/3 (log (/ -1 N)))) N)))) N))) N)) (* 4 (pow (log (/ -1 N)) 2)))"]],"series":[[24.205078125,"((neg (log (/ N (+ N 1)))) (log (/ N (+ N 1))) (/ N (+ N 1)) (+ N 1) (- (log (+ 1 N)) (log N)) (log (+ 1 N)) (log N) (- (+ (log (+ (* N N) -1)) (log (/ -1 (- 1 N)))) (log N)) (+ (log (+ (* N N) -1)) (log (/ -1 (- 1 N)))) (log (+ (* N N) -1)) (+ (* N N) -1) (/ (* (neg (log (+ (* N N) N))) (log (/ (+ N 1) N))) (log (+ (* N N) N))) (neg (/ (* (neg (log (+ (* N N) N))) (log (/ (+ N 1) N))) (log (+ (* N N) N)))) (* (neg (log (+ (* N N) N))) (log (/ (+ N 1) N))) (neg (log (+ (* N N) N))) (- (/ (- (* (log (+ 1 (* (* N N) N))) (log (+ 1 (* (* N N) N)))) (* (log (+ 1 (* (+ N -1) N))) (log (+ 1 (* (+ N -1) N))))) (+ (log (+ 1 (* (* N N) N))) (log (+ 1 (* (+ N -1) N))))) (log N)) (/ (- (* (log (+ 1 (* (* N N) N))) (log (+ 1 (* (* N N) N)))) (* (log (+ 1 (* (+ N -1) N))) (log (+ 1 (* (+ N -1) N))))) (+ (log (+ 1 (* (* N N) N))) (log (+ 1 (* (+ N -1) N))))) (- (* (log (+ 1 (* (* N N) N))) (log (+ 1 (* (* N N) N)))) (* (log (+ 1 (* (+ N -1) N))) (log (+ 1 (* (+ N -1) N))))) (* (log (+ 1 (* (* N N) N))) (log (+ 1 (* (* N N) N)))) (log (/ -1 (- 1 N))) (log (/ (+ N 1) N)) (log (+ (* N N) N)) (* (log (+ 1 (* (+ N -1) N))) (log (+ 1 (* (+ N -1) N)))))","N","-inf"],[25.7880859375,"((neg (log (/ N (+ N 1)))) (log (/ N (+ N 1))) (/ N (+ N 1)) (+ N 1) (- (log (+ 1 N)) (log N)) (log (+ 1 N)) (log N) (- (+ (log (+ (* N N) -1)) (log (/ -1 (- 1 N)))) (log N)) (+ (log (+ (* N N) -1)) (log (/ -1 (- 1 N)))) (log (+ (* N N) -1)) (+ (* N N) -1) (/ (* (neg (log (+ (* N N) N))) (log (/ (+ N 1) N))) (log (+ (* N N) N))) (neg (/ (* (neg (log (+ (* N N) N))) (log (/ (+ N 1) N))) (log (+ (* N N) N)))) (* (neg (log (+ (* N N) N))) (log (/ (+ N 1) N))) (neg (log (+ (* N N) N))) (- (/ (- (* (log (+ 1 (* (* N N) N))) (log (+ 1 (* (* N N) N)))) (* (log (+ 1 (* (+ N -1) N))) (log (+ 1 (* (+ N -1) N))))) (+ (log (+ 1 (* (* N N) N))) (log (+ 1 (* (+ N -1) N))))) (log N)) (/ (- (* (log (+ 1 (* (* N N) N))) (log (+ 1 (* (* N N) N)))) (* (log (+ 1 (* (+ N -1) N))) (log (+ 1 (* (+ N -1) N))))) (+ (log (+ 1 (* (* N N) N))) (log (+ 1 (* (+ N -1) N))))) (- (* (log (+ 1 (* (* N N) N))) (log (+ 1 (* (* N N) N)))) (* (log (+ 1 (* (+ N -1) N))) (log (+ 1 (* (+ N -1) N))))) (* (log (+ 1 (* (* N N) N))) (log (+ 1 (* (* N N) N)))) (log (/ -1 (- 1 N))) (log (/ (+ N 1) N)) (log (+ (* N N) N)) (* (log (+ 1 (* (+ N -1) N))) (log (+ 1 (* (+ N -1) N)))))","N","inf"],[14.926025390625,"((neg (log (/ N (+ N 1)))) (log (/ N (+ N 1))) (/ N (+ N 1)) (+ N 1) (- (log (+ 1 N)) (log N)) (log (+ 1 N)) (log N) (- (+ (log (+ (* N N) -1)) (log (/ -1 (- 1 N)))) (log N)) (+ (log (+ (* N N) -1)) (log (/ -1 (- 1 N)))) (log (+ (* N N) -1)) (+ (* N N) -1) (/ (* (neg (log (+ (* N N) N))) (log (/ (+ N 1) N))) (log (+ (* N N) N))) (neg (/ (* (neg (log (+ (* N N) N))) (log (/ (+ N 1) N))) (log (+ (* N N) N)))) (* (neg (log (+ (* N N) N))) (log (/ (+ N 1) N))) (neg (log (+ (* N N) N))) (- (/ (- (* (log (+ 1 (* (* N N) N))) (log (+ 1 (* (* N N) N)))) (* (log (+ 1 (* (+ N -1) N))) (log (+ 1 (* (+ N -1) N))))) (+ (log (+ 1 (* (* N N) N))) (log (+ 1 (* (+ N -1) N))))) (log N)) (/ (- (* (log (+ 1 (* (* N N) N))) (log (+ 1 (* (* N N) N)))) (* (log (+ 1 (* (+ N -1) N))) (log (+ 1 (* (+ N -1) N))))) (+ (log (+ 1 (* (* N N) N))) (log (+ 1 (* (+ N -1) N))))) (- (* (log (+ 1 (* (* N N) N))) (log (+ 1 (* (* N N) N)))) (* (log (+ 1 (* (+ N -1) N))) (log (+ 1 (* (+ N -1) N))))) (* (log (+ 1 (* (* N N) N))) (log (+ 1 (* (* N N) N)))) (log (/ -1 (- 1 N))) (log (/ (+ N 1) N)) (log (+ (* N N) N)) (* (log (+ 1 (* (+ N -1) N))) (log (+ 1 (* (+ N -1) N)))))","N","0"]],"time":70.39111328125,"type":"series"},{"count":[[182,0]],"inputs":[["(* -1 (log N))","(- N (log N))","(- (* N (+ 1 (* -1/2 N))) (log N))","(- (* N (+ 1 (* N (- (* 1/3 N) 1/2)))) (log N))","(log N)","(+ (log N) (* -1 N))","(+ (log N) (* N (- (* 1/2 N) 1)))","(+ (log N) (* N (- (* N (+ 1/2 (* -1/3 N))) 1)))","N","(* N (+ 1 (* -1 N)))","(* N (+ 1 (* N (- N 1))))","(* N (+ 1 (* N (- (* N (+ 1 (* -1 N))) 1))))","1","(+ 1 N)","(* N (+ 1 (* -1/2 N)))","(* N (+ 1 (* N (- (* 1/3 N) 1/2))))","(* N (+ 1 (* N (- (* N (+ 1/3 (* -1/4 N))) 1/2))))","(- (* 2 (log -1)) (log N))","(- (+ N (* 2 (log -1))) (log N))","(- (+ (* 2 (log -1)) (* N (+ 1 (* -1/2 N)))) (log N))","(- (+ (* 2 (log -1)) (* N (+ 1 (* N (- (* 1/3 N) 1/2))))) (log N))","(* 2 (log -1))","(+ N (* 2 (log -1)))","(+ (* 2 (log -1)) (* N (+ 1 (* -1/2 N))))","(+ (* 2 (log -1)) (* N (+ 1 (* N (- (* 1/3 N) 1/2)))))","(log -1)","(+ (log -1) (* -1 (pow N 2)))","(+ (log -1) (* (pow N 2) (- (* -1/2 (pow N 2)) 1)))","(+ (log -1) (* (pow N 2) (- (* (pow N 2) (- (* -1/3 (pow N 2)) 1/2)) 1)))","-1","(- (pow N 2) 1)","(pow (log N) 2)","(+ (* -1 (* N (+ (log N) (* -1 (log N))))) (pow (log N) 2))","(+ (* N (+ (* -1 (* N (+ 1 (+ (* -1/2 (log N)) (* 1/2 (log N)))))) (* -1 (+ (log N) (* -1 (log N)))))) (pow (log N) 2))","(+ (* N (+ (* -1 (+ (log N) (* -1 (log N)))) (* N (+ (* -1 (* N (- (+ (* -1/3 (log N)) (* 1/3 (log N))) 1))) (* -1 (+ 1 (+ (* -1/2 (log N)) (* 1/2 (log N))))))))) (pow (log N) 2))","(- (* -1 N) (log N))","(- (* N (- (* 1/2 N) 1)) (log N))","(- (* N (- (* N (+ 1/2 (* -1/3 N))) 1)) (log N))","(* -1 (pow N 2))","(* (pow N 2) (- N 1))","(* (pow N 2) (- (* N (+ 1 (* 13/12 N))) 1))","(* (pow N 2) (- (* N (+ 1 (* N (+ 13/12 (* -1/6 N))))) 1))","(pow N 6)","(* (pow N 6) (+ 1 (* -1 (pow N 3))))","(* (pow N 6) (+ 1 (* (pow N 3) (- (* 11/12 (pow N 3)) 1))))","(* (pow N 6) (+ 1 (* (pow N 3) (- (* (pow N 3) (+ 11/12 (* -5/6 (pow N 3)))) 1))))","(+ N (log -1))","(+ (log -1) (* N (+ 1 (* 1/2 N))))","(+ (log -1) (* N (+ 1 (* N (+ 1/2 (* 1/3 N))))))","(+ N (* -1 (log N)))","(+ (* -1 (log N)) (* N (+ 1 (* -1/2 N))))","(+ (* -1 (log N)) (* N (+ 1 (* N (- (* 1/3 N) 1/2)))))","(+ N (log N))","(+ (log N) (* N (+ 1 (* -1/2 N))))","(+ (log N) (* N (+ 1 (* N (- (* 1/3 N) 1/2)))))","(pow N 2)","(* (pow N 2) (+ 1 (* -1 N)))","(* (pow N 2) (+ 1 (* N (- (* -13/12 N) 1))))","(* (pow N 2) (+ 1 (* N (- (* N (- (* 1/6 N) 13/12)) 1))))","(/ 1 N)","(/ (- 1 (* 1/2 (/ 1 N))) N)","(/ (- (+ 1 (/ 1/3 (pow N 2))) (* 1/2 (/ 1 N))) N)","(/ (- (+ 1 (/ 1/3 (pow N 2))) (+ (* 1/2 (/ 1 N)) (* 1/4 (/ 1 (pow N 3))))) N)","(/ -1 N)","(/ (- (* 1/2 (/ 1 N)) 1) N)","(/ (- (* 1/2 (/ 1 N)) (+ 1 (/ 1/3 (pow N 2)))) N)","(/ (- (+ (* 1/2 (/ 1 N)) (* 1/4 (/ 1 (pow N 3)))) (+ 1 (/ 1/3 (pow N 2)))) N)","(- 1 (/ 1 N))","(- (+ 1 (/ 1 (pow N 2))) (/ 1 N))","(- (+ 1 (/ 1 (pow N 2))) (+ (/ 1 N) (/ 1 (pow N 3))))","(* N (+ 1 (/ 1 N)))","(* -1 (log (/ 1 N)))","(+ (* -1 (log (/ 1 N))) (/ 1 N))","(- (+ (* -1 (log (/ 1 N))) (/ 1 N)) (/ 1/2 (pow N 2)))","(- (+ (* -1 (log (/ 1 N))) (+ (/ 1 N) (* 1/3 (/ 1 (pow N 3))))) (/ 1/2 (pow N 2)))","(- (+ (log (/ 1 N)) (* -2 (log (/ 1 N)))) (* -1 (log (/ 1 N))))","(- (+ (log (/ 1 N)) (+ (* -2 (log (/ 1 N))) (/ 1 N))) (* -1 (log (/ 1 N))))","(- (+ (log (/ 1 N)) (+ (* -2 (log (/ 1 N))) (/ 1 N))) (+ (* -1 (log (/ 1 N))) (/ 1/2 (pow N 2))))","(- (+ (log (/ 1 N)) (+ (* -2 (log (/ 1 N))) (+ (/ 1 N) (* 1/3 (/ 1 (pow N 3)))))) (+ (* -1 (log (/ 1 N))) (/ 1/2 (pow N 2))))","(+ (log (/ 1 N)) (* -2 (log (/ 1 N))))","(+ (log (/ 1 N)) (+ (* -2 (log (/ 1 N))) (/ 1 N)))","(- (+ (log (/ 1 N)) (+ (* -2 (log (/ 1 N))) (/ 1 N))) (/ 1/2 (pow N 2)))","(- (+ (log (/ 1 N)) (+ (* -2 (log (/ 1 N))) (+ (/ 1 N) (* 1/3 (/ 1 (pow N 3)))))) (/ 1/2 (pow N 2)))","(* -2 (log (/ 1 N)))","(- (* -2 (log (/ 1 N))) (/ 1 (pow N 2)))","(+ (* -2 (log (/ 1 N))) (* -1 (/ (+ 1 (* 1/2 (/ 1 (pow N 2)))) (pow N 2))))","(- (+ (* -2 (log (/ 1 N))) (* -1 (/ (+ 1/2 (* 1/3 (/ 1 (pow N 2)))) (pow N 4)))) (/ 1 (pow N 2)))","(* (pow N 2) (- 1 (/ 1 (pow N 2))))","(* 2 (/ (log (/ 1 N)) N))","(/ (+ (* -1 (/ (+ 1 (log (/ 1 N))) N)) (* 2 (log (/ 1 N)))) N)","(/ (+ (* -1 (/ (+ 1 (log (/ 1 N))) N)) (+ (* -1 (/ (- (* -2/3 (log (/ 1 N))) 1) (pow N 2))) (* 2 (log (/ 1 N))))) N)","(/ (+ (* -1 (/ (+ 11/12 (* 1/2 (log (/ 1 N)))) (pow N 3))) (+ (* -1 (/ (+ 1 (log (/ 1 N))) N)) (+ (* -1 (/ (- (* -2/3 (log (/ 1 N))) 1) (pow N 2))) (* 2 (log (/ 1 N)))))) N)","(* 2 (log (/ 1 N)))","(* -1 (+ (* -2 (log (/ 1 N))) (/ 1 N)))","(- (/ 1/2 (pow N 2)) (+ (* -2 (log (/ 1 N))) (/ 1 N)))","(- (/ 1/2 (pow N 2)) (+ (* -2 (log (/ 1 N))) (+ (/ 1 N) (* 1/3 (/ 1 (pow N 3))))))","(- (* 9 (/ (pow (log (/ 1 N)) 2) (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))))) (+ (* -1 (log (/ 1 N))) (* 4 (/ (pow (log (/ 1 N)) 2) (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N))))))))","(- (+ (* -4 (/ (pow (log (/ 1 N)) 2) (* N (pow (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))) 2)))) (* 9 (/ (pow (log (/ 1 N)) 2) (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N))))))) (+ (* -9 (/ (pow (log (/ 1 N)) 2) (* N (pow (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))) 2)))) (+ (* -1 (log (/ 1 N))) (+ (* 4 (/ (log (/ 1 N)) (* N (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N))))))) (* 4 (/ (pow (log (/ 1 N)) 2) (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N))))))))))","(- (+ (* -4 (/ (pow (log (/ 1 N)) 2) (* N (pow (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))) 2)))) (+ (* -1 (/ (- (* 4 (/ (log (/ 1 N)) (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))))) (* -4 (/ (pow (log (/ 1 N)) 2) (pow (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))) 2)))) (* (pow N 2) (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N))))))) (+ (* 2 (/ (pow (log (/ 1 N)) 2) (* (pow N 2) (pow (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))) 2)))) (* 9 (/ (pow (log (/ 1 N)) 2) (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N))))))))) (+ (* -9 (/ (pow (log (/ 1 N)) 2) (* N (pow (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))) 2)))) (+ (* -9 (/ (pow (log (/ 1 N)) 2) (* (pow N 2) (pow (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))) 3)))) (+ (* -2 (/ (log (/ 1 N)) (* (pow N 2) (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N))))))) (+ (* -1 (log (/ 1 N))) (+ (* 4 (/ (log (/ 1 N)) (* N (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N))))))) (+ (* 4 (/ (pow (log (/ 1 N)) 2) (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))))) (+ (* 9/2 (/ (pow (log (/ 1 N)) 2) (* (pow N 2) (pow (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))) 2)))) (/ 1 (* (pow N 2) (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N))))))))))))))","(- (+ (* -6 (/ (log (/ 1 N)) (* (pow N 3) (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N))))))) (+ (* -4 (/ (pow (log (/ 1 N)) 2) (* N (pow (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))) 2)))) (+ (* -1 (/ (- (* 4 (/ (log (/ 1 N)) (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))))) (* -4 (/ (pow (log (/ 1 N)) 2) (pow (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))) 2)))) (* (pow N 2) (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N))))))) (+ (* -1 (/ (- (+ (* -2 (/ (log (/ 1 N)) (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))))) (/ 1 (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))))) (+ (* -1 (/ (- (* 4 (/ (log (/ 1 N)) (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))))) (* -4 (/ (pow (log (/ 1 N)) 2) (pow (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))) 2)))) (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))))) (* 2 (/ (pow (log (/ 1 N)) 2) (pow (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))) 2))))) (* (pow N 3) (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N))))))) (+ (* 1/2 (/ (- (* 4 (/ (log (/ 1 N)) (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))))) (* -4 (/ (pow (log (/ 1 N)) 2) (pow (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))) 2)))) (* (pow N 3) (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N))))))) (+ (* 2 (/ (pow (log (/ 1 N)) 2) (* (pow N 2) (pow (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))) 2)))) (+ (* 20/3 (/ (pow (log (/ 1 N)) 2) (* (pow N 3) (pow (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))) 2)))) (+ (* 9 (/ (pow (log (/ 1 N)) 2) (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))))) (/ 1 (* (pow N 3) (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))))))))))))) (+ (* -9 (/ (pow (log (/ 1 N)) 2) (* N (pow (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))) 2)))) (+ (* -9 (/ (pow (log (/ 1 N)) 2) (* (pow N 2) (pow (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))) 3)))) (+ (* -9 (/ (pow (log (/ 1 N)) 2) (* (pow N 3) (pow (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))) 4)))) (+ (* -8/3 (/ (log (/ 1 N)) (* (pow N 3) (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N))))))) (+ (* -2 (/ (log (/ 1 N)) (* (pow N 2) (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N))))))) (+ (* -1 (log (/ 1 N))) (+ (* 4 (/ (log (/ 1 N)) (* N (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N))))))) (+ (* 4 (/ (pow (log (/ 1 N)) 2) (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))))) (+ (* 9/2 (/ (pow (log (/ 1 N)) 2) (* (pow N 2) (pow (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))) 2)))) (+ (* 9 (/ (pow (log (/ 1 N)) 2) (* (pow N 3) (pow (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))) 3)))) (+ (* 15 (/ (pow (log (/ 1 N)) 2) (* (pow N 3) (pow (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))) 2)))) (/ 1 (* (pow N 2) (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N))))))))))))))))))","(/ (- (* 9 (pow (log (/ 1 N)) 2)) (* 4 (pow (log (/ 1 N)) 2))) (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))))","(- (+ (* -4 (/ (log (/ 1 N)) (* N (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N))))))) (* 9 (/ (pow (log (/ 1 N)) 2) (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N))))))) (+ (* -1 (/ (- (* 9 (pow (log (/ 1 N)) 2)) (* 4 (pow (log (/ 1 N)) 2))) (* N (pow (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))) 2)))) (* 4 (/ (pow (log (/ 1 N)) 2) (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N))))))))","(- (+ (* -4 (/ (log (/ 1 N)) (* N (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N))))))) (+ (* -1 (/ (+ 1 (* -2 (log (/ 1 N)))) (* (pow N 2) (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N))))))) (* 9 (/ (pow (log (/ 1 N)) 2) (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))))))) (+ (* -1 (/ (- (* -4 (/ (log (/ 1 N)) (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))))) (* -1 (/ (- (* 9 (pow (log (/ 1 N)) 2)) (* 4 (pow (log (/ 1 N)) 2))) (pow (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))) 2)))) (* (pow N 2) (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N))))))) (+ (* -1 (/ (- (* 9 (pow (log (/ 1 N)) 2)) (* 4 (pow (log (/ 1 N)) 2))) (* N (pow (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))) 2)))) (+ (* 1/2 (/ (- (* 9 (pow (log (/ 1 N)) 2)) (* 4 (pow (log (/ 1 N)) 2))) (* (pow N 2) (pow (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))) 2)))) (* 4 (/ (pow (log (/ 1 N)) 2) (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N))))))))))","(- (+ (* -6 (/ (log (/ 1 N)) (* (pow N 3) (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N))))))) (+ (* -4 (/ (log (/ 1 N)) (* N (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N))))))) (+ (* -1 (/ (+ 1 (* -2 (log (/ 1 N)))) (* (pow N 2) (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N))))))) (+ (* 9 (/ (pow (log (/ 1 N)) 2) (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))))) (/ 1 (* (pow N 3) (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))))))))) (+ (* -8/3 (/ (log (/ 1 N)) (* (pow N 3) (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N))))))) (+ (* -1 (/ (- (* -4 (/ (log (/ 1 N)) (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))))) (* -1 (/ (- (* 9 (pow (log (/ 1 N)) 2)) (* 4 (pow (log (/ 1 N)) 2))) (pow (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))) 2)))) (* (pow N 2) (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N))))))) (+ (* -1 (/ (- (* -1 (/ (+ 1 (* -2 (log (/ 1 N)))) (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))))) (+ (* -1 (/ (- (* -4 (/ (log (/ 1 N)) (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))))) (* -1 (/ (- (* 9 (pow (log (/ 1 N)) 2)) (* 4 (pow (log (/ 1 N)) 2))) (pow (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))) 2)))) (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))))) (* 1/2 (/ (- (* 9 (pow (log (/ 1 N)) 2)) (* 4 (pow (log (/ 1 N)) 2))) (pow (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))) 2))))) (* (pow N 3) (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N))))))) (+ (* -1 (/ (- (* 9 (pow (log (/ 1 N)) 2)) (* 4 (pow (log (/ 1 N)) 2))) (* N (pow (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))) 2)))) (+ (* 1/2 (/ (- (* -4 (/ (log (/ 1 N)) (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))))) (* -1 (/ (- (* 9 (pow (log (/ 1 N)) 2)) (* 4 (pow (log (/ 1 N)) 2))) (pow (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))) 2)))) (* (pow N 3) (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N))))))) (+ (* 1/2 (/ (- (* 9 (pow (log (/ 1 N)) 2)) (* 4 (pow (log (/ 1 N)) 2))) (* (pow N 2) (pow (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))) 2)))) (+ (* 5/3 (/ (- (* 9 (pow (log (/ 1 N)) 2)) (* 4 (pow (log (/ 1 N)) 2))) (* (pow N 3) (pow (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N)))) 2)))) (* 4 (/ (pow (log (/ 1 N)) 2) (+ (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N))))))))))))))","(- (* 9 (pow (log (/ 1 N)) 2)) (* 4 (pow (log (/ 1 N)) 2)))","(- (+ (* -4 (/ (log (/ 1 N)) N)) (* 9 (pow (log (/ 1 N)) 2))) (* 4 (pow (log (/ 1 N)) 2)))","(- (+ (* -1 (/ (+ 1 (* -2 (log (/ 1 N)))) (pow N 2))) (* 9 (pow (log (/ 1 N)) 2))) (+ (* 4 (/ (log (/ 1 N)) N)) (* 4 (pow (log (/ 1 N)) 2))))","(- (+ (* -6 (/ (log (/ 1 N)) (pow N 3))) (+ (* 9 (pow (log (/ 1 N)) 2)) (/ 1 (pow N 3)))) (+ (* -8/3 (/ (log (/ 1 N)) (pow N 3))) (+ (* -2 (/ (log (/ 1 N)) (pow N 2))) (+ (* 4 (/ (log (/ 1 N)) N)) (+ (* 4 (pow (log (/ 1 N)) 2)) (/ 1 (pow N 2)))))))","(* 9 (pow (log (/ 1 N)) 2))","(+ (* -6 (/ (log (/ 1 N)) (pow N 3))) (* 9 (pow (log (/ 1 N)) 2)))","(+ (* -6 (/ (log (/ 1 N)) (pow N 3))) (+ (* 3 (/ (log (/ 1 N)) (pow N 6))) (+ (* 9 (pow (log (/ 1 N)) 2)) (/ 1 (pow N 6)))))","(- (+ (* -6 (/ (log (/ 1 N)) (pow N 3))) (+ (* -2 (/ (log (/ 1 N)) (pow N 9))) (+ (* 3 (/ (log (/ 1 N)) (pow N 6))) (+ (* 9 (pow (log (/ 1 N)) 2)) (/ 1 (pow N 6)))))) (/ 1 (pow N 9)))","(log (/ 1 N))","(+ (log (/ 1 N)) (/ 1 N))","(+ (log (/ 1 N)) (+ (/ 1/2 (pow N 2)) (/ 1 N)))","(+ (log (/ 1 N)) (+ (/ 1/2 (pow N 2)) (+ (/ 1 N) (* 1/3 (/ 1 (pow N 3))))))","(+ (* -2 (log (/ 1 N))) (/ 1 N))","(- (+ (* -2 (log (/ 1 N))) (/ 1 N)) (/ 1/2 (pow N 2)))","(- (+ (* -2 (log (/ 1 N))) (+ (/ 1 N) (* 1/3 (/ 1 (pow N 3))))) (/ 1/2 (pow N 2)))","(* 4 (pow (log (/ 1 N)) 2))","(+ (* 4 (/ (log (/ 1 N)) N)) (* 4 (pow (log (/ 1 N)) 2)))","(+ (* -2 (/ (log (/ 1 N)) (pow N 2))) (+ (* 4 (/ (log (/ 1 N)) N)) (+ (* 4 (pow (log (/ 1 N)) 2)) (/ 1 (pow N 2)))))","(- (+ (* -8/3 (/ (log (/ 1 N)) (pow N 3))) (+ (* -2 (/ (log (/ 1 N)) (pow N 2))) (+ (* 4 (/ (log (/ 1 N)) N)) (+ (* 4 (pow (log (/ 1 N)) 2)) (/ 1 (pow N 2)))))) (/ 1 (pow N 3)))","(* -1 (/ (- (* 1/2 (/ 1 N)) 1) N))","(* -1 (/ (- (* -1 (/ (- (* 1/3 (/ 1 N)) 1/2) N)) 1) N))","(* -1 (/ (- (* -1 (/ (- (* -1 (/ (- (* 1/4 (/ 1 N)) 1/3) N)) 1/2) N)) 1) N))","(* -1 (/ (- 1 (* 1/2 (/ 1 N))) N))","(* -1 (/ (+ 1 (* -1 (/ (- 1/2 (* 1/3 (/ 1 N))) N))) N))","(* -1 (/ (+ 1 (* -1 (/ (+ 1/2 (* -1 (/ (- 1/3 (* 1/4 (/ 1 N))) N))) N))) N))","(+ 1 (* -1 (/ (- 1 (/ 1 N)) N)))","(+ 1 (* -1 (/ (+ 1 (* -1 (/ (- 1 (/ 1 N)) N))) N)))","(+ (log -1) (* -1 (log (/ -1 N))))","(+ (log -1) (+ (* -1 (log (/ -1 N))) (/ 1 N)))","(+ (log -1) (+ (* -1 (log (/ -1 N))) (* -1 (/ (- (* 1/2 (/ 1 N)) 1) N))))","(+ (log -1) (+ (* -1 (log (/ -1 N))) (* -1 (/ (- (* -1 (/ (- (* 1/3 (/ 1 N)) 1/2) N)) 1) N))))","(- (+ (log (/ -1 N)) (* -2 (log (/ -1 N)))) (* -1 (log (/ -1 N))))","(- (+ (log (/ -1 N)) (+ (* -2 (log (/ -1 N))) (/ 1 N))) (* -1 (log (/ -1 N))))","(- (+ (log (/ -1 N)) (+ (* -2 (log (/ -1 N))) (* -1 (/ (- (* 1/2 (/ 1 N)) 1) N)))) (* -1 (log (/ -1 N))))","(- (+ (log (/ -1 N)) (+ (* -2 (log (/ -1 N))) (* -1 (/ (- (* -1 (/ (- (* 1/3 (/ 1 N)) 1/2) N)) 1) N)))) (* -1 (log (/ -1 N))))","(+ (log -1) (+ (log (/ -1 N)) (* -2 (log (/ -1 N)))))","(+ (log -1) (+ (log (/ -1 N)) (+ (* -2 (log (/ -1 N))) (/ 1 N))))","(+ (log -1) (+ (log (/ -1 N)) (+ (* -2 (log (/ -1 N))) (* -1 (/ (- (* 1/2 (/ 1 N)) 1) N)))))","(+ (log -1) (+ (log (/ -1 N)) (+ (* -2 (log (/ -1 N))) (* -1 (/ (- (* -1 (/ (- (* 1/3 (/ 1 N)) 1/2) N)) 1) N)))))","(* -2 (log (/ -1 N)))","(- (* -2 (log (/ -1 N))) (/ 1 (pow N 2)))","(+ (* -2 (log (/ -1 N))) (* -1 (/ (+ 1 (* 1/2 (/ 1 (pow N 2)))) (pow N 2))))","(- (+ (* -2 (log (/ -1 N))) (* -1 (/ (+ 1/2 (* 1/3 (/ 1 (pow N 2)))) (pow N 4)))) (/ 1 (pow N 2)))","(* 2 (/ (log (/ -1 N)) N))","(* -1 (/ (+ (* -2 (log (/ -1 N))) (+ (/ 1 N) (/ (log (/ -1 N)) N))) N))","(* -1 (/ (+ (* -2 (log (/ -1 N))) (* -1 (/ (+ (* -1 (+ 1 (log (/ -1 N)))) (+ (* 2/3 (/ (log (/ -1 N)) N)) (/ 1 N))) N))) N))","(* -1 (/ (+ (* -2 (log (/ -1 N))) (* -1 (/ (+ (* -1 (+ 1 (log (/ -1 N)))) (* -1 (/ (+ (* -1 (+ 1 (* 2/3 (log (/ -1 N))))) (+ (* 1/2 (/ (log (/ -1 N)) N)) (* 11/12 (/ 1 N)))) N))) N))) N))","(* 2 (log (/ -1 N)))","(* -1 (+ (* -2 (log (/ -1 N))) (/ 1 N)))","(- (* -1 (/ (- 1 (* 1/2 (/ 1 N))) N)) (* -2 (log (/ -1 N))))","(- (* -1 (/ (+ 1 (* -1 (/ (- 1/2 (* 1/3 (/ 1 N))) N))) N)) (* -2 (log (/ -1 N))))","(- (/ (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2) (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N)))))) (+ (log -1) (+ (* -1 (log (/ -1 N))) (* 4 (/ (pow (log (/ -1 N)) 2) (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))))))))","(- (+ (* -1 (/ (- (* 4 (/ (pow (log (/ -1 N)) 2) (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 2))) (+ (* -4 (/ (log (/ -1 N)) (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))))) (/ (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2) (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 2)))) N)) (/ (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2) (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))))) (+ (log -1) (+ (* -1 (log (/ -1 N))) (* 4 (/ (pow (log (/ -1 N)) 2) (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))))))))","(- (+ (* -1 (/ (- (+ (* -1 (/ (- (+ (* -4 (/ (log (/ -1 N)) (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 2))) (* 2 (/ (pow (log (/ -1 N)) 2) (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 2)))) (+ (* -2 (/ (log (/ -1 N)) (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))))) (+ (* -1 (/ (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2) (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 3))) (+ (* 1/2 (/ (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2) (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 2))) (+ (* 4 (/ (pow (log (/ -1 N)) 2) (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 3))) (/ 1 (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))))))))) N)) (* 4 (/ (pow (log (/ -1 N)) 2) (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 2)))) (+ (* -4 (/ (log (/ -1 N)) (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))))) (/ (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2) (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 2)))) N)) (/ (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2) (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))))) (+ (log -1) (+ (* -1 (log (/ -1 N))) (* 4 (/ (pow (log (/ -1 N)) 2) (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))))))))","(- (+ (* -1 (/ (- (+ (* -1 (/ (- (+ (* -4 (/ (log (/ -1 N)) (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 2))) (+ (* -1 (/ (- (+ (* -20/3 (/ (pow (log (/ -1 N)) 2) (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 2))) (+ (* -2 (/ (log (/ -1 N)) (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 2))) (+ (* -2 (/ (+ (log -1) (* -3 (log (/ -1 N)))) (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))))) (+ (* 1/2 (/ (- (* -4 (/ (log (/ -1 N)) (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))))) (* 4 (/ (pow (log (/ -1 N)) 2) (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 2)))) (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))))) (+ (* 4 (/ (pow (log (/ -1 N)) 2) (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 4))) (/ 1 (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 2))))))) (+ (* -4 (/ (log (/ -1 N)) (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 3))) (+ (* -5/3 (/ (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2) (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 2))) (+ (* -1 (/ (+ (* -1 (/ (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2) (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 3))) (* 1/2 (/ (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2) (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 2)))) (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))))) (+ (* -1/2 (/ (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2) (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 3))) (+ (* 2 (/ (pow (log (/ -1 N)) 2) (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 3))) (+ (* 8/3 (/ (log (/ -1 N)) (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))))) (/ 1 (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))))))))))) N)) (* 2 (/ (pow (log (/ -1 N)) 2) (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 2))))) (+ (* -2 (/ (log (/ -1 N)) (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))))) (+ (* -1 (/ (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2) (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 3))) (+ (* 1/2 (/ (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2) (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 2))) (+ (* 4 (/ (pow (log (/ -1 N)) 2) (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 3))) (/ 1 (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))))))))) N)) (* 4 (/ (pow (log (/ -1 N)) 2) (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 2)))) (+ (* -4 (/ (log (/ -1 N)) (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))))) (/ (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2) (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 2)))) N)) (/ (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2) (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))))) (+ (log -1) (+ (* -1 (log (/ -1 N))) (* 4 (/ (pow (log (/ -1 N)) 2) (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))))))))","(/ (- (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2) (* 4 (pow (log (/ -1 N)) 2))) (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))))","(- (+ (* -1 (/ (- (+ (* 4 (/ (log (/ -1 N)) (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))))) (* 4 (/ (pow (log (/ -1 N)) 2) (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 2)))) (/ (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2) (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 2))) N)) (/ (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2) (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))))) (* 4 (/ (pow (log (/ -1 N)) 2) (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))))))","(- (+ (* -1 (/ (- (+ (* -1 (/ (- (+ (* -1 (/ (+ 1 (* -2 (log (/ -1 N)))) (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))))) (/ (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2) (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 3))) (+ (* 1/2 (/ (- (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2) (* 4 (pow (log (/ -1 N)) 2))) (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 2))) (+ (* 4 (/ (log (/ -1 N)) (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 2))) (* 4 (/ (pow (log (/ -1 N)) 2) (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 3)))))) N)) (+ (* 4 (/ (log (/ -1 N)) (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))))) (* 4 (/ (pow (log (/ -1 N)) 2) (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 2))))) (/ (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2) (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 2))) N)) (/ (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2) (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))))) (* 4 (/ (pow (log (/ -1 N)) 2) (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))))))","(- (+ (* -1 (/ (- (+ (* -1 (/ (- (+ (* -1 (/ (+ 1 (* -2 (log (/ -1 N)))) (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))))) (+ (* -1 (/ (- (+ (* -2 (/ (+ (log -1) (* -3 (log (/ -1 N)))) (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))))) (+ (* 1/2 (/ (- (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2) (* 4 (pow (log (/ -1 N)) 2))) (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 3))) (+ (* 4 (/ (log (/ -1 N)) (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 3))) (* 4 (/ (pow (log (/ -1 N)) 2) (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 4)))))) (+ (* -5/3 (/ (- (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2) (* 4 (pow (log (/ -1 N)) 2))) (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 2))) (+ (* -1 (/ (+ 1 (* -2 (log (/ -1 N)))) (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 2))) (+ (* 1/2 (/ (- (+ (* 4 (/ (log (/ -1 N)) (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))))) (* 4 (/ (pow (log (/ -1 N)) 2) (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 2)))) (/ (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2) (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 2))) (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))))) (+ (* 8/3 (/ (log (/ -1 N)) (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))))) (+ (/ 1 (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N)))))) (/ (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2) (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 4)))))))) N)) (/ (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2) (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 3)))) (+ (* 1/2 (/ (- (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2) (* 4 (pow (log (/ -1 N)) 2))) (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 2))) (+ (* 4 (/ (log (/ -1 N)) (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 2))) (* 4 (/ (pow (log (/ -1 N)) 2) (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 3)))))) N)) (+ (* 4 (/ (log (/ -1 N)) (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))))) (* 4 (/ (pow (log (/ -1 N)) 2) (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 2))))) (/ (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2) (pow (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))) 2))) N)) (/ (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2) (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))))) (* 4 (/ (pow (log (/ -1 N)) 2) (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -2 (log (/ -1 N))))))))","(- (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2) (* 4 (pow (log (/ -1 N)) 2)))","(- (+ (* -4 (/ (log (/ -1 N)) N)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2)) (* 4 (pow (log (/ -1 N)) 2)))","(- (+ (* -1 (/ (- (+ (* -2 (/ (log (/ -1 N)) N)) (/ 1 N)) (* -4 (log (/ -1 N)))) N)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2)) (* 4 (pow (log (/ -1 N)) 2)))","(- (+ (* -1 (/ (- (* -1 (/ (- (* -1 (/ (- (* -2 (+ (log -1) (* -3 (log (/ -1 N))))) (+ 1 (* 8/3 (log (/ -1 N))))) N)) (+ 1 (* -2 (log (/ -1 N))))) N)) (* -4 (log (/ -1 N)))) N)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2)) (* 4 (pow (log (/ -1 N)) 2)))","(pow (+ (log -1) (* -3 (log (/ -1 N)))) 2)","(+ (* 2 (/ (+ (log -1) (* -3 (log (/ -1 N)))) (pow N 3))) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))","(+ (* -1 (/ (+ (* -2 (+ (log -1) (* -3 (log (/ -1 N))))) (* -1 (/ (+ 1 (* -1 (+ (log -1) (* -3 (log (/ -1 N)))))) (pow N 3)))) (pow N 3))) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))","(+ (* -1 (/ (+ (* -2 (+ (log -1) (* -3 (log (/ -1 N))))) (* -1 (/ (+ 1 (+ (* -1 (+ (log -1) (* -3 (log (/ -1 N))))) (* -1 (/ (+ 1 (* -2/3 (+ (log -1) (* -3 (log (/ -1 N)))))) (pow N 3))))) (pow N 3)))) (pow N 3))) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))","(+ (log -1) (log (/ -1 N)))","(+ (log -1) (+ (log (/ -1 N)) (/ 1 N)))","(+ (log -1) (+ (log (/ -1 N)) (+ (/ 1/2 (pow N 2)) (/ 1 N))))","(+ (log -1) (+ (log (/ -1 N)) (* -1 (/ (- (* -1 (/ (+ 1/2 (* 1/3 (/ 1 N))) N)) 1) N))))","(+ (* -2 (log (/ -1 N))) (/ 1 N))","(+ (* -2 (log (/ -1 N))) (* -1 (/ (- (* 1/2 (/ 1 N)) 1) N)))","(+ (* -2 (log (/ -1 N))) (* -1 (/ (- (* -1 (/ (- (* 1/3 (/ 1 N)) 1/2) N)) 1) N)))","(* 4 (pow (log (/ -1 N)) 2))","(+ (* 4 (/ (log (/ -1 N)) N)) (* 4 (pow (log (/ -1 N)) 2)))","(+ (* -1 (/ (+ (* -4 (log (/ -1 N))) (* -1 (/ (+ 1 (* -2 (log (/ -1 N)))) N))) N)) (* 4 (pow (log (/ -1 N)) 2)))","(+ (* -1 (/ (+ (* -4 (log (/ -1 N))) (* -1 (/ (+ 1 (+ (* -2 (log (/ -1 N))) (* -1 (/ (+ 1 (* 8/3 (log (/ -1 N)))) N)))) N))) N)) (* 4 (pow (log (/ -1 N)) 2)))"]],"memory":[[3941616,11570864]],"method":["egg-herbie"],"outputs":[[]],"time":162.412841796875,"type":"simplify"},{"count":[[23,345]],"inputs":[["(neg.f64 (log.f64 (/.f64 N (+.f64 N #s(literal 1 binary64)))))","(log.f64 (/.f64 N (+.f64 N #s(literal 1 binary64))))","(/.f64 N (+.f64 N #s(literal 1 binary64)))","(+.f64 N #s(literal 1 binary64))","(-.f64 (log1p.f64 N) (log.f64 N))","(log1p.f64 N)","(log.f64 N)","(-.f64 (+.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (/.f64 #s(literal -1 binary64) (-.f64 #s(literal 1 binary64) N)))) (log.f64 N))","(+.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (/.f64 #s(literal -1 binary64) (-.f64 #s(literal 1 binary64) N))))","(log.f64 (fma.f64 N N #s(literal -1 binary64)))","(fma.f64 N N #s(literal -1 binary64))","(/.f64 (*.f64 (neg.f64 (log.f64 (fma.f64 N N N))) (log.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) N))) (log.f64 (fma.f64 N N N)))","(neg.f64 (/.f64 (*.f64 (neg.f64 (log.f64 (fma.f64 N N N))) (log.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) N))) (log.f64 (fma.f64 N N N))))","(*.f64 (neg.f64 (log.f64 (fma.f64 N N N))) (log.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) N)))","(neg.f64 (log.f64 (fma.f64 N N N)))","(-.f64 (/.f64 (-.f64 (*.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (*.f64 N N) N))) (*.f64 (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)))) (+.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)))) (log.f64 N))","(/.f64 (-.f64 (*.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (*.f64 N N) N))) (*.f64 (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)))) (+.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N))))","(-.f64 (*.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (*.f64 N N) N))) (*.f64 (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N))))","(*.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (*.f64 N N) N)))","(log.f64 (/.f64 #s(literal -1 binary64) (-.f64 #s(literal 1 binary64) N)))","(log.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) N))","(log.f64 (fma.f64 N N N))","(*.f64 (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)))"]],"memory":[[-5405552,19562160]],"outputs":[["#s(literal 1 binary64)","#s(literal -1 binary64)","#s(literal 8 binary64)","#s(literal 2 binary64)","#s(literal 3 binary64)","#s(literal 0 binary64)","#s(literal 4 binary64)","#s(literal 5 binary64)","#s(literal 6 binary64)","#s(literal -2 binary64)","#s(literal 9 binary64)","#s(literal -3 binary64)","#s(literal 27 binary64)","#s(literal 16 binary64)","#s(literal 10 binary64)","#s(literal 1 binary64)","#s(literal -1 binary64)","#s(literal 8 binary64)","#s(literal 2 binary64)","#s(literal 3 binary64)","#s(literal 0 binary64)","#s(literal 4 binary64)","#s(literal 5 binary64)","#s(literal 6 binary64)","#s(literal -2 binary64)","#s(literal 9 binary64)","#s(literal -3 binary64)","#s(literal 27 binary64)","#s(literal 16 binary64)","#s(literal 10 binary64)","#s(literal 1 binary64)","#s(literal -1 binary64)","#s(literal 8 binary64)","#s(literal 2 binary64)","#s(literal 3 binary64)","#s(literal 0 binary64)","#s(literal 4 binary64)","#s(literal 5 binary64)","#s(literal 6 binary64)","#s(literal -2 binary64)","#s(literal 9 binary64)","#s(literal -3 binary64)","#s(literal 27 binary64)","#s(literal 16 binary64)","#s(literal 10 binary64)","#s(literal 1 binary64)","#s(literal -1 binary64)","#s(literal 8 binary64)","#s(literal 2 binary64)","#s(literal 3 binary64)","#s(literal 0 binary64)","#s(literal 4 binary64)","#s(literal 5 binary64)","#s(literal 6 binary64)","#s(literal -2 binary64)","#s(literal 9 binary64)","#s(literal -3 binary64)","#s(literal 27 binary64)","#s(literal 16 binary64)","#s(literal 10 binary64)","#s(literal 1 binary64)","#s(literal -1 binary64)","#s(literal 8 binary64)","#s(literal 2 binary64)","#s(literal 3 binary64)","#s(literal 0 binary64)","#s(literal 4 binary64)","#s(literal 5 binary64)","#s(literal 6 binary64)","#s(literal -2 binary64)","#s(literal 9 binary64)","#s(literal -3 binary64)","#s(literal 27 binary64)","#s(literal 16 binary64)","#s(literal 10 binary64)","#s(literal 1 binary64)","#s(literal -1 binary64)","#s(literal 8 binary64)","#s(literal 2 binary64)","#s(literal 3 binary64)","#s(literal 0 binary64)","#s(literal 4 binary64)","#s(literal 5 binary64)","#s(literal 6 binary64)","#s(literal -2 binary64)","#s(literal 9 binary64)","#s(literal -3 binary64)","#s(literal 27 binary64)","#s(literal 16 binary64)","#s(literal 10 binary64)","#s(literal 1 binary64)","#s(literal -1 binary64)","#s(literal 8 binary64)","#s(literal 2 binary64)","#s(literal 3 binary64)","#s(literal 0 binary64)","#s(literal 4 binary64)","#s(literal 5 binary64)","#s(literal 6 binary64)","#s(literal -2 binary64)","#s(literal 9 binary64)","#s(literal -3 binary64)","#s(literal 27 binary64)","#s(literal 16 binary64)","#s(literal 10 binary64)","#s(literal 1 binary64)","#s(literal -1 binary64)","#s(literal 8 binary64)","#s(literal 2 binary64)","#s(literal 3 binary64)","#s(literal 0 binary64)","#s(literal 4 binary64)","#s(literal 5 binary64)","#s(literal 6 binary64)","#s(literal -2 binary64)","#s(literal 9 binary64)","#s(literal -3 binary64)","#s(literal 27 binary64)","#s(literal 16 binary64)","#s(literal 10 binary64)","#s(literal 1 binary64)","#s(literal -1 binary64)","#s(literal 8 binary64)","#s(literal 2 binary64)","#s(literal 3 binary64)","#s(literal 0 binary64)","#s(literal 4 binary64)","#s(literal 5 binary64)","#s(literal 6 binary64)","#s(literal -2 binary64)","#s(literal 9 binary64)","#s(literal -3 binary64)","#s(literal 27 binary64)","#s(literal 16 binary64)","#s(literal 10 binary64)","#s(literal 1 binary64)","#s(literal -1 binary64)","#s(literal 8 binary64)","#s(literal 2 binary64)","#s(literal 3 binary64)","#s(literal 0 binary64)","#s(literal 4 binary64)","#s(literal 5 binary64)","#s(literal 6 binary64)","#s(literal -2 binary64)","#s(literal 9 binary64)","#s(literal -3 binary64)","#s(literal 27 binary64)","#s(literal 16 binary64)","#s(literal 10 binary64)","#s(literal 1 binary64)","#s(literal -1 binary64)","#s(literal 8 binary64)","#s(literal 2 binary64)","#s(literal 3 binary64)","#s(literal 0 binary64)","#s(literal 4 binary64)","#s(literal 5 binary64)","#s(literal 6 binary64)","#s(literal -2 binary64)","#s(literal 9 binary64)","#s(literal -3 binary64)","#s(literal 27 binary64)","#s(literal 16 binary64)","#s(literal 10 binary64)","#s(literal 1 binary64)","#s(literal -1 binary64)","#s(literal 8 binary64)","#s(literal 2 binary64)","#s(literal 3 binary64)","#s(literal 0 binary64)","#s(literal 4 binary64)","#s(literal 5 binary64)","#s(literal 6 binary64)","#s(literal -2 binary64)","#s(literal 9 binary64)","#s(literal -3 binary64)","#s(literal 27 binary64)","#s(literal 16 binary64)","#s(literal 10 binary64)","#s(literal 1 binary64)","#s(literal -1 binary64)","#s(literal 8 binary64)","#s(literal 2 binary64)","#s(literal 3 binary64)","#s(literal 0 binary64)","#s(literal 4 binary64)","#s(literal 5 binary64)","#s(literal 6 binary64)","#s(literal -2 binary64)","#s(literal 9 binary64)","#s(literal -3 binary64)","#s(literal 27 binary64)","#s(literal 16 binary64)","#s(literal 10 binary64)","#s(literal 1 binary64)","#s(literal -1 binary64)","#s(literal 8 binary64)","#s(literal 2 binary64)","#s(literal 3 binary64)","#s(literal 0 binary64)","#s(literal 4 binary64)","#s(literal 5 binary64)","#s(literal 6 binary64)","#s(literal -2 binary64)","#s(literal 9 binary64)","#s(literal -3 binary64)","#s(literal 27 binary64)","#s(literal 16 binary64)","#s(literal 10 binary64)","#s(literal 1 binary64)","#s(literal -1 binary64)","#s(literal 8 binary64)","#s(literal 2 binary64)","#s(literal 3 binary64)","#s(literal 0 binary64)","#s(literal 4 binary64)","#s(literal 5 binary64)","#s(literal 6 binary64)","#s(literal -2 binary64)","#s(literal 9 binary64)","#s(literal -3 binary64)","#s(literal 27 binary64)","#s(literal 16 binary64)","#s(literal 10 binary64)","#s(literal 1 binary64)","#s(literal -1 binary64)","#s(literal 8 binary64)","#s(literal 2 binary64)","#s(literal 3 binary64)","#s(literal 0 binary64)","#s(literal 4 binary64)","#s(literal 5 binary64)","#s(literal 6 binary64)","#s(literal -2 binary64)","#s(literal 9 binary64)","#s(literal -3 binary64)","#s(literal 27 binary64)","#s(literal 16 binary64)","#s(literal 10 binary64)","#s(literal 1 binary64)","#s(literal -1 binary64)","#s(literal 8 binary64)","#s(literal 2 binary64)","#s(literal 3 binary64)","#s(literal 0 binary64)","#s(literal 4 binary64)","#s(literal 5 binary64)","#s(literal 6 binary64)","#s(literal -2 binary64)","#s(literal 9 binary64)","#s(literal -3 binary64)","#s(literal 27 binary64)","#s(literal 16 binary64)","#s(literal 10 binary64)","#s(literal 1 binary64)","#s(literal -1 binary64)","#s(literal 8 binary64)","#s(literal 2 binary64)","#s(literal 3 binary64)","#s(literal 0 binary64)","#s(literal 4 binary64)","#s(literal 5 binary64)","#s(literal 6 binary64)","#s(literal -2 binary64)","#s(literal 9 binary64)","#s(literal -3 binary64)","#s(literal 27 binary64)","#s(literal 16 binary64)","#s(literal 10 binary64)","#s(literal 1 binary64)","#s(literal -1 binary64)","#s(literal 8 binary64)","#s(literal 2 binary64)","#s(literal 3 binary64)","#s(literal 0 binary64)","#s(literal 4 binary64)","#s(literal 5 binary64)","#s(literal 6 binary64)","#s(literal -2 binary64)","#s(literal 9 binary64)","#s(literal -3 binary64)","#s(literal 27 binary64)","#s(literal 16 binary64)","#s(literal 10 binary64)","#s(literal 1 binary64)","#s(literal -1 binary64)","#s(literal 8 binary64)","#s(literal 2 binary64)","#s(literal 3 binary64)","#s(literal 0 binary64)","#s(literal 4 binary64)","#s(literal 5 binary64)","#s(literal 6 binary64)","#s(literal -2 binary64)","#s(literal 9 binary64)","#s(literal -3 binary64)","#s(literal 27 binary64)","#s(literal 16 binary64)","#s(literal 10 binary64)","#s(literal 1 binary64)","#s(literal -1 binary64)","#s(literal 8 binary64)","#s(literal 2 binary64)","#s(literal 3 binary64)","#s(literal 0 binary64)","#s(literal 4 binary64)","#s(literal 5 binary64)","#s(literal 6 binary64)","#s(literal -2 binary64)","#s(literal 9 binary64)","#s(literal -3 binary64)","#s(literal 27 binary64)","#s(literal 16 binary64)","#s(literal 10 binary64)","#s(literal 1 binary64)","#s(literal -1 binary64)","#s(literal 8 binary64)","#s(literal 2 binary64)","#s(literal 3 binary64)","#s(literal 0 binary64)","#s(literal 4 binary64)","#s(literal 5 binary64)","#s(literal 6 binary64)","#s(literal -2 binary64)","#s(literal 9 binary64)","#s(literal -3 binary64)","#s(literal 27 binary64)","#s(literal 16 binary64)","#s(literal 10 binary64)","#s(literal 1 binary64)","#s(literal -1 binary64)","#s(literal 8 binary64)","#s(literal 2 binary64)","#s(literal 3 binary64)","#s(literal 0 binary64)","#s(literal 4 binary64)","#s(literal 5 binary64)","#s(literal 6 binary64)","#s(literal -2 binary64)","#s(literal 9 binary64)","#s(literal -3 binary64)","#s(literal 27 binary64)","#s(literal 16 binary64)","#s(literal 10 binary64)"]],"time":364.14501953125,"type":"rewrite"},{"compiler":[[15,16]],"memory":[[1248800,1248800]],"time":2.405029296875,"type":"eval"},{"alts":[["(-.f64 (/.f64 (-.f64 (pow.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) #s(literal 3 binary64)) (pow.f64 (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) #s(literal 3 binary64))) (fma.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (*.f64 N N) N)) (fma.f64 (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) (*.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)))))) (log.f64 N))","next",48.45388129268919,"binary64"],["(-.f64 (/.f64 (-.f64 (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 3 binary64)) (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 3 binary64))) (fma.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (fma.f64 N N #s(literal -1 binary64))) (fma.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64))) (*.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64))))))) (log.f64 N))","fresh",48.86788817146941,"binary64"],["(-.f64 (/.f64 (-.f64 (*.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (*.f64 N N) N))) (*.f64 (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)))) (+.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)))) (log.f64 N))","done",48.62788034417751,"binary64"],["(-.f64 (/.f64 (-.f64 (*.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (fma.f64 N N #s(literal -1 binary64)))) (*.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64))))) (+.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64))))) (log.f64 N))","next",48.96618890513321,"binary64"],["(-.f64 (-.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N))) (log.f64 N))","next",48.58560594139277,"binary64"],["(-.f64 (+.f64 (neg.f64 (log.f64 N)) (log1p.f64 (*.f64 (*.f64 N N) N))) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)))","next",48.78744101692509,"binary64"],["(-.f64 (+.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (/.f64 #s(literal -1 binary64) (-.f64 #s(literal 1 binary64) N)))) (log.f64 N))","done",49.134008003385,"binary64"],["(-.f64 (log1p.f64 N) (log.f64 N))","done",48.976030472678374,"binary64"],["(neg.f64 (/.f64 (*.f64 (neg.f64 (log.f64 (fma.f64 N N N))) (log.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) N))) (log.f64 (fma.f64 N N N))))","done",47.10482384744166,"binary64"],["(neg.f64 (log.f64 (/.f64 N (+.f64 N #s(literal 1 binary64)))))","done",46.77664099805991,"binary64"],["#s(literal 1 binary64)","next",57.65361816382278,"binary64"]],"compiler":[[60,18],[48,16],[44,15],[35,13],[16,11],[17,12],[15,11],[5,4],[20,11],[7,6],[1,2],[60,18],[48,16],[35,13],[16,11],[17,12],[1,2]],"count":[[25,11]],"kept":[{"done":[0,0],"fresh":[5,5],"new":[15,1],"picked":[5,5]}],"memory":[[4366496,4366496]],"min-error":[[44.207531044898566,"binary64"]],"time":8.3291015625,"type":"prune"},{"inputs":[["(-.f64 (/.f64 (-.f64 (pow.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) #s(literal 3 binary64)) (pow.f64 (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) #s(literal 3 binary64))) (fma.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (*.f64 N N) N)) (fma.f64 (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) (*.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)))))) (log.f64 N))","(/.f64 (-.f64 (pow.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) #s(literal 3 binary64)) (pow.f64 (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) #s(literal 3 binary64))) (fma.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (*.f64 N N) N)) (fma.f64 (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) (*.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N))))))","(-.f64 (pow.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) #s(literal 3 binary64)) (pow.f64 (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) #s(literal 3 binary64)))","(pow.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) #s(literal 3 binary64))","(log1p.f64 (*.f64 (*.f64 N N) N))","(*.f64 (*.f64 N N) N)","(*.f64 N N)","N","#s(literal 3 binary64)","(pow.f64 (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) #s(literal 3 binary64))","(log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N))","(*.f64 (+.f64 N #s(literal -1 binary64)) N)","(+.f64 N #s(literal -1 binary64))","#s(literal -1 binary64)","(fma.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (*.f64 N N) N)) (fma.f64 (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) (*.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)))))","(fma.f64 (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) (*.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N))))","(*.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)))","(log.f64 N)","#s(literal 1 binary64)","(-.f64 (-.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N))) (log.f64 N))","(-.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)))","(log1p.f64 (*.f64 (*.f64 N N) N))","(*.f64 (*.f64 N N) N)","(*.f64 N N)","N","(log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N))","(*.f64 (+.f64 N #s(literal -1 binary64)) N)","(+.f64 N #s(literal -1 binary64))","#s(literal -1 binary64)","(log.f64 N)","(-.f64 (+.f64 (neg.f64 (log.f64 N)) (log1p.f64 (*.f64 (*.f64 N N) N))) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)))","(+.f64 (neg.f64 (log.f64 N)) (log1p.f64 (*.f64 (*.f64 N N) N)))","(neg.f64 (log.f64 N))","(log.f64 N)","N","(log1p.f64 (*.f64 (*.f64 N N) N))","(*.f64 (*.f64 N N) N)","(*.f64 N N)","(log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N))","(*.f64 (+.f64 N #s(literal -1 binary64)) N)","(+.f64 N #s(literal -1 binary64))","#s(literal -1 binary64)","(-.f64 (/.f64 (-.f64 (*.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (fma.f64 N N #s(literal -1 binary64)))) (*.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64))))) (+.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64))))) (log.f64 N))","(/.f64 (-.f64 (*.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (fma.f64 N N #s(literal -1 binary64)))) (*.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64))))) (+.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64)))))","(-.f64 (*.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (fma.f64 N N #s(literal -1 binary64)))) (*.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64)))))","(*.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (fma.f64 N N #s(literal -1 binary64))))","(log.f64 (fma.f64 N N #s(literal -1 binary64)))","(fma.f64 N N #s(literal -1 binary64))","N","#s(literal -1 binary64)","(*.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64))))","(log.f64 (+.f64 N #s(literal -1 binary64)))","(+.f64 N #s(literal -1 binary64))","(+.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64))))","(log.f64 N)"]],"locations":[["(*.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (fma.f64 N N #s(literal -1 binary64))))","cost-diff",0],["(-.f64 (*.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (fma.f64 N N #s(literal -1 binary64)))) (*.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64)))))","cost-diff",0],["(/.f64 (-.f64 (*.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (fma.f64 N N #s(literal -1 binary64)))) (*.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64))))) (+.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64)))))","cost-diff",0],["(-.f64 (/.f64 (-.f64 (*.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (fma.f64 N N #s(literal -1 binary64)))) (*.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64))))) (+.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64))))) (log.f64 N))","cost-diff",0],["(log.f64 N)","cost-diff",0],["(neg.f64 (log.f64 N))","cost-diff",0],["(-.f64 (+.f64 (neg.f64 (log.f64 N)) (log1p.f64 (*.f64 (*.f64 N N) N))) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)))","cost-diff",0],["(+.f64 (neg.f64 (log.f64 N)) (log1p.f64 (*.f64 (*.f64 N N) N)))","cost-diff",1],["(*.f64 (*.f64 N N) N)","cost-diff",0],["(log1p.f64 (*.f64 (*.f64 N N) N))","cost-diff",0],["(-.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)))","cost-diff",0],["(-.f64 (-.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N))) (log.f64 N))","cost-diff",0],["(-.f64 (pow.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) #s(literal 3 binary64)) (pow.f64 (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) #s(literal 3 binary64)))","cost-diff",0],["(/.f64 (-.f64 (pow.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) #s(literal 3 binary64)) (pow.f64 (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) #s(literal 3 binary64))) (fma.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (*.f64 N N) N)) (fma.f64 (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) (*.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N))))))","cost-diff",0],["(-.f64 (/.f64 (-.f64 (pow.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) #s(literal 3 binary64)) (pow.f64 (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) #s(literal 3 binary64))) (fma.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (*.f64 N N) N)) (fma.f64 (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) (*.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)))))) (log.f64 N))","cost-diff",0],["(fma.f64 (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) (*.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N))))","cost-diff",6]],"memory":[[-4513392,14274960]],"method":["egg-herbie"],"outputs":[["(-.f64 (/.f64 (-.f64 (pow.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) #s(literal 3 binary64)) (pow.f64 (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) #s(literal 3 binary64))) (fma.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (*.f64 N N) N)) (fma.f64 (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) (*.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)))))) (log.f64 N))","(-.f64 (/.f64 (-.f64 (pow.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) #s(literal 3 binary64)) (pow.f64 (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) #s(literal 3 binary64))) (fma.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (+.f64 (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) (log1p.f64 (*.f64 (*.f64 N N) N))) (*.f64 (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N))))) (log.f64 N))","(/.f64 (-.f64 (pow.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) #s(literal 3 binary64)) (pow.f64 (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) #s(literal 3 binary64))) (fma.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (*.f64 N N) N)) (fma.f64 (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) (*.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N))))))","(/.f64 (-.f64 (pow.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) #s(literal 3 binary64)) (pow.f64 (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) #s(literal 3 binary64))) (fma.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (+.f64 (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) (log1p.f64 (*.f64 (*.f64 N N) N))) (*.f64 (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)))))","(-.f64 (pow.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) #s(literal 3 binary64)) (pow.f64 (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) #s(literal 3 binary64)))","(pow.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) #s(literal 3 binary64))","(log1p.f64 (*.f64 (*.f64 N N) N))","(*.f64 (*.f64 N N) N)","(*.f64 N N)","N","#s(literal 3 binary64)","(pow.f64 (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) #s(literal 3 binary64))","(log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N))","(*.f64 (+.f64 N #s(literal -1 binary64)) N)","(+.f64 N #s(literal -1 binary64))","#s(literal -1 binary64)","(fma.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (*.f64 N N) N)) (fma.f64 (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) (*.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)))))","(fma.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (+.f64 (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) (log1p.f64 (*.f64 (*.f64 N N) N))) (*.f64 (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N))))","(fma.f64 (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) (*.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N))))","(*.f64 (+.f64 (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) (log1p.f64 (*.f64 (*.f64 N N) N))) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)))","(*.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)))","(log.f64 N)","#s(literal 1 binary64)","(-.f64 (-.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N))) (log.f64 N))","(-.f64 (-.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log.f64 N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)))","(-.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)))","(log1p.f64 (*.f64 (*.f64 N N) N))","(*.f64 (*.f64 N N) N)","(*.f64 N N)","N","(log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N))","(*.f64 (+.f64 N #s(literal -1 binary64)) N)","(+.f64 N #s(literal -1 binary64))","#s(literal -1 binary64)","(log.f64 N)","(-.f64 (+.f64 (neg.f64 (log.f64 N)) (log1p.f64 (*.f64 (*.f64 N N) N))) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)))","(-.f64 (-.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log.f64 N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)))","(+.f64 (neg.f64 (log.f64 N)) (log1p.f64 (*.f64 (*.f64 N N) N)))","(-.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log.f64 N))","(neg.f64 (log.f64 N))","(log.f64 N)","N","(log1p.f64 (*.f64 (*.f64 N N) N))","(*.f64 (*.f64 N N) N)","(*.f64 N N)","(log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N))","(*.f64 (+.f64 N #s(literal -1 binary64)) N)","(+.f64 N #s(literal -1 binary64))","#s(literal -1 binary64)","(-.f64 (/.f64 (-.f64 (*.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (fma.f64 N N #s(literal -1 binary64)))) (*.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64))))) (+.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64))))) (log.f64 N))","(fma.f64 (/.f64 (-.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64)))) (+.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64))))) (+.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64)))) (neg.f64 (log.f64 N)))","(/.f64 (-.f64 (*.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (fma.f64 N N #s(literal -1 binary64)))) (*.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64))))) (+.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64)))))","(/.f64 (*.f64 (+.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64)))) (-.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64))))) (+.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64)))))","(-.f64 (*.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (fma.f64 N N #s(literal -1 binary64)))) (*.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64)))))","(*.f64 (+.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64)))) (-.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64)))))","(*.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (fma.f64 N N #s(literal -1 binary64))))","(log.f64 (fma.f64 N N #s(literal -1 binary64)))","(fma.f64 N N #s(literal -1 binary64))","N","#s(literal -1 binary64)","(*.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64))))","(log.f64 (+.f64 N #s(literal -1 binary64)))","(+.f64 N #s(literal -1 binary64))","(+.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64))))","(log.f64 N)"]],"time":361.971923828125,"type":"simplify"},{"compiler":[[635,37]],"locations":[["(/.f64 (-.f64 (*.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (fma.f64 N N #s(literal -1 binary64)))) (*.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64))))) (+.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64)))))","accuracy",0.32421875],["(*.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (fma.f64 N N #s(literal -1 binary64))))","accuracy",0.5364837890737681],["(*.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64))))","accuracy",0.5504875488422101],["(-.f64 (/.f64 (-.f64 (*.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (fma.f64 N N #s(literal -1 binary64)))) (*.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64))))) (+.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64))))) (log.f64 N))","accuracy",48.976030472678374],["(log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N))","accuracy",0.0078125],["(*.f64 (*.f64 N N) N)","accuracy",0.26953125],["(+.f64 (neg.f64 (log.f64 N)) (log1p.f64 (*.f64 (*.f64 N N) N)))","accuracy",0.6484375],["(-.f64 (+.f64 (neg.f64 (log.f64 N)) (log1p.f64 (*.f64 (*.f64 N N) N))) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)))","accuracy",49.43889723837206],["(log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N))","accuracy",0.0078125],["(*.f64 (*.f64 N N) N)","accuracy",0.26953125],["(-.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)))","accuracy",0.90014687518029],["(-.f64 (-.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N))) (log.f64 N))","accuracy",48.976030472678374],["(-.f64 (pow.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) #s(literal 3 binary64)) (pow.f64 (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) #s(literal 3 binary64)))","accuracy",0.46712875976844204],["(pow.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) #s(literal 3 binary64))","accuracy",0.7048989746741666],["(pow.f64 (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) #s(literal 3 binary64))","accuracy",0.7452890137479347],["(-.f64 (/.f64 (-.f64 (pow.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) #s(literal 3 binary64)) (pow.f64 (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) #s(literal 3 binary64))) (fma.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (*.f64 N N) N)) (fma.f64 (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) (*.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)))))) (log.f64 N))","accuracy",48.976030472678374]],"memory":[[-744368,63451824]],"mixsample":[[4.94482421875,"ival-div",0],[23.6875,"adjust",800],[1.346435546875,"ival-div",400],[0.138671875,"ival-assert",0],[15.549072265625,"ival-sub",0],[1.493408203125,"ival-sub",400],[7.0791015625,"ival-log1p",400],[0.528564453125,"ival-neg",400],[14.14501953125,"ival-pow",0],[1.607177734375,"ival-mult",800],[10.1875,"ival-add",0],[19.200439453125,"ival-mult",0],[3.448974609375,"ival-mult",400],[8.458740234375,"ival-log",400],[2.30078125,"ival-add",400],[16.369873046875,"ival-log",0],[0.36865234375,"ival-true",0],[13.78759765625,"ival-log1p",0],[3.81787109375,"ival-pow",400],[0.179443359375,"ival-add",800],[0.6181640625,"exact",0],[1.780517578125,"ival-neg",0]],"outcomes":[[174.61083984375,1,"valid",197],[21.763427734375,0,"valid",59]],"time":245.447998046875,"type":"localize"},{"count":[[20,183]],"inputs":[["(fma.f64 (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) (*.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N))))","(-.f64 (/.f64 (-.f64 (pow.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) #s(literal 3 binary64)) (pow.f64 (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) #s(literal 3 binary64))) (fma.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (*.f64 N N) N)) (fma.f64 (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) (*.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)))))) (log.f64 N))","(/.f64 (-.f64 (pow.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) #s(literal 3 binary64)) (pow.f64 (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) #s(literal 3 binary64))) (fma.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (*.f64 N N) N)) (fma.f64 (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) (*.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N))))))","(-.f64 (pow.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) #s(literal 3 binary64)) (pow.f64 (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) #s(literal 3 binary64)))","(-.f64 (-.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N))) (log.f64 N))","(-.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)))","(log1p.f64 (*.f64 (*.f64 N N) N))","(*.f64 (*.f64 N N) N)","(+.f64 (neg.f64 (log.f64 N)) (log1p.f64 (*.f64 (*.f64 N N) N)))","(-.f64 (+.f64 (neg.f64 (log.f64 N)) (log1p.f64 (*.f64 (*.f64 N N) N))) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)))","(neg.f64 (log.f64 N))","(log.f64 N)","(-.f64 (/.f64 (-.f64 (*.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (fma.f64 N N #s(literal -1 binary64)))) (*.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64))))) (+.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64))))) (log.f64 N))","(/.f64 (-.f64 (*.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (fma.f64 N N #s(literal -1 binary64)))) (*.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64))))) (+.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64)))))","(-.f64 (*.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (fma.f64 N N #s(literal -1 binary64)))) (*.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64)))))","(*.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (fma.f64 N N #s(literal -1 binary64))))","(pow.f64 (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) #s(literal 3 binary64))","(pow.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) #s(literal 3 binary64))","(log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N))","(*.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64))))"]],"memory":[[6472400,39761152]],"outputs":[["(pow N 2)","(* (pow N 2) (+ 1 (* -1 N)))","(* (pow N 2) (+ 1 (* N (- (* -25/12 N) 1))))","(* (pow N 2) (+ 1 (* N (- (* N (- (* 2/3 N) 25/12)) 1))))","(* -1 (log N))","(- N (log N))","(- (* N (+ 1 (* -1/2 N))) (log N))","(- (* N (+ 1 (* N (- (* 1/3 N) 1/2)))) (log N))","N","(* N (+ 1 (* -1/2 N)))","(* N (+ 1 (* N (- (* 1/3 N) 1/2))))","(* N (+ 1 (* N (- (* N (+ 1/3 (* -1/4 N))) 1/2))))","(pow N 3)","(* (pow N 3) (+ 1 (* -3/2 N)))","(* (pow N 3) (+ 1 (* N (- (* -5/4 N) 3/2))))","(* (pow N 3) (+ 1 (* N (- (* N (- (* 9/8 N) 5/4)) 3/2))))","(* (pow N 3) (+ 1 (* -1/2 (pow N 3))))","(* (pow N 3) (+ 1 (* (pow N 3) (- (* 1/3 (pow N 3)) 1/2))))","(* (pow N 3) (+ 1 (* (pow N 3) (- (* (pow N 3) (+ 1/3 (* -1/4 (pow N 3)))) 1/2))))","(- (pow N 3) (log N))","(- (* (pow N 3) (+ 1 (* -1/2 (pow N 3)))) (log N))","(- (* (pow N 3) (+ 1 (* (pow N 3) (- (* 1/3 (pow N 3)) 1/2)))) (log N))","(log N)","(- (* N (+ 1 (* N (- (* 1/2 (/ 1 (log -1))) (+ 1 (* 1/2 (/ (+ 1 (* -1 (log -1))) (log -1)))))))) (log N))","(- (* N (+ 1 (* N (- (+ (* 1/2 (/ 1 (log -1))) (* N (- (+ (* -1/2 (/ (- (+ 3/8 (* 1/2 (/ (+ 1 (* -1 (log -1))) (log -1)))) (* 3/8 (/ 1 (log -1)))) (log -1))) (* 3/4 (/ 1 (log -1)))) (+ (* -1/2 (/ (- (* 1/8 (/ 1 (log -1))) 5/8) (log -1))) (* 1/2 (/ (+ 1 (* -2/3 (log -1))) (log -1))))))) (+ 1 (* 1/2 (/ (+ 1 (* -1 (log -1))) (log -1)))))))) (log N))","(* N (+ 1 (* N (+ (* 1/2 (/ (- (* -2 (log -1)) (+ 1 (* -1 (log -1)))) (log -1))) (* 1/2 (/ 1 (log -1)))))))","(* N (+ 1 (* N (+ (* 1/2 (/ 1 (log -1))) (+ (* 1/2 (/ (- (* -2 (log -1)) (+ 1 (* -1 (log -1)))) (log -1))) (* N (- (+ (* -1/2 (/ (+ 1 (* -2/3 (log -1))) (log -1))) (* 3/4 (/ 1 (log -1)))) (* -1/2 (/ (+ (* 1/2 (/ (- (* -2 (log -1)) (+ 1 (* -1 (log -1)))) (log -1))) (* 1/2 (/ 1 (log -1)))) (log -1))))))))))","(* N (+ 1 (* N (+ (* 1/2 (/ 1 (log -1))) (+ (* 1/2 (/ (- (* -2 (log -1)) (+ 1 (* -1 (log -1)))) (log -1))) (* N (- (+ (* -1/2 (/ (+ 1 (* -2/3 (log -1))) (log -1))) (+ (* 3/4 (/ 1 (log -1))) (* N (- (+ (* 1/6 (/ 1 (log -1))) (* 1/2 (/ (- (+ 1/12 (* -1 (log -1))) (* -1/2 (log -1))) (log -1)))) (+ (* -3/4 (/ (+ (* 1/2 (/ (- (* -2 (log -1)) (+ 1 (* -1 (log -1)))) (log -1))) (* 1/2 (/ 1 (log -1)))) (log -1))) (* -1/2 (/ (- (+ (* -1/2 (/ (+ 1 (* -2/3 (log -1))) (log -1))) (* 3/4 (/ 1 (log -1)))) (* -1/2 (/ (+ (* 1/2 (/ (- (* -2 (log -1)) (+ 1 (* -1 (log -1)))) (log -1))) (* 1/2 (/ 1 (log -1)))) (log -1)))) (log -1)))))))) (* -1/2 (/ (+ (* 1/2 (/ (- (* -2 (log -1)) (+ 1 (* -1 (log -1)))) (log -1))) (* 1/2 (/ 1 (log -1)))) (log -1))))))))))","(* 2 (* N (log -1)))","(* N (- (* N (- (* -2 (log -1)) (+ 1 (* -1 (log -1))))) (* -2 (log -1))))","(* N (- (* N (- (+ (* -2 (log -1)) (* -1 (* N (+ 1 (* -2/3 (log -1)))))) (+ 1 (* -1 (log -1))))) (* -2 (log -1))))","(* N (- (* N (- (+ (* -2 (log -1)) (* N (- (* N (- (+ 1/12 (* -1 (log -1))) (* -1/2 (log -1)))) (+ 1 (* -2/3 (log -1)))))) (+ 1 (* -1 (log -1))))) (* -2 (log -1))))","(pow (log -1) 2)","(+ (* -2 (* (pow N 2) (log -1))) (pow (log -1) 2))","(+ (* (pow N 2) (+ (* -2 (log -1)) (* (pow N 2) (+ 1 (* -1 (log -1)))))) (pow (log -1) 2))","(+ (* (pow N 2) (+ (* -2 (log -1)) (* (pow N 2) (+ 1 (+ (* -1 (log -1)) (* (pow N 2) (+ 1 (* -2/3 (log -1))))))))) (pow (log -1) 2))","(* -1 (pow N 3))","(* (pow N 3) (- (* 3/2 N) 1))","(* (pow N 3) (- (* N (+ 3/2 (* 5/4 N))) 1))","(* (pow N 3) (- (* N (+ 3/2 (* N (+ 5/4 (* -9/8 N))))) 1))","(pow N 9)","(* (pow N 9) (+ 1 (* -3/2 (pow N 3))))","(* (pow N 9) (+ 1 (* (pow N 3) (- (* 7/4 (pow N 3)) 3/2))))","(* (pow N 9) (+ 1 (* (pow N 3) (- (* (pow N 3) (+ 7/4 (* -15/8 (pow N 3)))) 3/2))))","(* -1 N)","(* N (- (* 1/2 N) 1))","(* N (- (* N (+ 1/2 (* 2/3 N))) 1))","(* N (- (* N (+ 1/2 (* N (+ 2/3 (* 1/4 N))))) 1))","(+ (* -2 (* N (log -1))) (pow (log -1) 2))","(+ (* N (+ (* -2 (log -1)) (* N (+ 1 (* -1 (log -1)))))) (pow (log -1) 2))","(+ (* N (+ (* -2 (log -1)) (* N (+ 1 (+ (* -1 (log -1)) (* N (+ 1 (* -2/3 (log -1))))))))) (pow (log -1) 2))","(+ (* 4 (pow (log (/ 1 N)) 2)) (* 6 (pow (log (/ 1 N)) 2)))","(+ (* 3 (/ (log (/ 1 N)) N)) (+ (* 4 (/ (log (/ 1 N)) N)) (+ (* 4 (pow (log (/ 1 N)) 2)) (* 6 (pow (log (/ 1 N)) 2)))))","(+ (* -2 (/ (log (/ 1 N)) (pow N 2))) (+ (* -3/2 (/ (log (/ 1 N)) (pow N 2))) (+ (* 3 (/ (log (/ 1 N)) N)) (+ (* 4 (/ (log (/ 1 N)) N)) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (/ 1 (pow N 2))))))))","(- (+ (* -4 (/ (log (/ 1 N)) (pow N 3))) (+ (* -8/3 (/ (log (/ 1 N)) (pow N 3))) (+ (* -2 (/ (log (/ 1 N)) (pow N 2))) (+ (* -3/2 (/ (log (/ 1 N)) (pow N 2))) (+ (* 3 (/ (log (/ 1 N)) N)) (+ (* 4 (/ (log (/ 1 N)) N)) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (/ 1 (pow N 2)))))))))) (/ 1 (pow N 3)))","(- (* -27 (/ (pow (log (/ 1 N)) 3) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))))) (+ (* -8 (/ (pow (log (/ 1 N)) 3) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))))) (* -1 (log (/ 1 N)))))","(- (+ (* -27 (/ (pow (log (/ 1 N)) 3) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))))) (* -8 (/ (* (pow (log (/ 1 N)) 3) (+ (* 3 (log (/ 1 N))) (* 4 (log (/ 1 N))))) (* N (pow (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))) 2))))) (+ (* -27 (/ (* (pow (log (/ 1 N)) 3) (+ (* 3 (log (/ 1 N))) (* 4 (log (/ 1 N))))) (* N (pow (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))) 2)))) (+ (* -8 (/ (pow (log (/ 1 N)) 2) (* N (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2))))))) (+ (* -8 (/ (pow (log (/ 1 N)) 3) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))))) (+ (* -4 (/ (pow (log (/ 1 N)) 2) (* N (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2))))))) (* -1 (log (/ 1 N))))))))","(- (+ (* -27 (/ (pow (log (/ 1 N)) 3) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))))) (+ (* -8 (/ (* (pow (log (/ 1 N)) 3) (+ 1 (+ (* -2 (log (/ 1 N))) (* -3/2 (log (/ 1 N)))))) (* (pow N 2) (pow (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))) 2)))) (+ (* -8 (/ (* (pow (log (/ 1 N)) 3) (+ (* 3 (log (/ 1 N))) (* 4 (log (/ 1 N))))) (* N (pow (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))) 2)))) (/ (* (+ (* 3 (log (/ 1 N))) (* 4 (log (/ 1 N)))) (- (+ (* -8 (/ (pow (log (/ 1 N)) 2) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))))) (* -4 (/ (pow (log (/ 1 N)) 2) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2))))))) (* -8 (/ (* (pow (log (/ 1 N)) 3) (+ (* 3 (log (/ 1 N))) (* 4 (log (/ 1 N))))) (pow (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))) 2))))) (* (pow N 2) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2))))))))) (+ (* -27 (/ (* (pow (log (/ 1 N)) 3) (+ 1 (+ (* -2 (log (/ 1 N))) (* -3/2 (log (/ 1 N)))))) (* (pow N 2) (pow (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))) 2)))) (+ (* -27 (/ (* (pow (log (/ 1 N)) 3) (+ (* 3 (log (/ 1 N))) (* 4 (log (/ 1 N))))) (* N (pow (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))) 2)))) (+ (* -8 (/ (pow (log (/ 1 N)) 2) (* N (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2))))))) (+ (* -8 (/ (pow (log (/ 1 N)) 3) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))))) (+ (* -4 (/ (log (/ 1 N)) (* (pow N 2) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2))))))) (+ (* -4 (/ (pow (log (/ 1 N)) 2) (* N (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2))))))) (+ (* -2 (/ (* (log (/ 1 N)) (+ 1 (* -2 (log (/ 1 N))))) (* (pow N 2) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2))))))) (+ (* -1 (log (/ 1 N))) (+ (* 2 (/ (pow (log (/ 1 N)) 2) (* (pow N 2) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2))))))) (* 27 (/ (* (pow (log (/ 1 N)) 3) (pow (+ (* 3 (log (/ 1 N))) (* 4 (log (/ 1 N)))) 2)) (* (pow N 2) (pow (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))) 3))))))))))))))","(- (+ (* -27 (/ (pow (log (/ 1 N)) 3) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))))) (+ (* -8 (/ (* (pow (log (/ 1 N)) 3) (+ 1 (+ (* -2 (log (/ 1 N))) (* -3/2 (log (/ 1 N)))))) (* (pow N 2) (pow (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))) 2)))) (+ (* -8 (/ (* (pow (log (/ 1 N)) 3) (+ (* 3 (log (/ 1 N))) (* 4 (log (/ 1 N))))) (* N (pow (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))) 2)))) (+ (* -8 (/ (* (pow (log (/ 1 N)) 3) (- (+ (* -6 (log (/ 1 N))) (+ (* -4 (log (/ 1 N))) (* -8/3 (log (/ 1 N))))) 1)) (* (pow N 3) (pow (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))) 2)))) (+ (* 9 (/ (pow (log (/ 1 N)) 2) (* (pow N 3) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2))))))) (+ (* 18 (/ (pow (log (/ 1 N)) 2) (* (pow N 3) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2))))))) (+ (/ (* (+ 1 (+ (* -2 (log (/ 1 N))) (* -3/2 (log (/ 1 N))))) (- (+ (* -8 (/ (pow (log (/ 1 N)) 2) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))))) (* -4 (/ (pow (log (/ 1 N)) 2) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2))))))) (* -8 (/ (* (pow (log (/ 1 N)) 3) (+ (* 3 (log (/ 1 N))) (* 4 (log (/ 1 N))))) (pow (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))) 2))))) (* (pow N 3) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))))) (+ (/ (* (+ (* 3 (log (/ 1 N))) (* 4 (log (/ 1 N)))) (- (+ (* -8 (/ (pow (log (/ 1 N)) 2) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))))) (* -4 (/ (pow (log (/ 1 N)) 2) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2))))))) (* -8 (/ (* (pow (log (/ 1 N)) 3) (+ (* 3 (log (/ 1 N))) (* 4 (log (/ 1 N))))) (pow (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))) 2))))) (* (pow N 2) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))))) (/ (* (+ (* 3 (log (/ 1 N))) (* 4 (log (/ 1 N)))) (- (+ (* -4 (/ (log (/ 1 N)) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))))) (+ (* -2 (/ (* (log (/ 1 N)) (+ 1 (* -2 (log (/ 1 N))))) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))))) (* 2 (/ (pow (log (/ 1 N)) 2) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))))))) (+ (* -8 (/ (* (pow (log (/ 1 N)) 3) (+ 1 (+ (* -2 (log (/ 1 N))) (* -3/2 (log (/ 1 N)))))) (pow (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))) 2))) (/ (* (+ (* 3 (log (/ 1 N))) (* 4 (log (/ 1 N)))) (- (+ (* -8 (/ (pow (log (/ 1 N)) 2) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))))) (* -4 (/ (pow (log (/ 1 N)) 2) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2))))))) (* -8 (/ (* (pow (log (/ 1 N)) 3) (+ (* 3 (log (/ 1 N))) (* 4 (log (/ 1 N))))) (pow (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))) 2))))) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))))))) (* (pow N 3) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))))))))))))) (+ (* -27 (/ (* (pow (log (/ 1 N)) 3) (+ 1 (+ (* -2 (log (/ 1 N))) (* -3/2 (log (/ 1 N)))))) (* (pow N 2) (pow (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))) 2)))) (+ (* -27 (/ (* (pow (log (/ 1 N)) 3) (+ (* 3 (log (/ 1 N))) (* 4 (log (/ 1 N))))) (* N (pow (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))) 2)))) (+ (* -27 (/ (* (pow (log (/ 1 N)) 3) (- (+ (* -6 (log (/ 1 N))) (+ (* -4 (log (/ 1 N))) (* -8/3 (log (/ 1 N))))) 1)) (* (pow N 3) (pow (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))) 2)))) (+ (* -8 (/ (pow (log (/ 1 N)) 2) (* N (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2))))))) (+ (* -8 (/ (pow (log (/ 1 N)) 3) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))))) (+ (* -4 (/ (log (/ 1 N)) (* (pow N 2) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2))))))) (+ (* -4 (/ (pow (log (/ 1 N)) 2) (* N (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2))))))) (+ (* -2 (/ (* (log (/ 1 N)) (+ 1 (* -2 (log (/ 1 N))))) (* (pow N 2) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2))))))) (+ (* -2 (/ (* (log (/ 1 N)) (- (* -8/3 (log (/ 1 N))) 1)) (* (pow N 3) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2))))))) (+ (* -1 (log (/ 1 N))) (+ (* -1 (/ (* (+ (* -27 (/ (* (pow (log (/ 1 N)) 3) (+ 1 (+ (* -2 (log (/ 1 N))) (* -3/2 (log (/ 1 N)))))) (pow (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))) 2))) (* 27 (/ (* (pow (log (/ 1 N)) 3) (pow (+ (* 3 (log (/ 1 N))) (* 4 (log (/ 1 N)))) 2)) (pow (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))) 3)))) (+ (* 3 (log (/ 1 N))) (* 4 (log (/ 1 N))))) (* (pow N 3) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2))))))) (+ (* -1 (/ (+ 1 (* -2 (log (/ 1 N)))) (* (pow N 3) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2))))))) (+ (* 2 (/ (log (/ 1 N)) (* (pow N 3) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2))))))) (+ (* 2 (/ (pow (log (/ 1 N)) 2) (* (pow N 2) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2))))))) (+ (* 8/3 (/ (pow (log (/ 1 N)) 2) (* (pow N 3) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2))))))) (+ (* 27 (/ (* (pow (log (/ 1 N)) 3) (* (+ 1 (+ (* -2 (log (/ 1 N))) (* -3/2 (log (/ 1 N))))) (+ (* 3 (log (/ 1 N))) (* 4 (log (/ 1 N)))))) (* (pow N 3) (pow (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))) 3)))) (* 27 (/ (* (pow (log (/ 1 N)) 3) (pow (+ (* 3 (log (/ 1 N))) (* 4 (log (/ 1 N)))) 2)) (* (pow N 2) (pow (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))) 3)))))))))))))))))))))","(/ (- (* -27 (pow (log (/ 1 N)) 3)) (* -8 (pow (log (/ 1 N)) 3))) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))))","(- (+ (* -27 (/ (pow (log (/ 1 N)) 3) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))))) (* -1 (/ (+ (* -8 (pow (log (/ 1 N)) 2)) (* -4 (pow (log (/ 1 N)) 2))) (* N (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))))))) (+ (* -8 (/ (pow (log (/ 1 N)) 3) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))))) (/ (* (+ (* 3 (log (/ 1 N))) (* 4 (log (/ 1 N)))) (- (* -27 (pow (log (/ 1 N)) 3)) (* -8 (pow (log (/ 1 N)) 3)))) (* N (pow (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))) 2)))))","(- (+ (* -27 (/ (pow (log (/ 1 N)) 3) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))))) (+ (* -1 (/ (+ (* -8 (pow (log (/ 1 N)) 2)) (* -4 (pow (log (/ 1 N)) 2))) (* N (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2))))))) (* -1 (/ (+ (* -4 (log (/ 1 N))) (+ (* -2 (* (log (/ 1 N)) (+ 1 (* -2 (log (/ 1 N)))))) (* 2 (pow (log (/ 1 N)) 2)))) (* (pow N 2) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2))))))))) (+ (* -8 (/ (pow (log (/ 1 N)) 3) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))))) (+ (/ (* (+ 1 (+ (* -2 (log (/ 1 N))) (* -3/2 (log (/ 1 N))))) (- (* -27 (pow (log (/ 1 N)) 3)) (* -8 (pow (log (/ 1 N)) 3)))) (* (pow N 2) (pow (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))) 2))) (+ (/ (* (+ (* 3 (log (/ 1 N))) (* 4 (log (/ 1 N)))) (- (* -27 (pow (log (/ 1 N)) 3)) (* -8 (pow (log (/ 1 N)) 3)))) (* N (pow (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))) 2))) (/ (* (+ (* 3 (log (/ 1 N))) (* 4 (log (/ 1 N)))) (- (* -1 (/ (+ (* -8 (pow (log (/ 1 N)) 2)) (* -4 (pow (log (/ 1 N)) 2))) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))))) (/ (* (+ (* 3 (log (/ 1 N))) (* 4 (log (/ 1 N)))) (- (* -27 (pow (log (/ 1 N)) 3)) (* -8 (pow (log (/ 1 N)) 3)))) (pow (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))) 2)))) (* (pow N 2) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2))))))))))","(- (+ (* -27 (/ (pow (log (/ 1 N)) 3) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))))) (+ (* -1 (/ (+ (* -8 (pow (log (/ 1 N)) 2)) (* -4 (pow (log (/ 1 N)) 2))) (* N (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2))))))) (+ (* -1 (/ (+ (* -4 (log (/ 1 N))) (+ (* -2 (* (log (/ 1 N)) (+ 1 (* -2 (log (/ 1 N)))))) (* 2 (pow (log (/ 1 N)) 2)))) (* (pow N 2) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2))))))) (+ (* 9 (/ (pow (log (/ 1 N)) 2) (* (pow N 3) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2))))))) (* 18 (/ (pow (log (/ 1 N)) 2) (* (pow N 3) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2))))))))))) (+ (* -8 (/ (pow (log (/ 1 N)) 3) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))))) (+ (* -2 (/ (* (log (/ 1 N)) (- (* -8/3 (log (/ 1 N))) 1)) (* (pow N 3) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2))))))) (+ (* -1 (/ (+ 1 (* -2 (log (/ 1 N)))) (* (pow N 3) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2))))))) (+ (* 2 (/ (log (/ 1 N)) (* (pow N 3) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2))))))) (+ (* 8/3 (/ (pow (log (/ 1 N)) 2) (* (pow N 3) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2))))))) (+ (/ (* (+ 1 (+ (* -2 (log (/ 1 N))) (* -3/2 (log (/ 1 N))))) (- (* -27 (pow (log (/ 1 N)) 3)) (* -8 (pow (log (/ 1 N)) 3)))) (* (pow N 2) (pow (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))) 2))) (+ (/ (* (+ 1 (+ (* -2 (log (/ 1 N))) (* -3/2 (log (/ 1 N))))) (- (* -1 (/ (+ (* -8 (pow (log (/ 1 N)) 2)) (* -4 (pow (log (/ 1 N)) 2))) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))))) (/ (* (+ (* 3 (log (/ 1 N))) (* 4 (log (/ 1 N)))) (- (* -27 (pow (log (/ 1 N)) 3)) (* -8 (pow (log (/ 1 N)) 3)))) (pow (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))) 2)))) (* (pow N 3) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))))) (+ (/ (* (+ (* 3 (log (/ 1 N))) (* 4 (log (/ 1 N)))) (- (* -27 (pow (log (/ 1 N)) 3)) (* -8 (pow (log (/ 1 N)) 3)))) (* N (pow (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))) 2))) (+ (/ (* (+ (* 3 (log (/ 1 N))) (* 4 (log (/ 1 N)))) (- (* -1 (/ (+ (* -8 (pow (log (/ 1 N)) 2)) (* -4 (pow (log (/ 1 N)) 2))) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))))) (/ (* (+ (* 3 (log (/ 1 N))) (* 4 (log (/ 1 N)))) (- (* -27 (pow (log (/ 1 N)) 3)) (* -8 (pow (log (/ 1 N)) 3)))) (pow (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))) 2)))) (* (pow N 2) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))))) (+ (/ (* (+ (* 3 (log (/ 1 N))) (* 4 (log (/ 1 N)))) (- (* -1 (/ (+ (* -4 (log (/ 1 N))) (+ (* -2 (* (log (/ 1 N)) (+ 1 (* -2 (log (/ 1 N)))))) (* 2 (pow (log (/ 1 N)) 2)))) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))))) (+ (/ (* (+ 1 (+ (* -2 (log (/ 1 N))) (* -3/2 (log (/ 1 N))))) (- (* -27 (pow (log (/ 1 N)) 3)) (* -8 (pow (log (/ 1 N)) 3)))) (pow (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))) 2)) (/ (* (+ (* 3 (log (/ 1 N))) (* 4 (log (/ 1 N)))) (- (* -1 (/ (+ (* -8 (pow (log (/ 1 N)) 2)) (* -4 (pow (log (/ 1 N)) 2))) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))))) (/ (* (+ (* 3 (log (/ 1 N))) (* 4 (log (/ 1 N)))) (- (* -27 (pow (log (/ 1 N)) 3)) (* -8 (pow (log (/ 1 N)) 3)))) (pow (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))) 2)))) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))))))) (* (pow N 3) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))))) (/ (* (- (* -27 (pow (log (/ 1 N)) 3)) (* -8 (pow (log (/ 1 N)) 3))) (- (+ (* -6 (log (/ 1 N))) (+ (* -4 (log (/ 1 N))) (* -8/3 (log (/ 1 N))))) 1)) (* (pow N 3) (pow (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))) 2))))))))))))))","(- (* -27 (pow (log (/ 1 N)) 3)) (* -8 (pow (log (/ 1 N)) 3)))","(- (+ (* -27 (pow (log (/ 1 N)) 3)) (* -1 (/ (+ (* -8 (pow (log (/ 1 N)) 2)) (* -4 (pow (log (/ 1 N)) 2))) N))) (* -8 (pow (log (/ 1 N)) 3)))","(- (+ (* -27 (pow (log (/ 1 N)) 3)) (* -1 (/ (+ (* -4 (log (/ 1 N))) (+ (* -2 (* (log (/ 1 N)) (+ 1 (* -2 (log (/ 1 N)))))) (* 2 (pow (log (/ 1 N)) 2)))) (pow N 2)))) (+ (* -8 (/ (pow (log (/ 1 N)) 2) N)) (+ (* -8 (pow (log (/ 1 N)) 3)) (* -4 (/ (pow (log (/ 1 N)) 2) N)))))","(- (+ (* -27 (pow (log (/ 1 N)) 3)) (+ (* 9 (/ (pow (log (/ 1 N)) 2) (pow N 3))) (* 18 (/ (pow (log (/ 1 N)) 2) (pow N 3))))) (+ (* -8 (/ (pow (log (/ 1 N)) 2) N)) (+ (* -8 (pow (log (/ 1 N)) 3)) (+ (* -4 (/ (log (/ 1 N)) (pow N 2))) (+ (* -4 (/ (pow (log (/ 1 N)) 2) N)) (+ (* -2 (/ (* (log (/ 1 N)) (+ 1 (* -2 (log (/ 1 N))))) (pow N 2))) (+ (* -2 (/ (* (log (/ 1 N)) (- (* -8/3 (log (/ 1 N))) 1)) (pow N 3))) (+ (* -1 (/ (+ 1 (* -2 (log (/ 1 N)))) (pow N 3))) (+ (* 2 (/ (log (/ 1 N)) (pow N 3))) (+ (* 2 (/ (pow (log (/ 1 N)) 2) (pow N 2))) (* 8/3 (/ (pow (log (/ 1 N)) 2) (pow N 3)))))))))))))","(- (* -3 (log (/ 1 N))) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))))","(- (+ (* -3 (log (/ 1 N))) (/ 1 N)) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))))","(- (+ (* -3 (log (/ 1 N))) (/ 1 N)) (+ (* -2 (log (/ 1 N))) (+ (* -1 (log (/ 1 N))) (/ 1/2 (pow N 2)))))","(- (+ (* -3 (log (/ 1 N))) (+ (/ 1 N) (* 1/3 (/ 1 (pow N 3))))) (+ (* -2 (log (/ 1 N))) (+ (* -1 (log (/ 1 N))) (/ 1/2 (pow N 2)))))","(- (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N))))","(- (+ (* -3 (log (/ 1 N))) (/ 1 N)) (* -2 (log (/ 1 N))))","(- (+ (* -3 (log (/ 1 N))) (/ 1 N)) (+ (* -2 (log (/ 1 N))) (/ 1/2 (pow N 2))))","(- (+ (* -3 (log (/ 1 N))) (+ (/ 1 N) (* 1/3 (/ 1 (pow N 3))))) (+ (* -2 (log (/ 1 N))) (/ 1/2 (pow N 2))))","(* -3 (log (/ 1 N)))","(+ (* -3 (log (/ 1 N))) (/ 1 (pow N 3)))","(- (+ (* -3 (log (/ 1 N))) (/ 1 (pow N 3))) (/ 1/2 (pow N 6)))","(- (+ (* -3 (log (/ 1 N))) (+ (/ 1 (pow N 3)) (* 1/3 (/ 1 (pow N 9))))) (/ 1/2 (pow N 6)))","(- (* -3 (log (/ 1 N))) (* -1 (log (/ 1 N))))","(- (+ (* -3 (log (/ 1 N))) (/ 1 (pow N 3))) (* -1 (log (/ 1 N))))","(- (+ (* -3 (log (/ 1 N))) (/ 1 (pow N 3))) (+ (* -1 (log (/ 1 N))) (/ 1/2 (pow N 6))))","(- (+ (* -3 (log (/ 1 N))) (+ (/ 1 (pow N 3)) (* 1/3 (/ 1 (pow N 9))))) (+ (* -1 (log (/ 1 N))) (/ 1/2 (pow N 6))))","(log (/ 1 N))","(* -1 (log (/ 1 N)))","(- (* 4 (/ (pow (log (/ 1 N)) 2) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))))) (+ (* -1 (log (/ 1 N))) (/ (pow (log (/ 1 N)) 2) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))))))","(- (+ (* -1 (/ (pow (log (/ 1 N)) 2) (* N (pow (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))) 2)))) (* 4 (/ (pow (log (/ 1 N)) 2) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N))))))) (+ (* -4 (/ (pow (log (/ 1 N)) 2) (* N (pow (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))) 2)))) (+ (* -1 (log (/ 1 N))) (+ (* 2 (/ (log (/ 1 N)) (* N (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N))))))) (/ (pow (log (/ 1 N)) 2) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))))))))","(- (+ (* -3/2 (/ (pow (log (/ 1 N)) 2) (* (pow N 2) (pow (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))) 2)))) (+ (* -1 (/ (- (* 2 (/ (log (/ 1 N)) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))))) (* -1 (/ (pow (log (/ 1 N)) 2) (pow (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))) 2)))) (* (pow N 2) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N))))))) (+ (* -1 (/ (pow (log (/ 1 N)) 2) (* N (pow (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))) 2)))) (+ (* 4 (/ (log (/ 1 N)) (* (pow N 2) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N))))))) (* 4 (/ (pow (log (/ 1 N)) 2) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))))))))) (+ (* -6 (/ (pow (log (/ 1 N)) 2) (* (pow N 2) (pow (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))) 2)))) (+ (* -4 (/ (pow (log (/ 1 N)) 2) (* N (pow (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))) 2)))) (+ (* -4 (/ (pow (log (/ 1 N)) 2) (* (pow N 2) (pow (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))) 3)))) (+ (* -1 (log (/ 1 N))) (+ (* 2 (/ (log (/ 1 N)) (* N (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N))))))) (+ (/ 1 (* (pow N 2) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))))) (+ (/ (log (/ 1 N)) (* (pow N 2) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))))) (/ (pow (log (/ 1 N)) 2) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))))))))))))","(- (+ (* -3/2 (/ (- (* 2 (/ (log (/ 1 N)) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))))) (* -1 (/ (pow (log (/ 1 N)) 2) (pow (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))) 2)))) (* (pow N 3) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N))))))) (+ (* -3/2 (/ (pow (log (/ 1 N)) 2) (* (pow N 2) (pow (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))) 2)))) (+ (* -1 (/ (- (* 2 (/ (log (/ 1 N)) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))))) (* -1 (/ (pow (log (/ 1 N)) 2) (pow (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))) 2)))) (* (pow N 2) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N))))))) (+ (* -1 (/ (- (+ (/ 1 (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N))))) (/ (log (/ 1 N)) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))))) (+ (* -3/2 (/ (pow (log (/ 1 N)) 2) (pow (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))) 2))) (* -1 (/ (- (* 2 (/ (log (/ 1 N)) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))))) (* -1 (/ (pow (log (/ 1 N)) 2) (pow (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))) 2)))) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))))))) (* (pow N 3) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N))))))) (+ (* -1 (/ (pow (log (/ 1 N)) 2) (* N (pow (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))) 2)))) (+ (* -1/3 (/ (pow (log (/ 1 N)) 2) (* (pow N 3) (pow (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))) 2)))) (+ (* 4 (/ (log (/ 1 N)) (* (pow N 2) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N))))))) (* 4 (/ (pow (log (/ 1 N)) 2) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N))))))))))))) (+ (* -6 (/ (pow (log (/ 1 N)) 2) (* (pow N 2) (pow (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))) 2)))) (+ (* -6 (/ (pow (log (/ 1 N)) 2) (* (pow N 3) (pow (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))) 3)))) (+ (* -4 (/ (pow (log (/ 1 N)) 2) (* N (pow (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))) 2)))) (+ (* -4 (/ (pow (log (/ 1 N)) 2) (* (pow N 2) (pow (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))) 3)))) (+ (* -4/3 (/ (pow (log (/ 1 N)) 2) (* (pow N 3) (pow (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))) 2)))) (+ (* -1 (log (/ 1 N))) (+ (* -1 (/ (- (* 4 (/ (log (/ 1 N)) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))))) (+ (* -6 (/ (pow (log (/ 1 N)) 2) (pow (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))) 2))) (* -4 (/ (pow (log (/ 1 N)) 2) (pow (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))) 3))))) (* (pow N 3) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N))))))) (+ (* 2/3 (/ (log (/ 1 N)) (* (pow N 3) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N))))))) (+ (* 2 (/ (log (/ 1 N)) (* N (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N))))))) (+ (/ 1 (* (pow N 2) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))))) (+ (/ 1 (* (pow N 3) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))))) (+ (/ (log (/ 1 N)) (* (pow N 2) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))))) (/ (pow (log (/ 1 N)) 2) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N))))))))))))))))))","(/ (- (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))))","(- (+ (* -2 (/ (log (/ 1 N)) (* N (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N))))))) (* 4 (/ (pow (log (/ 1 N)) 2) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N))))))) (+ (* -1 (/ (- (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)) (* N (pow (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))) 2)))) (/ (pow (log (/ 1 N)) 2) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))))))","(- (+ (* -2 (/ (log (/ 1 N)) (* N (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N))))))) (+ (* 4 (/ (log (/ 1 N)) (* (pow N 2) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N))))))) (* 4 (/ (pow (log (/ 1 N)) 2) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))))))) (+ (* -3/2 (/ (- (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)) (* (pow N 2) (pow (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))) 2)))) (+ (* -1 (/ (- (* -2 (/ (log (/ 1 N)) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))))) (* -1 (/ (- (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)) (pow (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))) 2)))) (* (pow N 2) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N))))))) (+ (* -1 (/ (- (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)) (* N (pow (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))) 2)))) (+ (/ 1 (* (pow N 2) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))))) (+ (/ (log (/ 1 N)) (* (pow N 2) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))))) (/ (pow (log (/ 1 N)) 2) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))))))))))","(- (+ (* -2 (/ (log (/ 1 N)) (* N (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N))))))) (+ (* -1 (/ (+ 1 (* 2/3 (log (/ 1 N)))) (* (pow N 3) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N))))))) (+ (* 4 (/ (log (/ 1 N)) (* (pow N 2) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N))))))) (* 4 (/ (pow (log (/ 1 N)) 2) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N))))))))) (+ (* -3/2 (/ (- (* -2 (/ (log (/ 1 N)) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))))) (* -1 (/ (- (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)) (pow (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))) 2)))) (* (pow N 3) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N))))))) (+ (* -3/2 (/ (- (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)) (* (pow N 2) (pow (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))) 2)))) (+ (* -1 (/ (- (* -2 (/ (log (/ 1 N)) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))))) (* -1 (/ (- (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)) (pow (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))) 2)))) (* (pow N 2) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N))))))) (+ (* -1 (/ (- (* 4 (/ (log (/ 1 N)) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))))) (+ (* -3/2 (/ (- (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)) (pow (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))) 2))) (+ (* -1 (/ (- (* -2 (/ (log (/ 1 N)) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))))) (* -1 (/ (- (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)) (pow (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))) 2)))) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))))) (+ (/ 1 (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N))))) (/ (log (/ 1 N)) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N))))))))) (* (pow N 3) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N))))))) (+ (* -1 (/ (- (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)) (* N (pow (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))) 2)))) (+ (* -1/3 (/ (- (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)) (* (pow N 3) (pow (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))) 2)))) (+ (/ 1 (* (pow N 2) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))))) (+ (/ (log (/ 1 N)) (* (pow N 2) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))))) (/ (pow (log (/ 1 N)) 2) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N))))))))))))))","(- (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))","(- (+ (* -2 (/ (log (/ 1 N)) N)) (* 4 (pow (log (/ 1 N)) 2))) (pow (log (/ 1 N)) 2))","(- (+ (* 4 (/ (log (/ 1 N)) (pow N 2))) (* 4 (pow (log (/ 1 N)) 2))) (+ (* 2 (/ (log (/ 1 N)) N)) (+ (/ 1 (pow N 2)) (+ (/ (log (/ 1 N)) (pow N 2)) (pow (log (/ 1 N)) 2)))))","(- (+ (* -1 (/ (+ 1 (* 2/3 (log (/ 1 N)))) (pow N 3))) (+ (* 4 (/ (log (/ 1 N)) (pow N 2))) (* 4 (pow (log (/ 1 N)) 2)))) (+ (* 2 (/ (log (/ 1 N)) N)) (+ (/ 1 (pow N 2)) (+ (/ (log (/ 1 N)) (pow N 2)) (pow (log (/ 1 N)) 2)))))","(* 4 (pow (log (/ 1 N)) 2))","(+ (* 4 (/ (log (/ 1 N)) (pow N 2))) (* 4 (pow (log (/ 1 N)) 2)))","(+ (* 2 (/ (log (/ 1 N)) (pow N 4))) (+ (* 4 (/ (log (/ 1 N)) (pow N 2))) (+ (* 4 (pow (log (/ 1 N)) 2)) (/ 1 (pow N 4)))))","(+ (* 4/3 (/ (log (/ 1 N)) (pow N 6))) (+ (* 2 (/ (log (/ 1 N)) (pow N 4))) (+ (* 4 (/ (log (/ 1 N)) (pow N 2))) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (/ 1 (pow N 4)) (/ 1 (pow N 6)))))))","(* -8 (pow (log (/ 1 N)) 3))","(+ (* -8 (/ (pow (log (/ 1 N)) 2) N)) (+ (* -8 (pow (log (/ 1 N)) 3)) (* -4 (/ (pow (log (/ 1 N)) 2) N))))","(+ (* -8 (/ (pow (log (/ 1 N)) 2) N)) (+ (* -8 (pow (log (/ 1 N)) 3)) (+ (* -4 (/ (log (/ 1 N)) (pow N 2))) (+ (* -4 (/ (pow (log (/ 1 N)) 2) N)) (+ (* -2 (/ (* (log (/ 1 N)) (+ 1 (* -2 (log (/ 1 N))))) (pow N 2))) (* 2 (/ (pow (log (/ 1 N)) 2) (pow N 2))))))))","(+ (* -8 (/ (pow (log (/ 1 N)) 2) N)) (+ (* -8 (pow (log (/ 1 N)) 3)) (+ (* -4 (/ (log (/ 1 N)) (pow N 2))) (+ (* -4 (/ (pow (log (/ 1 N)) 2) N)) (+ (* -2 (/ (* (log (/ 1 N)) (+ 1 (* -2 (log (/ 1 N))))) (pow N 2))) (+ (* -2 (/ (* (log (/ 1 N)) (- (* -8/3 (log (/ 1 N))) 1)) (pow N 3))) (+ (* -1 (/ (+ 1 (* -2 (log (/ 1 N)))) (pow N 3))) (+ (* 2 (/ (log (/ 1 N)) (pow N 3))) (+ (* 2 (/ (pow (log (/ 1 N)) 2) (pow N 2))) (* 8/3 (/ (pow (log (/ 1 N)) 2) (pow N 3))))))))))))","(* -27 (pow (log (/ 1 N)) 3))","(+ (* -27 (pow (log (/ 1 N)) 3)) (+ (* 9 (/ (pow (log (/ 1 N)) 2) (pow N 3))) (* 18 (/ (pow (log (/ 1 N)) 2) (pow N 3)))))","(+ (* -27 (pow (log (/ 1 N)) 3)) (+ (* -6 (/ (log (/ 1 N)) (pow N 6))) (+ (* -9/2 (/ (pow (log (/ 1 N)) 2) (pow N 6))) (+ (* -3 (/ (* (log (/ 1 N)) (+ 1 (* 3 (log (/ 1 N))))) (pow N 6))) (+ (* 9 (/ (pow (log (/ 1 N)) 2) (pow N 3))) (* 18 (/ (pow (log (/ 1 N)) 2) (pow N 3))))))))","(+ (* -27 (pow (log (/ 1 N)) 3)) (+ (* -6 (/ (log (/ 1 N)) (pow N 6))) (+ (* -9/2 (/ (pow (log (/ 1 N)) 2) (pow N 6))) (+ (* -3 (/ (* (log (/ 1 N)) (+ 1 (* 3 (log (/ 1 N))))) (pow N 6))) (+ (* -3 (/ (* (log (/ 1 N)) (- (* -2 (log (/ 1 N))) 1)) (pow N 9))) (+ (* 3 (/ (pow (log (/ 1 N)) 2) (pow N 9))) (+ (* 6 (/ (log (/ 1 N)) (pow N 9))) (+ (* 9 (/ (pow (log (/ 1 N)) 2) (pow N 3))) (+ (* 18 (/ (pow (log (/ 1 N)) 2) (pow N 3))) (/ 1 (pow N 9)))))))))))","(* -2 (log (/ 1 N)))","(- (* -2 (log (/ 1 N))) (/ 1 N))","(- (+ (* -2 (log (/ 1 N))) (/ 1/2 (pow N 2))) (/ 1 N))","(- (+ (* -2 (log (/ 1 N))) (+ (/ 1/2 (pow N 2)) (* 2/3 (/ 1 (pow N 3))))) (/ 1 N))","(pow (log (/ 1 N)) 2)","(+ (* 2 (/ (log (/ 1 N)) N)) (pow (log (/ 1 N)) 2))","(+ (* 2 (/ (log (/ 1 N)) N)) (+ (/ 1 (pow N 2)) (+ (/ (log (/ 1 N)) (pow N 2)) (pow (log (/ 1 N)) 2))))","(+ (* 2/3 (/ (log (/ 1 N)) (pow N 3))) (+ (* 2 (/ (log (/ 1 N)) N)) (+ (/ 1 (pow N 2)) (+ (/ 1 (pow N 3)) (+ (/ (log (/ 1 N)) (pow N 2)) (pow (log (/ 1 N)) 2))))))","(+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (* 4 (pow (log (/ -1 N)) 2)))","(+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* -1 (/ (+ (log -1) (+ (* -4 (log (/ -1 N))) (* -3 (log (/ -1 N))))) N)) (* 4 (pow (log (/ -1 N)) 2))))","(+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* -1 (/ (+ (log -1) (+ (* -4 (log (/ -1 N))) (+ (* -3 (log (/ -1 N))) (* -1 (/ (+ 1 (+ (* -2 (log (/ -1 N))) (* 1/2 (+ (log -1) (* -3 (log (/ -1 N))))))) N))))) N)) (* 4 (pow (log (/ -1 N)) 2))))","(+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* -1 (/ (+ (log -1) (+ (* -4 (log (/ -1 N))) (+ (* -3 (log (/ -1 N))) (* -1 (/ (+ 1 (+ (* -2 (log (/ -1 N))) (+ (* -1 (/ (+ 1 (+ (* -2/3 (+ (log -1) (* -3 (log (/ -1 N))))) (+ (* 2 (log (/ -1 N))) (* 8/3 (log (/ -1 N)))))) N)) (* 1/2 (+ (log -1) (* -3 (log (/ -1 N)))))))) N))))) N)) (* 4 (pow (log (/ -1 N)) 2))))","(- (/ (pow (+ (log -1) (* -3 (log (/ -1 N)))) 3) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2)))) (+ (log -1) (+ (* -8 (/ (pow (log (/ -1 N)) 3) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (* -1 (log (/ -1 N))))))","(- (+ (* -1 (/ (- (* -8 (/ (* (pow (log (/ -1 N)) 3) (+ (log -1) (+ (* -4 (log (/ -1 N))) (* -3 (log (/ -1 N)))))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))) 2))) (+ (* 4 (/ (pow (log (/ -1 N)) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (+ (* 8 (/ (pow (log (/ -1 N)) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (/ (* (pow (+ (log -1) (* -3 (log (/ -1 N)))) 3) (+ (log -1) (+ (* -4 (log (/ -1 N))) (* -3 (log (/ -1 N)))))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))) 2))))) N)) (/ (pow (+ (log -1) (* -3 (log (/ -1 N)))) 3) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (+ (log -1) (+ (* -8 (/ (pow (log (/ -1 N)) 3) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (* -1 (log (/ -1 N))))))","(- (+ (* -1 (/ (- (+ (* -8 (/ (* (pow (log (/ -1 N)) 3) (+ (log -1) (+ (* -4 (log (/ -1 N))) (* -3 (log (/ -1 N)))))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))) 2))) (* -1 (/ (- (+ (* -8 (/ (* (pow (log (/ -1 N)) 3) (+ 1 (+ (* -2 (log (/ -1 N))) (* 1/2 (+ (log -1) (* -3 (log (/ -1 N)))))))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))) 2))) (/ (* (+ (log -1) (+ (* -4 (log (/ -1 N))) (* -3 (log (/ -1 N))))) (- (+ (* 4 (/ (pow (log (/ -1 N)) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (* 8 (/ (pow (log (/ -1 N)) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2)))))) (* -8 (/ (* (pow (log (/ -1 N)) 3) (+ (log -1) (+ (* -4 (log (/ -1 N))) (* -3 (log (/ -1 N)))))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))) 2))))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (+ (* -4 (/ (log (/ -1 N)) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (+ (* -2 (/ (* (log (/ -1 N)) (+ 1 (* -2 (log (/ -1 N))))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (+ (* -1 (/ (* (pow (+ (log -1) (* -3 (log (/ -1 N)))) 3) (pow (+ (log -1) (+ (* -4 (log (/ -1 N))) (* -3 (log (/ -1 N))))) 2)) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))) 3))) (+ (* 2 (/ (pow (log (/ -1 N)) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (/ (* (+ 1 (+ (* -2 (log (/ -1 N))) (* 1/2 (+ (log -1) (* -3 (log (/ -1 N))))))) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 3)) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))) 2))))))) N))) (+ (* 4 (/ (pow (log (/ -1 N)) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (+ (* 8 (/ (pow (log (/ -1 N)) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (/ (* (pow (+ (log -1) (* -3 (log (/ -1 N)))) 3) (+ (log -1) (+ (* -4 (log (/ -1 N))) (* -3 (log (/ -1 N)))))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))) 2))))) N)) (/ (pow (+ (log -1) (* -3 (log (/ -1 N)))) 3) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (+ (log -1) (+ (* -8 (/ (pow (log (/ -1 N)) 3) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (* -1 (log (/ -1 N))))))","(- (+ (* -1 (/ (- (+ (* -8 (/ (* (pow (log (/ -1 N)) 3) (+ (log -1) (+ (* -4 (log (/ -1 N))) (* -3 (log (/ -1 N)))))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))) 2))) (* -1 (/ (- (+ (* -8 (/ (* (pow (log (/ -1 N)) 3) (+ 1 (+ (* -2 (log (/ -1 N))) (* 1/2 (+ (log -1) (* -3 (log (/ -1 N)))))))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))) 2))) (+ (* -1 (/ (- (+ (* -8 (/ (* (pow (log (/ -1 N)) 3) (+ 1 (+ (* -2 (+ (log -1) (* -3 (log (/ -1 N))))) (+ (* -2/3 (+ (log -1) (* -3 (log (/ -1 N))))) (+ (* 2 (log (/ -1 N))) (* 8/3 (log (/ -1 N)))))))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))) 2))) (+ (* -2 (/ (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (+ (* -1 (/ (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (+ (/ (* (+ 1 (+ (* -2 (log (/ -1 N))) (* 1/2 (+ (log -1) (* -3 (log (/ -1 N))))))) (- (+ (* 4 (/ (pow (log (/ -1 N)) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (* 8 (/ (pow (log (/ -1 N)) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2)))))) (* -8 (/ (* (pow (log (/ -1 N)) 3) (+ (log -1) (+ (* -4 (log (/ -1 N))) (* -3 (log (/ -1 N)))))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))) 2))))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2)))) (/ (* (+ (log -1) (+ (* -4 (log (/ -1 N))) (* -3 (log (/ -1 N))))) (- (+ (* -4 (/ (log (/ -1 N)) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (+ (* -2 (/ (* (log (/ -1 N)) (+ 1 (* -2 (log (/ -1 N))))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (* 2 (/ (pow (log (/ -1 N)) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))))) (+ (* -8 (/ (* (pow (log (/ -1 N)) 3) (+ 1 (+ (* -2 (log (/ -1 N))) (* 1/2 (+ (log -1) (* -3 (log (/ -1 N)))))))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))) 2))) (/ (* (+ (log -1) (+ (* -4 (log (/ -1 N))) (* -3 (log (/ -1 N))))) (- (+ (* 4 (/ (pow (log (/ -1 N)) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (* 8 (/ (pow (log (/ -1 N)) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2)))))) (* -8 (/ (* (pow (log (/ -1 N)) 3) (+ (log -1) (+ (* -4 (log (/ -1 N))) (* -3 (log (/ -1 N)))))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))) 2))))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2)))))))) (+ (* -4 (/ (log (/ -1 N)) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (+ (* -8/3 (/ (pow (log (/ -1 N)) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (+ (* -2 (/ (* (log (/ -1 N)) (+ 1 (* 8/3 (log (/ -1 N))))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (+ (* -1 (/ (* (+ 1 (+ (* -2 (log (/ -1 N))) (* 1/2 (+ (log -1) (* -3 (log (/ -1 N))))))) (* (pow (+ (log -1) (* -3 (log (/ -1 N)))) 3) (+ (log -1) (+ (* -4 (log (/ -1 N))) (* -3 (log (/ -1 N))))))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))) 3))) (+ (* -1 (/ (* (+ (log -1) (+ (* -4 (log (/ -1 N))) (* -3 (log (/ -1 N))))) (+ (* -1 (/ (* (pow (+ (log -1) (* -3 (log (/ -1 N)))) 3) (pow (+ (log -1) (+ (* -4 (log (/ -1 N))) (* -3 (log (/ -1 N))))) 2)) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))) 3))) (/ (* (+ 1 (+ (* -2 (log (/ -1 N))) (* 1/2 (+ (log -1) (* -3 (log (/ -1 N))))))) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 3)) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))) 2)))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (+ (/ 1 (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2)))) (/ (* (+ 1 (+ (* -2 (+ (log -1) (* -3 (log (/ -1 N))))) (+ (* -2/3 (+ (log -1) (* -3 (log (/ -1 N))))) (+ (* 2 (log (/ -1 N))) (* 8/3 (log (/ -1 N))))))) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 3)) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))) 2))))))))) N)) (/ (* (+ (log -1) (+ (* -4 (log (/ -1 N))) (* -3 (log (/ -1 N))))) (- (+ (* 4 (/ (pow (log (/ -1 N)) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (* 8 (/ (pow (log (/ -1 N)) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2)))))) (* -8 (/ (* (pow (log (/ -1 N)) 3) (+ (log -1) (+ (* -4 (log (/ -1 N))) (* -3 (log (/ -1 N)))))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))) 2))))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2)))))) (+ (* -4 (/ (log (/ -1 N)) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (+ (* -2 (/ (* (log (/ -1 N)) (+ 1 (* -2 (log (/ -1 N))))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (+ (* -1 (/ (* (pow (+ (log -1) (* -3 (log (/ -1 N)))) 3) (pow (+ (log -1) (+ (* -4 (log (/ -1 N))) (* -3 (log (/ -1 N))))) 2)) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))) 3))) (+ (* 2 (/ (pow (log (/ -1 N)) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (/ (* (+ 1 (+ (* -2 (log (/ -1 N))) (* 1/2 (+ (log -1) (* -3 (log (/ -1 N))))))) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 3)) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))) 2))))))) N))) (+ (* 4 (/ (pow (log (/ -1 N)) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (+ (* 8 (/ (pow (log (/ -1 N)) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (/ (* (pow (+ (log -1) (* -3 (log (/ -1 N)))) 3) (+ (log -1) (+ (* -4 (log (/ -1 N))) (* -3 (log (/ -1 N)))))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))) 2))))) N)) (/ (pow (+ (log -1) (* -3 (log (/ -1 N)))) 3) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (+ (log -1) (+ (* -8 (/ (pow (log (/ -1 N)) 3) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (* -1 (log (/ -1 N))))))","(/ (- (pow (+ (log -1) (* -3 (log (/ -1 N)))) 3) (* -8 (pow (log (/ -1 N)) 3))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))","(- (+ (* -1 (/ (- (* -1 (/ (+ (* 4 (pow (log (/ -1 N)) 2)) (* 8 (pow (log (/ -1 N)) 2))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (/ (* (+ (log -1) (+ (* -4 (log (/ -1 N))) (* -3 (log (/ -1 N))))) (- (pow (+ (log -1) (* -3 (log (/ -1 N)))) 3) (* -8 (pow (log (/ -1 N)) 3)))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))) 2))) N)) (/ (pow (+ (log -1) (* -3 (log (/ -1 N)))) 3) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (* -8 (/ (pow (log (/ -1 N)) 3) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))))","(- (+ (* -1 (/ (- (+ (* -1 (/ (+ (* 4 (pow (log (/ -1 N)) 2)) (* 8 (pow (log (/ -1 N)) 2))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (* -1 (/ (- (* -1 (/ (+ (* -4 (log (/ -1 N))) (+ (* -2 (* (log (/ -1 N)) (+ 1 (* -2 (log (/ -1 N)))))) (* 2 (pow (log (/ -1 N)) 2)))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (+ (/ (* (+ 1 (+ (* -2 (log (/ -1 N))) (* 1/2 (+ (log -1) (* -3 (log (/ -1 N))))))) (- (pow (+ (log -1) (* -3 (log (/ -1 N)))) 3) (* -8 (pow (log (/ -1 N)) 3)))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))) 2)) (/ (* (+ (log -1) (+ (* -4 (log (/ -1 N))) (* -3 (log (/ -1 N))))) (- (* -1 (/ (+ (* 4 (pow (log (/ -1 N)) 2)) (* 8 (pow (log (/ -1 N)) 2))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (/ (* (+ (log -1) (+ (* -4 (log (/ -1 N))) (* -3 (log (/ -1 N))))) (- (pow (+ (log -1) (* -3 (log (/ -1 N)))) 3) (* -8 (pow (log (/ -1 N)) 3)))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))) 2)))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2)))))) N))) (/ (* (+ (log -1) (+ (* -4 (log (/ -1 N))) (* -3 (log (/ -1 N))))) (- (pow (+ (log -1) (* -3 (log (/ -1 N)))) 3) (* -8 (pow (log (/ -1 N)) 3)))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))) 2))) N)) (/ (pow (+ (log -1) (* -3 (log (/ -1 N)))) 3) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (* -8 (/ (pow (log (/ -1 N)) 3) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))))","(- (+ (* -1 (/ (- (+ (* -1 (/ (+ (* 4 (pow (log (/ -1 N)) 2)) (* 8 (pow (log (/ -1 N)) 2))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (* -1 (/ (- (+ (* -1 (/ (+ (* -4 (log (/ -1 N))) (+ (* -2 (* (log (/ -1 N)) (+ 1 (* -2 (log (/ -1 N)))))) (* 2 (pow (log (/ -1 N)) 2)))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (* -1 (/ (- (+ (* -2 (/ (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (* -1 (/ (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2)))))) (+ (* -4 (/ (log (/ -1 N)) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (+ (* -8/3 (/ (pow (log (/ -1 N)) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (+ (* -2 (/ (* (log (/ -1 N)) (+ 1 (* 8/3 (log (/ -1 N))))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (+ (/ 1 (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2)))) (+ (/ (* (+ 1 (+ (* -2 (log (/ -1 N))) (* 1/2 (+ (log -1) (* -3 (log (/ -1 N))))))) (- (* -1 (/ (+ (* 4 (pow (log (/ -1 N)) 2)) (* 8 (pow (log (/ -1 N)) 2))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (/ (* (+ (log -1) (+ (* -4 (log (/ -1 N))) (* -3 (log (/ -1 N))))) (- (pow (+ (log -1) (* -3 (log (/ -1 N)))) 3) (* -8 (pow (log (/ -1 N)) 3)))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))) 2)))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2)))) (+ (/ (* (+ 1 (+ (* -2 (+ (log -1) (* -3 (log (/ -1 N))))) (+ (* -2/3 (+ (log -1) (* -3 (log (/ -1 N))))) (+ (* 2 (log (/ -1 N))) (* 8/3 (log (/ -1 N))))))) (- (pow (+ (log -1) (* -3 (log (/ -1 N)))) 3) (* -8 (pow (log (/ -1 N)) 3)))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))) 2)) (/ (* (+ (log -1) (+ (* -4 (log (/ -1 N))) (* -3 (log (/ -1 N))))) (- (* -1 (/ (+ (* -4 (log (/ -1 N))) (+ (* -2 (* (log (/ -1 N)) (+ 1 (* -2 (log (/ -1 N)))))) (* 2 (pow (log (/ -1 N)) 2)))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (+ (/ (* (+ 1 (+ (* -2 (log (/ -1 N))) (* 1/2 (+ (log -1) (* -3 (log (/ -1 N))))))) (- (pow (+ (log -1) (* -3 (log (/ -1 N)))) 3) (* -8 (pow (log (/ -1 N)) 3)))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))) 2)) (/ (* (+ (log -1) (+ (* -4 (log (/ -1 N))) (* -3 (log (/ -1 N))))) (- (* -1 (/ (+ (* 4 (pow (log (/ -1 N)) 2)) (* 8 (pow (log (/ -1 N)) 2))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (/ (* (+ (log -1) (+ (* -4 (log (/ -1 N))) (* -3 (log (/ -1 N))))) (- (pow (+ (log -1) (* -3 (log (/ -1 N)))) 3) (* -8 (pow (log (/ -1 N)) 3)))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))) 2)))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))))))))) N))) (+ (/ (* (+ 1 (+ (* -2 (log (/ -1 N))) (* 1/2 (+ (log -1) (* -3 (log (/ -1 N))))))) (- (pow (+ (log -1) (* -3 (log (/ -1 N)))) 3) (* -8 (pow (log (/ -1 N)) 3)))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))) 2)) (/ (* (+ (log -1) (+ (* -4 (log (/ -1 N))) (* -3 (log (/ -1 N))))) (- (* -1 (/ (+ (* 4 (pow (log (/ -1 N)) 2)) (* 8 (pow (log (/ -1 N)) 2))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (/ (* (+ (log -1) (+ (* -4 (log (/ -1 N))) (* -3 (log (/ -1 N))))) (- (pow (+ (log -1) (* -3 (log (/ -1 N)))) 3) (* -8 (pow (log (/ -1 N)) 3)))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))) 2)))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2)))))) N))) (/ (* (+ (log -1) (+ (* -4 (log (/ -1 N))) (* -3 (log (/ -1 N))))) (- (pow (+ (log -1) (* -3 (log (/ -1 N)))) 3) (* -8 (pow (log (/ -1 N)) 3)))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))) 2))) N)) (/ (pow (+ (log -1) (* -3 (log (/ -1 N)))) 3) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (* -8 (/ (pow (log (/ -1 N)) 3) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))))","(- (pow (+ (log -1) (* -3 (log (/ -1 N)))) 3) (* -8 (pow (log (/ -1 N)) 3)))","(- (+ (* 4 (/ (pow (log (/ -1 N)) 2) N)) (+ (* 8 (/ (pow (log (/ -1 N)) 2) N)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 3))) (* -8 (pow (log (/ -1 N)) 3)))","(- (+ (* -1 (/ (- (+ (* -4 (/ (log (/ -1 N)) N)) (+ (* -2 (/ (* (log (/ -1 N)) (+ 1 (* -2 (log (/ -1 N))))) N)) (* 2 (/ (pow (log (/ -1 N)) 2) N)))) (+ (* 4 (pow (log (/ -1 N)) 2)) (* 8 (pow (log (/ -1 N)) 2)))) N)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 3)) (* -8 (pow (log (/ -1 N)) 3)))","(- (+ (* -1 (/ (- (* -1 (/ (- (* -1 (/ (- (+ (* -2 (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2)) (* -1 (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))) (+ 1 (+ (* -4 (log (/ -1 N))) (+ (* -8/3 (pow (log (/ -1 N)) 2)) (* -2 (* (log (/ -1 N)) (+ 1 (* 8/3 (log (/ -1 N)))))))))) N)) (+ (* -4 (log (/ -1 N))) (+ (* -2 (* (log (/ -1 N)) (+ 1 (* -2 (log (/ -1 N)))))) (* 2 (pow (log (/ -1 N)) 2))))) N)) (+ (* 4 (pow (log (/ -1 N)) 2)) (* 8 (pow (log (/ -1 N)) 2)))) N)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 3)) (* -8 (pow (log (/ -1 N)) 3)))","(- (* -3 (log (/ -1 N))) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N)))))","(- (+ (* -3 (log (/ -1 N))) (/ 1 N)) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N)))))","(- (+ (* -3 (log (/ -1 N))) (* -1 (/ (- (* 1/2 (/ 1 N)) 1) N))) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N)))))","(- (+ (* -3 (log (/ -1 N))) (* -1 (/ (- (* -1 (/ (- (* 1/3 (/ 1 N)) 1/2) N)) 1) N))) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N)))))","(- (+ (log -1) (* -3 (log (/ -1 N)))) (* -2 (log (/ -1 N))))","(- (+ (log -1) (+ (* -3 (log (/ -1 N))) (/ 1 N))) (* -2 (log (/ -1 N))))","(- (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -1 (/ (- (* 1/2 (/ 1 N)) 1) N)))) (* -2 (log (/ -1 N))))","(- (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -1 (/ (- (* -1 (/ (- (* 1/3 (/ 1 N)) 1/2) N)) 1) N)))) (* -2 (log (/ -1 N))))","(+ (log -1) (* -3 (log (/ -1 N))))","(+ (log -1) (+ (* -3 (log (/ -1 N))) (/ 1 (pow N 3))))","(+ (log -1) (+ (* -3 (log (/ -1 N))) (* -1 (/ (- (* 1/2 (/ 1 (pow N 3))) 1) (pow N 3)))))","(+ (log -1) (+ (* -3 (log (/ -1 N))) (* -1 (/ (- (* -1 (/ (- (* 1/3 (/ 1 (pow N 3))) 1/2) (pow N 3))) 1) (pow N 3)))))","(- (* -3 (log (/ -1 N))) (* -1 (log (/ -1 N))))","(- (+ (* -3 (log (/ -1 N))) (/ 1 (pow N 3))) (* -1 (log (/ -1 N))))","(- (+ (* -3 (log (/ -1 N))) (* -1 (/ (- (* 1/2 (/ 1 (pow N 3))) 1) (pow N 3)))) (* -1 (log (/ -1 N))))","(- (+ (* -3 (log (/ -1 N))) (* -1 (/ (- (* -1 (/ (- (* 1/3 (/ 1 (pow N 3))) 1/2) (pow N 3))) 1) (pow N 3)))) (* -1 (log (/ -1 N))))","(* -1 (+ (log -1) (* -1 (log (/ -1 N)))))","(+ (log -1) (* -1 (log (/ -1 N))))","(- (* 4 (/ (pow (log (/ -1 N)) 2) (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))))) (+ (log -1) (+ (* -1 (log (/ -1 N))) (/ (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2) (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N)))))))))","(- (+ (* -1 (/ (- (/ (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 2)) (+ (* -2 (/ (log (/ -1 N)) (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))))) (+ (* 2 (/ (log -1) (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))))) (* 4 (/ (pow (log (/ -1 N)) 2) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 2)))))) N)) (* 4 (/ (pow (log (/ -1 N)) 2) (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N)))))))) (+ (log -1) (+ (* -1 (log (/ -1 N))) (/ (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2) (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N)))))))))","(- (+ (* -1 (/ (- (+ (* -1 (/ (- (+ (* -2 (/ (log (/ -1 N)) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 2))) (+ (* -3/2 (/ (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 2))) (+ (* 2 (/ (log -1) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 2))) (* 4 (/ (log (/ -1 N)) (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N)))))))))) (+ (* -6 (/ (pow (log (/ -1 N)) 2) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 2))) (+ (* -4 (/ (pow (log (/ -1 N)) 2) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 3))) (+ (* -1 (/ (+ (log -1) (* -1 (log (/ -1 N)))) (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))))) (+ (/ 1 (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N)))))) (/ (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 3))))))) N)) (/ (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 2))) (+ (* -2 (/ (log (/ -1 N)) (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))))) (+ (* 2 (/ (log -1) (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))))) (* 4 (/ (pow (log (/ -1 N)) 2) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 2)))))) N)) (* 4 (/ (pow (log (/ -1 N)) 2) (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N)))))))) (+ (log -1) (+ (* -1 (log (/ -1 N))) (/ (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2) (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N)))))))))","(- (+ (* -1 (/ (- (+ (* -1 (/ (- (+ (* -2 (/ (log (/ -1 N)) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 2))) (+ (* -3/2 (/ (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 2))) (+ (* -1 (/ (- (+ (* -6 (/ (pow (log (/ -1 N)) 2) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 3))) (+ (* -4 (/ (pow (log (/ -1 N)) 2) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 4))) (+ (* -3/2 (/ (- (+ (* -2 (/ (log (/ -1 N)) (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))))) (* 2 (/ (log -1) (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N)))))))) (/ (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 2))) (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))))) (+ (* -1 (/ (+ (log -1) (* -1 (log (/ -1 N)))) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 2))) (+ (* 1/3 (/ (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 2))) (+ (/ 1 (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N)))))) (+ (/ 1 (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 2)) (/ (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 4))))))))) (+ (* -2 (/ (log (/ -1 N)) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 3))) (+ (* -3/2 (/ (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 3))) (+ (* 2/3 (/ (+ (log -1) (* -1 (log (/ -1 N)))) (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))))) (+ (* 4/3 (/ (pow (log (/ -1 N)) 2) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 2))) (+ (* 2 (/ (log -1) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 3))) (+ (* 4 (/ (log (/ -1 N)) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 2))) (* 6 (/ (pow (log (/ -1 N)) 2) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 3)))))))))) N)) (+ (* 2 (/ (log -1) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 2))) (* 4 (/ (log (/ -1 N)) (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))))))))) (+ (* -6 (/ (pow (log (/ -1 N)) 2) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 2))) (+ (* -4 (/ (pow (log (/ -1 N)) 2) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 3))) (+ (* -1 (/ (+ (log -1) (* -1 (log (/ -1 N)))) (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))))) (+ (/ 1 (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N)))))) (/ (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 3))))))) N)) (/ (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 2))) (+ (* -2 (/ (log (/ -1 N)) (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))))) (+ (* 2 (/ (log -1) (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))))) (* 4 (/ (pow (log (/ -1 N)) 2) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 2)))))) N)) (* 4 (/ (pow (log (/ -1 N)) 2) (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N)))))))) (+ (log -1) (+ (* -1 (log (/ -1 N))) (/ (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2) (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N)))))))))","(/ (- (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)) (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))))","(- (+ (* -1 (/ (- (+ (* -1 (/ (+ (* -2 (log (/ -1 N))) (* 2 (log -1))) (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))))) (/ (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 2))) (* 4 (/ (pow (log (/ -1 N)) 2) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 2)))) N)) (* 4 (/ (pow (log (/ -1 N)) 2) (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N)))))))) (/ (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2) (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N)))))))","(- (+ (* -1 (/ (- (+ (* -1 (/ (+ (* -2 (log (/ -1 N))) (* 2 (log -1))) (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))))) (+ (* -1 (/ (- (+ (* 4 (/ (log (/ -1 N)) (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))))) (* 4 (/ (pow (log (/ -1 N)) 2) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 3)))) (+ (* -3/2 (/ (- (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 2))) (+ (* -1 (/ (+ (log -1) (* -1 (log (/ -1 N)))) (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))))) (+ (* -1 (/ (+ (* -2 (log (/ -1 N))) (* 2 (log -1))) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 2))) (+ (/ 1 (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N)))))) (/ (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 3))))))) N)) (/ (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 2)))) (* 4 (/ (pow (log (/ -1 N)) 2) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 2)))) N)) (* 4 (/ (pow (log (/ -1 N)) 2) (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N)))))))) (/ (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2) (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N)))))))","(- (+ (* -1 (/ (- (+ (* -1 (/ (+ (* -2 (log (/ -1 N))) (* 2 (log -1))) (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))))) (+ (* -1 (/ (- (+ (* -1 (/ (- (+ (* -3/2 (/ (- (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 3))) (+ (* -1 (/ (+ (log -1) (* -1 (log (/ -1 N)))) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 2))) (+ (* -1 (/ (+ (* -2 (log (/ -1 N))) (* 2 (log -1))) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 3))) (+ (/ 1 (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N)))))) (+ (/ 1 (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 2)) (/ (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 4))))))) (+ (* -3/2 (/ (- (+ (* -1 (/ (+ (* -2 (log (/ -1 N))) (* 2 (log -1))) (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))))) (/ (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 2))) (* 4 (/ (pow (log (/ -1 N)) 2) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 2)))) (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))))) (+ (* 1/3 (/ (- (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 2))) (+ (* 2/3 (/ (+ (log -1) (* -1 (log (/ -1 N)))) (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))))) (+ (* 4 (/ (log (/ -1 N)) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 2))) (* 4 (/ (pow (log (/ -1 N)) 2) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 4)))))))) N)) (+ (* 4 (/ (log (/ -1 N)) (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))))) (* 4 (/ (pow (log (/ -1 N)) 2) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 3))))) (+ (* -3/2 (/ (- (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 2))) (+ (* -1 (/ (+ (log -1) (* -1 (log (/ -1 N)))) (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))))) (+ (* -1 (/ (+ (* -2 (log (/ -1 N))) (* 2 (log -1))) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 2))) (+ (/ 1 (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N)))))) (/ (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 3))))))) N)) (/ (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 2)))) (* 4 (/ (pow (log (/ -1 N)) 2) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 2)))) N)) (* 4 (/ (pow (log (/ -1 N)) 2) (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N)))))))) (/ (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2) (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N)))))))","(- (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))","(- (+ (* -2 (/ (log (/ -1 N)) N)) (+ (* 2 (/ (log -1) N)) (* 4 (pow (log (/ -1 N)) 2)))) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))","(- (+ (* -1 (/ (- (* -1 (/ (- (* 4 (log (/ -1 N))) (+ 1 (* -1 (+ (log -1) (* -1 (log (/ -1 N))))))) N)) (+ (* -2 (log (/ -1 N))) (* 2 (log -1)))) N)) (* 4 (pow (log (/ -1 N)) 2))) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))","(- (+ (* -1 (/ (- (* -1 (/ (- (+ (* -1 (/ (- 1 (* 2/3 (+ (log -1) (* -1 (log (/ -1 N)))))) N)) (* 4 (log (/ -1 N)))) (+ 1 (* -1 (+ (log -1) (* -1 (log (/ -1 N))))))) N)) (+ (* -2 (log (/ -1 N))) (* 2 (log -1)))) N)) (* 4 (pow (log (/ -1 N)) 2))) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))","(* 4 (pow (log (/ -1 N)) 2))","(+ (* 4 (/ (log (/ -1 N)) (pow N 2))) (* 4 (pow (log (/ -1 N)) 2)))","(+ (* 2 (/ (log (/ -1 N)) (pow N 4))) (+ (* 4 (/ (log (/ -1 N)) (pow N 2))) (+ (* 4 (pow (log (/ -1 N)) 2)) (/ 1 (pow N 4)))))","(+ (* 4/3 (/ (log (/ -1 N)) (pow N 6))) (+ (* 2 (/ (log (/ -1 N)) (pow N 4))) (+ (* 4 (/ (log (/ -1 N)) (pow N 2))) (+ (* 4 (pow (log (/ -1 N)) 2)) (+ (/ 1 (pow N 4)) (/ 1 (pow N 6)))))))","(* -8 (pow (log (/ -1 N)) 3))","(+ (* -8 (pow (log (/ -1 N)) 3)) (* -1 (/ (+ (* 4 (pow (log (/ -1 N)) 2)) (* 8 (pow (log (/ -1 N)) 2))) N)))","(+ (* -8 (pow (log (/ -1 N)) 3)) (* -1 (/ (+ (* -1 (/ (+ (* -4 (log (/ -1 N))) (+ (* -2 (* (log (/ -1 N)) (+ 1 (* -2 (log (/ -1 N)))))) (* 2 (pow (log (/ -1 N)) 2)))) N)) (+ (* 4 (pow (log (/ -1 N)) 2)) (* 8 (pow (log (/ -1 N)) 2)))) N)))","(+ (* -8 (pow (log (/ -1 N)) 3)) (* -1 (/ (+ (* -1 (/ (+ (* -4 (log (/ -1 N))) (+ (* -2 (* (log (/ -1 N)) (+ 1 (* -2 (log (/ -1 N)))))) (+ (* -1 (/ (+ 1 (+ (* -4 (log (/ -1 N))) (+ (* -8/3 (pow (log (/ -1 N)) 2)) (* -2 (* (log (/ -1 N)) (+ 1 (* 8/3 (log (/ -1 N))))))))) N)) (* 2 (pow (log (/ -1 N)) 2))))) N)) (+ (* 4 (pow (log (/ -1 N)) 2)) (* 8 (pow (log (/ -1 N)) 2)))) N)))","(pow (+ (log -1) (* -3 (log (/ -1 N)))) 3)","(+ (* -1 (/ (+ (* -2 (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2)) (* -1 (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))) (pow N 3))) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 3))","(+ (* -1 (/ (+ (* -2 (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2)) (+ (* -1 (/ (+ (* -1/2 (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2)) (+ (* 2 (+ (log -1) (* -3 (log (/ -1 N))))) (* (+ 1 (* -1 (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (log -1) (* -3 (log (/ -1 N))))))) (pow N 3))) (* -1 (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2)))) (pow N 3))) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 3))","(+ (* -1 (/ (+ (* -2 (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2)) (+ (* -1 (/ (+ (* -1 (/ (+ (log -1) (+ (* -3 (log (/ -1 N))) (+ (* -1 (+ 1 (* -1 (+ (log -1) (* -3 (log (/ -1 N))))))) (+ (* -1/3 (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2)) (* (+ 1 (* -2/3 (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (log -1) (* -3 (log (/ -1 N))))))))) (pow N 3))) (+ (* -1/2 (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2)) (+ (* 2 (+ (log -1) (* -3 (log (/ -1 N))))) (* (+ 1 (* -1 (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (log -1) (* -3 (log (/ -1 N)))))))) (pow N 3))) (* -1 (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2)))) (pow N 3))) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 3))","(* -2 (log (/ -1 N)))","(- (* -2 (log (/ -1 N))) (/ 1 N))","(+ (* -2 (log (/ -1 N))) (* -1 (/ (- 1 (* 1/2 (/ 1 N))) N)))","(+ (* -2 (log (/ -1 N))) (* -1 (/ (+ 1 (* -1 (/ (+ 1/2 (* 2/3 (/ 1 N))) N))) N)))","(pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)","(+ (* -1 (/ (+ (* -2 (log (/ -1 N))) (* 2 (log -1))) N)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))","(+ (* -1 (/ (+ (* -2 (log (/ -1 N))) (+ (* -1 (/ (+ 1 (* -1 (+ (log -1) (* -1 (log (/ -1 N)))))) N)) (* 2 (log -1)))) N)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))","(+ (* -1 (/ (+ (* -2 (log (/ -1 N))) (+ (* -1 (/ (+ 1 (+ (* -1 (+ (log -1) (* -1 (log (/ -1 N))))) (* -1 (/ (- (* 2/3 (+ (log -1) (* -1 (log (/ -1 N))))) 1) N)))) N)) (* 2 (log -1)))) N)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))"]],"series":[[50.737060546875,"((+ (* (log (+ 1 (* (+ N -1) N))) (log (+ 1 (* (+ N -1) N)))) (* (log (+ 1 (* (* N N) N))) (log (+ 1 (* (+ N -1) N))))) (- (/ (- (pow (log (+ 1 (* (* N N) N))) 3) (pow (log (+ 1 (* (+ N -1) N))) 3)) (+ (* (log (+ 1 (* (* N N) N))) (log (+ 1 (* (* N N) N)))) (+ (* (log (+ 1 (* (+ N -1) N))) (log (+ 1 (* (+ N -1) N)))) (* (log (+ 1 (* (* N N) N))) (log (+ 1 (* (+ N -1) N))))))) (log N)) (/ (- (pow (log (+ 1 (* (* N N) N))) 3) (pow (log (+ 1 (* (+ N -1) N))) 3)) (+ (* (log (+ 1 (* (* N N) N))) (log (+ 1 (* (* N N) N)))) (+ (* (log (+ 1 (* (+ N -1) N))) (log (+ 1 (* (+ N -1) N)))) (* (log (+ 1 (* (* N N) N))) (log (+ 1 (* (+ N -1) N))))))) (- (pow (log (+ 1 (* (* N N) N))) 3) (pow (log (+ 1 (* (+ N -1) N))) 3)) (- (- (log (+ 1 (* (* N N) N))) (log (+ 1 (* (+ N -1) N)))) (log N)) (- (log (+ 1 (* (* N N) N))) (log (+ 1 (* (+ N -1) N)))) (log (+ 1 (* (* N N) N))) (* (* N N) N) (+ (neg (log N)) (log (+ 1 (* (* N N) N)))) (- (+ (neg (log N)) (log (+ 1 (* (* N N) N)))) (log (+ 1 (* (+ N -1) N)))) (neg (log N)) (log N) (- (/ (- (* (log (+ (* N N) -1)) (log (+ (* N N) -1))) (* (log (+ N -1)) (log (+ N -1)))) (+ (log (+ (* N N) -1)) (log (+ N -1)))) (log N)) (/ (- (* (log (+ (* N N) -1)) (log (+ (* N N) -1))) (* (log (+ N -1)) (log (+ N -1)))) (+ (log (+ (* N N) -1)) (log (+ N -1)))) (- (* (log (+ (* N N) -1)) (log (+ (* N N) -1))) (* (log (+ N -1)) (log (+ N -1)))) (* (log (+ (* N N) -1)) (log (+ (* N N) -1))) (pow (log (+ 1 (* (+ N -1) N))) 3) (pow (log (+ 1 (* (* N N) N))) 3) (log (+ 1 (* (+ N -1) N))) (* (log (+ N -1)) (log (+ N -1))))","N","-inf"],[50.064208984375,"((+ (* (log (+ 1 (* (+ N -1) N))) (log (+ 1 (* (+ N -1) N)))) (* (log (+ 1 (* (* N N) N))) (log (+ 1 (* (+ N -1) N))))) (- (/ (- (pow (log (+ 1 (* (* N N) N))) 3) (pow (log (+ 1 (* (+ N -1) N))) 3)) (+ (* (log (+ 1 (* (* N N) N))) (log (+ 1 (* (* N N) N)))) (+ (* (log (+ 1 (* (+ N -1) N))) (log (+ 1 (* (+ N -1) N)))) (* (log (+ 1 (* (* N N) N))) (log (+ 1 (* (+ N -1) N))))))) (log N)) (/ (- (pow (log (+ 1 (* (* N N) N))) 3) (pow (log (+ 1 (* (+ N -1) N))) 3)) (+ (* (log (+ 1 (* (* N N) N))) (log (+ 1 (* (* N N) N)))) (+ (* (log (+ 1 (* (+ N -1) N))) (log (+ 1 (* (+ N -1) N)))) (* (log (+ 1 (* (* N N) N))) (log (+ 1 (* (+ N -1) N))))))) (- (pow (log (+ 1 (* (* N N) N))) 3) (pow (log (+ 1 (* (+ N -1) N))) 3)) (- (- (log (+ 1 (* (* N N) N))) (log (+ 1 (* (+ N -1) N)))) (log N)) (- (log (+ 1 (* (* N N) N))) (log (+ 1 (* (+ N -1) N)))) (log (+ 1 (* (* N N) N))) (* (* N N) N) (+ (neg (log N)) (log (+ 1 (* (* N N) N)))) (- (+ (neg (log N)) (log (+ 1 (* (* N N) N)))) (log (+ 1 (* (+ N -1) N)))) (neg (log N)) (log N) (- (/ (- (* (log (+ (* N N) -1)) (log (+ (* N N) -1))) (* (log (+ N -1)) (log (+ N -1)))) (+ (log (+ (* N N) -1)) (log (+ N -1)))) (log N)) (/ (- (* (log (+ (* N N) -1)) (log (+ (* N N) -1))) (* (log (+ N -1)) (log (+ N -1)))) (+ (log (+ (* N N) -1)) (log (+ N -1)))) (- (* (log (+ (* N N) -1)) (log (+ (* N N) -1))) (* (log (+ N -1)) (log (+ N -1)))) (* (log (+ (* N N) -1)) (log (+ (* N N) -1))) (pow (log (+ 1 (* (+ N -1) N))) 3) (pow (log (+ 1 (* (* N N) N))) 3) (log (+ 1 (* (+ N -1) N))) (* (log (+ N -1)) (log (+ N -1))))","N","inf"],[16.2958984375,"((+ (* (log (+ 1 (* (+ N -1) N))) (log (+ 1 (* (+ N -1) N)))) (* (log (+ 1 (* (* N N) N))) (log (+ 1 (* (+ N -1) N))))) (- (/ (- (pow (log (+ 1 (* (* N N) N))) 3) (pow (log (+ 1 (* (+ N -1) N))) 3)) (+ (* (log (+ 1 (* (* N N) N))) (log (+ 1 (* (* N N) N)))) (+ (* (log (+ 1 (* (+ N -1) N))) (log (+ 1 (* (+ N -1) N)))) (* (log (+ 1 (* (* N N) N))) (log (+ 1 (* (+ N -1) N))))))) (log N)) (/ (- (pow (log (+ 1 (* (* N N) N))) 3) (pow (log (+ 1 (* (+ N -1) N))) 3)) (+ (* (log (+ 1 (* (* N N) N))) (log (+ 1 (* (* N N) N)))) (+ (* (log (+ 1 (* (+ N -1) N))) (log (+ 1 (* (+ N -1) N)))) (* (log (+ 1 (* (* N N) N))) (log (+ 1 (* (+ N -1) N))))))) (- (pow (log (+ 1 (* (* N N) N))) 3) (pow (log (+ 1 (* (+ N -1) N))) 3)) (- (- (log (+ 1 (* (* N N) N))) (log (+ 1 (* (+ N -1) N)))) (log N)) (- (log (+ 1 (* (* N N) N))) (log (+ 1 (* (+ N -1) N)))) (log (+ 1 (* (* N N) N))) (* (* N N) N) (+ (neg (log N)) (log (+ 1 (* (* N N) N)))) (- (+ (neg (log N)) (log (+ 1 (* (* N N) N)))) (log (+ 1 (* (+ N -1) N)))) (neg (log N)) (log N) (- (/ (- (* (log (+ (* N N) -1)) (log (+ (* N N) -1))) (* (log (+ N -1)) (log (+ N -1)))) (+ (log (+ (* N N) -1)) (log (+ N -1)))) (log N)) (/ (- (* (log (+ (* N N) -1)) (log (+ (* N N) -1))) (* (log (+ N -1)) (log (+ N -1)))) (+ (log (+ (* N N) -1)) (log (+ N -1)))) (- (* (log (+ (* N N) -1)) (log (+ (* N N) -1))) (* (log (+ N -1)) (log (+ N -1)))) (* (log (+ (* N N) -1)) (log (+ (* N N) -1))) (pow (log (+ 1 (* (+ N -1) N))) 3) (pow (log (+ 1 (* (* N N) N))) 3) (log (+ 1 (* (+ N -1) N))) (* (log (+ N -1)) (log (+ N -1))))","N","0"]],"time":131.088134765625,"type":"series"},{"count":[[183,0]],"inputs":[["(pow N 2)","(* (pow N 2) (+ 1 (* -1 N)))","(* (pow N 2) (+ 1 (* N (- (* -25/12 N) 1))))","(* (pow N 2) (+ 1 (* N (- (* N (- (* 2/3 N) 25/12)) 1))))","(* -1 (log N))","(- N (log N))","(- (* N (+ 1 (* -1/2 N))) (log N))","(- (* N (+ 1 (* N (- (* 1/3 N) 1/2)))) (log N))","N","(* N (+ 1 (* -1/2 N)))","(* N (+ 1 (* N (- (* 1/3 N) 1/2))))","(* N (+ 1 (* N (- (* N (+ 1/3 (* -1/4 N))) 1/2))))","(pow N 3)","(* (pow N 3) (+ 1 (* -3/2 N)))","(* (pow N 3) (+ 1 (* N (- (* -5/4 N) 3/2))))","(* (pow N 3) (+ 1 (* N (- (* N (- (* 9/8 N) 5/4)) 3/2))))","(* (pow N 3) (+ 1 (* -1/2 (pow N 3))))","(* (pow N 3) (+ 1 (* (pow N 3) (- (* 1/3 (pow N 3)) 1/2))))","(* (pow N 3) (+ 1 (* (pow N 3) (- (* (pow N 3) (+ 1/3 (* -1/4 (pow N 3)))) 1/2))))","(- (pow N 3) (log N))","(- (* (pow N 3) (+ 1 (* -1/2 (pow N 3)))) (log N))","(- (* (pow N 3) (+ 1 (* (pow N 3) (- (* 1/3 (pow N 3)) 1/2)))) (log N))","(log N)","(- (* N (+ 1 (* N (- (* 1/2 (/ 1 (log -1))) (+ 1 (* 1/2 (/ (+ 1 (* -1 (log -1))) (log -1)))))))) (log N))","(- (* N (+ 1 (* N (- (+ (* 1/2 (/ 1 (log -1))) (* N (- (+ (* -1/2 (/ (- (+ 3/8 (* 1/2 (/ (+ 1 (* -1 (log -1))) (log -1)))) (* 3/8 (/ 1 (log -1)))) (log -1))) (* 3/4 (/ 1 (log -1)))) (+ (* -1/2 (/ (- (* 1/8 (/ 1 (log -1))) 5/8) (log -1))) (* 1/2 (/ (+ 1 (* -2/3 (log -1))) (log -1))))))) (+ 1 (* 1/2 (/ (+ 1 (* -1 (log -1))) (log -1)))))))) (log N))","(* N (+ 1 (* N (+ (* 1/2 (/ (- (* -2 (log -1)) (+ 1 (* -1 (log -1)))) (log -1))) (* 1/2 (/ 1 (log -1)))))))","(* N (+ 1 (* N (+ (* 1/2 (/ 1 (log -1))) (+ (* 1/2 (/ (- (* -2 (log -1)) (+ 1 (* -1 (log -1)))) (log -1))) (* N (- (+ (* -1/2 (/ (+ 1 (* -2/3 (log -1))) (log -1))) (* 3/4 (/ 1 (log -1)))) (* -1/2 (/ (+ (* 1/2 (/ (- (* -2 (log -1)) (+ 1 (* -1 (log -1)))) (log -1))) (* 1/2 (/ 1 (log -1)))) (log -1))))))))))","(* N (+ 1 (* N (+ (* 1/2 (/ 1 (log -1))) (+ (* 1/2 (/ (- (* -2 (log -1)) (+ 1 (* -1 (log -1)))) (log -1))) (* N (- (+ (* -1/2 (/ (+ 1 (* -2/3 (log -1))) (log -1))) (+ (* 3/4 (/ 1 (log -1))) (* N (- (+ (* 1/6 (/ 1 (log -1))) (* 1/2 (/ (- (+ 1/12 (* -1 (log -1))) (* -1/2 (log -1))) (log -1)))) (+ (* -3/4 (/ (+ (* 1/2 (/ (- (* -2 (log -1)) (+ 1 (* -1 (log -1)))) (log -1))) (* 1/2 (/ 1 (log -1)))) (log -1))) (* -1/2 (/ (- (+ (* -1/2 (/ (+ 1 (* -2/3 (log -1))) (log -1))) (* 3/4 (/ 1 (log -1)))) (* -1/2 (/ (+ (* 1/2 (/ (- (* -2 (log -1)) (+ 1 (* -1 (log -1)))) (log -1))) (* 1/2 (/ 1 (log -1)))) (log -1)))) (log -1)))))))) (* -1/2 (/ (+ (* 1/2 (/ (- (* -2 (log -1)) (+ 1 (* -1 (log -1)))) (log -1))) (* 1/2 (/ 1 (log -1)))) (log -1))))))))))","(* 2 (* N (log -1)))","(* N (- (* N (- (* -2 (log -1)) (+ 1 (* -1 (log -1))))) (* -2 (log -1))))","(* N (- (* N (- (+ (* -2 (log -1)) (* -1 (* N (+ 1 (* -2/3 (log -1)))))) (+ 1 (* -1 (log -1))))) (* -2 (log -1))))","(* N (- (* N (- (+ (* -2 (log -1)) (* N (- (* N (- (+ 1/12 (* -1 (log -1))) (* -1/2 (log -1)))) (+ 1 (* -2/3 (log -1)))))) (+ 1 (* -1 (log -1))))) (* -2 (log -1))))","(pow (log -1) 2)","(+ (* -2 (* (pow N 2) (log -1))) (pow (log -1) 2))","(+ (* (pow N 2) (+ (* -2 (log -1)) (* (pow N 2) (+ 1 (* -1 (log -1)))))) (pow (log -1) 2))","(+ (* (pow N 2) (+ (* -2 (log -1)) (* (pow N 2) (+ 1 (+ (* -1 (log -1)) (* (pow N 2) (+ 1 (* -2/3 (log -1))))))))) (pow (log -1) 2))","(* -1 (pow N 3))","(* (pow N 3) (- (* 3/2 N) 1))","(* (pow N 3) (- (* N (+ 3/2 (* 5/4 N))) 1))","(* (pow N 3) (- (* N (+ 3/2 (* N (+ 5/4 (* -9/8 N))))) 1))","(pow N 9)","(* (pow N 9) (+ 1 (* -3/2 (pow N 3))))","(* (pow N 9) (+ 1 (* (pow N 3) (- (* 7/4 (pow N 3)) 3/2))))","(* (pow N 9) (+ 1 (* (pow N 3) (- (* (pow N 3) (+ 7/4 (* -15/8 (pow N 3)))) 3/2))))","(* -1 N)","(* N (- (* 1/2 N) 1))","(* N (- (* N (+ 1/2 (* 2/3 N))) 1))","(* N (- (* N (+ 1/2 (* N (+ 2/3 (* 1/4 N))))) 1))","(+ (* -2 (* N (log -1))) (pow (log -1) 2))","(+ (* N (+ (* -2 (log -1)) (* N (+ 1 (* -1 (log -1)))))) (pow (log -1) 2))","(+ (* N (+ (* -2 (log -1)) (* N (+ 1 (+ (* -1 (log -1)) (* N (+ 1 (* -2/3 (log -1))))))))) (pow (log -1) 2))","(+ (* 4 (pow (log (/ 1 N)) 2)) (* 6 (pow (log (/ 1 N)) 2)))","(+ (* 3 (/ (log (/ 1 N)) N)) (+ (* 4 (/ (log (/ 1 N)) N)) (+ (* 4 (pow (log (/ 1 N)) 2)) (* 6 (pow (log (/ 1 N)) 2)))))","(+ (* -2 (/ (log (/ 1 N)) (pow N 2))) (+ (* -3/2 (/ (log (/ 1 N)) (pow N 2))) (+ (* 3 (/ (log (/ 1 N)) N)) (+ (* 4 (/ (log (/ 1 N)) N)) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (/ 1 (pow N 2))))))))","(- (+ (* -4 (/ (log (/ 1 N)) (pow N 3))) (+ (* -8/3 (/ (log (/ 1 N)) (pow N 3))) (+ (* -2 (/ (log (/ 1 N)) (pow N 2))) (+ (* -3/2 (/ (log (/ 1 N)) (pow N 2))) (+ (* 3 (/ (log (/ 1 N)) N)) (+ (* 4 (/ (log (/ 1 N)) N)) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (/ 1 (pow N 2)))))))))) (/ 1 (pow N 3)))","(- (* -27 (/ (pow (log (/ 1 N)) 3) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))))) (+ (* -8 (/ (pow (log (/ 1 N)) 3) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))))) (* -1 (log (/ 1 N)))))","(- (+ (* -27 (/ (pow (log (/ 1 N)) 3) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))))) (* -8 (/ (* (pow (log (/ 1 N)) 3) (+ (* 3 (log (/ 1 N))) (* 4 (log (/ 1 N))))) (* N (pow (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))) 2))))) (+ (* -27 (/ (* (pow (log (/ 1 N)) 3) (+ (* 3 (log (/ 1 N))) (* 4 (log (/ 1 N))))) (* N (pow (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))) 2)))) (+ (* -8 (/ (pow (log (/ 1 N)) 2) (* N (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2))))))) (+ (* -8 (/ (pow (log (/ 1 N)) 3) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))))) (+ (* -4 (/ (pow (log (/ 1 N)) 2) (* N (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2))))))) (* -1 (log (/ 1 N))))))))","(- (+ (* -27 (/ (pow (log (/ 1 N)) 3) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))))) (+ (* -8 (/ (* (pow (log (/ 1 N)) 3) (+ 1 (+ (* -2 (log (/ 1 N))) (* -3/2 (log (/ 1 N)))))) (* (pow N 2) (pow (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))) 2)))) (+ (* -8 (/ (* (pow (log (/ 1 N)) 3) (+ (* 3 (log (/ 1 N))) (* 4 (log (/ 1 N))))) (* N (pow (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))) 2)))) (/ (* (+ (* 3 (log (/ 1 N))) (* 4 (log (/ 1 N)))) (- (+ (* -8 (/ (pow (log (/ 1 N)) 2) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))))) (* -4 (/ (pow (log (/ 1 N)) 2) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2))))))) (* -8 (/ (* (pow (log (/ 1 N)) 3) (+ (* 3 (log (/ 1 N))) (* 4 (log (/ 1 N))))) (pow (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))) 2))))) (* (pow N 2) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2))))))))) (+ (* -27 (/ (* (pow (log (/ 1 N)) 3) (+ 1 (+ (* -2 (log (/ 1 N))) (* -3/2 (log (/ 1 N)))))) (* (pow N 2) (pow (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))) 2)))) (+ (* -27 (/ (* (pow (log (/ 1 N)) 3) (+ (* 3 (log (/ 1 N))) (* 4 (log (/ 1 N))))) (* N (pow (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))) 2)))) (+ (* -8 (/ (pow (log (/ 1 N)) 2) (* N (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2))))))) (+ (* -8 (/ (pow (log (/ 1 N)) 3) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))))) (+ (* -4 (/ (log (/ 1 N)) (* (pow N 2) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2))))))) (+ (* -4 (/ (pow (log (/ 1 N)) 2) (* N (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2))))))) (+ (* -2 (/ (* (log (/ 1 N)) (+ 1 (* -2 (log (/ 1 N))))) (* (pow N 2) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2))))))) (+ (* -1 (log (/ 1 N))) (+ (* 2 (/ (pow (log (/ 1 N)) 2) (* (pow N 2) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2))))))) (* 27 (/ (* (pow (log (/ 1 N)) 3) (pow (+ (* 3 (log (/ 1 N))) (* 4 (log (/ 1 N)))) 2)) (* (pow N 2) (pow (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))) 3))))))))))))))","(- (+ (* -27 (/ (pow (log (/ 1 N)) 3) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))))) (+ (* -8 (/ (* (pow (log (/ 1 N)) 3) (+ 1 (+ (* -2 (log (/ 1 N))) (* -3/2 (log (/ 1 N)))))) (* (pow N 2) (pow (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))) 2)))) (+ (* -8 (/ (* (pow (log (/ 1 N)) 3) (+ (* 3 (log (/ 1 N))) (* 4 (log (/ 1 N))))) (* N (pow (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))) 2)))) (+ (* -8 (/ (* (pow (log (/ 1 N)) 3) (- (+ (* -6 (log (/ 1 N))) (+ (* -4 (log (/ 1 N))) (* -8/3 (log (/ 1 N))))) 1)) (* (pow N 3) (pow (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))) 2)))) (+ (* 9 (/ (pow (log (/ 1 N)) 2) (* (pow N 3) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2))))))) (+ (* 18 (/ (pow (log (/ 1 N)) 2) (* (pow N 3) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2))))))) (+ (/ (* (+ 1 (+ (* -2 (log (/ 1 N))) (* -3/2 (log (/ 1 N))))) (- (+ (* -8 (/ (pow (log (/ 1 N)) 2) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))))) (* -4 (/ (pow (log (/ 1 N)) 2) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2))))))) (* -8 (/ (* (pow (log (/ 1 N)) 3) (+ (* 3 (log (/ 1 N))) (* 4 (log (/ 1 N))))) (pow (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))) 2))))) (* (pow N 3) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))))) (+ (/ (* (+ (* 3 (log (/ 1 N))) (* 4 (log (/ 1 N)))) (- (+ (* -8 (/ (pow (log (/ 1 N)) 2) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))))) (* -4 (/ (pow (log (/ 1 N)) 2) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2))))))) (* -8 (/ (* (pow (log (/ 1 N)) 3) (+ (* 3 (log (/ 1 N))) (* 4 (log (/ 1 N))))) (pow (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))) 2))))) (* (pow N 2) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))))) (/ (* (+ (* 3 (log (/ 1 N))) (* 4 (log (/ 1 N)))) (- (+ (* -4 (/ (log (/ 1 N)) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))))) (+ (* -2 (/ (* (log (/ 1 N)) (+ 1 (* -2 (log (/ 1 N))))) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))))) (* 2 (/ (pow (log (/ 1 N)) 2) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))))))) (+ (* -8 (/ (* (pow (log (/ 1 N)) 3) (+ 1 (+ (* -2 (log (/ 1 N))) (* -3/2 (log (/ 1 N)))))) (pow (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))) 2))) (/ (* (+ (* 3 (log (/ 1 N))) (* 4 (log (/ 1 N)))) (- (+ (* -8 (/ (pow (log (/ 1 N)) 2) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))))) (* -4 (/ (pow (log (/ 1 N)) 2) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2))))))) (* -8 (/ (* (pow (log (/ 1 N)) 3) (+ (* 3 (log (/ 1 N))) (* 4 (log (/ 1 N))))) (pow (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))) 2))))) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))))))) (* (pow N 3) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))))))))))))) (+ (* -27 (/ (* (pow (log (/ 1 N)) 3) (+ 1 (+ (* -2 (log (/ 1 N))) (* -3/2 (log (/ 1 N)))))) (* (pow N 2) (pow (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))) 2)))) (+ (* -27 (/ (* (pow (log (/ 1 N)) 3) (+ (* 3 (log (/ 1 N))) (* 4 (log (/ 1 N))))) (* N (pow (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))) 2)))) (+ (* -27 (/ (* (pow (log (/ 1 N)) 3) (- (+ (* -6 (log (/ 1 N))) (+ (* -4 (log (/ 1 N))) (* -8/3 (log (/ 1 N))))) 1)) (* (pow N 3) (pow (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))) 2)))) (+ (* -8 (/ (pow (log (/ 1 N)) 2) (* N (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2))))))) (+ (* -8 (/ (pow (log (/ 1 N)) 3) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))))) (+ (* -4 (/ (log (/ 1 N)) (* (pow N 2) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2))))))) (+ (* -4 (/ (pow (log (/ 1 N)) 2) (* N (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2))))))) (+ (* -2 (/ (* (log (/ 1 N)) (+ 1 (* -2 (log (/ 1 N))))) (* (pow N 2) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2))))))) (+ (* -2 (/ (* (log (/ 1 N)) (- (* -8/3 (log (/ 1 N))) 1)) (* (pow N 3) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2))))))) (+ (* -1 (log (/ 1 N))) (+ (* -1 (/ (* (+ (* -27 (/ (* (pow (log (/ 1 N)) 3) (+ 1 (+ (* -2 (log (/ 1 N))) (* -3/2 (log (/ 1 N)))))) (pow (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))) 2))) (* 27 (/ (* (pow (log (/ 1 N)) 3) (pow (+ (* 3 (log (/ 1 N))) (* 4 (log (/ 1 N)))) 2)) (pow (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))) 3)))) (+ (* 3 (log (/ 1 N))) (* 4 (log (/ 1 N))))) (* (pow N 3) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2))))))) (+ (* -1 (/ (+ 1 (* -2 (log (/ 1 N)))) (* (pow N 3) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2))))))) (+ (* 2 (/ (log (/ 1 N)) (* (pow N 3) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2))))))) (+ (* 2 (/ (pow (log (/ 1 N)) 2) (* (pow N 2) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2))))))) (+ (* 8/3 (/ (pow (log (/ 1 N)) 2) (* (pow N 3) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2))))))) (+ (* 27 (/ (* (pow (log (/ 1 N)) 3) (* (+ 1 (+ (* -2 (log (/ 1 N))) (* -3/2 (log (/ 1 N))))) (+ (* 3 (log (/ 1 N))) (* 4 (log (/ 1 N)))))) (* (pow N 3) (pow (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))) 3)))) (* 27 (/ (* (pow (log (/ 1 N)) 3) (pow (+ (* 3 (log (/ 1 N))) (* 4 (log (/ 1 N)))) 2)) (* (pow N 2) (pow (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))) 3)))))))))))))))))))))","(/ (- (* -27 (pow (log (/ 1 N)) 3)) (* -8 (pow (log (/ 1 N)) 3))) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))))","(- (+ (* -27 (/ (pow (log (/ 1 N)) 3) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))))) (* -1 (/ (+ (* -8 (pow (log (/ 1 N)) 2)) (* -4 (pow (log (/ 1 N)) 2))) (* N (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))))))) (+ (* -8 (/ (pow (log (/ 1 N)) 3) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))))) (/ (* (+ (* 3 (log (/ 1 N))) (* 4 (log (/ 1 N)))) (- (* -27 (pow (log (/ 1 N)) 3)) (* -8 (pow (log (/ 1 N)) 3)))) (* N (pow (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))) 2)))))","(- (+ (* -27 (/ (pow (log (/ 1 N)) 3) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))))) (+ (* -1 (/ (+ (* -8 (pow (log (/ 1 N)) 2)) (* -4 (pow (log (/ 1 N)) 2))) (* N (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2))))))) (* -1 (/ (+ (* -4 (log (/ 1 N))) (+ (* -2 (* (log (/ 1 N)) (+ 1 (* -2 (log (/ 1 N)))))) (* 2 (pow (log (/ 1 N)) 2)))) (* (pow N 2) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2))))))))) (+ (* -8 (/ (pow (log (/ 1 N)) 3) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))))) (+ (/ (* (+ 1 (+ (* -2 (log (/ 1 N))) (* -3/2 (log (/ 1 N))))) (- (* -27 (pow (log (/ 1 N)) 3)) (* -8 (pow (log (/ 1 N)) 3)))) (* (pow N 2) (pow (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))) 2))) (+ (/ (* (+ (* 3 (log (/ 1 N))) (* 4 (log (/ 1 N)))) (- (* -27 (pow (log (/ 1 N)) 3)) (* -8 (pow (log (/ 1 N)) 3)))) (* N (pow (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))) 2))) (/ (* (+ (* 3 (log (/ 1 N))) (* 4 (log (/ 1 N)))) (- (* -1 (/ (+ (* -8 (pow (log (/ 1 N)) 2)) (* -4 (pow (log (/ 1 N)) 2))) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))))) (/ (* (+ (* 3 (log (/ 1 N))) (* 4 (log (/ 1 N)))) (- (* -27 (pow (log (/ 1 N)) 3)) (* -8 (pow (log (/ 1 N)) 3)))) (pow (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))) 2)))) (* (pow N 2) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2))))))))))","(- (+ (* -27 (/ (pow (log (/ 1 N)) 3) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))))) (+ (* -1 (/ (+ (* -8 (pow (log (/ 1 N)) 2)) (* -4 (pow (log (/ 1 N)) 2))) (* N (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2))))))) (+ (* -1 (/ (+ (* -4 (log (/ 1 N))) (+ (* -2 (* (log (/ 1 N)) (+ 1 (* -2 (log (/ 1 N)))))) (* 2 (pow (log (/ 1 N)) 2)))) (* (pow N 2) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2))))))) (+ (* 9 (/ (pow (log (/ 1 N)) 2) (* (pow N 3) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2))))))) (* 18 (/ (pow (log (/ 1 N)) 2) (* (pow N 3) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2))))))))))) (+ (* -8 (/ (pow (log (/ 1 N)) 3) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))))) (+ (* -2 (/ (* (log (/ 1 N)) (- (* -8/3 (log (/ 1 N))) 1)) (* (pow N 3) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2))))))) (+ (* -1 (/ (+ 1 (* -2 (log (/ 1 N)))) (* (pow N 3) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2))))))) (+ (* 2 (/ (log (/ 1 N)) (* (pow N 3) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2))))))) (+ (* 8/3 (/ (pow (log (/ 1 N)) 2) (* (pow N 3) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2))))))) (+ (/ (* (+ 1 (+ (* -2 (log (/ 1 N))) (* -3/2 (log (/ 1 N))))) (- (* -27 (pow (log (/ 1 N)) 3)) (* -8 (pow (log (/ 1 N)) 3)))) (* (pow N 2) (pow (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))) 2))) (+ (/ (* (+ 1 (+ (* -2 (log (/ 1 N))) (* -3/2 (log (/ 1 N))))) (- (* -1 (/ (+ (* -8 (pow (log (/ 1 N)) 2)) (* -4 (pow (log (/ 1 N)) 2))) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))))) (/ (* (+ (* 3 (log (/ 1 N))) (* 4 (log (/ 1 N)))) (- (* -27 (pow (log (/ 1 N)) 3)) (* -8 (pow (log (/ 1 N)) 3)))) (pow (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))) 2)))) (* (pow N 3) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))))) (+ (/ (* (+ (* 3 (log (/ 1 N))) (* 4 (log (/ 1 N)))) (- (* -27 (pow (log (/ 1 N)) 3)) (* -8 (pow (log (/ 1 N)) 3)))) (* N (pow (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))) 2))) (+ (/ (* (+ (* 3 (log (/ 1 N))) (* 4 (log (/ 1 N)))) (- (* -1 (/ (+ (* -8 (pow (log (/ 1 N)) 2)) (* -4 (pow (log (/ 1 N)) 2))) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))))) (/ (* (+ (* 3 (log (/ 1 N))) (* 4 (log (/ 1 N)))) (- (* -27 (pow (log (/ 1 N)) 3)) (* -8 (pow (log (/ 1 N)) 3)))) (pow (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))) 2)))) (* (pow N 2) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))))) (+ (/ (* (+ (* 3 (log (/ 1 N))) (* 4 (log (/ 1 N)))) (- (* -1 (/ (+ (* -4 (log (/ 1 N))) (+ (* -2 (* (log (/ 1 N)) (+ 1 (* -2 (log (/ 1 N)))))) (* 2 (pow (log (/ 1 N)) 2)))) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))))) (+ (/ (* (+ 1 (+ (* -2 (log (/ 1 N))) (* -3/2 (log (/ 1 N))))) (- (* -27 (pow (log (/ 1 N)) 3)) (* -8 (pow (log (/ 1 N)) 3)))) (pow (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))) 2)) (/ (* (+ (* 3 (log (/ 1 N))) (* 4 (log (/ 1 N)))) (- (* -1 (/ (+ (* -8 (pow (log (/ 1 N)) 2)) (* -4 (pow (log (/ 1 N)) 2))) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))))) (/ (* (+ (* 3 (log (/ 1 N))) (* 4 (log (/ 1 N)))) (- (* -27 (pow (log (/ 1 N)) 3)) (* -8 (pow (log (/ 1 N)) 3)))) (pow (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))) 2)))) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))))))) (* (pow N 3) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))))) (/ (* (- (* -27 (pow (log (/ 1 N)) 3)) (* -8 (pow (log (/ 1 N)) 3))) (- (+ (* -6 (log (/ 1 N))) (+ (* -4 (log (/ 1 N))) (* -8/3 (log (/ 1 N))))) 1)) (* (pow N 3) (pow (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (* 6 (pow (log (/ 1 N)) 2)) (* 9 (pow (log (/ 1 N)) 2)))) 2))))))))))))))","(- (* -27 (pow (log (/ 1 N)) 3)) (* -8 (pow (log (/ 1 N)) 3)))","(- (+ (* -27 (pow (log (/ 1 N)) 3)) (* -1 (/ (+ (* -8 (pow (log (/ 1 N)) 2)) (* -4 (pow (log (/ 1 N)) 2))) N))) (* -8 (pow (log (/ 1 N)) 3)))","(- (+ (* -27 (pow (log (/ 1 N)) 3)) (* -1 (/ (+ (* -4 (log (/ 1 N))) (+ (* -2 (* (log (/ 1 N)) (+ 1 (* -2 (log (/ 1 N)))))) (* 2 (pow (log (/ 1 N)) 2)))) (pow N 2)))) (+ (* -8 (/ (pow (log (/ 1 N)) 2) N)) (+ (* -8 (pow (log (/ 1 N)) 3)) (* -4 (/ (pow (log (/ 1 N)) 2) N)))))","(- (+ (* -27 (pow (log (/ 1 N)) 3)) (+ (* 9 (/ (pow (log (/ 1 N)) 2) (pow N 3))) (* 18 (/ (pow (log (/ 1 N)) 2) (pow N 3))))) (+ (* -8 (/ (pow (log (/ 1 N)) 2) N)) (+ (* -8 (pow (log (/ 1 N)) 3)) (+ (* -4 (/ (log (/ 1 N)) (pow N 2))) (+ (* -4 (/ (pow (log (/ 1 N)) 2) N)) (+ (* -2 (/ (* (log (/ 1 N)) (+ 1 (* -2 (log (/ 1 N))))) (pow N 2))) (+ (* -2 (/ (* (log (/ 1 N)) (- (* -8/3 (log (/ 1 N))) 1)) (pow N 3))) (+ (* -1 (/ (+ 1 (* -2 (log (/ 1 N)))) (pow N 3))) (+ (* 2 (/ (log (/ 1 N)) (pow N 3))) (+ (* 2 (/ (pow (log (/ 1 N)) 2) (pow N 2))) (* 8/3 (/ (pow (log (/ 1 N)) 2) (pow N 3)))))))))))))","(- (* -3 (log (/ 1 N))) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))))","(- (+ (* -3 (log (/ 1 N))) (/ 1 N)) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))))","(- (+ (* -3 (log (/ 1 N))) (/ 1 N)) (+ (* -2 (log (/ 1 N))) (+ (* -1 (log (/ 1 N))) (/ 1/2 (pow N 2)))))","(- (+ (* -3 (log (/ 1 N))) (+ (/ 1 N) (* 1/3 (/ 1 (pow N 3))))) (+ (* -2 (log (/ 1 N))) (+ (* -1 (log (/ 1 N))) (/ 1/2 (pow N 2)))))","(- (* -3 (log (/ 1 N))) (* -2 (log (/ 1 N))))","(- (+ (* -3 (log (/ 1 N))) (/ 1 N)) (* -2 (log (/ 1 N))))","(- (+ (* -3 (log (/ 1 N))) (/ 1 N)) (+ (* -2 (log (/ 1 N))) (/ 1/2 (pow N 2))))","(- (+ (* -3 (log (/ 1 N))) (+ (/ 1 N) (* 1/3 (/ 1 (pow N 3))))) (+ (* -2 (log (/ 1 N))) (/ 1/2 (pow N 2))))","(* -3 (log (/ 1 N)))","(+ (* -3 (log (/ 1 N))) (/ 1 (pow N 3)))","(- (+ (* -3 (log (/ 1 N))) (/ 1 (pow N 3))) (/ 1/2 (pow N 6)))","(- (+ (* -3 (log (/ 1 N))) (+ (/ 1 (pow N 3)) (* 1/3 (/ 1 (pow N 9))))) (/ 1/2 (pow N 6)))","(- (* -3 (log (/ 1 N))) (* -1 (log (/ 1 N))))","(- (+ (* -3 (log (/ 1 N))) (/ 1 (pow N 3))) (* -1 (log (/ 1 N))))","(- (+ (* -3 (log (/ 1 N))) (/ 1 (pow N 3))) (+ (* -1 (log (/ 1 N))) (/ 1/2 (pow N 6))))","(- (+ (* -3 (log (/ 1 N))) (+ (/ 1 (pow N 3)) (* 1/3 (/ 1 (pow N 9))))) (+ (* -1 (log (/ 1 N))) (/ 1/2 (pow N 6))))","(log (/ 1 N))","(* -1 (log (/ 1 N)))","(- (* 4 (/ (pow (log (/ 1 N)) 2) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))))) (+ (* -1 (log (/ 1 N))) (/ (pow (log (/ 1 N)) 2) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))))))","(- (+ (* -1 (/ (pow (log (/ 1 N)) 2) (* N (pow (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))) 2)))) (* 4 (/ (pow (log (/ 1 N)) 2) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N))))))) (+ (* -4 (/ (pow (log (/ 1 N)) 2) (* N (pow (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))) 2)))) (+ (* -1 (log (/ 1 N))) (+ (* 2 (/ (log (/ 1 N)) (* N (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N))))))) (/ (pow (log (/ 1 N)) 2) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))))))))","(- (+ (* -3/2 (/ (pow (log (/ 1 N)) 2) (* (pow N 2) (pow (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))) 2)))) (+ (* -1 (/ (- (* 2 (/ (log (/ 1 N)) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))))) (* -1 (/ (pow (log (/ 1 N)) 2) (pow (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))) 2)))) (* (pow N 2) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N))))))) (+ (* -1 (/ (pow (log (/ 1 N)) 2) (* N (pow (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))) 2)))) (+ (* 4 (/ (log (/ 1 N)) (* (pow N 2) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N))))))) (* 4 (/ (pow (log (/ 1 N)) 2) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))))))))) (+ (* -6 (/ (pow (log (/ 1 N)) 2) (* (pow N 2) (pow (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))) 2)))) (+ (* -4 (/ (pow (log (/ 1 N)) 2) (* N (pow (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))) 2)))) (+ (* -4 (/ (pow (log (/ 1 N)) 2) (* (pow N 2) (pow (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))) 3)))) (+ (* -1 (log (/ 1 N))) (+ (* 2 (/ (log (/ 1 N)) (* N (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N))))))) (+ (/ 1 (* (pow N 2) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))))) (+ (/ (log (/ 1 N)) (* (pow N 2) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))))) (/ (pow (log (/ 1 N)) 2) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))))))))))))","(- (+ (* -3/2 (/ (- (* 2 (/ (log (/ 1 N)) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))))) (* -1 (/ (pow (log (/ 1 N)) 2) (pow (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))) 2)))) (* (pow N 3) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N))))))) (+ (* -3/2 (/ (pow (log (/ 1 N)) 2) (* (pow N 2) (pow (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))) 2)))) (+ (* -1 (/ (- (* 2 (/ (log (/ 1 N)) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))))) (* -1 (/ (pow (log (/ 1 N)) 2) (pow (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))) 2)))) (* (pow N 2) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N))))))) (+ (* -1 (/ (- (+ (/ 1 (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N))))) (/ (log (/ 1 N)) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))))) (+ (* -3/2 (/ (pow (log (/ 1 N)) 2) (pow (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))) 2))) (* -1 (/ (- (* 2 (/ (log (/ 1 N)) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))))) (* -1 (/ (pow (log (/ 1 N)) 2) (pow (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))) 2)))) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))))))) (* (pow N 3) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N))))))) (+ (* -1 (/ (pow (log (/ 1 N)) 2) (* N (pow (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))) 2)))) (+ (* -1/3 (/ (pow (log (/ 1 N)) 2) (* (pow N 3) (pow (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))) 2)))) (+ (* 4 (/ (log (/ 1 N)) (* (pow N 2) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N))))))) (* 4 (/ (pow (log (/ 1 N)) 2) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N))))))))))))) (+ (* -6 (/ (pow (log (/ 1 N)) 2) (* (pow N 2) (pow (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))) 2)))) (+ (* -6 (/ (pow (log (/ 1 N)) 2) (* (pow N 3) (pow (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))) 3)))) (+ (* -4 (/ (pow (log (/ 1 N)) 2) (* N (pow (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))) 2)))) (+ (* -4 (/ (pow (log (/ 1 N)) 2) (* (pow N 2) (pow (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))) 3)))) (+ (* -4/3 (/ (pow (log (/ 1 N)) 2) (* (pow N 3) (pow (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))) 2)))) (+ (* -1 (log (/ 1 N))) (+ (* -1 (/ (- (* 4 (/ (log (/ 1 N)) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))))) (+ (* -6 (/ (pow (log (/ 1 N)) 2) (pow (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))) 2))) (* -4 (/ (pow (log (/ 1 N)) 2) (pow (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))) 3))))) (* (pow N 3) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N))))))) (+ (* 2/3 (/ (log (/ 1 N)) (* (pow N 3) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N))))))) (+ (* 2 (/ (log (/ 1 N)) (* N (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N))))))) (+ (/ 1 (* (pow N 2) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))))) (+ (/ 1 (* (pow N 3) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))))) (+ (/ (log (/ 1 N)) (* (pow N 2) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))))) (/ (pow (log (/ 1 N)) 2) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N))))))))))))))))))","(/ (- (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))))","(- (+ (* -2 (/ (log (/ 1 N)) (* N (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N))))))) (* 4 (/ (pow (log (/ 1 N)) 2) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N))))))) (+ (* -1 (/ (- (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)) (* N (pow (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))) 2)))) (/ (pow (log (/ 1 N)) 2) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))))))","(- (+ (* -2 (/ (log (/ 1 N)) (* N (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N))))))) (+ (* 4 (/ (log (/ 1 N)) (* (pow N 2) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N))))))) (* 4 (/ (pow (log (/ 1 N)) 2) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))))))) (+ (* -3/2 (/ (- (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)) (* (pow N 2) (pow (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))) 2)))) (+ (* -1 (/ (- (* -2 (/ (log (/ 1 N)) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))))) (* -1 (/ (- (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)) (pow (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))) 2)))) (* (pow N 2) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N))))))) (+ (* -1 (/ (- (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)) (* N (pow (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))) 2)))) (+ (/ 1 (* (pow N 2) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))))) (+ (/ (log (/ 1 N)) (* (pow N 2) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))))) (/ (pow (log (/ 1 N)) 2) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))))))))))","(- (+ (* -2 (/ (log (/ 1 N)) (* N (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N))))))) (+ (* -1 (/ (+ 1 (* 2/3 (log (/ 1 N)))) (* (pow N 3) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N))))))) (+ (* 4 (/ (log (/ 1 N)) (* (pow N 2) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N))))))) (* 4 (/ (pow (log (/ 1 N)) 2) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N))))))))) (+ (* -3/2 (/ (- (* -2 (/ (log (/ 1 N)) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))))) (* -1 (/ (- (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)) (pow (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))) 2)))) (* (pow N 3) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N))))))) (+ (* -3/2 (/ (- (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)) (* (pow N 2) (pow (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))) 2)))) (+ (* -1 (/ (- (* -2 (/ (log (/ 1 N)) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))))) (* -1 (/ (- (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)) (pow (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))) 2)))) (* (pow N 2) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N))))))) (+ (* -1 (/ (- (* 4 (/ (log (/ 1 N)) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))))) (+ (* -3/2 (/ (- (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)) (pow (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))) 2))) (+ (* -1 (/ (- (* -2 (/ (log (/ 1 N)) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))))) (* -1 (/ (- (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)) (pow (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))) 2)))) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))))) (+ (/ 1 (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N))))) (/ (log (/ 1 N)) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N))))))))) (* (pow N 3) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N))))))) (+ (* -1 (/ (- (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)) (* N (pow (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))) 2)))) (+ (* -1/3 (/ (- (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)) (* (pow N 3) (pow (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))) 2)))) (+ (/ 1 (* (pow N 2) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))))) (+ (/ (log (/ 1 N)) (* (pow N 2) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N)))))) (/ (pow (log (/ 1 N)) 2) (+ (* -2 (log (/ 1 N))) (* -1 (log (/ 1 N))))))))))))))","(- (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))","(- (+ (* -2 (/ (log (/ 1 N)) N)) (* 4 (pow (log (/ 1 N)) 2))) (pow (log (/ 1 N)) 2))","(- (+ (* 4 (/ (log (/ 1 N)) (pow N 2))) (* 4 (pow (log (/ 1 N)) 2))) (+ (* 2 (/ (log (/ 1 N)) N)) (+ (/ 1 (pow N 2)) (+ (/ (log (/ 1 N)) (pow N 2)) (pow (log (/ 1 N)) 2)))))","(- (+ (* -1 (/ (+ 1 (* 2/3 (log (/ 1 N)))) (pow N 3))) (+ (* 4 (/ (log (/ 1 N)) (pow N 2))) (* 4 (pow (log (/ 1 N)) 2)))) (+ (* 2 (/ (log (/ 1 N)) N)) (+ (/ 1 (pow N 2)) (+ (/ (log (/ 1 N)) (pow N 2)) (pow (log (/ 1 N)) 2)))))","(* 4 (pow (log (/ 1 N)) 2))","(+ (* 4 (/ (log (/ 1 N)) (pow N 2))) (* 4 (pow (log (/ 1 N)) 2)))","(+ (* 2 (/ (log (/ 1 N)) (pow N 4))) (+ (* 4 (/ (log (/ 1 N)) (pow N 2))) (+ (* 4 (pow (log (/ 1 N)) 2)) (/ 1 (pow N 4)))))","(+ (* 4/3 (/ (log (/ 1 N)) (pow N 6))) (+ (* 2 (/ (log (/ 1 N)) (pow N 4))) (+ (* 4 (/ (log (/ 1 N)) (pow N 2))) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (/ 1 (pow N 4)) (/ 1 (pow N 6)))))))","(* -8 (pow (log (/ 1 N)) 3))","(+ (* -8 (/ (pow (log (/ 1 N)) 2) N)) (+ (* -8 (pow (log (/ 1 N)) 3)) (* -4 (/ (pow (log (/ 1 N)) 2) N))))","(+ (* -8 (/ (pow (log (/ 1 N)) 2) N)) (+ (* -8 (pow (log (/ 1 N)) 3)) (+ (* -4 (/ (log (/ 1 N)) (pow N 2))) (+ (* -4 (/ (pow (log (/ 1 N)) 2) N)) (+ (* -2 (/ (* (log (/ 1 N)) (+ 1 (* -2 (log (/ 1 N))))) (pow N 2))) (* 2 (/ (pow (log (/ 1 N)) 2) (pow N 2))))))))","(+ (* -8 (/ (pow (log (/ 1 N)) 2) N)) (+ (* -8 (pow (log (/ 1 N)) 3)) (+ (* -4 (/ (log (/ 1 N)) (pow N 2))) (+ (* -4 (/ (pow (log (/ 1 N)) 2) N)) (+ (* -2 (/ (* (log (/ 1 N)) (+ 1 (* -2 (log (/ 1 N))))) (pow N 2))) (+ (* -2 (/ (* (log (/ 1 N)) (- (* -8/3 (log (/ 1 N))) 1)) (pow N 3))) (+ (* -1 (/ (+ 1 (* -2 (log (/ 1 N)))) (pow N 3))) (+ (* 2 (/ (log (/ 1 N)) (pow N 3))) (+ (* 2 (/ (pow (log (/ 1 N)) 2) (pow N 2))) (* 8/3 (/ (pow (log (/ 1 N)) 2) (pow N 3))))))))))))","(* -27 (pow (log (/ 1 N)) 3))","(+ (* -27 (pow (log (/ 1 N)) 3)) (+ (* 9 (/ (pow (log (/ 1 N)) 2) (pow N 3))) (* 18 (/ (pow (log (/ 1 N)) 2) (pow N 3)))))","(+ (* -27 (pow (log (/ 1 N)) 3)) (+ (* -6 (/ (log (/ 1 N)) (pow N 6))) (+ (* -9/2 (/ (pow (log (/ 1 N)) 2) (pow N 6))) (+ (* -3 (/ (* (log (/ 1 N)) (+ 1 (* 3 (log (/ 1 N))))) (pow N 6))) (+ (* 9 (/ (pow (log (/ 1 N)) 2) (pow N 3))) (* 18 (/ (pow (log (/ 1 N)) 2) (pow N 3))))))))","(+ (* -27 (pow (log (/ 1 N)) 3)) (+ (* -6 (/ (log (/ 1 N)) (pow N 6))) (+ (* -9/2 (/ (pow (log (/ 1 N)) 2) (pow N 6))) (+ (* -3 (/ (* (log (/ 1 N)) (+ 1 (* 3 (log (/ 1 N))))) (pow N 6))) (+ (* -3 (/ (* (log (/ 1 N)) (- (* -2 (log (/ 1 N))) 1)) (pow N 9))) (+ (* 3 (/ (pow (log (/ 1 N)) 2) (pow N 9))) (+ (* 6 (/ (log (/ 1 N)) (pow N 9))) (+ (* 9 (/ (pow (log (/ 1 N)) 2) (pow N 3))) (+ (* 18 (/ (pow (log (/ 1 N)) 2) (pow N 3))) (/ 1 (pow N 9)))))))))))","(* -2 (log (/ 1 N)))","(- (* -2 (log (/ 1 N))) (/ 1 N))","(- (+ (* -2 (log (/ 1 N))) (/ 1/2 (pow N 2))) (/ 1 N))","(- (+ (* -2 (log (/ 1 N))) (+ (/ 1/2 (pow N 2)) (* 2/3 (/ 1 (pow N 3))))) (/ 1 N))","(pow (log (/ 1 N)) 2)","(+ (* 2 (/ (log (/ 1 N)) N)) (pow (log (/ 1 N)) 2))","(+ (* 2 (/ (log (/ 1 N)) N)) (+ (/ 1 (pow N 2)) (+ (/ (log (/ 1 N)) (pow N 2)) (pow (log (/ 1 N)) 2))))","(+ (* 2/3 (/ (log (/ 1 N)) (pow N 3))) (+ (* 2 (/ (log (/ 1 N)) N)) (+ (/ 1 (pow N 2)) (+ (/ 1 (pow N 3)) (+ (/ (log (/ 1 N)) (pow N 2)) (pow (log (/ 1 N)) 2))))))","(+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (* 4 (pow (log (/ -1 N)) 2)))","(+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* -1 (/ (+ (log -1) (+ (* -4 (log (/ -1 N))) (* -3 (log (/ -1 N))))) N)) (* 4 (pow (log (/ -1 N)) 2))))","(+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* -1 (/ (+ (log -1) (+ (* -4 (log (/ -1 N))) (+ (* -3 (log (/ -1 N))) (* -1 (/ (+ 1 (+ (* -2 (log (/ -1 N))) (* 1/2 (+ (log -1) (* -3 (log (/ -1 N))))))) N))))) N)) (* 4 (pow (log (/ -1 N)) 2))))","(+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* -1 (/ (+ (log -1) (+ (* -4 (log (/ -1 N))) (+ (* -3 (log (/ -1 N))) (* -1 (/ (+ 1 (+ (* -2 (log (/ -1 N))) (+ (* -1 (/ (+ 1 (+ (* -2/3 (+ (log -1) (* -3 (log (/ -1 N))))) (+ (* 2 (log (/ -1 N))) (* 8/3 (log (/ -1 N)))))) N)) (* 1/2 (+ (log -1) (* -3 (log (/ -1 N)))))))) N))))) N)) (* 4 (pow (log (/ -1 N)) 2))))","(- (/ (pow (+ (log -1) (* -3 (log (/ -1 N)))) 3) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2)))) (+ (log -1) (+ (* -8 (/ (pow (log (/ -1 N)) 3) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (* -1 (log (/ -1 N))))))","(- (+ (* -1 (/ (- (* -8 (/ (* (pow (log (/ -1 N)) 3) (+ (log -1) (+ (* -4 (log (/ -1 N))) (* -3 (log (/ -1 N)))))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))) 2))) (+ (* 4 (/ (pow (log (/ -1 N)) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (+ (* 8 (/ (pow (log (/ -1 N)) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (/ (* (pow (+ (log -1) (* -3 (log (/ -1 N)))) 3) (+ (log -1) (+ (* -4 (log (/ -1 N))) (* -3 (log (/ -1 N)))))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))) 2))))) N)) (/ (pow (+ (log -1) (* -3 (log (/ -1 N)))) 3) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (+ (log -1) (+ (* -8 (/ (pow (log (/ -1 N)) 3) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (* -1 (log (/ -1 N))))))","(- (+ (* -1 (/ (- (+ (* -8 (/ (* (pow (log (/ -1 N)) 3) (+ (log -1) (+ (* -4 (log (/ -1 N))) (* -3 (log (/ -1 N)))))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))) 2))) (* -1 (/ (- (+ (* -8 (/ (* (pow (log (/ -1 N)) 3) (+ 1 (+ (* -2 (log (/ -1 N))) (* 1/2 (+ (log -1) (* -3 (log (/ -1 N)))))))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))) 2))) (/ (* (+ (log -1) (+ (* -4 (log (/ -1 N))) (* -3 (log (/ -1 N))))) (- (+ (* 4 (/ (pow (log (/ -1 N)) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (* 8 (/ (pow (log (/ -1 N)) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2)))))) (* -8 (/ (* (pow (log (/ -1 N)) 3) (+ (log -1) (+ (* -4 (log (/ -1 N))) (* -3 (log (/ -1 N)))))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))) 2))))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (+ (* -4 (/ (log (/ -1 N)) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (+ (* -2 (/ (* (log (/ -1 N)) (+ 1 (* -2 (log (/ -1 N))))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (+ (* -1 (/ (* (pow (+ (log -1) (* -3 (log (/ -1 N)))) 3) (pow (+ (log -1) (+ (* -4 (log (/ -1 N))) (* -3 (log (/ -1 N))))) 2)) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))) 3))) (+ (* 2 (/ (pow (log (/ -1 N)) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (/ (* (+ 1 (+ (* -2 (log (/ -1 N))) (* 1/2 (+ (log -1) (* -3 (log (/ -1 N))))))) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 3)) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))) 2))))))) N))) (+ (* 4 (/ (pow (log (/ -1 N)) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (+ (* 8 (/ (pow (log (/ -1 N)) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (/ (* (pow (+ (log -1) (* -3 (log (/ -1 N)))) 3) (+ (log -1) (+ (* -4 (log (/ -1 N))) (* -3 (log (/ -1 N)))))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))) 2))))) N)) (/ (pow (+ (log -1) (* -3 (log (/ -1 N)))) 3) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (+ (log -1) (+ (* -8 (/ (pow (log (/ -1 N)) 3) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (* -1 (log (/ -1 N))))))","(- (+ (* -1 (/ (- (+ (* -8 (/ (* (pow (log (/ -1 N)) 3) (+ (log -1) (+ (* -4 (log (/ -1 N))) (* -3 (log (/ -1 N)))))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))) 2))) (* -1 (/ (- (+ (* -8 (/ (* (pow (log (/ -1 N)) 3) (+ 1 (+ (* -2 (log (/ -1 N))) (* 1/2 (+ (log -1) (* -3 (log (/ -1 N)))))))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))) 2))) (+ (* -1 (/ (- (+ (* -8 (/ (* (pow (log (/ -1 N)) 3) (+ 1 (+ (* -2 (+ (log -1) (* -3 (log (/ -1 N))))) (+ (* -2/3 (+ (log -1) (* -3 (log (/ -1 N))))) (+ (* 2 (log (/ -1 N))) (* 8/3 (log (/ -1 N)))))))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))) 2))) (+ (* -2 (/ (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (+ (* -1 (/ (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (+ (/ (* (+ 1 (+ (* -2 (log (/ -1 N))) (* 1/2 (+ (log -1) (* -3 (log (/ -1 N))))))) (- (+ (* 4 (/ (pow (log (/ -1 N)) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (* 8 (/ (pow (log (/ -1 N)) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2)))))) (* -8 (/ (* (pow (log (/ -1 N)) 3) (+ (log -1) (+ (* -4 (log (/ -1 N))) (* -3 (log (/ -1 N)))))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))) 2))))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2)))) (/ (* (+ (log -1) (+ (* -4 (log (/ -1 N))) (* -3 (log (/ -1 N))))) (- (+ (* -4 (/ (log (/ -1 N)) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (+ (* -2 (/ (* (log (/ -1 N)) (+ 1 (* -2 (log (/ -1 N))))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (* 2 (/ (pow (log (/ -1 N)) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))))) (+ (* -8 (/ (* (pow (log (/ -1 N)) 3) (+ 1 (+ (* -2 (log (/ -1 N))) (* 1/2 (+ (log -1) (* -3 (log (/ -1 N)))))))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))) 2))) (/ (* (+ (log -1) (+ (* -4 (log (/ -1 N))) (* -3 (log (/ -1 N))))) (- (+ (* 4 (/ (pow (log (/ -1 N)) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (* 8 (/ (pow (log (/ -1 N)) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2)))))) (* -8 (/ (* (pow (log (/ -1 N)) 3) (+ (log -1) (+ (* -4 (log (/ -1 N))) (* -3 (log (/ -1 N)))))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))) 2))))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2)))))))) (+ (* -4 (/ (log (/ -1 N)) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (+ (* -8/3 (/ (pow (log (/ -1 N)) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (+ (* -2 (/ (* (log (/ -1 N)) (+ 1 (* 8/3 (log (/ -1 N))))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (+ (* -1 (/ (* (+ 1 (+ (* -2 (log (/ -1 N))) (* 1/2 (+ (log -1) (* -3 (log (/ -1 N))))))) (* (pow (+ (log -1) (* -3 (log (/ -1 N)))) 3) (+ (log -1) (+ (* -4 (log (/ -1 N))) (* -3 (log (/ -1 N))))))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))) 3))) (+ (* -1 (/ (* (+ (log -1) (+ (* -4 (log (/ -1 N))) (* -3 (log (/ -1 N))))) (+ (* -1 (/ (* (pow (+ (log -1) (* -3 (log (/ -1 N)))) 3) (pow (+ (log -1) (+ (* -4 (log (/ -1 N))) (* -3 (log (/ -1 N))))) 2)) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))) 3))) (/ (* (+ 1 (+ (* -2 (log (/ -1 N))) (* 1/2 (+ (log -1) (* -3 (log (/ -1 N))))))) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 3)) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))) 2)))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (+ (/ 1 (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2)))) (/ (* (+ 1 (+ (* -2 (+ (log -1) (* -3 (log (/ -1 N))))) (+ (* -2/3 (+ (log -1) (* -3 (log (/ -1 N))))) (+ (* 2 (log (/ -1 N))) (* 8/3 (log (/ -1 N))))))) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 3)) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))) 2))))))))) N)) (/ (* (+ (log -1) (+ (* -4 (log (/ -1 N))) (* -3 (log (/ -1 N))))) (- (+ (* 4 (/ (pow (log (/ -1 N)) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (* 8 (/ (pow (log (/ -1 N)) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2)))))) (* -8 (/ (* (pow (log (/ -1 N)) 3) (+ (log -1) (+ (* -4 (log (/ -1 N))) (* -3 (log (/ -1 N)))))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))) 2))))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2)))))) (+ (* -4 (/ (log (/ -1 N)) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (+ (* -2 (/ (* (log (/ -1 N)) (+ 1 (* -2 (log (/ -1 N))))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (+ (* -1 (/ (* (pow (+ (log -1) (* -3 (log (/ -1 N)))) 3) (pow (+ (log -1) (+ (* -4 (log (/ -1 N))) (* -3 (log (/ -1 N))))) 2)) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))) 3))) (+ (* 2 (/ (pow (log (/ -1 N)) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (/ (* (+ 1 (+ (* -2 (log (/ -1 N))) (* 1/2 (+ (log -1) (* -3 (log (/ -1 N))))))) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 3)) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))) 2))))))) N))) (+ (* 4 (/ (pow (log (/ -1 N)) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (+ (* 8 (/ (pow (log (/ -1 N)) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (/ (* (pow (+ (log -1) (* -3 (log (/ -1 N)))) 3) (+ (log -1) (+ (* -4 (log (/ -1 N))) (* -3 (log (/ -1 N)))))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))) 2))))) N)) (/ (pow (+ (log -1) (* -3 (log (/ -1 N)))) 3) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (+ (log -1) (+ (* -8 (/ (pow (log (/ -1 N)) 3) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (* -1 (log (/ -1 N))))))","(/ (- (pow (+ (log -1) (* -3 (log (/ -1 N)))) 3) (* -8 (pow (log (/ -1 N)) 3))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))","(- (+ (* -1 (/ (- (* -1 (/ (+ (* 4 (pow (log (/ -1 N)) 2)) (* 8 (pow (log (/ -1 N)) 2))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (/ (* (+ (log -1) (+ (* -4 (log (/ -1 N))) (* -3 (log (/ -1 N))))) (- (pow (+ (log -1) (* -3 (log (/ -1 N)))) 3) (* -8 (pow (log (/ -1 N)) 3)))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))) 2))) N)) (/ (pow (+ (log -1) (* -3 (log (/ -1 N)))) 3) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (* -8 (/ (pow (log (/ -1 N)) 3) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))))","(- (+ (* -1 (/ (- (+ (* -1 (/ (+ (* 4 (pow (log (/ -1 N)) 2)) (* 8 (pow (log (/ -1 N)) 2))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (* -1 (/ (- (* -1 (/ (+ (* -4 (log (/ -1 N))) (+ (* -2 (* (log (/ -1 N)) (+ 1 (* -2 (log (/ -1 N)))))) (* 2 (pow (log (/ -1 N)) 2)))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (+ (/ (* (+ 1 (+ (* -2 (log (/ -1 N))) (* 1/2 (+ (log -1) (* -3 (log (/ -1 N))))))) (- (pow (+ (log -1) (* -3 (log (/ -1 N)))) 3) (* -8 (pow (log (/ -1 N)) 3)))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))) 2)) (/ (* (+ (log -1) (+ (* -4 (log (/ -1 N))) (* -3 (log (/ -1 N))))) (- (* -1 (/ (+ (* 4 (pow (log (/ -1 N)) 2)) (* 8 (pow (log (/ -1 N)) 2))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (/ (* (+ (log -1) (+ (* -4 (log (/ -1 N))) (* -3 (log (/ -1 N))))) (- (pow (+ (log -1) (* -3 (log (/ -1 N)))) 3) (* -8 (pow (log (/ -1 N)) 3)))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))) 2)))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2)))))) N))) (/ (* (+ (log -1) (+ (* -4 (log (/ -1 N))) (* -3 (log (/ -1 N))))) (- (pow (+ (log -1) (* -3 (log (/ -1 N)))) 3) (* -8 (pow (log (/ -1 N)) 3)))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))) 2))) N)) (/ (pow (+ (log -1) (* -3 (log (/ -1 N)))) 3) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (* -8 (/ (pow (log (/ -1 N)) 3) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))))","(- (+ (* -1 (/ (- (+ (* -1 (/ (+ (* 4 (pow (log (/ -1 N)) 2)) (* 8 (pow (log (/ -1 N)) 2))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (* -1 (/ (- (+ (* -1 (/ (+ (* -4 (log (/ -1 N))) (+ (* -2 (* (log (/ -1 N)) (+ 1 (* -2 (log (/ -1 N)))))) (* 2 (pow (log (/ -1 N)) 2)))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (* -1 (/ (- (+ (* -2 (/ (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (* -1 (/ (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2)))))) (+ (* -4 (/ (log (/ -1 N)) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (+ (* -8/3 (/ (pow (log (/ -1 N)) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (+ (* -2 (/ (* (log (/ -1 N)) (+ 1 (* 8/3 (log (/ -1 N))))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (+ (/ 1 (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2)))) (+ (/ (* (+ 1 (+ (* -2 (log (/ -1 N))) (* 1/2 (+ (log -1) (* -3 (log (/ -1 N))))))) (- (* -1 (/ (+ (* 4 (pow (log (/ -1 N)) 2)) (* 8 (pow (log (/ -1 N)) 2))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (/ (* (+ (log -1) (+ (* -4 (log (/ -1 N))) (* -3 (log (/ -1 N))))) (- (pow (+ (log -1) (* -3 (log (/ -1 N)))) 3) (* -8 (pow (log (/ -1 N)) 3)))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))) 2)))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2)))) (+ (/ (* (+ 1 (+ (* -2 (+ (log -1) (* -3 (log (/ -1 N))))) (+ (* -2/3 (+ (log -1) (* -3 (log (/ -1 N))))) (+ (* 2 (log (/ -1 N))) (* 8/3 (log (/ -1 N))))))) (- (pow (+ (log -1) (* -3 (log (/ -1 N)))) 3) (* -8 (pow (log (/ -1 N)) 3)))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))) 2)) (/ (* (+ (log -1) (+ (* -4 (log (/ -1 N))) (* -3 (log (/ -1 N))))) (- (* -1 (/ (+ (* -4 (log (/ -1 N))) (+ (* -2 (* (log (/ -1 N)) (+ 1 (* -2 (log (/ -1 N)))))) (* 2 (pow (log (/ -1 N)) 2)))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (+ (/ (* (+ 1 (+ (* -2 (log (/ -1 N))) (* 1/2 (+ (log -1) (* -3 (log (/ -1 N))))))) (- (pow (+ (log -1) (* -3 (log (/ -1 N)))) 3) (* -8 (pow (log (/ -1 N)) 3)))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))) 2)) (/ (* (+ (log -1) (+ (* -4 (log (/ -1 N))) (* -3 (log (/ -1 N))))) (- (* -1 (/ (+ (* 4 (pow (log (/ -1 N)) 2)) (* 8 (pow (log (/ -1 N)) 2))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (/ (* (+ (log -1) (+ (* -4 (log (/ -1 N))) (* -3 (log (/ -1 N))))) (- (pow (+ (log -1) (* -3 (log (/ -1 N)))) 3) (* -8 (pow (log (/ -1 N)) 3)))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))) 2)))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))))))))) N))) (+ (/ (* (+ 1 (+ (* -2 (log (/ -1 N))) (* 1/2 (+ (log -1) (* -3 (log (/ -1 N))))))) (- (pow (+ (log -1) (* -3 (log (/ -1 N)))) 3) (* -8 (pow (log (/ -1 N)) 3)))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))) 2)) (/ (* (+ (log -1) (+ (* -4 (log (/ -1 N))) (* -3 (log (/ -1 N))))) (- (* -1 (/ (+ (* 4 (pow (log (/ -1 N)) 2)) (* 8 (pow (log (/ -1 N)) 2))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (/ (* (+ (log -1) (+ (* -4 (log (/ -1 N))) (* -3 (log (/ -1 N))))) (- (pow (+ (log -1) (* -3 (log (/ -1 N)))) 3) (* -8 (pow (log (/ -1 N)) 3)))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))) 2)))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2)))))) N))) (/ (* (+ (log -1) (+ (* -4 (log (/ -1 N))) (* -3 (log (/ -1 N))))) (- (pow (+ (log -1) (* -3 (log (/ -1 N)))) 3) (* -8 (pow (log (/ -1 N)) 3)))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))) 2))) N)) (/ (pow (+ (log -1) (* -3 (log (/ -1 N)))) 3) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))) (* -8 (/ (pow (log (/ -1 N)) 3) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))))))","(- (pow (+ (log -1) (* -3 (log (/ -1 N)))) 3) (* -8 (pow (log (/ -1 N)) 3)))","(- (+ (* 4 (/ (pow (log (/ -1 N)) 2) N)) (+ (* 8 (/ (pow (log (/ -1 N)) 2) N)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 3))) (* -8 (pow (log (/ -1 N)) 3)))","(- (+ (* -1 (/ (- (+ (* -4 (/ (log (/ -1 N)) N)) (+ (* -2 (/ (* (log (/ -1 N)) (+ 1 (* -2 (log (/ -1 N))))) N)) (* 2 (/ (pow (log (/ -1 N)) 2) N)))) (+ (* 4 (pow (log (/ -1 N)) 2)) (* 8 (pow (log (/ -1 N)) 2)))) N)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 3)) (* -8 (pow (log (/ -1 N)) 3)))","(- (+ (* -1 (/ (- (* -1 (/ (- (* -1 (/ (- (+ (* -2 (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2)) (* -1 (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))) (+ 1 (+ (* -4 (log (/ -1 N))) (+ (* -8/3 (pow (log (/ -1 N)) 2)) (* -2 (* (log (/ -1 N)) (+ 1 (* 8/3 (log (/ -1 N)))))))))) N)) (+ (* -4 (log (/ -1 N))) (+ (* -2 (* (log (/ -1 N)) (+ 1 (* -2 (log (/ -1 N)))))) (* 2 (pow (log (/ -1 N)) 2))))) N)) (+ (* 4 (pow (log (/ -1 N)) 2)) (* 8 (pow (log (/ -1 N)) 2)))) N)) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 3)) (* -8 (pow (log (/ -1 N)) 3)))","(- (* -3 (log (/ -1 N))) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N)))))","(- (+ (* -3 (log (/ -1 N))) (/ 1 N)) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N)))))","(- (+ (* -3 (log (/ -1 N))) (* -1 (/ (- (* 1/2 (/ 1 N)) 1) N))) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N)))))","(- (+ (* -3 (log (/ -1 N))) (* -1 (/ (- (* -1 (/ (- (* 1/3 (/ 1 N)) 1/2) N)) 1) N))) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N)))))","(- (+ (log -1) (* -3 (log (/ -1 N)))) (* -2 (log (/ -1 N))))","(- (+ (log -1) (+ (* -3 (log (/ -1 N))) (/ 1 N))) (* -2 (log (/ -1 N))))","(- (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -1 (/ (- (* 1/2 (/ 1 N)) 1) N)))) (* -2 (log (/ -1 N))))","(- (+ (log -1) (+ (* -3 (log (/ -1 N))) (* -1 (/ (- (* -1 (/ (- (* 1/3 (/ 1 N)) 1/2) N)) 1) N)))) (* -2 (log (/ -1 N))))","(+ (log -1) (* -3 (log (/ -1 N))))","(+ (log -1) (+ (* -3 (log (/ -1 N))) (/ 1 (pow N 3))))","(+ (log -1) (+ (* -3 (log (/ -1 N))) (* -1 (/ (- (* 1/2 (/ 1 (pow N 3))) 1) (pow N 3)))))","(+ (log -1) (+ (* -3 (log (/ -1 N))) (* -1 (/ (- (* -1 (/ (- (* 1/3 (/ 1 (pow N 3))) 1/2) (pow N 3))) 1) (pow N 3)))))","(- (* -3 (log (/ -1 N))) (* -1 (log (/ -1 N))))","(- (+ (* -3 (log (/ -1 N))) (/ 1 (pow N 3))) (* -1 (log (/ -1 N))))","(- (+ (* -3 (log (/ -1 N))) (* -1 (/ (- (* 1/2 (/ 1 (pow N 3))) 1) (pow N 3)))) (* -1 (log (/ -1 N))))","(- (+ (* -3 (log (/ -1 N))) (* -1 (/ (- (* -1 (/ (- (* 1/3 (/ 1 (pow N 3))) 1/2) (pow N 3))) 1) (pow N 3)))) (* -1 (log (/ -1 N))))","(* -1 (+ (log -1) (* -1 (log (/ -1 N)))))","(+ (log -1) (* -1 (log (/ -1 N))))","(- (* 4 (/ (pow (log (/ -1 N)) 2) (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))))) (+ (log -1) (+ (* -1 (log (/ -1 N))) (/ (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2) (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N)))))))))","(- (+ (* -1 (/ (- (/ (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 2)) (+ (* -2 (/ (log (/ -1 N)) (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))))) (+ (* 2 (/ (log -1) (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))))) (* 4 (/ (pow (log (/ -1 N)) 2) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 2)))))) N)) (* 4 (/ (pow (log (/ -1 N)) 2) (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N)))))))) (+ (log -1) (+ (* -1 (log (/ -1 N))) (/ (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2) (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N)))))))))","(- (+ (* -1 (/ (- (+ (* -1 (/ (- (+ (* -2 (/ (log (/ -1 N)) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 2))) (+ (* -3/2 (/ (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 2))) (+ (* 2 (/ (log -1) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 2))) (* 4 (/ (log (/ -1 N)) (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N)))))))))) (+ (* -6 (/ (pow (log (/ -1 N)) 2) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 2))) (+ (* -4 (/ (pow (log (/ -1 N)) 2) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 3))) (+ (* -1 (/ (+ (log -1) (* -1 (log (/ -1 N)))) (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))))) (+ (/ 1 (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N)))))) (/ (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 3))))))) N)) (/ (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 2))) (+ (* -2 (/ (log (/ -1 N)) (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))))) (+ (* 2 (/ (log -1) (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))))) (* 4 (/ (pow (log (/ -1 N)) 2) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 2)))))) N)) (* 4 (/ (pow (log (/ -1 N)) 2) (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N)))))))) (+ (log -1) (+ (* -1 (log (/ -1 N))) (/ (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2) (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N)))))))))","(- (+ (* -1 (/ (- (+ (* -1 (/ (- (+ (* -2 (/ (log (/ -1 N)) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 2))) (+ (* -3/2 (/ (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 2))) (+ (* -1 (/ (- (+ (* -6 (/ (pow (log (/ -1 N)) 2) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 3))) (+ (* -4 (/ (pow (log (/ -1 N)) 2) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 4))) (+ (* -3/2 (/ (- (+ (* -2 (/ (log (/ -1 N)) (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))))) (* 2 (/ (log -1) (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N)))))))) (/ (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 2))) (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))))) (+ (* -1 (/ (+ (log -1) (* -1 (log (/ -1 N)))) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 2))) (+ (* 1/3 (/ (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 2))) (+ (/ 1 (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N)))))) (+ (/ 1 (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 2)) (/ (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 4))))))))) (+ (* -2 (/ (log (/ -1 N)) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 3))) (+ (* -3/2 (/ (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 3))) (+ (* 2/3 (/ (+ (log -1) (* -1 (log (/ -1 N)))) (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))))) (+ (* 4/3 (/ (pow (log (/ -1 N)) 2) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 2))) (+ (* 2 (/ (log -1) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 3))) (+ (* 4 (/ (log (/ -1 N)) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 2))) (* 6 (/ (pow (log (/ -1 N)) 2) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 3)))))))))) N)) (+ (* 2 (/ (log -1) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 2))) (* 4 (/ (log (/ -1 N)) (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))))))))) (+ (* -6 (/ (pow (log (/ -1 N)) 2) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 2))) (+ (* -4 (/ (pow (log (/ -1 N)) 2) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 3))) (+ (* -1 (/ (+ (log -1) (* -1 (log (/ -1 N)))) (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))))) (+ (/ 1 (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N)))))) (/ (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 3))))))) N)) (/ (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 2))) (+ (* -2 (/ (log (/ -1 N)) (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))))) (+ (* 2 (/ (log -1) (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))))) (* 4 (/ (pow (log (/ -1 N)) 2) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 2)))))) N)) (* 4 (/ (pow (log (/ -1 N)) 2) (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N)))))))) (+ (log -1) (+ (* -1 (log (/ -1 N))) (/ (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2) (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N)))))))))","(/ (- (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)) (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))))","(- (+ (* -1 (/ (- (+ (* -1 (/ (+ (* -2 (log (/ -1 N))) (* 2 (log -1))) (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))))) (/ (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 2))) (* 4 (/ (pow (log (/ -1 N)) 2) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 2)))) N)) (* 4 (/ (pow (log (/ -1 N)) 2) (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N)))))))) (/ (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2) (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N)))))))","(- (+ (* -1 (/ (- (+ (* -1 (/ (+ (* -2 (log (/ -1 N))) (* 2 (log -1))) (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))))) (+ (* -1 (/ (- (+ (* 4 (/ (log (/ -1 N)) (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))))) (* 4 (/ (pow (log (/ -1 N)) 2) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 3)))) (+ (* -3/2 (/ (- (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 2))) (+ (* -1 (/ (+ (log -1) (* -1 (log (/ -1 N)))) (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))))) (+ (* -1 (/ (+ (* -2 (log (/ -1 N))) (* 2 (log -1))) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 2))) (+ (/ 1 (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N)))))) (/ (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 3))))))) N)) (/ (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 2)))) (* 4 (/ (pow (log (/ -1 N)) 2) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 2)))) N)) (* 4 (/ (pow (log (/ -1 N)) 2) (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N)))))))) (/ (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2) (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N)))))))","(- (+ (* -1 (/ (- (+ (* -1 (/ (+ (* -2 (log (/ -1 N))) (* 2 (log -1))) (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))))) (+ (* -1 (/ (- (+ (* -1 (/ (- (+ (* -3/2 (/ (- (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 3))) (+ (* -1 (/ (+ (log -1) (* -1 (log (/ -1 N)))) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 2))) (+ (* -1 (/ (+ (* -2 (log (/ -1 N))) (* 2 (log -1))) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 3))) (+ (/ 1 (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N)))))) (+ (/ 1 (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 2)) (/ (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 4))))))) (+ (* -3/2 (/ (- (+ (* -1 (/ (+ (* -2 (log (/ -1 N))) (* 2 (log -1))) (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))))) (/ (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 2))) (* 4 (/ (pow (log (/ -1 N)) 2) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 2)))) (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))))) (+ (* 1/3 (/ (- (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 2))) (+ (* 2/3 (/ (+ (log -1) (* -1 (log (/ -1 N)))) (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))))) (+ (* 4 (/ (log (/ -1 N)) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 2))) (* 4 (/ (pow (log (/ -1 N)) 2) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 4)))))))) N)) (+ (* 4 (/ (log (/ -1 N)) (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))))) (* 4 (/ (pow (log (/ -1 N)) 2) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 3))))) (+ (* -3/2 (/ (- (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 2))) (+ (* -1 (/ (+ (log -1) (* -1 (log (/ -1 N)))) (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))))) (+ (* -1 (/ (+ (* -2 (log (/ -1 N))) (* 2 (log -1))) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 2))) (+ (/ 1 (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N)))))) (/ (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 3))))))) N)) (/ (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 2)))) (* 4 (/ (pow (log (/ -1 N)) 2) (pow (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N))))) 2)))) N)) (* 4 (/ (pow (log (/ -1 N)) 2) (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N)))))))) (/ (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2) (+ (log -1) (+ (* -2 (log (/ -1 N))) (* -1 (log (/ -1 N)))))))","(- (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))","(- (+ (* -2 (/ (log (/ -1 N)) N)) (+ (* 2 (/ (log -1) N)) (* 4 (pow (log (/ -1 N)) 2)))) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))","(- (+ (* -1 (/ (- (* -1 (/ (- (* 4 (log (/ -1 N))) (+ 1 (* -1 (+ (log -1) (* -1 (log (/ -1 N))))))) N)) (+ (* -2 (log (/ -1 N))) (* 2 (log -1)))) N)) (* 4 (pow (log (/ -1 N)) 2))) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))","(- (+ (* -1 (/ (- (* -1 (/ (- (+ (* -1 (/ (- 1 (* 2/3 (+ (log -1) (* -1 (log (/ -1 N)))))) N)) (* 4 (log (/ -1 N)))) (+ 1 (* -1 (+ (log -1) (* -1 (log (/ -1 N))))))) N)) (+ (* -2 (log (/ -1 N))) (* 2 (log -1)))) N)) (* 4 (pow (log (/ -1 N)) 2))) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))","(* 4 (pow (log (/ -1 N)) 2))","(+ (* 4 (/ (log (/ -1 N)) (pow N 2))) (* 4 (pow (log (/ -1 N)) 2)))","(+ (* 2 (/ (log (/ -1 N)) (pow N 4))) (+ (* 4 (/ (log (/ -1 N)) (pow N 2))) (+ (* 4 (pow (log (/ -1 N)) 2)) (/ 1 (pow N 4)))))","(+ (* 4/3 (/ (log (/ -1 N)) (pow N 6))) (+ (* 2 (/ (log (/ -1 N)) (pow N 4))) (+ (* 4 (/ (log (/ -1 N)) (pow N 2))) (+ (* 4 (pow (log (/ -1 N)) 2)) (+ (/ 1 (pow N 4)) (/ 1 (pow N 6)))))))","(* -8 (pow (log (/ -1 N)) 3))","(+ (* -8 (pow (log (/ -1 N)) 3)) (* -1 (/ (+ (* 4 (pow (log (/ -1 N)) 2)) (* 8 (pow (log (/ -1 N)) 2))) N)))","(+ (* -8 (pow (log (/ -1 N)) 3)) (* -1 (/ (+ (* -1 (/ (+ (* -4 (log (/ -1 N))) (+ (* -2 (* (log (/ -1 N)) (+ 1 (* -2 (log (/ -1 N)))))) (* 2 (pow (log (/ -1 N)) 2)))) N)) (+ (* 4 (pow (log (/ -1 N)) 2)) (* 8 (pow (log (/ -1 N)) 2)))) N)))","(+ (* -8 (pow (log (/ -1 N)) 3)) (* -1 (/ (+ (* -1 (/ (+ (* -4 (log (/ -1 N))) (+ (* -2 (* (log (/ -1 N)) (+ 1 (* -2 (log (/ -1 N)))))) (+ (* -1 (/ (+ 1 (+ (* -4 (log (/ -1 N))) (+ (* -8/3 (pow (log (/ -1 N)) 2)) (* -2 (* (log (/ -1 N)) (+ 1 (* 8/3 (log (/ -1 N))))))))) N)) (* 2 (pow (log (/ -1 N)) 2))))) N)) (+ (* 4 (pow (log (/ -1 N)) 2)) (* 8 (pow (log (/ -1 N)) 2)))) N)))","(pow (+ (log -1) (* -3 (log (/ -1 N)))) 3)","(+ (* -1 (/ (+ (* -2 (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2)) (* -1 (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2))) (pow N 3))) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 3))","(+ (* -1 (/ (+ (* -2 (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2)) (+ (* -1 (/ (+ (* -1/2 (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2)) (+ (* 2 (+ (log -1) (* -3 (log (/ -1 N))))) (* (+ 1 (* -1 (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (log -1) (* -3 (log (/ -1 N))))))) (pow N 3))) (* -1 (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2)))) (pow N 3))) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 3))","(+ (* -1 (/ (+ (* -2 (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2)) (+ (* -1 (/ (+ (* -1 (/ (+ (log -1) (+ (* -3 (log (/ -1 N))) (+ (* -1 (+ 1 (* -1 (+ (log -1) (* -3 (log (/ -1 N))))))) (+ (* -1/3 (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2)) (* (+ 1 (* -2/3 (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (log -1) (* -3 (log (/ -1 N))))))))) (pow N 3))) (+ (* -1/2 (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2)) (+ (* 2 (+ (log -1) (* -3 (log (/ -1 N))))) (* (+ 1 (* -1 (+ (log -1) (* -3 (log (/ -1 N)))))) (+ (log -1) (* -3 (log (/ -1 N)))))))) (pow N 3))) (* -1 (pow (+ (log -1) (* -3 (log (/ -1 N)))) 2)))) (pow N 3))) (pow (+ (log -1) (* -3 (log (/ -1 N)))) 3))","(* -2 (log (/ -1 N)))","(- (* -2 (log (/ -1 N))) (/ 1 N))","(+ (* -2 (log (/ -1 N))) (* -1 (/ (- 1 (* 1/2 (/ 1 N))) N)))","(+ (* -2 (log (/ -1 N))) (* -1 (/ (+ 1 (* -1 (/ (+ 1/2 (* 2/3 (/ 1 N))) N))) N)))","(pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)","(+ (* -1 (/ (+ (* -2 (log (/ -1 N))) (* 2 (log -1))) N)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))","(+ (* -1 (/ (+ (* -2 (log (/ -1 N))) (+ (* -1 (/ (+ 1 (* -1 (+ (log -1) (* -1 (log (/ -1 N)))))) N)) (* 2 (log -1)))) N)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))","(+ (* -1 (/ (+ (* -2 (log (/ -1 N))) (+ (* -1 (/ (+ 1 (+ (* -1 (+ (log -1) (* -1 (log (/ -1 N))))) (* -1 (/ (- (* 2/3 (+ (log -1) (* -1 (log (/ -1 N))))) 1) N)))) N)) (* 2 (log -1)))) N)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))"]],"memory":[[-1633024,14140944]],"method":["egg-herbie"],"outputs":[[]],"time":151.889892578125,"type":"simplify"},{"count":[[20,300]],"inputs":[["(fma.f64 (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) (*.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N))))","(-.f64 (/.f64 (-.f64 (pow.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) #s(literal 3 binary64)) (pow.f64 (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) #s(literal 3 binary64))) (fma.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (*.f64 N N) N)) (fma.f64 (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) (*.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)))))) (log.f64 N))","(/.f64 (-.f64 (pow.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) #s(literal 3 binary64)) (pow.f64 (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) #s(literal 3 binary64))) (fma.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (*.f64 N N) N)) (fma.f64 (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) (*.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N))))))","(-.f64 (pow.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) #s(literal 3 binary64)) (pow.f64 (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) #s(literal 3 binary64)))","(-.f64 (-.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N))) (log.f64 N))","(-.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)))","(log1p.f64 (*.f64 (*.f64 N N) N))","(*.f64 (*.f64 N N) N)","(+.f64 (neg.f64 (log.f64 N)) (log1p.f64 (*.f64 (*.f64 N N) N)))","(-.f64 (+.f64 (neg.f64 (log.f64 N)) (log1p.f64 (*.f64 (*.f64 N N) N))) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)))","(neg.f64 (log.f64 N))","(log.f64 N)","(-.f64 (/.f64 (-.f64 (*.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (fma.f64 N N #s(literal -1 binary64)))) (*.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64))))) (+.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64))))) (log.f64 N))","(/.f64 (-.f64 (*.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (fma.f64 N N #s(literal -1 binary64)))) (*.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64))))) (+.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64)))))","(-.f64 (*.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (fma.f64 N N #s(literal -1 binary64)))) (*.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64)))))","(*.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (fma.f64 N N #s(literal -1 binary64))))","(pow.f64 (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) #s(literal 3 binary64))","(pow.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) #s(literal 3 binary64))","(log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N))","(*.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64))))"]],"memory":[[-604576,18496720]],"outputs":[["#s(literal -1 binary64)","#s(literal 3 binary64)","#s(literal 8 binary64)","#s(literal 5 binary64)","#s(literal 4 binary64)","#s(literal 9 binary64)","#s(literal 6 binary64)","#s(literal 2 binary64)","#s(literal -3 binary64)","#s(literal 27 binary64)","#s(literal -2 binary64)","#s(literal 0 binary64)","#s(literal 1 binary64)","#s(literal 16 binary64)","#s(literal 13 binary64)","#s(literal -1 binary64)","#s(literal 3 binary64)","#s(literal 8 binary64)","#s(literal 5 binary64)","#s(literal 4 binary64)","#s(literal 9 binary64)","#s(literal 6 binary64)","#s(literal 2 binary64)","#s(literal -3 binary64)","#s(literal 27 binary64)","#s(literal -2 binary64)","#s(literal 0 binary64)","#s(literal 1 binary64)","#s(literal 16 binary64)","#s(literal 13 binary64)","#s(literal -1 binary64)","#s(literal 3 binary64)","#s(literal 8 binary64)","#s(literal 5 binary64)","#s(literal 4 binary64)","#s(literal 9 binary64)","#s(literal 6 binary64)","#s(literal 2 binary64)","#s(literal -3 binary64)","#s(literal 27 binary64)","#s(literal -2 binary64)","#s(literal 0 binary64)","#s(literal 1 binary64)","#s(literal 16 binary64)","#s(literal 13 binary64)","#s(literal -1 binary64)","#s(literal 3 binary64)","#s(literal 8 binary64)","#s(literal 5 binary64)","#s(literal 4 binary64)","#s(literal 9 binary64)","#s(literal 6 binary64)","#s(literal 2 binary64)","#s(literal -3 binary64)","#s(literal 27 binary64)","#s(literal -2 binary64)","#s(literal 0 binary64)","#s(literal 1 binary64)","#s(literal 16 binary64)","#s(literal 13 binary64)","#s(literal -1 binary64)","#s(literal 3 binary64)","#s(literal 8 binary64)","#s(literal 5 binary64)","#s(literal 4 binary64)","#s(literal 9 binary64)","#s(literal 6 binary64)","#s(literal 2 binary64)","#s(literal -3 binary64)","#s(literal 27 binary64)","#s(literal -2 binary64)","#s(literal 0 binary64)","#s(literal 1 binary64)","#s(literal 16 binary64)","#s(literal 13 binary64)","#s(literal -1 binary64)","#s(literal 3 binary64)","#s(literal 8 binary64)","#s(literal 5 binary64)","#s(literal 4 binary64)","#s(literal 9 binary64)","#s(literal 6 binary64)","#s(literal 2 binary64)","#s(literal -3 binary64)","#s(literal 27 binary64)","#s(literal -2 binary64)","#s(literal 0 binary64)","#s(literal 1 binary64)","#s(literal 16 binary64)","#s(literal 13 binary64)","#s(literal -1 binary64)","#s(literal 3 binary64)","#s(literal 8 binary64)","#s(literal 5 binary64)","#s(literal 4 binary64)","#s(literal 9 binary64)","#s(literal 6 binary64)","#s(literal 2 binary64)","#s(literal -3 binary64)","#s(literal 27 binary64)","#s(literal -2 binary64)","#s(literal 0 binary64)","#s(literal 1 binary64)","#s(literal 16 binary64)","#s(literal 13 binary64)","#s(literal -1 binary64)","#s(literal 3 binary64)","#s(literal 8 binary64)","#s(literal 5 binary64)","#s(literal 4 binary64)","#s(literal 9 binary64)","#s(literal 6 binary64)","#s(literal 2 binary64)","#s(literal -3 binary64)","#s(literal 27 binary64)","#s(literal -2 binary64)","#s(literal 0 binary64)","#s(literal 1 binary64)","#s(literal 16 binary64)","#s(literal 13 binary64)","#s(literal -1 binary64)","#s(literal 3 binary64)","#s(literal 8 binary64)","#s(literal 5 binary64)","#s(literal 4 binary64)","#s(literal 9 binary64)","#s(literal 6 binary64)","#s(literal 2 binary64)","#s(literal -3 binary64)","#s(literal 27 binary64)","#s(literal -2 binary64)","#s(literal 0 binary64)","#s(literal 1 binary64)","#s(literal 16 binary64)","#s(literal 13 binary64)","#s(literal -1 binary64)","#s(literal 3 binary64)","#s(literal 8 binary64)","#s(literal 5 binary64)","#s(literal 4 binary64)","#s(literal 9 binary64)","#s(literal 6 binary64)","#s(literal 2 binary64)","#s(literal -3 binary64)","#s(literal 27 binary64)","#s(literal -2 binary64)","#s(literal 0 binary64)","#s(literal 1 binary64)","#s(literal 16 binary64)","#s(literal 13 binary64)","#s(literal -1 binary64)","#s(literal 3 binary64)","#s(literal 8 binary64)","#s(literal 5 binary64)","#s(literal 4 binary64)","#s(literal 9 binary64)","#s(literal 6 binary64)","#s(literal 2 binary64)","#s(literal -3 binary64)","#s(literal 27 binary64)","#s(literal -2 binary64)","#s(literal 0 binary64)","#s(literal 1 binary64)","#s(literal 16 binary64)","#s(literal 13 binary64)","#s(literal -1 binary64)","#s(literal 3 binary64)","#s(literal 8 binary64)","#s(literal 5 binary64)","#s(literal 4 binary64)","#s(literal 9 binary64)","#s(literal 6 binary64)","#s(literal 2 binary64)","#s(literal -3 binary64)","#s(literal 27 binary64)","#s(literal -2 binary64)","#s(literal 0 binary64)","#s(literal 1 binary64)","#s(literal 16 binary64)","#s(literal 13 binary64)","#s(literal -1 binary64)","#s(literal 3 binary64)","#s(literal 8 binary64)","#s(literal 5 binary64)","#s(literal 4 binary64)","#s(literal 9 binary64)","#s(literal 6 binary64)","#s(literal 2 binary64)","#s(literal -3 binary64)","#s(literal 27 binary64)","#s(literal -2 binary64)","#s(literal 0 binary64)","#s(literal 1 binary64)","#s(literal 16 binary64)","#s(literal 13 binary64)","#s(literal -1 binary64)","#s(literal 3 binary64)","#s(literal 8 binary64)","#s(literal 5 binary64)","#s(literal 4 binary64)","#s(literal 9 binary64)","#s(literal 6 binary64)","#s(literal 2 binary64)","#s(literal -3 binary64)","#s(literal 27 binary64)","#s(literal -2 binary64)","#s(literal 0 binary64)","#s(literal 1 binary64)","#s(literal 16 binary64)","#s(literal 13 binary64)","#s(literal -1 binary64)","#s(literal 3 binary64)","#s(literal 8 binary64)","#s(literal 5 binary64)","#s(literal 4 binary64)","#s(literal 9 binary64)","#s(literal 6 binary64)","#s(literal 2 binary64)","#s(literal -3 binary64)","#s(literal 27 binary64)","#s(literal -2 binary64)","#s(literal 0 binary64)","#s(literal 1 binary64)","#s(literal 16 binary64)","#s(literal 13 binary64)","#s(literal -1 binary64)","#s(literal 3 binary64)","#s(literal 8 binary64)","#s(literal 5 binary64)","#s(literal 4 binary64)","#s(literal 9 binary64)","#s(literal 6 binary64)","#s(literal 2 binary64)","#s(literal -3 binary64)","#s(literal 27 binary64)","#s(literal -2 binary64)","#s(literal 0 binary64)","#s(literal 1 binary64)","#s(literal 16 binary64)","#s(literal 13 binary64)","#s(literal -1 binary64)","#s(literal 3 binary64)","#s(literal 8 binary64)","#s(literal 5 binary64)","#s(literal 4 binary64)","#s(literal 9 binary64)","#s(literal 6 binary64)","#s(literal 2 binary64)","#s(literal -3 binary64)","#s(literal 27 binary64)","#s(literal -2 binary64)","#s(literal 0 binary64)","#s(literal 1 binary64)","#s(literal 16 binary64)","#s(literal 13 binary64)","#s(literal -1 binary64)","#s(literal 3 binary64)","#s(literal 8 binary64)","#s(literal 5 binary64)","#s(literal 4 binary64)","#s(literal 9 binary64)","#s(literal 6 binary64)","#s(literal 2 binary64)","#s(literal -3 binary64)","#s(literal 27 binary64)","#s(literal -2 binary64)","#s(literal 0 binary64)","#s(literal 1 binary64)","#s(literal 16 binary64)","#s(literal 13 binary64)","#s(literal -1 binary64)","#s(literal 3 binary64)","#s(literal 8 binary64)","#s(literal 5 binary64)","#s(literal 4 binary64)","#s(literal 9 binary64)","#s(literal 6 binary64)","#s(literal 2 binary64)","#s(literal -3 binary64)","#s(literal 27 binary64)","#s(literal -2 binary64)","#s(literal 0 binary64)","#s(literal 1 binary64)","#s(literal 16 binary64)","#s(literal 13 binary64)","#s(literal -1 binary64)","#s(literal 3 binary64)","#s(literal 8 binary64)","#s(literal 5 binary64)","#s(literal 4 binary64)","#s(literal 9 binary64)","#s(literal 6 binary64)","#s(literal 2 binary64)","#s(literal -3 binary64)","#s(literal 27 binary64)","#s(literal -2 binary64)","#s(literal 0 binary64)","#s(literal 1 binary64)","#s(literal 16 binary64)","#s(literal 13 binary64)"]],"time":464.548095703125,"type":"rewrite"},{"compiler":[[525,71]],"memory":[[1725488,1725488]],"time":3.076904296875,"type":"eval"},{"alts":[["(-.f64 (/.f64 (-.f64 (pow.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) #s(literal 3 binary64)) (pow.f64 (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) #s(literal 3 binary64))) (fma.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (*.f64 N N) N)) (fma.f64 (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) (*.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)))))) (log.f64 N))","done",48.45388129268919,"binary64"],["(-.f64 (/.f64 (-.f64 (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 3 binary64)) (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 3 binary64))) (fma.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (fma.f64 N N #s(literal -1 binary64))) (fma.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64))) (*.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64))))))) (log.f64 N))","next",48.86788817146941,"binary64"],["(-.f64 (/.f64 (-.f64 (*.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (*.f64 N N) N))) (*.f64 (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)))) (+.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)))) (log.f64 N))","done",48.62788034417751,"binary64"],["(-.f64 (/.f64 (-.f64 (*.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (fma.f64 N N #s(literal -1 binary64)))) (*.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64))))) (+.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64))))) (log.f64 N))","done",48.96618890513321,"binary64"],["(-.f64 (-.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N))) (log.f64 N))","done",48.58560594139277,"binary64"],["(-.f64 (+.f64 (neg.f64 (log.f64 N)) (log1p.f64 (*.f64 (*.f64 N N) N))) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)))","done",48.78744101692509,"binary64"],["(-.f64 (+.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (/.f64 #s(literal -1 binary64) (-.f64 #s(literal 1 binary64) N)))) (log.f64 N))","done",49.134008003385,"binary64"],["(-.f64 (log1p.f64 N) (log.f64 N))","done",48.976030472678374,"binary64"],["(neg.f64 (/.f64 (*.f64 (neg.f64 (log.f64 (fma.f64 N N N))) (log.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) N))) (log.f64 (fma.f64 N N N))))","done",47.10482384744166,"binary64"],["(neg.f64 (log.f64 (/.f64 N (+.f64 N #s(literal 1 binary64)))))","done",46.77664099805991,"binary64"],["#s(literal 1 binary64)","done",57.65361816382278,"binary64"]],"compiler":[[60,18],[48,16],[44,15],[35,13],[16,11],[17,12],[15,11],[5,4],[20,11],[7,6],[1,2]],"count":[[26,11]],"kept":[{"done":[5,5],"fresh":[1,1],"new":[15,0],"picked":[5,5]}],"memory":[[-5083568,3163952]],"min-error":[[44.207531044898566,"binary64"]],"time":6.55810546875,"type":"prune"},{"inputs":[["(-.f64 (/.f64 (-.f64 (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 3 binary64)) (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 3 binary64))) (fma.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (fma.f64 N N #s(literal -1 binary64))) (fma.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64))) (*.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64))))))) (log.f64 N))","(/.f64 (-.f64 (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 3 binary64)) (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 3 binary64))) (fma.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (fma.f64 N N #s(literal -1 binary64))) (fma.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64))) (*.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64)))))))","(-.f64 (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 3 binary64)) (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 3 binary64)))","(pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 3 binary64))","(log.f64 (fma.f64 N N #s(literal -1 binary64)))","(fma.f64 N N #s(literal -1 binary64))","N","#s(literal -1 binary64)","#s(literal 3 binary64)","(pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 3 binary64))","(log.f64 (+.f64 N #s(literal -1 binary64)))","(+.f64 N #s(literal -1 binary64))","(fma.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (fma.f64 N N #s(literal -1 binary64))) (fma.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64))) (*.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64))))))","(fma.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64))) (*.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64)))))","(*.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64))))","(log.f64 N)"]],"locations":[["(/.f64 (-.f64 (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 3 binary64)) (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 3 binary64))) (fma.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (fma.f64 N N #s(literal -1 binary64))) (fma.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64))) (*.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64)))))))","cost-diff",0],["(-.f64 (/.f64 (-.f64 (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 3 binary64)) (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 3 binary64))) (fma.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (fma.f64 N N #s(literal -1 binary64))) (fma.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64))) (*.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64))))))) (log.f64 N))","cost-diff",0],["(fma.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (fma.f64 N N #s(literal -1 binary64))) (fma.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64))) (*.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64))))))","cost-diff",1],["(fma.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64))) (*.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64)))))","cost-diff",4]],"memory":[[3570064,11769952]],"method":["egg-herbie"],"outputs":[["(-.f64 (/.f64 (-.f64 (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 3 binary64)) (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 3 binary64))) (fma.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (fma.f64 N N #s(literal -1 binary64))) (fma.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64))) (*.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64))))))) (log.f64 N))","(-.f64 (/.f64 (-.f64 (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 3 binary64)) (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 3 binary64))) (fma.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (+.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64)))) (*.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64)))))) (log.f64 N))","(/.f64 (-.f64 (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 3 binary64)) (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 3 binary64))) (fma.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (fma.f64 N N #s(literal -1 binary64))) (fma.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64))) (*.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64)))))))","(/.f64 (-.f64 (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 3 binary64)) (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 3 binary64))) (fma.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (+.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64)))) (*.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64))))))","(-.f64 (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 3 binary64)) (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 3 binary64)))","(pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 3 binary64))","(log.f64 (fma.f64 N N #s(literal -1 binary64)))","(fma.f64 N N #s(literal -1 binary64))","N","#s(literal -1 binary64)","#s(literal 3 binary64)","(pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 3 binary64))","(log.f64 (+.f64 N #s(literal -1 binary64)))","(+.f64 N #s(literal -1 binary64))","(fma.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (fma.f64 N N #s(literal -1 binary64))) (fma.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64))) (*.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64))))))","(fma.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (+.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64)))) (*.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64)))))","(fma.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64))) (*.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64)))))","(*.f64 (+.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64)))) (log.f64 (+.f64 N #s(literal -1 binary64))))","(*.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64))))","(log.f64 N)"]],"time":215.159912109375,"type":"simplify"},{"compiler":[[226,21]],"locations":[["(*.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64))))","accuracy",0.46617128907376815],["(pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 3 binary64))","accuracy",0.7407189942110507],["(pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 3 binary64))","accuracy",0.7531015137479347],["(-.f64 (/.f64 (-.f64 (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 3 binary64)) (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 3 binary64))) (fma.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (fma.f64 N N #s(literal -1 binary64))) (fma.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64))) (*.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64))))))) (log.f64 N))","accuracy",48.976030472678374]],"memory":[[-3521168,28975360]],"mixsample":[[13.718505859375,"adjust",800],[2.7236328125,"ival-div",0],[6.92626953125,"ival-add",0],[2.089599609375,"ival-mult",400],[10.3330078125,"ival-mult",0],[9.546875,"ival-log",400],[0.7353515625,"ival-div",400],[0.135498046875,"ival-assert",0],[1.9150390625,"ival-add",400],[4.550537109375,"ival-sub",0],[18.324951171875,"ival-log",0],[0.328369140625,"ival-true",0],[0.532958984375,"ival-sub",400],[3.86865234375,"ival-pow",400],[0.373291015625,"exact",0],[13.666748046875,"ival-pow",0]],"outcomes":[[96.11474609375,1,"valid",198],[13.357666015625,0,"valid",58]],"time":135.430908203125,"type":"localize"},{"count":[[7,83]],"inputs":[["(fma.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64))) (*.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64)))))","(fma.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (fma.f64 N N #s(literal -1 binary64))) (fma.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64))) (*.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64))))))","(-.f64 (/.f64 (-.f64 (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 3 binary64)) (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 3 binary64))) (fma.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (fma.f64 N N #s(literal -1 binary64))) (fma.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64))) (*.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64))))))) (log.f64 N))","(/.f64 (-.f64 (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 3 binary64)) (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 3 binary64))) (fma.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (fma.f64 N N #s(literal -1 binary64))) (fma.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64))) (*.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64)))))))","(pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 3 binary64))","(pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 3 binary64))","(*.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64))))"]],"memory":[[-462192,16079872]],"outputs":[["(* 2 (pow (log -1) 2))","(+ (* 2 (pow (log -1) 2)) (* N (+ (* -2 (log -1)) (* -1 (log -1)))))","(+ (* 2 (pow (log -1) 2)) (* N (+ (* -2 (log -1)) (+ (* -1 (log -1)) (* N (+ 1 (+ (* -2 (log -1)) (* -1/2 (log -1)))))))))","(+ (* 2 (pow (log -1) 2)) (* N (+ (* -2 (log -1)) (+ (* -1 (log -1)) (* N (+ 1 (+ (* -2 (log -1)) (+ (* -1/2 (log -1)) (* N (+ 2 (+ (* -2/3 (log -1)) (* -1/3 (log -1)))))))))))))","(+ (* 2 (pow (log -1) 2)) (pow (log -1) 2))","(+ (* 2 (pow (log -1) 2)) (+ (* N (+ (* -2 (log -1)) (* -1 (log -1)))) (pow (log -1) 2)))","(+ (* 2 (pow (log -1) 2)) (+ (* N (+ (* -2 (log -1)) (+ (* -1 (log -1)) (* N (+ 1 (+ (* -4 (log -1)) (* -1/2 (log -1)))))))) (pow (log -1) 2)))","(+ (* 2 (pow (log -1) 2)) (+ (* N (+ (* -2 (log -1)) (+ (* -1 (log -1)) (* N (+ 1 (+ (* -4 (log -1)) (+ (* -1/2 (log -1)) (* N (+ 2 (+ (* -2/3 (log -1)) (* -1/3 (log -1)))))))))))) (pow (log -1) 2)))","(* -1 (log N))","(- (* -1 (* N (+ (* -2 (/ (pow (log -1) 2) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (* -1 (/ (pow (log -1) 2) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2))))))) (log N))","(- (* N (- (* N (- (+ (* -2 (/ (pow (log -1) 2) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (+ (* -1 (/ (pow (log -1) 2) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (/ (* (+ (* -2 (log -1)) (* -1 (log -1))) (- (+ (* -2 (/ (pow (log -1) 2) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (* -1 (/ (pow (log -1) 2) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2))))) (/ (* (pow (log -1) 3) (+ (* -2 (log -1)) (* -1 (log -1)))) (pow (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)) 2)))) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2))))) (+ (* -1 (/ (* (pow (log -1) 3) (pow (+ (* -2 (log -1)) (* -1 (log -1))) 2)) (pow (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)) 3))) (+ (* -1/2 (/ (pow (log -1) 2) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (+ (* 2 (/ (log -1) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (/ (* (log -1) (+ 1 (* -1 (log -1)))) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))))))) (+ (* -2 (/ (pow (log -1) 2) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (* -1 (/ (pow (log -1) 2) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2))))))) (log N))","(- (* N (- (* N (- (+ (* -2 (/ (pow (log -1) 2) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (+ (* -1 (/ (pow (log -1) 2) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (+ (* N (- (+ (/ (* (+ 1 (+ (* -4 (log -1)) (* -1/2 (log -1)))) (- (+ (* -2 (/ (pow (log -1) 2) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (* -1 (/ (pow (log -1) 2) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2))))) (/ (* (pow (log -1) 3) (+ (* -2 (log -1)) (* -1 (log -1)))) (pow (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)) 2)))) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2))) (/ (* (+ (* -2 (log -1)) (* -1 (log -1))) (- (+ (* -1/2 (/ (pow (log -1) 2) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (+ (* 2 (/ (log -1) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (/ (* (log -1) (+ 1 (* -1 (log -1)))) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2))))) (+ (/ (* (+ (* -2 (log -1)) (* -1 (log -1))) (- (+ (* -2 (/ (pow (log -1) 2) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (* -1 (/ (pow (log -1) 2) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2))))) (/ (* (pow (log -1) 3) (+ (* -2 (log -1)) (* -1 (log -1)))) (pow (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)) 2)))) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2))) (/ (* (pow (log -1) 3) (+ 1 (+ (* -4 (log -1)) (* -1/2 (log -1))))) (pow (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)) 2))))) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (+ (* -1 (/ (* (pow (log -1) 3) (* (+ 1 (+ (* -4 (log -1)) (* -1/2 (log -1)))) (+ (* -2 (log -1)) (* -1 (log -1))))) (pow (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)) 3))) (+ (* -1 (/ (+ 1 (* -1 (log -1))) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (+ (* -1/3 (/ (pow (log -1) 2) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (+ (/ (log -1) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2))) (+ (/ (* (log -1) (+ 1 (* -2/3 (log -1)))) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2))) (/ (* (+ (* -2 (log -1)) (* -1 (log -1))) (- (+ (* -2 (/ (pow (log -1) 2) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (* -1 (/ (pow (log -1) 2) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2))))) (+ (* -1 (/ (* (pow (log -1) 3) (pow (+ (* -2 (log -1)) (* -1 (log -1))) 2)) (pow (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)) 3))) (/ (* (pow (log -1) 3) (+ 1 (+ (* -4 (log -1)) (* -1/2 (log -1))))) (pow (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)) 2))))) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))))))))) (/ (* (+ (* -2 (log -1)) (* -1 (log -1))) (- (+ (* -2 (/ (pow (log -1) 2) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (* -1 (/ (pow (log -1) 2) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2))))) (/ (* (pow (log -1) 3) (+ (* -2 (log -1)) (* -1 (log -1)))) (pow (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)) 2)))) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))))) (+ (* -1 (/ (* (pow (log -1) 3) (pow (+ (* -2 (log -1)) (* -1 (log -1))) 2)) (pow (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)) 3))) (+ (* -1/2 (/ (pow (log -1) 2) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (+ (* 2 (/ (log -1) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (/ (* (log -1) (+ 1 (* -1 (log -1)))) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))))))) (+ (* -2 (/ (pow (log -1) 2) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (* -1 (/ (pow (log -1) 2) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2))))))) (log N))","(* -1 (/ (* N (+ (* -2 (pow (log -1) 2)) (* -1 (pow (log -1) 2)))) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2))))","(* N (+ (* -1 (/ (+ (* -2 (pow (log -1) 2)) (* -1 (pow (log -1) 2))) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (* N (- (+ (* -2 (/ (pow (log -1) 2) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (* -1 (/ (pow (log -1) 2) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2))))) (+ (* -1 (/ (* (+ (* -2 (log -1)) (* -1 (log -1))) (+ (* -2 (pow (log -1) 2)) (* -1 (pow (log -1) 2)))) (pow (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)) 2))) (+ (* -1/2 (/ (pow (log -1) 2) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (+ (* 2 (/ (log -1) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (/ (* (log -1) (+ 1 (* -1 (log -1)))) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2))))))))))","(* N (+ (* -1 (/ (+ (* -2 (pow (log -1) 2)) (* -1 (pow (log -1) 2))) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (* N (- (+ (* -2 (/ (pow (log -1) 2) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (+ (* -1 (/ (pow (log -1) 2) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (* N (- (* -1 (/ (+ (log -1) (+ (* -1 (+ 1 (* -1 (log -1)))) (+ (* -1/3 (pow (log -1) 2)) (* (log -1) (+ 1 (* -2/3 (log -1))))))) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (+ (* -1 (/ (* (+ 1 (+ (* -4 (log -1)) (* -1/2 (log -1)))) (+ (* -2 (pow (log -1) 2)) (* -1 (pow (log -1) 2)))) (pow (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)) 2))) (/ (* (+ (* -2 (log -1)) (* -1 (log -1))) (- (+ (* -2 (/ (pow (log -1) 2) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (* -1 (/ (pow (log -1) 2) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2))))) (+ (* -1 (/ (* (+ (* -2 (log -1)) (* -1 (log -1))) (+ (* -2 (pow (log -1) 2)) (* -1 (pow (log -1) 2)))) (pow (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)) 2))) (+ (* -1/2 (/ (pow (log -1) 2) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (+ (* 2 (/ (log -1) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (/ (* (log -1) (+ 1 (* -1 (log -1)))) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))))))) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))))))) (+ (* -1 (/ (* (+ (* -2 (log -1)) (* -1 (log -1))) (+ (* -2 (pow (log -1) 2)) (* -1 (pow (log -1) 2)))) (pow (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)) 2))) (+ (* -1/2 (/ (pow (log -1) 2) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (+ (* 2 (/ (log -1) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (/ (* (log -1) (+ 1 (* -1 (log -1)))) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2))))))))))","(* N (+ (* -1 (/ (+ (* -2 (pow (log -1) 2)) (* -1 (pow (log -1) 2))) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (* N (- (+ (* -2 (/ (pow (log -1) 2) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (+ (* -1 (/ (pow (log -1) 2) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (* N (- (+ (* -1 (/ (+ (log -1) (+ (* -1 (+ 1 (* -1 (log -1)))) (+ (* -1/3 (pow (log -1) 2)) (* (log -1) (+ 1 (* -2/3 (log -1))))))) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (* N (- (+ (* -1/2 (/ (pow (log -1) 2) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (+ (* 2 (/ (log -1) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (/ (* (log -1) (+ 1 (* -1 (log -1)))) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2))))) (+ (* -1 (/ (* (+ 2 (+ (* -2/3 (log -1)) (* -1/3 (log -1)))) (+ (* -2 (pow (log -1) 2)) (* -1 (pow (log -1) 2)))) (pow (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)) 2))) (+ (* -1 (/ (+ 1 (* -2/3 (log -1))) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (+ (* -1/2 (/ (+ 1 (* -1 (log -1))) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (+ (* -1/4 (/ (pow (log -1) 2) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (+ (* 2/3 (/ (log -1) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (+ (/ (* (log -1) (+ 11/12 (* -1/2 (log -1)))) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2))) (+ (/ (* (+ 1 (+ (* -4 (log -1)) (* -1/2 (log -1)))) (- (+ (* -2 (/ (pow (log -1) 2) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (* -1 (/ (pow (log -1) 2) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2))))) (+ (* -1 (/ (* (+ (* -2 (log -1)) (* -1 (log -1))) (+ (* -2 (pow (log -1) 2)) (* -1 (pow (log -1) 2)))) (pow (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)) 2))) (+ (* -1/2 (/ (pow (log -1) 2) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (+ (* 2 (/ (log -1) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (/ (* (log -1) (+ 1 (* -1 (log -1)))) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))))))) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2))) (/ (* (+ (* -2 (log -1)) (* -1 (log -1))) (- (* -1 (/ (+ (log -1) (+ (* -1 (+ 1 (* -1 (log -1)))) (+ (* -1/3 (pow (log -1) 2)) (* (log -1) (+ 1 (* -2/3 (log -1))))))) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (+ (* -1 (/ (* (+ 1 (+ (* -4 (log -1)) (* -1/2 (log -1)))) (+ (* -2 (pow (log -1) 2)) (* -1 (pow (log -1) 2)))) (pow (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)) 2))) (/ (* (+ (* -2 (log -1)) (* -1 (log -1))) (- (+ (* -2 (/ (pow (log -1) 2) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (* -1 (/ (pow (log -1) 2) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2))))) (+ (* -1 (/ (* (+ (* -2 (log -1)) (* -1 (log -1))) (+ (* -2 (pow (log -1) 2)) (* -1 (pow (log -1) 2)))) (pow (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)) 2))) (+ (* -1/2 (/ (pow (log -1) 2) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (+ (* 2 (/ (log -1) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (/ (* (log -1) (+ 1 (* -1 (log -1)))) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))))))) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))))) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2))))))))))))) (+ (* -1 (/ (* (+ 1 (+ (* -4 (log -1)) (* -1/2 (log -1)))) (+ (* -2 (pow (log -1) 2)) (* -1 (pow (log -1) 2)))) (pow (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)) 2))) (/ (* (+ (* -2 (log -1)) (* -1 (log -1))) (- (+ (* -2 (/ (pow (log -1) 2) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (* -1 (/ (pow (log -1) 2) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2))))) (+ (* -1 (/ (* (+ (* -2 (log -1)) (* -1 (log -1))) (+ (* -2 (pow (log -1) 2)) (* -1 (pow (log -1) 2)))) (pow (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)) 2))) (+ (* -1/2 (/ (pow (log -1) 2) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (+ (* 2 (/ (log -1) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (/ (* (log -1) (+ 1 (* -1 (log -1)))) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))))))) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))))))) (+ (* -1 (/ (* (+ (* -2 (log -1)) (* -1 (log -1))) (+ (* -2 (pow (log -1) 2)) (* -1 (pow (log -1) 2)))) (pow (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)) 2))) (+ (* -1/2 (/ (pow (log -1) 2) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (+ (* 2 (/ (log -1) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (/ (* (log -1) (+ 1 (* -1 (log -1)))) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2))))))))))","(pow (log -1) 3)","(+ (* (pow N 2) (+ (* -2 (pow (log -1) 2)) (* -1 (pow (log -1) 2)))) (pow (log -1) 3))","(+ (* (pow N 2) (+ (* -2 (pow (log -1) 2)) (+ (* -1 (pow (log -1) 2)) (* (pow N 2) (+ (* -1/2 (pow (log -1) 2)) (+ (* 2 (log -1)) (* (log -1) (+ 1 (* -1 (log -1)))))))))) (pow (log -1) 3))","(+ (* (pow N 2) (+ (* -2 (pow (log -1) 2)) (+ (* -1 (pow (log -1) 2)) (* (pow N 2) (+ (* -1/2 (pow (log -1) 2)) (+ (* 2 (log -1)) (+ (* (log -1) (+ 1 (* -1 (log -1)))) (* (pow N 2) (+ (log -1) (+ (* -1 (+ 1 (* -1 (log -1)))) (+ (* -1/3 (pow (log -1) 2)) (* (log -1) (+ 1 (* -2/3 (log -1))))))))))))))) (pow (log -1) 3))","(+ (* N (+ (* -2 (pow (log -1) 2)) (* -1 (pow (log -1) 2)))) (pow (log -1) 3))","(+ (* N (+ (* -2 (pow (log -1) 2)) (+ (* -1 (pow (log -1) 2)) (* N (+ (* -1/2 (pow (log -1) 2)) (+ (* 2 (log -1)) (* (log -1) (+ 1 (* -1 (log -1)))))))))) (pow (log -1) 3))","(+ (* N (+ (* -2 (pow (log -1) 2)) (+ (* -1 (pow (log -1) 2)) (* N (+ (* -1/2 (pow (log -1) 2)) (+ (* 2 (log -1)) (+ (* N (+ (log -1) (+ (* -1 (+ 1 (* -1 (log -1)))) (+ (* -1/3 (pow (log -1) 2)) (* (log -1) (+ 1 (* -2/3 (log -1)))))))) (* (log -1) (+ 1 (* -1 (log -1))))))))))) (pow (log -1) 3))","(pow (log -1) 2)","(+ (* -1 (* N (log -1))) (pow (log -1) 2))","(+ (* N (+ (* -1 (log -1)) (* N (+ (* -1 (log -1)) (* -1/2 (log -1)))))) (pow (log -1) 2))","(+ (* N (+ (* -1 (log -1)) (* N (+ (* -1 (log -1)) (+ (* -1/2 (log -1)) (* N (+ 1 (* -1/3 (log -1))))))))) (pow (log -1) 2))","(+ (* 2 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))","(+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (/ (log (/ 1 N)) N)) (pow (log (/ 1 N)) 2)))","(+ (* 2 (/ (log (/ 1 N)) (pow N 2))) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (/ (log (/ 1 N)) N)) (+ (/ 1 (pow N 2)) (+ (/ (log (/ 1 N)) (pow N 2)) (pow (log (/ 1 N)) 2))))))","(+ (* 4/3 (/ (log (/ 1 N)) (pow N 3))) (+ (* 2 (/ (log (/ 1 N)) (pow N 2))) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (/ (log (/ 1 N)) N)) (+ (/ 1 (pow N 2)) (+ (* 2 (/ 1 (pow N 3))) (+ (/ (log (/ 1 N)) (pow N 2)) (pow (log (/ 1 N)) 2))))))))","(+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)))","(+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (/ (log (/ 1 N)) N)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))))","(+ (* 2 (/ (log (/ 1 N)) (pow N 2))) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (/ (log (/ 1 N)) N)) (+ (* 4 (/ (log (/ 1 N)) (pow N 2))) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (/ 1 (pow N 2)) (+ (/ (log (/ 1 N)) (pow N 2)) (pow (log (/ 1 N)) 2))))))))","(+ (* 4/3 (/ (log (/ 1 N)) (pow N 3))) (+ (* 2 (/ (log (/ 1 N)) (pow N 2))) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (/ (log (/ 1 N)) N)) (+ (* 4 (/ (log (/ 1 N)) (pow N 2))) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (/ 1 (pow N 2)) (+ (* 2 (/ 1 (pow N 3))) (+ (/ (log (/ 1 N)) (pow N 2)) (pow (log (/ 1 N)) 2))))))))))","(- (* -8 (/ (pow (log (/ 1 N)) 3) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))))) (+ (* -1 (log (/ 1 N))) (* -1 (/ (pow (log (/ 1 N)) 3) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)))))))","(- (+ (* -8 (/ (pow (log (/ 1 N)) 3) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))))) (* -4 (/ (pow (log (/ 1 N)) 4) (* N (pow (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))) 2))))) (+ (* -32 (/ (pow (log (/ 1 N)) 4) (* N (pow (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))) 2)))) (+ (* -2 (/ (pow (log (/ 1 N)) 2) (* N (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)))))) (+ (* -1 (log (/ 1 N))) (+ (* -1 (/ (pow (log (/ 1 N)) 2) (* N (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)))))) (* -1 (/ (pow (log (/ 1 N)) 3) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))))))))))","(- (+ (* -8 (/ (pow (log (/ 1 N)) 2) (* (pow N 2) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)))))) (+ (* -8 (/ (pow (log (/ 1 N)) 3) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))))) (+ (* -4 (/ (pow (log (/ 1 N)) 2) (* (pow N 2) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)))))) (+ (* -4 (/ (pow (log (/ 1 N)) 4) (* N (pow (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))) 2)))) (+ (* -1 (/ (* (pow (log (/ 1 N)) 3) (+ 1 (+ (log (/ 1 N)) (+ (* 2 (log (/ 1 N))) (* 4 (log (/ 1 N))))))) (* (pow N 2) (pow (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))) 2)))) (* 4 (/ (* (log (/ 1 N)) (- (+ (* -2 (/ (pow (log (/ 1 N)) 2) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))))) (* -1 (/ (pow (log (/ 1 N)) 2) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)))))) (* -4 (/ (pow (log (/ 1 N)) 4) (pow (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))) 2))))) (* (pow N 2) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))))))))))) (+ (* -32 (/ (pow (log (/ 1 N)) 4) (* N (pow (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))) 2)))) (+ (* -8 (/ (* (pow (log (/ 1 N)) 3) (+ 1 (+ (log (/ 1 N)) (+ (* 2 (log (/ 1 N))) (* 4 (log (/ 1 N))))))) (* (pow N 2) (pow (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))) 2)))) (+ (* -2 (/ (log (/ 1 N)) (* (pow N 2) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)))))) (+ (* -2 (/ (pow (log (/ 1 N)) 2) (* N (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)))))) (+ (* -1 (log (/ 1 N))) (+ (* -1 (/ (* (log (/ 1 N)) (+ 1 (log (/ 1 N)))) (* (pow N 2) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)))))) (+ (* -1 (/ (pow (log (/ 1 N)) 2) (* N (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)))))) (+ (* -1 (/ (pow (log (/ 1 N)) 3) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))))) (+ (* -1/2 (/ (pow (log (/ 1 N)) 2) (* (pow N 2) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)))))) (* 128 (/ (pow (log (/ 1 N)) 5) (* (pow N 2) (pow (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))) 3))))))))))))))","(- (+ (* -8 (/ (pow (log (/ 1 N)) 2) (* (pow N 2) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)))))) (+ (* -8 (/ (pow (log (/ 1 N)) 3) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))))) (+ (* -4 (/ (pow (log (/ 1 N)) 2) (* (pow N 2) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)))))) (+ (* -4 (/ (pow (log (/ 1 N)) 4) (* N (pow (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))) 2)))) (+ (* -1 (/ (* (pow (log (/ 1 N)) 3) (+ 1 (+ (log (/ 1 N)) (+ (* 2 (log (/ 1 N))) (* 4 (log (/ 1 N))))))) (* (pow N 2) (pow (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))) 2)))) (+ (* -1 (/ (* (pow (log (/ 1 N)) 3) (+ 2 (* 4/3 (log (/ 1 N))))) (* (pow N 3) (pow (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))) 2)))) (+ (* 4 (/ (* (log (/ 1 N)) (- (+ (* -2 (/ (log (/ 1 N)) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))))) (+ (* -1 (/ (* (log (/ 1 N)) (+ 1 (log (/ 1 N)))) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))))) (* -1/2 (/ (pow (log (/ 1 N)) 2) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))))))) (+ (* -1 (/ (* (pow (log (/ 1 N)) 3) (+ 1 (+ (log (/ 1 N)) (+ (* 2 (log (/ 1 N))) (* 4 (log (/ 1 N))))))) (pow (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))) 2))) (* 4 (/ (* (log (/ 1 N)) (- (+ (* -2 (/ (pow (log (/ 1 N)) 2) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))))) (* -1 (/ (pow (log (/ 1 N)) 2) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)))))) (* -4 (/ (pow (log (/ 1 N)) 4) (pow (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))) 2))))) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)))))))) (* (pow N 3) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)))))) (+ (* 4 (/ (* (log (/ 1 N)) (- (+ (* -2 (/ (pow (log (/ 1 N)) 2) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))))) (* -1 (/ (pow (log (/ 1 N)) 2) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)))))) (* -4 (/ (pow (log (/ 1 N)) 4) (pow (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))) 2))))) (* (pow N 2) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)))))) (/ (* (+ 1 (+ (log (/ 1 N)) (+ (* 2 (log (/ 1 N))) (* 4 (log (/ 1 N)))))) (- (+ (* -2 (/ (pow (log (/ 1 N)) 2) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))))) (* -1 (/ (pow (log (/ 1 N)) 2) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)))))) (* -4 (/ (pow (log (/ 1 N)) 4) (pow (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))) 2))))) (* (pow N 3) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))))))))))))) (+ (* -32 (/ (pow (log (/ 1 N)) 4) (* N (pow (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))) 2)))) (+ (* -8 (/ (* (pow (log (/ 1 N)) 3) (+ 1 (+ (log (/ 1 N)) (+ (* 2 (log (/ 1 N))) (* 4 (log (/ 1 N))))))) (* (pow N 2) (pow (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))) 2)))) (+ (* -8 (/ (* (pow (log (/ 1 N)) 3) (+ 2 (* 4/3 (log (/ 1 N))))) (* (pow N 3) (pow (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))) 2)))) (+ (* -2 (/ (log (/ 1 N)) (* (pow N 2) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)))))) (+ (* -2 (/ (pow (log (/ 1 N)) 2) (* N (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)))))) (+ (* -1 (log (/ 1 N))) (+ (* -1 (/ (log (/ 1 N)) (* (pow N 3) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)))))) (+ (* -1 (/ (* (log (/ 1 N)) (+ 1 (log (/ 1 N)))) (* (pow N 2) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)))))) (+ (* -1 (/ (* (log (/ 1 N)) (+ 1 (* 2/3 (log (/ 1 N))))) (* (pow N 3) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)))))) (+ (* -1 (/ (+ 1 (log (/ 1 N))) (* (pow N 3) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)))))) (+ (* -1 (/ (pow (log (/ 1 N)) 2) (* N (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)))))) (+ (* -1 (/ (pow (log (/ 1 N)) 3) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))))) (+ (* -1/2 (/ (pow (log (/ 1 N)) 2) (* (pow N 2) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)))))) (+ (* -1/3 (/ (pow (log (/ 1 N)) 2) (* (pow N 3) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)))))) (+ (* 4 (/ (* (log (/ 1 N)) (- (+ (* -8 (/ (pow (log (/ 1 N)) 2) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))))) (* -4 (/ (pow (log (/ 1 N)) 2) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)))))) (+ (* -8 (/ (* (pow (log (/ 1 N)) 3) (+ 1 (+ (log (/ 1 N)) (+ (* 2 (log (/ 1 N))) (* 4 (log (/ 1 N))))))) (pow (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))) 2))) (* 128 (/ (pow (log (/ 1 N)) 5) (pow (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))) 3)))))) (* (pow N 3) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)))))) (+ (* 32 (/ (* (pow (log (/ 1 N)) 4) (+ 1 (+ (log (/ 1 N)) (+ (* 2 (log (/ 1 N))) (* 4 (log (/ 1 N))))))) (* (pow N 3) (pow (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))) 3)))) (* 128 (/ (pow (log (/ 1 N)) 5) (* (pow N 2) (pow (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))) 3)))))))))))))))))))))","(/ (- (* -8 (pow (log (/ 1 N)) 3)) (* -1 (pow (log (/ 1 N)) 3))) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))))","(- (+ (* -8 (/ (pow (log (/ 1 N)) 3) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))))) (* -1 (/ (+ (* -2 (pow (log (/ 1 N)) 2)) (* -1 (pow (log (/ 1 N)) 2))) (* N (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))))))) (+ (* -1 (/ (pow (log (/ 1 N)) 3) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))))) (* 4 (/ (* (log (/ 1 N)) (- (* -8 (pow (log (/ 1 N)) 3)) (* -1 (pow (log (/ 1 N)) 3)))) (* N (pow (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))) 2))))))","(- (+ (* -8 (/ (pow (log (/ 1 N)) 2) (* (pow N 2) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)))))) (+ (* -8 (/ (pow (log (/ 1 N)) 3) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))))) (+ (* -4 (/ (pow (log (/ 1 N)) 2) (* (pow N 2) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)))))) (* -1 (/ (+ (* -2 (pow (log (/ 1 N)) 2)) (* -1 (pow (log (/ 1 N)) 2))) (* N (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))))))))) (+ (* -2 (/ (log (/ 1 N)) (* (pow N 2) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)))))) (+ (* -1 (/ (* (log (/ 1 N)) (+ 1 (log (/ 1 N)))) (* (pow N 2) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)))))) (+ (* -1 (/ (pow (log (/ 1 N)) 3) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))))) (+ (* -1/2 (/ (pow (log (/ 1 N)) 2) (* (pow N 2) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)))))) (+ (* 4 (/ (* (log (/ 1 N)) (- (* -8 (pow (log (/ 1 N)) 3)) (* -1 (pow (log (/ 1 N)) 3)))) (* N (pow (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))) 2)))) (+ (* 4 (/ (* (log (/ 1 N)) (- (* -1 (/ (+ (* -2 (pow (log (/ 1 N)) 2)) (* -1 (pow (log (/ 1 N)) 2))) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))))) (* 4 (/ (* (log (/ 1 N)) (- (* -8 (pow (log (/ 1 N)) 3)) (* -1 (pow (log (/ 1 N)) 3)))) (pow (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))) 2))))) (* (pow N 2) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)))))) (/ (* (+ 1 (+ (log (/ 1 N)) (+ (* 2 (log (/ 1 N))) (* 4 (log (/ 1 N)))))) (- (* -8 (pow (log (/ 1 N)) 3)) (* -1 (pow (log (/ 1 N)) 3)))) (* (pow N 2) (pow (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))) 2))))))))))","(- (+ (* -8 (/ (pow (log (/ 1 N)) 2) (* (pow N 2) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)))))) (+ (* -8 (/ (pow (log (/ 1 N)) 3) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))))) (+ (* -4 (/ (pow (log (/ 1 N)) 2) (* (pow N 2) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)))))) (+ (* -1 (/ (+ (* -2 (pow (log (/ 1 N)) 2)) (* -1 (pow (log (/ 1 N)) 2))) (* N (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)))))) (* -1 (/ (+ (* -1 (log (/ 1 N))) (+ (* -1 (* (log (/ 1 N)) (+ 1 (* 2/3 (log (/ 1 N)))))) (+ (* -1 (+ 1 (log (/ 1 N)))) (* -1/3 (pow (log (/ 1 N)) 2))))) (* (pow N 3) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)))))))))) (+ (* -2 (/ (log (/ 1 N)) (* (pow N 2) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)))))) (+ (* -1 (/ (* (log (/ 1 N)) (+ 1 (log (/ 1 N)))) (* (pow N 2) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)))))) (+ (* -1 (/ (pow (log (/ 1 N)) 3) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))))) (+ (* -1/2 (/ (pow (log (/ 1 N)) 2) (* (pow N 2) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)))))) (+ (* 4 (/ (* (log (/ 1 N)) (- (* -8 (pow (log (/ 1 N)) 3)) (* -1 (pow (log (/ 1 N)) 3)))) (* N (pow (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))) 2)))) (+ (* 4 (/ (* (log (/ 1 N)) (- (* -1 (/ (+ (* -2 (pow (log (/ 1 N)) 2)) (* -1 (pow (log (/ 1 N)) 2))) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))))) (* 4 (/ (* (log (/ 1 N)) (- (* -8 (pow (log (/ 1 N)) 3)) (* -1 (pow (log (/ 1 N)) 3)))) (pow (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))) 2))))) (* (pow N 2) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)))))) (+ (* 4 (/ (* (log (/ 1 N)) (- (+ (* -8 (/ (pow (log (/ 1 N)) 2) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))))) (* -4 (/ (pow (log (/ 1 N)) 2) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)))))) (+ (* -2 (/ (log (/ 1 N)) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))))) (+ (* -1 (/ (* (log (/ 1 N)) (+ 1 (log (/ 1 N)))) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))))) (+ (* -1/2 (/ (pow (log (/ 1 N)) 2) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))))) (+ (* 4 (/ (* (log (/ 1 N)) (- (* -1 (/ (+ (* -2 (pow (log (/ 1 N)) 2)) (* -1 (pow (log (/ 1 N)) 2))) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))))) (* 4 (/ (* (log (/ 1 N)) (- (* -8 (pow (log (/ 1 N)) 3)) (* -1 (pow (log (/ 1 N)) 3)))) (pow (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))) 2))))) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))))) (/ (* (+ 1 (+ (log (/ 1 N)) (+ (* 2 (log (/ 1 N))) (* 4 (log (/ 1 N)))))) (- (* -8 (pow (log (/ 1 N)) 3)) (* -1 (pow (log (/ 1 N)) 3)))) (pow (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))) 2)))))))) (* (pow N 3) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)))))) (+ (/ (* (+ 1 (+ (log (/ 1 N)) (+ (* 2 (log (/ 1 N))) (* 4 (log (/ 1 N)))))) (- (* -8 (pow (log (/ 1 N)) 3)) (* -1 (pow (log (/ 1 N)) 3)))) (* (pow N 2) (pow (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))) 2))) (+ (/ (* (+ 1 (+ (log (/ 1 N)) (+ (* 2 (log (/ 1 N))) (* 4 (log (/ 1 N)))))) (- (* -1 (/ (+ (* -2 (pow (log (/ 1 N)) 2)) (* -1 (pow (log (/ 1 N)) 2))) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))))) (* 4 (/ (* (log (/ 1 N)) (- (* -8 (pow (log (/ 1 N)) 3)) (* -1 (pow (log (/ 1 N)) 3)))) (pow (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))) 2))))) (* (pow N 3) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))))) (/ (* (+ 2 (* 4/3 (log (/ 1 N)))) (- (* -8 (pow (log (/ 1 N)) 3)) (* -1 (pow (log (/ 1 N)) 3)))) (* (pow N 3) (pow (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))) 2)))))))))))))","(* -8 (pow (log (/ 1 N)) 3))","(+ (* -8 (/ (pow (log (/ 1 N)) 2) (pow N 2))) (+ (* -8 (pow (log (/ 1 N)) 3)) (* -4 (/ (pow (log (/ 1 N)) 2) (pow N 2)))))","(+ (* -8 (/ (pow (log (/ 1 N)) 2) (pow N 2))) (+ (* -8 (pow (log (/ 1 N)) 3)) (+ (* -4 (/ (log (/ 1 N)) (pow N 4))) (+ (* -4 (/ (pow (log (/ 1 N)) 2) (pow N 2))) (+ (* -2 (/ (* (log (/ 1 N)) (+ 1 (* 2 (log (/ 1 N))))) (pow N 4))) (* -2 (/ (pow (log (/ 1 N)) 2) (pow N 4))))))))","(+ (* -8 (/ (pow (log (/ 1 N)) 2) (pow N 2))) (+ (* -8 (pow (log (/ 1 N)) 3)) (+ (* -4 (/ (log (/ 1 N)) (pow N 4))) (+ (* -4 (/ (pow (log (/ 1 N)) 2) (pow N 2))) (+ (* -2 (/ (log (/ 1 N)) (pow N 6))) (+ (* -2 (/ (* (log (/ 1 N)) (+ 1 (* 4/3 (log (/ 1 N))))) (pow N 6))) (+ (* -2 (/ (* (log (/ 1 N)) (+ 1 (* 2 (log (/ 1 N))))) (pow N 4))) (+ (* -2 (/ (pow (log (/ 1 N)) 2) (pow N 4))) (+ (* -4/3 (/ (pow (log (/ 1 N)) 2) (pow N 6))) (* -1 (/ (+ 1 (* 2 (log (/ 1 N)))) (pow N 6))))))))))))","(* -1 (pow (log (/ 1 N)) 3))","(+ (* -2 (/ (pow (log (/ 1 N)) 2) N)) (+ (* -1 (/ (pow (log (/ 1 N)) 2) N)) (* -1 (pow (log (/ 1 N)) 3))))","(+ (* -2 (/ (log (/ 1 N)) (pow N 2))) (+ (* -2 (/ (pow (log (/ 1 N)) 2) N)) (+ (* -1 (/ (* (log (/ 1 N)) (+ 1 (log (/ 1 N)))) (pow N 2))) (+ (* -1 (/ (pow (log (/ 1 N)) 2) N)) (+ (* -1 (pow (log (/ 1 N)) 3)) (* -1/2 (/ (pow (log (/ 1 N)) 2) (pow N 2))))))))","(+ (* -2 (/ (log (/ 1 N)) (pow N 2))) (+ (* -2 (/ (pow (log (/ 1 N)) 2) N)) (+ (* -1 (/ (log (/ 1 N)) (pow N 3))) (+ (* -1 (/ (* (log (/ 1 N)) (+ 1 (log (/ 1 N)))) (pow N 2))) (+ (* -1 (/ (* (log (/ 1 N)) (+ 1 (* 2/3 (log (/ 1 N))))) (pow N 3))) (+ (* -1 (/ (+ 1 (log (/ 1 N))) (pow N 3))) (+ (* -1 (/ (pow (log (/ 1 N)) 2) N)) (+ (* -1 (pow (log (/ 1 N)) 3)) (+ (* -1/2 (/ (pow (log (/ 1 N)) 2) (pow N 2))) (* -1/3 (/ (pow (log (/ 1 N)) 2) (pow N 3))))))))))))","(* 2 (pow (log (/ 1 N)) 2))","(+ (* 2 (/ (log (/ 1 N)) N)) (* 2 (pow (log (/ 1 N)) 2)))","(+ (* 2 (/ (log (/ 1 N)) N)) (+ (* 2 (/ (log (/ 1 N)) (pow N 2))) (* 2 (pow (log (/ 1 N)) 2))))","(+ (* 2/3 (/ (log (/ 1 N)) (pow N 3))) (+ (* 2 (/ (log (/ 1 N)) N)) (+ (* 2 (/ (log (/ 1 N)) (pow N 2))) (+ (* 2 (pow (log (/ 1 N)) 2)) (/ 1 (pow N 3))))))","(+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))","(+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* -1 (/ (+ (* -4 (log (/ -1 N))) (* 2 (log -1))) N)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)))","(+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* -1 (/ (+ (* -4 (log (/ -1 N))) (+ (* -1 (/ (+ 1 (+ (log (/ -1 N)) (* -2 (+ (log -1) (* -1 (log (/ -1 N))))))) N)) (* 2 (log -1)))) N)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)))","(+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* -1 (/ (+ (* -4 (log (/ -1 N))) (+ (* -1 (/ (+ 1 (+ (log (/ -1 N)) (+ (* -2 (+ (log -1) (* -1 (log (/ -1 N))))) (* -1 (/ (- (+ (* -2/3 (log (/ -1 N))) (* 2/3 (+ (log -1) (* -1 (log (/ -1 N)))))) 2) N))))) N)) (* 2 (log -1)))) N)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)))","(+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)))","(+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* -1 (/ (+ (* -4 (log (/ -1 N))) (* 2 (log -1))) N)) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))","(+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* -1 (/ (+ (* -4 (log (/ -1 N))) (+ (* -1 (/ (+ 1 (+ (log (/ -1 N)) (+ (* -2 (+ (log -1) (* -1 (log (/ -1 N))))) (* 4 (log (/ -1 N)))))) N)) (* 2 (log -1)))) N)) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))","(+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* -1 (/ (+ (* -4 (log (/ -1 N))) (+ (* -1 (/ (+ 1 (+ (log (/ -1 N)) (+ (* -2 (+ (log -1) (* -1 (log (/ -1 N))))) (+ (* -1 (/ (- (+ (* -2/3 (log (/ -1 N))) (* 2/3 (+ (log -1) (* -1 (log (/ -1 N)))))) 2) N)) (* 4 (log (/ -1 N))))))) N)) (* 2 (log -1)))) N)) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))","(- (* -8 (/ (pow (log (/ -1 N)) 3) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (+ (log -1) (+ (* -1 (log (/ -1 N))) (/ (pow (+ (log -1) (* -1 (log (/ -1 N)))) 3) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)))))))","(- (+ (* -8 (/ (pow (log (/ -1 N)) 3) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (* -1 (/ (- (/ (* (pow (+ (log -1) (* -1 (log (/ -1 N)))) 3) (+ (* -4 (log (/ -1 N))) (* 2 (log -1)))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))) 2)) (+ (* -8 (/ (* (pow (log (/ -1 N)) 3) (+ (* -4 (log (/ -1 N))) (* 2 (log -1)))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))) 2))) (+ (/ (* (+ (log -1) (* -1 (log (/ -1 N)))) (+ (* -2 (log (/ -1 N))) (* 2 (log -1)))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)))) (/ (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))))) N))) (+ (log -1) (+ (* -1 (log (/ -1 N))) (/ (pow (+ (log -1) (* -1 (log (/ -1 N)))) 3) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)))))))","(- (+ (* -8 (/ (pow (log (/ -1 N)) 3) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (* -1 (/ (- (+ (* -1 (/ (- (+ (* -8 (/ (pow (log (/ -1 N)) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (+ (* -4 (/ (pow (log (/ -1 N)) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (+ (/ (* (+ 1 (+ (log (/ -1 N)) (+ (* -2 (+ (log -1) (* -1 (log (/ -1 N))))) (* 4 (log (/ -1 N)))))) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 3)) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))) 2)) (/ (* (+ (* -4 (log (/ -1 N))) (* 2 (log -1))) (- (+ (/ (* (+ (log -1) (* -1 (log (/ -1 N)))) (+ (* -2 (log (/ -1 N))) (* 2 (log -1)))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)))) (/ (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (/ (* (pow (+ (log -1) (* -1 (log (/ -1 N)))) 3) (+ (* -4 (log (/ -1 N))) (* 2 (log -1)))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))) 2)))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))))) (+ (* -8 (/ (* (pow (log (/ -1 N)) 3) (+ 1 (+ (log (/ -1 N)) (+ (* -2 (+ (log -1) (* -1 (log (/ -1 N))))) (* 4 (log (/ -1 N))))))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))) 2))) (+ (* -2 (/ (log (/ -1 N)) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (+ (* -1/2 (/ (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (+ (* 2 (/ (log -1) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (+ (* 8 (/ (* (pow (log (/ -1 N)) 3) (pow (+ (* -4 (log (/ -1 N))) (* 2 (log -1))) 2)) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))) 3))) (/ (* (+ 1 (* -1 (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (log -1) (* -1 (log (/ -1 N))))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)))))))))) N)) (/ (* (pow (+ (log -1) (* -1 (log (/ -1 N)))) 3) (+ (* -4 (log (/ -1 N))) (* 2 (log -1)))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))) 2))) (+ (* -8 (/ (* (pow (log (/ -1 N)) 3) (+ (* -4 (log (/ -1 N))) (* 2 (log -1)))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))) 2))) (+ (/ (* (+ (log -1) (* -1 (log (/ -1 N)))) (+ (* -2 (log (/ -1 N))) (* 2 (log -1)))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)))) (/ (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))))) N))) (+ (log -1) (+ (* -1 (log (/ -1 N))) (/ (pow (+ (log -1) (* -1 (log (/ -1 N)))) 3) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)))))))","(- (+ (* -8 (/ (pow (log (/ -1 N)) 3) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (* -1 (/ (- (+ (* -1 (/ (- (+ (* -8 (/ (pow (log (/ -1 N)) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (+ (* -4 (/ (pow (log (/ -1 N)) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (+ (* -1 (/ (- (+ (/ (* (+ 1 (+ (log (/ -1 N)) (+ (* -2 (+ (log -1) (* -1 (log (/ -1 N))))) (* 4 (log (/ -1 N)))))) (- (+ (/ (* (+ (log -1) (* -1 (log (/ -1 N)))) (+ (* -2 (log (/ -1 N))) (* 2 (log -1)))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)))) (/ (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (/ (* (pow (+ (log -1) (* -1 (log (/ -1 N)))) 3) (+ (* -4 (log (/ -1 N))) (* 2 (log -1)))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))) 2)))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)))) (+ (/ (* (+ (* -4 (log (/ -1 N))) (* 2 (log -1))) (- (+ (* -2 (/ (log (/ -1 N)) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (+ (* -1/2 (/ (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (+ (* 2 (/ (log -1) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (/ (* (+ 1 (* -1 (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (log -1) (* -1 (log (/ -1 N))))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))))) (+ (/ (* (+ 1 (+ (log (/ -1 N)) (+ (* -2 (+ (log -1) (* -1 (log (/ -1 N))))) (* 4 (log (/ -1 N)))))) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 3)) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))) 2)) (/ (* (+ (* -4 (log (/ -1 N))) (* 2 (log -1))) (- (+ (/ (* (+ (log -1) (* -1 (log (/ -1 N)))) (+ (* -2 (log (/ -1 N))) (* 2 (log -1)))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)))) (/ (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (/ (* (pow (+ (log -1) (* -1 (log (/ -1 N)))) 3) (+ (* -4 (log (/ -1 N))) (* 2 (log -1)))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))) 2)))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)))) (/ (* (pow (+ (log -1) (* -1 (log (/ -1 N)))) 3) (- (+ (* -2/3 (log (/ -1 N))) (* 2/3 (+ (log -1) (* -1 (log (/ -1 N)))))) 2)) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))) 2)))) (+ (* -8 (/ (* (pow (log (/ -1 N)) 3) (- (+ (* -2/3 (log (/ -1 N))) (* 2/3 (+ (log -1) (* -1 (log (/ -1 N)))))) 2)) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))) 2))) (+ (* -1 (/ (+ (log -1) (* -1 (log (/ -1 N)))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (+ (* -1/2 (/ (+ (* -2 (log (/ -1 N))) (* 2 (log -1))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (+ (* 1/3 (/ (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (+ (* 8 (/ (* (pow (log (/ -1 N)) 3) (* (+ 1 (+ (log (/ -1 N)) (+ (* -2 (+ (log -1) (* -1 (log (/ -1 N))))) (* 4 (log (/ -1 N)))))) (+ (* -4 (log (/ -1 N))) (* 2 (log -1))))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))) 3))) (+ (/ 1 (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)))) (+ (/ (* (+ (log -1) (* -1 (log (/ -1 N)))) (- (* 2/3 (+ (log -1) (* -1 (log (/ -1 N))))) 1)) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)))) (/ (* (+ (* -4 (log (/ -1 N))) (* 2 (log -1))) (- (+ (* -8 (/ (pow (log (/ -1 N)) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (* -4 (/ (pow (log (/ -1 N)) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)))))) (+ (* -8 (/ (* (pow (log (/ -1 N)) 3) (+ 1 (+ (log (/ -1 N)) (+ (* -2 (+ (log -1) (* -1 (log (/ -1 N))))) (* 4 (log (/ -1 N))))))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))) 2))) (* 8 (/ (* (pow (log (/ -1 N)) 3) (pow (+ (* -4 (log (/ -1 N))) (* 2 (log -1))) 2)) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))) 3)))))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)))))))))))) N)) (+ (/ (* (+ 1 (+ (log (/ -1 N)) (+ (* -2 (+ (log -1) (* -1 (log (/ -1 N))))) (* 4 (log (/ -1 N)))))) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 3)) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))) 2)) (/ (* (+ (* -4 (log (/ -1 N))) (* 2 (log -1))) (- (+ (/ (* (+ (log -1) (* -1 (log (/ -1 N)))) (+ (* -2 (log (/ -1 N))) (* 2 (log -1)))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)))) (/ (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (/ (* (pow (+ (log -1) (* -1 (log (/ -1 N)))) 3) (+ (* -4 (log (/ -1 N))) (* 2 (log -1)))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))) 2)))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)))))))) (+ (* -8 (/ (* (pow (log (/ -1 N)) 3) (+ 1 (+ (log (/ -1 N)) (+ (* -2 (+ (log -1) (* -1 (log (/ -1 N))))) (* 4 (log (/ -1 N))))))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))) 2))) (+ (* -2 (/ (log (/ -1 N)) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (+ (* -1/2 (/ (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (+ (* 2 (/ (log -1) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (+ (* 8 (/ (* (pow (log (/ -1 N)) 3) (pow (+ (* -4 (log (/ -1 N))) (* 2 (log -1))) 2)) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))) 3))) (/ (* (+ 1 (* -1 (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (log -1) (* -1 (log (/ -1 N))))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)))))))))) N)) (/ (* (pow (+ (log -1) (* -1 (log (/ -1 N)))) 3) (+ (* -4 (log (/ -1 N))) (* 2 (log -1)))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))) 2))) (+ (* -8 (/ (* (pow (log (/ -1 N)) 3) (+ (* -4 (log (/ -1 N))) (* 2 (log -1)))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))) 2))) (+ (/ (* (+ (log -1) (* -1 (log (/ -1 N)))) (+ (* -2 (log (/ -1 N))) (* 2 (log -1)))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)))) (/ (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))))) N))) (+ (log -1) (+ (* -1 (log (/ -1 N))) (/ (pow (+ (log -1) (* -1 (log (/ -1 N)))) 3) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)))))))","(/ (- (* -8 (pow (log (/ -1 N)) 3)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 3)) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))","(- (+ (* -8 (/ (pow (log (/ -1 N)) 3) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (* -1 (/ (- (* -1 (/ (+ (* (+ (log -1) (* -1 (log (/ -1 N)))) (+ (* -2 (log (/ -1 N))) (* 2 (log -1)))) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (/ (* (+ (* -4 (log (/ -1 N))) (* 2 (log -1))) (- (* -8 (pow (log (/ -1 N)) 3)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 3))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))) 2))) N))) (/ (pow (+ (log -1) (* -1 (log (/ -1 N)))) 3) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)))))","(- (+ (* -8 (/ (pow (log (/ -1 N)) 3) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (* -1 (/ (- (+ (* -1 (/ (+ (* (+ (log -1) (* -1 (log (/ -1 N)))) (+ (* -2 (log (/ -1 N))) (* 2 (log -1)))) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (* -1 (/ (- (+ (* -8 (/ (pow (log (/ -1 N)) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (* -4 (/ (pow (log (/ -1 N)) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)))))) (+ (* -2 (/ (log (/ -1 N)) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (+ (* -1/2 (/ (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (+ (* 2 (/ (log -1) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (+ (/ (* (+ 1 (* -1 (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (log -1) (* -1 (log (/ -1 N))))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)))) (+ (/ (* (+ 1 (+ (log (/ -1 N)) (+ (* -2 (+ (log -1) (* -1 (log (/ -1 N))))) (* 4 (log (/ -1 N)))))) (- (* -8 (pow (log (/ -1 N)) 3)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 3))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))) 2)) (/ (* (+ (* -4 (log (/ -1 N))) (* 2 (log -1))) (- (* -1 (/ (+ (* (+ (log -1) (* -1 (log (/ -1 N)))) (+ (* -2 (log (/ -1 N))) (* 2 (log -1)))) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (/ (* (+ (* -4 (log (/ -1 N))) (* 2 (log -1))) (- (* -8 (pow (log (/ -1 N)) 3)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 3))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))) 2)))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)))))))))) N))) (/ (* (+ (* -4 (log (/ -1 N))) (* 2 (log -1))) (- (* -8 (pow (log (/ -1 N)) 3)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 3))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))) 2))) N))) (/ (pow (+ (log -1) (* -1 (log (/ -1 N)))) 3) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)))))","(- (+ (* -8 (/ (pow (log (/ -1 N)) 3) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (* -1 (/ (- (+ (* -1 (/ (+ (* (+ (log -1) (* -1 (log (/ -1 N)))) (+ (* -2 (log (/ -1 N))) (* 2 (log -1)))) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (* -1 (/ (- (+ (* -8 (/ (pow (log (/ -1 N)) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (+ (* -4 (/ (pow (log (/ -1 N)) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (* -1 (/ (- (* -1 (/ (+ 1 (+ (* -1 (+ (log -1) (* -1 (log (/ -1 N))))) (+ (* -1/2 (+ (* -2 (log (/ -1 N))) (* 2 (log -1)))) (+ (* 1/3 (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)) (* (+ (log -1) (* -1 (log (/ -1 N)))) (- (* 2/3 (+ (log -1) (* -1 (log (/ -1 N))))) 1)))))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (+ (/ (* (+ 1 (+ (log (/ -1 N)) (+ (* -2 (+ (log -1) (* -1 (log (/ -1 N))))) (* 4 (log (/ -1 N)))))) (- (* -1 (/ (+ (* (+ (log -1) (* -1 (log (/ -1 N)))) (+ (* -2 (log (/ -1 N))) (* 2 (log -1)))) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (/ (* (+ (* -4 (log (/ -1 N))) (* 2 (log -1))) (- (* -8 (pow (log (/ -1 N)) 3)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 3))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))) 2)))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)))) (+ (/ (* (+ (* -4 (log (/ -1 N))) (* 2 (log -1))) (- (+ (* -8 (/ (pow (log (/ -1 N)) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (* -4 (/ (pow (log (/ -1 N)) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)))))) (+ (* -2 (/ (log (/ -1 N)) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (+ (* -1/2 (/ (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (+ (* 2 (/ (log -1) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (+ (/ (* (+ 1 (* -1 (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (log -1) (* -1 (log (/ -1 N))))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)))) (+ (/ (* (+ 1 (+ (log (/ -1 N)) (+ (* -2 (+ (log -1) (* -1 (log (/ -1 N))))) (* 4 (log (/ -1 N)))))) (- (* -8 (pow (log (/ -1 N)) 3)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 3))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))) 2)) (/ (* (+ (* -4 (log (/ -1 N))) (* 2 (log -1))) (- (* -1 (/ (+ (* (+ (log -1) (* -1 (log (/ -1 N)))) (+ (* -2 (log (/ -1 N))) (* 2 (log -1)))) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (/ (* (+ (* -4 (log (/ -1 N))) (* 2 (log -1))) (- (* -8 (pow (log (/ -1 N)) 3)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 3))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))) 2)))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))))))))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)))) (/ (* (- (* -8 (pow (log (/ -1 N)) 3)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 3)) (- (+ (* -2/3 (log (/ -1 N))) (* 2/3 (+ (log -1) (* -1 (log (/ -1 N)))))) 2)) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))) 2))))) N)))) (+ (* -2 (/ (log (/ -1 N)) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (+ (* -1/2 (/ (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (+ (* 2 (/ (log -1) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (+ (/ (* (+ 1 (* -1 (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (log -1) (* -1 (log (/ -1 N))))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)))) (+ (/ (* (+ 1 (+ (log (/ -1 N)) (+ (* -2 (+ (log -1) (* -1 (log (/ -1 N))))) (* 4 (log (/ -1 N)))))) (- (* -8 (pow (log (/ -1 N)) 3)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 3))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))) 2)) (/ (* (+ (* -4 (log (/ -1 N))) (* 2 (log -1))) (- (* -1 (/ (+ (* (+ (log -1) (* -1 (log (/ -1 N)))) (+ (* -2 (log (/ -1 N))) (* 2 (log -1)))) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (/ (* (+ (* -4 (log (/ -1 N))) (* 2 (log -1))) (- (* -8 (pow (log (/ -1 N)) 3)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 3))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))) 2)))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)))))))))) N))) (/ (* (+ (* -4 (log (/ -1 N))) (* 2 (log -1))) (- (* -8 (pow (log (/ -1 N)) 3)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 3))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))) 2))) N))) (/ (pow (+ (log -1) (* -1 (log (/ -1 N)))) 3) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)))))","(* -8 (pow (log (/ -1 N)) 3))","(+ (* -8 (/ (pow (log (/ -1 N)) 2) (pow N 2))) (+ (* -8 (pow (log (/ -1 N)) 3)) (* -4 (/ (pow (log (/ -1 N)) 2) (pow N 2)))))","(+ (* -8 (/ (pow (log (/ -1 N)) 2) (pow N 2))) (+ (* -8 (pow (log (/ -1 N)) 3)) (+ (* -4 (/ (log (/ -1 N)) (pow N 4))) (+ (* -4 (/ (pow (log (/ -1 N)) 2) (pow N 2))) (+ (* -2 (/ (* (log (/ -1 N)) (+ 1 (* 2 (log (/ -1 N))))) (pow N 4))) (* -2 (/ (pow (log (/ -1 N)) 2) (pow N 4))))))))","(+ (* -8 (/ (pow (log (/ -1 N)) 2) (pow N 2))) (+ (* -8 (pow (log (/ -1 N)) 3)) (+ (* -4 (/ (log (/ -1 N)) (pow N 4))) (+ (* -4 (/ (pow (log (/ -1 N)) 2) (pow N 2))) (+ (* -2 (/ (log (/ -1 N)) (pow N 6))) (+ (* -2 (/ (* (log (/ -1 N)) (+ 1 (* 4/3 (log (/ -1 N))))) (pow N 6))) (+ (* -2 (/ (* (log (/ -1 N)) (+ 1 (* 2 (log (/ -1 N))))) (pow N 4))) (+ (* -2 (/ (pow (log (/ -1 N)) 2) (pow N 4))) (+ (* -4/3 (/ (pow (log (/ -1 N)) 2) (pow N 6))) (* -1 (/ (+ 1 (* 2 (log (/ -1 N)))) (pow N 6))))))))))))","(pow (+ (log -1) (* -1 (log (/ -1 N)))) 3)","(+ (* -1 (/ (+ (* (+ (log -1) (* -1 (log (/ -1 N)))) (+ (* -2 (log (/ -1 N))) (* 2 (log -1)))) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)) N)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 3))","(+ (* -1 (/ (+ (* -1 (/ (+ (* -2 (log (/ -1 N))) (+ (* -1/2 (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)) (+ (* 2 (log -1)) (* (+ 1 (* -1 (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (log -1) (* -1 (log (/ -1 N)))))))) N)) (+ (* (+ (log -1) (* -1 (log (/ -1 N)))) (+ (* -2 (log (/ -1 N))) (* 2 (log -1)))) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))) N)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 3))","(+ (* -1 (/ (+ (* -1 (/ (+ (* -2 (log (/ -1 N))) (+ (* -1 (/ (+ 1 (+ (* -1 (+ (log -1) (* -1 (log (/ -1 N))))) (+ (* -1/2 (+ (* -2 (log (/ -1 N))) (* 2 (log -1)))) (+ (* 1/3 (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)) (* (+ (log -1) (* -1 (log (/ -1 N)))) (- (* 2/3 (+ (log -1) (* -1 (log (/ -1 N))))) 1)))))) N)) (+ (* -1/2 (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)) (+ (* 2 (log -1)) (* (+ 1 (* -1 (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (log -1) (* -1 (log (/ -1 N))))))))) N)) (+ (* (+ (log -1) (* -1 (log (/ -1 N)))) (+ (* -2 (log (/ -1 N))) (* 2 (log -1)))) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))) N)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 3))","(* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N))))))","(+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (* 2 (/ (log (/ -1 N)) N)))","(+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (* -1 (/ (+ (* -2 (log (/ -1 N))) (* -1 (/ (+ (log (/ -1 N)) (* -1 (+ (log -1) (* -1 (log (/ -1 N)))))) N))) N)))","(+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (* -1 (/ (+ (* -2 (log (/ -1 N))) (* -1 (/ (+ (log (/ -1 N)) (+ (* -1 (+ (log -1) (* -1 (log (/ -1 N))))) (* -1 (/ (- (* -2/3 (log (/ -1 N))) 1) N)))) N))) N)))"]],"series":[[51.637939453125,"((+ (* (log (+ N -1)) (log (+ N -1))) (* (log (+ (* N N) -1)) (log (+ N -1)))) (+ (* (log (+ (* N N) -1)) (log (+ (* N N) -1))) (+ (* (log (+ N -1)) (log (+ N -1))) (* (log (+ (* N N) -1)) (log (+ N -1))))) (- (/ (- (pow (log (+ (* N N) -1)) 3) (pow (log (+ N -1)) 3)) (+ (* (log (+ (* N N) -1)) (log (+ (* N N) -1))) (+ (* (log (+ N -1)) (log (+ N -1))) (* (log (+ (* N N) -1)) (log (+ N -1)))))) (log N)) (/ (- (pow (log (+ (* N N) -1)) 3) (pow (log (+ N -1)) 3)) (+ (* (log (+ (* N N) -1)) (log (+ (* N N) -1))) (+ (* (log (+ N -1)) (log (+ N -1))) (* (log (+ (* N N) -1)) (log (+ N -1)))))) (pow (log (+ (* N N) -1)) 3) (pow (log (+ N -1)) 3) (* (log (+ (* N N) -1)) (log (+ N -1))))","N","-inf"],[21.786865234375,"((+ (* (log (+ N -1)) (log (+ N -1))) (* (log (+ (* N N) -1)) (log (+ N -1)))) (+ (* (log (+ (* N N) -1)) (log (+ (* N N) -1))) (+ (* (log (+ N -1)) (log (+ N -1))) (* (log (+ (* N N) -1)) (log (+ N -1))))) (- (/ (- (pow (log (+ (* N N) -1)) 3) (pow (log (+ N -1)) 3)) (+ (* (log (+ (* N N) -1)) (log (+ (* N N) -1))) (+ (* (log (+ N -1)) (log (+ N -1))) (* (log (+ (* N N) -1)) (log (+ N -1)))))) (log N)) (/ (- (pow (log (+ (* N N) -1)) 3) (pow (log (+ N -1)) 3)) (+ (* (log (+ (* N N) -1)) (log (+ (* N N) -1))) (+ (* (log (+ N -1)) (log (+ N -1))) (* (log (+ (* N N) -1)) (log (+ N -1)))))) (pow (log (+ (* N N) -1)) 3) (pow (log (+ N -1)) 3) (* (log (+ (* N N) -1)) (log (+ N -1))))","N","inf"],[21.552001953125,"((+ (* (log (+ N -1)) (log (+ N -1))) (* (log (+ (* N N) -1)) (log (+ N -1)))) (+ (* (log (+ (* N N) -1)) (log (+ (* N N) -1))) (+ (* (log (+ N -1)) (log (+ N -1))) (* (log (+ (* N N) -1)) (log (+ N -1))))) (- (/ (- (pow (log (+ (* N N) -1)) 3) (pow (log (+ N -1)) 3)) (+ (* (log (+ (* N N) -1)) (log (+ (* N N) -1))) (+ (* (log (+ N -1)) (log (+ N -1))) (* (log (+ (* N N) -1)) (log (+ N -1)))))) (log N)) (/ (- (pow (log (+ (* N N) -1)) 3) (pow (log (+ N -1)) 3)) (+ (* (log (+ (* N N) -1)) (log (+ (* N N) -1))) (+ (* (log (+ N -1)) (log (+ N -1))) (* (log (+ (* N N) -1)) (log (+ N -1)))))) (pow (log (+ (* N N) -1)) 3) (pow (log (+ N -1)) 3) (* (log (+ (* N N) -1)) (log (+ N -1))))","N","0"]],"time":109.9501953125,"type":"series"},{"count":[[83,0]],"inputs":[["(* 2 (pow (log -1) 2))","(+ (* 2 (pow (log -1) 2)) (* N (+ (* -2 (log -1)) (* -1 (log -1)))))","(+ (* 2 (pow (log -1) 2)) (* N (+ (* -2 (log -1)) (+ (* -1 (log -1)) (* N (+ 1 (+ (* -2 (log -1)) (* -1/2 (log -1)))))))))","(+ (* 2 (pow (log -1) 2)) (* N (+ (* -2 (log -1)) (+ (* -1 (log -1)) (* N (+ 1 (+ (* -2 (log -1)) (+ (* -1/2 (log -1)) (* N (+ 2 (+ (* -2/3 (log -1)) (* -1/3 (log -1)))))))))))))","(+ (* 2 (pow (log -1) 2)) (pow (log -1) 2))","(+ (* 2 (pow (log -1) 2)) (+ (* N (+ (* -2 (log -1)) (* -1 (log -1)))) (pow (log -1) 2)))","(+ (* 2 (pow (log -1) 2)) (+ (* N (+ (* -2 (log -1)) (+ (* -1 (log -1)) (* N (+ 1 (+ (* -4 (log -1)) (* -1/2 (log -1)))))))) (pow (log -1) 2)))","(+ (* 2 (pow (log -1) 2)) (+ (* N (+ (* -2 (log -1)) (+ (* -1 (log -1)) (* N (+ 1 (+ (* -4 (log -1)) (+ (* -1/2 (log -1)) (* N (+ 2 (+ (* -2/3 (log -1)) (* -1/3 (log -1)))))))))))) (pow (log -1) 2)))","(* -1 (log N))","(- (* -1 (* N (+ (* -2 (/ (pow (log -1) 2) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (* -1 (/ (pow (log -1) 2) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2))))))) (log N))","(- (* N (- (* N (- (+ (* -2 (/ (pow (log -1) 2) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (+ (* -1 (/ (pow (log -1) 2) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (/ (* (+ (* -2 (log -1)) (* -1 (log -1))) (- (+ (* -2 (/ (pow (log -1) 2) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (* -1 (/ (pow (log -1) 2) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2))))) (/ (* (pow (log -1) 3) (+ (* -2 (log -1)) (* -1 (log -1)))) (pow (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)) 2)))) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2))))) (+ (* -1 (/ (* (pow (log -1) 3) (pow (+ (* -2 (log -1)) (* -1 (log -1))) 2)) (pow (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)) 3))) (+ (* -1/2 (/ (pow (log -1) 2) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (+ (* 2 (/ (log -1) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (/ (* (log -1) (+ 1 (* -1 (log -1)))) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))))))) (+ (* -2 (/ (pow (log -1) 2) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (* -1 (/ (pow (log -1) 2) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2))))))) (log N))","(- (* N (- (* N (- (+ (* -2 (/ (pow (log -1) 2) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (+ (* -1 (/ (pow (log -1) 2) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (+ (* N (- (+ (/ (* (+ 1 (+ (* -4 (log -1)) (* -1/2 (log -1)))) (- (+ (* -2 (/ (pow (log -1) 2) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (* -1 (/ (pow (log -1) 2) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2))))) (/ (* (pow (log -1) 3) (+ (* -2 (log -1)) (* -1 (log -1)))) (pow (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)) 2)))) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2))) (/ (* (+ (* -2 (log -1)) (* -1 (log -1))) (- (+ (* -1/2 (/ (pow (log -1) 2) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (+ (* 2 (/ (log -1) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (/ (* (log -1) (+ 1 (* -1 (log -1)))) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2))))) (+ (/ (* (+ (* -2 (log -1)) (* -1 (log -1))) (- (+ (* -2 (/ (pow (log -1) 2) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (* -1 (/ (pow (log -1) 2) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2))))) (/ (* (pow (log -1) 3) (+ (* -2 (log -1)) (* -1 (log -1)))) (pow (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)) 2)))) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2))) (/ (* (pow (log -1) 3) (+ 1 (+ (* -4 (log -1)) (* -1/2 (log -1))))) (pow (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)) 2))))) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (+ (* -1 (/ (* (pow (log -1) 3) (* (+ 1 (+ (* -4 (log -1)) (* -1/2 (log -1)))) (+ (* -2 (log -1)) (* -1 (log -1))))) (pow (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)) 3))) (+ (* -1 (/ (+ 1 (* -1 (log -1))) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (+ (* -1/3 (/ (pow (log -1) 2) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (+ (/ (log -1) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2))) (+ (/ (* (log -1) (+ 1 (* -2/3 (log -1)))) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2))) (/ (* (+ (* -2 (log -1)) (* -1 (log -1))) (- (+ (* -2 (/ (pow (log -1) 2) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (* -1 (/ (pow (log -1) 2) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2))))) (+ (* -1 (/ (* (pow (log -1) 3) (pow (+ (* -2 (log -1)) (* -1 (log -1))) 2)) (pow (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)) 3))) (/ (* (pow (log -1) 3) (+ 1 (+ (* -4 (log -1)) (* -1/2 (log -1))))) (pow (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)) 2))))) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))))))))) (/ (* (+ (* -2 (log -1)) (* -1 (log -1))) (- (+ (* -2 (/ (pow (log -1) 2) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (* -1 (/ (pow (log -1) 2) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2))))) (/ (* (pow (log -1) 3) (+ (* -2 (log -1)) (* -1 (log -1)))) (pow (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)) 2)))) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))))) (+ (* -1 (/ (* (pow (log -1) 3) (pow (+ (* -2 (log -1)) (* -1 (log -1))) 2)) (pow (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)) 3))) (+ (* -1/2 (/ (pow (log -1) 2) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (+ (* 2 (/ (log -1) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (/ (* (log -1) (+ 1 (* -1 (log -1)))) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))))))) (+ (* -2 (/ (pow (log -1) 2) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (* -1 (/ (pow (log -1) 2) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2))))))) (log N))","(* -1 (/ (* N (+ (* -2 (pow (log -1) 2)) (* -1 (pow (log -1) 2)))) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2))))","(* N (+ (* -1 (/ (+ (* -2 (pow (log -1) 2)) (* -1 (pow (log -1) 2))) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (* N (- (+ (* -2 (/ (pow (log -1) 2) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (* -1 (/ (pow (log -1) 2) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2))))) (+ (* -1 (/ (* (+ (* -2 (log -1)) (* -1 (log -1))) (+ (* -2 (pow (log -1) 2)) (* -1 (pow (log -1) 2)))) (pow (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)) 2))) (+ (* -1/2 (/ (pow (log -1) 2) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (+ (* 2 (/ (log -1) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (/ (* (log -1) (+ 1 (* -1 (log -1)))) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2))))))))))","(* N (+ (* -1 (/ (+ (* -2 (pow (log -1) 2)) (* -1 (pow (log -1) 2))) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (* N (- (+ (* -2 (/ (pow (log -1) 2) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (+ (* -1 (/ (pow (log -1) 2) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (* N (- (* -1 (/ (+ (log -1) (+ (* -1 (+ 1 (* -1 (log -1)))) (+ (* -1/3 (pow (log -1) 2)) (* (log -1) (+ 1 (* -2/3 (log -1))))))) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (+ (* -1 (/ (* (+ 1 (+ (* -4 (log -1)) (* -1/2 (log -1)))) (+ (* -2 (pow (log -1) 2)) (* -1 (pow (log -1) 2)))) (pow (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)) 2))) (/ (* (+ (* -2 (log -1)) (* -1 (log -1))) (- (+ (* -2 (/ (pow (log -1) 2) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (* -1 (/ (pow (log -1) 2) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2))))) (+ (* -1 (/ (* (+ (* -2 (log -1)) (* -1 (log -1))) (+ (* -2 (pow (log -1) 2)) (* -1 (pow (log -1) 2)))) (pow (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)) 2))) (+ (* -1/2 (/ (pow (log -1) 2) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (+ (* 2 (/ (log -1) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (/ (* (log -1) (+ 1 (* -1 (log -1)))) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))))))) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))))))) (+ (* -1 (/ (* (+ (* -2 (log -1)) (* -1 (log -1))) (+ (* -2 (pow (log -1) 2)) (* -1 (pow (log -1) 2)))) (pow (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)) 2))) (+ (* -1/2 (/ (pow (log -1) 2) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (+ (* 2 (/ (log -1) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (/ (* (log -1) (+ 1 (* -1 (log -1)))) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2))))))))))","(* N (+ (* -1 (/ (+ (* -2 (pow (log -1) 2)) (* -1 (pow (log -1) 2))) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (* N (- (+ (* -2 (/ (pow (log -1) 2) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (+ (* -1 (/ (pow (log -1) 2) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (* N (- (+ (* -1 (/ (+ (log -1) (+ (* -1 (+ 1 (* -1 (log -1)))) (+ (* -1/3 (pow (log -1) 2)) (* (log -1) (+ 1 (* -2/3 (log -1))))))) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (* N (- (+ (* -1/2 (/ (pow (log -1) 2) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (+ (* 2 (/ (log -1) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (/ (* (log -1) (+ 1 (* -1 (log -1)))) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2))))) (+ (* -1 (/ (* (+ 2 (+ (* -2/3 (log -1)) (* -1/3 (log -1)))) (+ (* -2 (pow (log -1) 2)) (* -1 (pow (log -1) 2)))) (pow (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)) 2))) (+ (* -1 (/ (+ 1 (* -2/3 (log -1))) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (+ (* -1/2 (/ (+ 1 (* -1 (log -1))) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (+ (* -1/4 (/ (pow (log -1) 2) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (+ (* 2/3 (/ (log -1) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (+ (/ (* (log -1) (+ 11/12 (* -1/2 (log -1)))) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2))) (+ (/ (* (+ 1 (+ (* -4 (log -1)) (* -1/2 (log -1)))) (- (+ (* -2 (/ (pow (log -1) 2) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (* -1 (/ (pow (log -1) 2) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2))))) (+ (* -1 (/ (* (+ (* -2 (log -1)) (* -1 (log -1))) (+ (* -2 (pow (log -1) 2)) (* -1 (pow (log -1) 2)))) (pow (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)) 2))) (+ (* -1/2 (/ (pow (log -1) 2) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (+ (* 2 (/ (log -1) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (/ (* (log -1) (+ 1 (* -1 (log -1)))) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))))))) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2))) (/ (* (+ (* -2 (log -1)) (* -1 (log -1))) (- (* -1 (/ (+ (log -1) (+ (* -1 (+ 1 (* -1 (log -1)))) (+ (* -1/3 (pow (log -1) 2)) (* (log -1) (+ 1 (* -2/3 (log -1))))))) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (+ (* -1 (/ (* (+ 1 (+ (* -4 (log -1)) (* -1/2 (log -1)))) (+ (* -2 (pow (log -1) 2)) (* -1 (pow (log -1) 2)))) (pow (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)) 2))) (/ (* (+ (* -2 (log -1)) (* -1 (log -1))) (- (+ (* -2 (/ (pow (log -1) 2) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (* -1 (/ (pow (log -1) 2) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2))))) (+ (* -1 (/ (* (+ (* -2 (log -1)) (* -1 (log -1))) (+ (* -2 (pow (log -1) 2)) (* -1 (pow (log -1) 2)))) (pow (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)) 2))) (+ (* -1/2 (/ (pow (log -1) 2) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (+ (* 2 (/ (log -1) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (/ (* (log -1) (+ 1 (* -1 (log -1)))) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))))))) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))))) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2))))))))))))) (+ (* -1 (/ (* (+ 1 (+ (* -4 (log -1)) (* -1/2 (log -1)))) (+ (* -2 (pow (log -1) 2)) (* -1 (pow (log -1) 2)))) (pow (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)) 2))) (/ (* (+ (* -2 (log -1)) (* -1 (log -1))) (- (+ (* -2 (/ (pow (log -1) 2) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (* -1 (/ (pow (log -1) 2) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2))))) (+ (* -1 (/ (* (+ (* -2 (log -1)) (* -1 (log -1))) (+ (* -2 (pow (log -1) 2)) (* -1 (pow (log -1) 2)))) (pow (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)) 2))) (+ (* -1/2 (/ (pow (log -1) 2) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (+ (* 2 (/ (log -1) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (/ (* (log -1) (+ 1 (* -1 (log -1)))) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))))))) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))))))) (+ (* -1 (/ (* (+ (* -2 (log -1)) (* -1 (log -1))) (+ (* -2 (pow (log -1) 2)) (* -1 (pow (log -1) 2)))) (pow (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)) 2))) (+ (* -1/2 (/ (pow (log -1) 2) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (+ (* 2 (/ (log -1) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2)))) (/ (* (log -1) (+ 1 (* -1 (log -1)))) (+ (* 2 (pow (log -1) 2)) (pow (log -1) 2))))))))))","(pow (log -1) 3)","(+ (* (pow N 2) (+ (* -2 (pow (log -1) 2)) (* -1 (pow (log -1) 2)))) (pow (log -1) 3))","(+ (* (pow N 2) (+ (* -2 (pow (log -1) 2)) (+ (* -1 (pow (log -1) 2)) (* (pow N 2) (+ (* -1/2 (pow (log -1) 2)) (+ (* 2 (log -1)) (* (log -1) (+ 1 (* -1 (log -1)))))))))) (pow (log -1) 3))","(+ (* (pow N 2) (+ (* -2 (pow (log -1) 2)) (+ (* -1 (pow (log -1) 2)) (* (pow N 2) (+ (* -1/2 (pow (log -1) 2)) (+ (* 2 (log -1)) (+ (* (log -1) (+ 1 (* -1 (log -1)))) (* (pow N 2) (+ (log -1) (+ (* -1 (+ 1 (* -1 (log -1)))) (+ (* -1/3 (pow (log -1) 2)) (* (log -1) (+ 1 (* -2/3 (log -1))))))))))))))) (pow (log -1) 3))","(+ (* N (+ (* -2 (pow (log -1) 2)) (* -1 (pow (log -1) 2)))) (pow (log -1) 3))","(+ (* N (+ (* -2 (pow (log -1) 2)) (+ (* -1 (pow (log -1) 2)) (* N (+ (* -1/2 (pow (log -1) 2)) (+ (* 2 (log -1)) (* (log -1) (+ 1 (* -1 (log -1)))))))))) (pow (log -1) 3))","(+ (* N (+ (* -2 (pow (log -1) 2)) (+ (* -1 (pow (log -1) 2)) (* N (+ (* -1/2 (pow (log -1) 2)) (+ (* 2 (log -1)) (+ (* N (+ (log -1) (+ (* -1 (+ 1 (* -1 (log -1)))) (+ (* -1/3 (pow (log -1) 2)) (* (log -1) (+ 1 (* -2/3 (log -1)))))))) (* (log -1) (+ 1 (* -1 (log -1))))))))))) (pow (log -1) 3))","(pow (log -1) 2)","(+ (* -1 (* N (log -1))) (pow (log -1) 2))","(+ (* N (+ (* -1 (log -1)) (* N (+ (* -1 (log -1)) (* -1/2 (log -1)))))) (pow (log -1) 2))","(+ (* N (+ (* -1 (log -1)) (* N (+ (* -1 (log -1)) (+ (* -1/2 (log -1)) (* N (+ 1 (* -1/3 (log -1))))))))) (pow (log -1) 2))","(+ (* 2 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))","(+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (/ (log (/ 1 N)) N)) (pow (log (/ 1 N)) 2)))","(+ (* 2 (/ (log (/ 1 N)) (pow N 2))) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (/ (log (/ 1 N)) N)) (+ (/ 1 (pow N 2)) (+ (/ (log (/ 1 N)) (pow N 2)) (pow (log (/ 1 N)) 2))))))","(+ (* 4/3 (/ (log (/ 1 N)) (pow N 3))) (+ (* 2 (/ (log (/ 1 N)) (pow N 2))) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (/ (log (/ 1 N)) N)) (+ (/ 1 (pow N 2)) (+ (* 2 (/ 1 (pow N 3))) (+ (/ (log (/ 1 N)) (pow N 2)) (pow (log (/ 1 N)) 2))))))))","(+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)))","(+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (/ (log (/ 1 N)) N)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))))","(+ (* 2 (/ (log (/ 1 N)) (pow N 2))) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (/ (log (/ 1 N)) N)) (+ (* 4 (/ (log (/ 1 N)) (pow N 2))) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (/ 1 (pow N 2)) (+ (/ (log (/ 1 N)) (pow N 2)) (pow (log (/ 1 N)) 2))))))))","(+ (* 4/3 (/ (log (/ 1 N)) (pow N 3))) (+ (* 2 (/ (log (/ 1 N)) (pow N 2))) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (/ (log (/ 1 N)) N)) (+ (* 4 (/ (log (/ 1 N)) (pow N 2))) (+ (* 4 (pow (log (/ 1 N)) 2)) (+ (/ 1 (pow N 2)) (+ (* 2 (/ 1 (pow N 3))) (+ (/ (log (/ 1 N)) (pow N 2)) (pow (log (/ 1 N)) 2))))))))))","(- (* -8 (/ (pow (log (/ 1 N)) 3) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))))) (+ (* -1 (log (/ 1 N))) (* -1 (/ (pow (log (/ 1 N)) 3) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)))))))","(- (+ (* -8 (/ (pow (log (/ 1 N)) 3) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))))) (* -4 (/ (pow (log (/ 1 N)) 4) (* N (pow (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))) 2))))) (+ (* -32 (/ (pow (log (/ 1 N)) 4) (* N (pow (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))) 2)))) (+ (* -2 (/ (pow (log (/ 1 N)) 2) (* N (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)))))) (+ (* -1 (log (/ 1 N))) (+ (* -1 (/ (pow (log (/ 1 N)) 2) (* N (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)))))) (* -1 (/ (pow (log (/ 1 N)) 3) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))))))))))","(- (+ (* -8 (/ (pow (log (/ 1 N)) 2) (* (pow N 2) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)))))) (+ (* -8 (/ (pow (log (/ 1 N)) 3) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))))) (+ (* -4 (/ (pow (log (/ 1 N)) 2) (* (pow N 2) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)))))) (+ (* -4 (/ (pow (log (/ 1 N)) 4) (* N (pow (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))) 2)))) (+ (* -1 (/ (* (pow (log (/ 1 N)) 3) (+ 1 (+ (log (/ 1 N)) (+ (* 2 (log (/ 1 N))) (* 4 (log (/ 1 N))))))) (* (pow N 2) (pow (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))) 2)))) (* 4 (/ (* (log (/ 1 N)) (- (+ (* -2 (/ (pow (log (/ 1 N)) 2) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))))) (* -1 (/ (pow (log (/ 1 N)) 2) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)))))) (* -4 (/ (pow (log (/ 1 N)) 4) (pow (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))) 2))))) (* (pow N 2) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))))))))))) (+ (* -32 (/ (pow (log (/ 1 N)) 4) (* N (pow (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))) 2)))) (+ (* -8 (/ (* (pow (log (/ 1 N)) 3) (+ 1 (+ (log (/ 1 N)) (+ (* 2 (log (/ 1 N))) (* 4 (log (/ 1 N))))))) (* (pow N 2) (pow (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))) 2)))) (+ (* -2 (/ (log (/ 1 N)) (* (pow N 2) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)))))) (+ (* -2 (/ (pow (log (/ 1 N)) 2) (* N (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)))))) (+ (* -1 (log (/ 1 N))) (+ (* -1 (/ (* (log (/ 1 N)) (+ 1 (log (/ 1 N)))) (* (pow N 2) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)))))) (+ (* -1 (/ (pow (log (/ 1 N)) 2) (* N (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)))))) (+ (* -1 (/ (pow (log (/ 1 N)) 3) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))))) (+ (* -1/2 (/ (pow (log (/ 1 N)) 2) (* (pow N 2) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)))))) (* 128 (/ (pow (log (/ 1 N)) 5) (* (pow N 2) (pow (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))) 3))))))))))))))","(- (+ (* -8 (/ (pow (log (/ 1 N)) 2) (* (pow N 2) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)))))) (+ (* -8 (/ (pow (log (/ 1 N)) 3) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))))) (+ (* -4 (/ (pow (log (/ 1 N)) 2) (* (pow N 2) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)))))) (+ (* -4 (/ (pow (log (/ 1 N)) 4) (* N (pow (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))) 2)))) (+ (* -1 (/ (* (pow (log (/ 1 N)) 3) (+ 1 (+ (log (/ 1 N)) (+ (* 2 (log (/ 1 N))) (* 4 (log (/ 1 N))))))) (* (pow N 2) (pow (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))) 2)))) (+ (* -1 (/ (* (pow (log (/ 1 N)) 3) (+ 2 (* 4/3 (log (/ 1 N))))) (* (pow N 3) (pow (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))) 2)))) (+ (* 4 (/ (* (log (/ 1 N)) (- (+ (* -2 (/ (log (/ 1 N)) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))))) (+ (* -1 (/ (* (log (/ 1 N)) (+ 1 (log (/ 1 N)))) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))))) (* -1/2 (/ (pow (log (/ 1 N)) 2) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))))))) (+ (* -1 (/ (* (pow (log (/ 1 N)) 3) (+ 1 (+ (log (/ 1 N)) (+ (* 2 (log (/ 1 N))) (* 4 (log (/ 1 N))))))) (pow (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))) 2))) (* 4 (/ (* (log (/ 1 N)) (- (+ (* -2 (/ (pow (log (/ 1 N)) 2) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))))) (* -1 (/ (pow (log (/ 1 N)) 2) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)))))) (* -4 (/ (pow (log (/ 1 N)) 4) (pow (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))) 2))))) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)))))))) (* (pow N 3) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)))))) (+ (* 4 (/ (* (log (/ 1 N)) (- (+ (* -2 (/ (pow (log (/ 1 N)) 2) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))))) (* -1 (/ (pow (log (/ 1 N)) 2) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)))))) (* -4 (/ (pow (log (/ 1 N)) 4) (pow (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))) 2))))) (* (pow N 2) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)))))) (/ (* (+ 1 (+ (log (/ 1 N)) (+ (* 2 (log (/ 1 N))) (* 4 (log (/ 1 N)))))) (- (+ (* -2 (/ (pow (log (/ 1 N)) 2) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))))) (* -1 (/ (pow (log (/ 1 N)) 2) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)))))) (* -4 (/ (pow (log (/ 1 N)) 4) (pow (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))) 2))))) (* (pow N 3) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))))))))))))) (+ (* -32 (/ (pow (log (/ 1 N)) 4) (* N (pow (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))) 2)))) (+ (* -8 (/ (* (pow (log (/ 1 N)) 3) (+ 1 (+ (log (/ 1 N)) (+ (* 2 (log (/ 1 N))) (* 4 (log (/ 1 N))))))) (* (pow N 2) (pow (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))) 2)))) (+ (* -8 (/ (* (pow (log (/ 1 N)) 3) (+ 2 (* 4/3 (log (/ 1 N))))) (* (pow N 3) (pow (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))) 2)))) (+ (* -2 (/ (log (/ 1 N)) (* (pow N 2) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)))))) (+ (* -2 (/ (pow (log (/ 1 N)) 2) (* N (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)))))) (+ (* -1 (log (/ 1 N))) (+ (* -1 (/ (log (/ 1 N)) (* (pow N 3) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)))))) (+ (* -1 (/ (* (log (/ 1 N)) (+ 1 (log (/ 1 N)))) (* (pow N 2) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)))))) (+ (* -1 (/ (* (log (/ 1 N)) (+ 1 (* 2/3 (log (/ 1 N))))) (* (pow N 3) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)))))) (+ (* -1 (/ (+ 1 (log (/ 1 N))) (* (pow N 3) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)))))) (+ (* -1 (/ (pow (log (/ 1 N)) 2) (* N (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)))))) (+ (* -1 (/ (pow (log (/ 1 N)) 3) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))))) (+ (* -1/2 (/ (pow (log (/ 1 N)) 2) (* (pow N 2) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)))))) (+ (* -1/3 (/ (pow (log (/ 1 N)) 2) (* (pow N 3) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)))))) (+ (* 4 (/ (* (log (/ 1 N)) (- (+ (* -8 (/ (pow (log (/ 1 N)) 2) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))))) (* -4 (/ (pow (log (/ 1 N)) 2) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)))))) (+ (* -8 (/ (* (pow (log (/ 1 N)) 3) (+ 1 (+ (log (/ 1 N)) (+ (* 2 (log (/ 1 N))) (* 4 (log (/ 1 N))))))) (pow (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))) 2))) (* 128 (/ (pow (log (/ 1 N)) 5) (pow (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))) 3)))))) (* (pow N 3) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)))))) (+ (* 32 (/ (* (pow (log (/ 1 N)) 4) (+ 1 (+ (log (/ 1 N)) (+ (* 2 (log (/ 1 N))) (* 4 (log (/ 1 N))))))) (* (pow N 3) (pow (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))) 3)))) (* 128 (/ (pow (log (/ 1 N)) 5) (* (pow N 2) (pow (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))) 3)))))))))))))))))))))","(/ (- (* -8 (pow (log (/ 1 N)) 3)) (* -1 (pow (log (/ 1 N)) 3))) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))))","(- (+ (* -8 (/ (pow (log (/ 1 N)) 3) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))))) (* -1 (/ (+ (* -2 (pow (log (/ 1 N)) 2)) (* -1 (pow (log (/ 1 N)) 2))) (* N (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))))))) (+ (* -1 (/ (pow (log (/ 1 N)) 3) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))))) (* 4 (/ (* (log (/ 1 N)) (- (* -8 (pow (log (/ 1 N)) 3)) (* -1 (pow (log (/ 1 N)) 3)))) (* N (pow (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))) 2))))))","(- (+ (* -8 (/ (pow (log (/ 1 N)) 2) (* (pow N 2) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)))))) (+ (* -8 (/ (pow (log (/ 1 N)) 3) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))))) (+ (* -4 (/ (pow (log (/ 1 N)) 2) (* (pow N 2) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)))))) (* -1 (/ (+ (* -2 (pow (log (/ 1 N)) 2)) (* -1 (pow (log (/ 1 N)) 2))) (* N (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))))))))) (+ (* -2 (/ (log (/ 1 N)) (* (pow N 2) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)))))) (+ (* -1 (/ (* (log (/ 1 N)) (+ 1 (log (/ 1 N)))) (* (pow N 2) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)))))) (+ (* -1 (/ (pow (log (/ 1 N)) 3) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))))) (+ (* -1/2 (/ (pow (log (/ 1 N)) 2) (* (pow N 2) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)))))) (+ (* 4 (/ (* (log (/ 1 N)) (- (* -8 (pow (log (/ 1 N)) 3)) (* -1 (pow (log (/ 1 N)) 3)))) (* N (pow (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))) 2)))) (+ (* 4 (/ (* (log (/ 1 N)) (- (* -1 (/ (+ (* -2 (pow (log (/ 1 N)) 2)) (* -1 (pow (log (/ 1 N)) 2))) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))))) (* 4 (/ (* (log (/ 1 N)) (- (* -8 (pow (log (/ 1 N)) 3)) (* -1 (pow (log (/ 1 N)) 3)))) (pow (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))) 2))))) (* (pow N 2) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)))))) (/ (* (+ 1 (+ (log (/ 1 N)) (+ (* 2 (log (/ 1 N))) (* 4 (log (/ 1 N)))))) (- (* -8 (pow (log (/ 1 N)) 3)) (* -1 (pow (log (/ 1 N)) 3)))) (* (pow N 2) (pow (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))) 2))))))))))","(- (+ (* -8 (/ (pow (log (/ 1 N)) 2) (* (pow N 2) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)))))) (+ (* -8 (/ (pow (log (/ 1 N)) 3) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))))) (+ (* -4 (/ (pow (log (/ 1 N)) 2) (* (pow N 2) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)))))) (+ (* -1 (/ (+ (* -2 (pow (log (/ 1 N)) 2)) (* -1 (pow (log (/ 1 N)) 2))) (* N (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)))))) (* -1 (/ (+ (* -1 (log (/ 1 N))) (+ (* -1 (* (log (/ 1 N)) (+ 1 (* 2/3 (log (/ 1 N)))))) (+ (* -1 (+ 1 (log (/ 1 N)))) (* -1/3 (pow (log (/ 1 N)) 2))))) (* (pow N 3) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)))))))))) (+ (* -2 (/ (log (/ 1 N)) (* (pow N 2) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)))))) (+ (* -1 (/ (* (log (/ 1 N)) (+ 1 (log (/ 1 N)))) (* (pow N 2) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)))))) (+ (* -1 (/ (pow (log (/ 1 N)) 3) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))))) (+ (* -1/2 (/ (pow (log (/ 1 N)) 2) (* (pow N 2) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)))))) (+ (* 4 (/ (* (log (/ 1 N)) (- (* -8 (pow (log (/ 1 N)) 3)) (* -1 (pow (log (/ 1 N)) 3)))) (* N (pow (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))) 2)))) (+ (* 4 (/ (* (log (/ 1 N)) (- (* -1 (/ (+ (* -2 (pow (log (/ 1 N)) 2)) (* -1 (pow (log (/ 1 N)) 2))) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))))) (* 4 (/ (* (log (/ 1 N)) (- (* -8 (pow (log (/ 1 N)) 3)) (* -1 (pow (log (/ 1 N)) 3)))) (pow (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))) 2))))) (* (pow N 2) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)))))) (+ (* 4 (/ (* (log (/ 1 N)) (- (+ (* -8 (/ (pow (log (/ 1 N)) 2) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))))) (* -4 (/ (pow (log (/ 1 N)) 2) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)))))) (+ (* -2 (/ (log (/ 1 N)) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))))) (+ (* -1 (/ (* (log (/ 1 N)) (+ 1 (log (/ 1 N)))) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))))) (+ (* -1/2 (/ (pow (log (/ 1 N)) 2) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))))) (+ (* 4 (/ (* (log (/ 1 N)) (- (* -1 (/ (+ (* -2 (pow (log (/ 1 N)) 2)) (* -1 (pow (log (/ 1 N)) 2))) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))))) (* 4 (/ (* (log (/ 1 N)) (- (* -8 (pow (log (/ 1 N)) 3)) (* -1 (pow (log (/ 1 N)) 3)))) (pow (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))) 2))))) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))))) (/ (* (+ 1 (+ (log (/ 1 N)) (+ (* 2 (log (/ 1 N))) (* 4 (log (/ 1 N)))))) (- (* -8 (pow (log (/ 1 N)) 3)) (* -1 (pow (log (/ 1 N)) 3)))) (pow (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))) 2)))))))) (* (pow N 3) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2)))))) (+ (/ (* (+ 1 (+ (log (/ 1 N)) (+ (* 2 (log (/ 1 N))) (* 4 (log (/ 1 N)))))) (- (* -8 (pow (log (/ 1 N)) 3)) (* -1 (pow (log (/ 1 N)) 3)))) (* (pow N 2) (pow (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))) 2))) (+ (/ (* (+ 1 (+ (log (/ 1 N)) (+ (* 2 (log (/ 1 N))) (* 4 (log (/ 1 N)))))) (- (* -1 (/ (+ (* -2 (pow (log (/ 1 N)) 2)) (* -1 (pow (log (/ 1 N)) 2))) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))))) (* 4 (/ (* (log (/ 1 N)) (- (* -8 (pow (log (/ 1 N)) 3)) (* -1 (pow (log (/ 1 N)) 3)))) (pow (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))) 2))))) (* (pow N 3) (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))))) (/ (* (+ 2 (* 4/3 (log (/ 1 N)))) (- (* -8 (pow (log (/ 1 N)) 3)) (* -1 (pow (log (/ 1 N)) 3)))) (* (pow N 3) (pow (+ (* 2 (pow (log (/ 1 N)) 2)) (+ (* 4 (pow (log (/ 1 N)) 2)) (pow (log (/ 1 N)) 2))) 2)))))))))))))","(* -8 (pow (log (/ 1 N)) 3))","(+ (* -8 (/ (pow (log (/ 1 N)) 2) (pow N 2))) (+ (* -8 (pow (log (/ 1 N)) 3)) (* -4 (/ (pow (log (/ 1 N)) 2) (pow N 2)))))","(+ (* -8 (/ (pow (log (/ 1 N)) 2) (pow N 2))) (+ (* -8 (pow (log (/ 1 N)) 3)) (+ (* -4 (/ (log (/ 1 N)) (pow N 4))) (+ (* -4 (/ (pow (log (/ 1 N)) 2) (pow N 2))) (+ (* -2 (/ (* (log (/ 1 N)) (+ 1 (* 2 (log (/ 1 N))))) (pow N 4))) (* -2 (/ (pow (log (/ 1 N)) 2) (pow N 4))))))))","(+ (* -8 (/ (pow (log (/ 1 N)) 2) (pow N 2))) (+ (* -8 (pow (log (/ 1 N)) 3)) (+ (* -4 (/ (log (/ 1 N)) (pow N 4))) (+ (* -4 (/ (pow (log (/ 1 N)) 2) (pow N 2))) (+ (* -2 (/ (log (/ 1 N)) (pow N 6))) (+ (* -2 (/ (* (log (/ 1 N)) (+ 1 (* 4/3 (log (/ 1 N))))) (pow N 6))) (+ (* -2 (/ (* (log (/ 1 N)) (+ 1 (* 2 (log (/ 1 N))))) (pow N 4))) (+ (* -2 (/ (pow (log (/ 1 N)) 2) (pow N 4))) (+ (* -4/3 (/ (pow (log (/ 1 N)) 2) (pow N 6))) (* -1 (/ (+ 1 (* 2 (log (/ 1 N)))) (pow N 6))))))))))))","(* -1 (pow (log (/ 1 N)) 3))","(+ (* -2 (/ (pow (log (/ 1 N)) 2) N)) (+ (* -1 (/ (pow (log (/ 1 N)) 2) N)) (* -1 (pow (log (/ 1 N)) 3))))","(+ (* -2 (/ (log (/ 1 N)) (pow N 2))) (+ (* -2 (/ (pow (log (/ 1 N)) 2) N)) (+ (* -1 (/ (* (log (/ 1 N)) (+ 1 (log (/ 1 N)))) (pow N 2))) (+ (* -1 (/ (pow (log (/ 1 N)) 2) N)) (+ (* -1 (pow (log (/ 1 N)) 3)) (* -1/2 (/ (pow (log (/ 1 N)) 2) (pow N 2))))))))","(+ (* -2 (/ (log (/ 1 N)) (pow N 2))) (+ (* -2 (/ (pow (log (/ 1 N)) 2) N)) (+ (* -1 (/ (log (/ 1 N)) (pow N 3))) (+ (* -1 (/ (* (log (/ 1 N)) (+ 1 (log (/ 1 N)))) (pow N 2))) (+ (* -1 (/ (* (log (/ 1 N)) (+ 1 (* 2/3 (log (/ 1 N))))) (pow N 3))) (+ (* -1 (/ (+ 1 (log (/ 1 N))) (pow N 3))) (+ (* -1 (/ (pow (log (/ 1 N)) 2) N)) (+ (* -1 (pow (log (/ 1 N)) 3)) (+ (* -1/2 (/ (pow (log (/ 1 N)) 2) (pow N 2))) (* -1/3 (/ (pow (log (/ 1 N)) 2) (pow N 3))))))))))))","(* 2 (pow (log (/ 1 N)) 2))","(+ (* 2 (/ (log (/ 1 N)) N)) (* 2 (pow (log (/ 1 N)) 2)))","(+ (* 2 (/ (log (/ 1 N)) N)) (+ (* 2 (/ (log (/ 1 N)) (pow N 2))) (* 2 (pow (log (/ 1 N)) 2))))","(+ (* 2/3 (/ (log (/ 1 N)) (pow N 3))) (+ (* 2 (/ (log (/ 1 N)) N)) (+ (* 2 (/ (log (/ 1 N)) (pow N 2))) (+ (* 2 (pow (log (/ 1 N)) 2)) (/ 1 (pow N 3))))))","(+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))","(+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* -1 (/ (+ (* -4 (log (/ -1 N))) (* 2 (log -1))) N)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)))","(+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* -1 (/ (+ (* -4 (log (/ -1 N))) (+ (* -1 (/ (+ 1 (+ (log (/ -1 N)) (* -2 (+ (log -1) (* -1 (log (/ -1 N))))))) N)) (* 2 (log -1)))) N)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)))","(+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* -1 (/ (+ (* -4 (log (/ -1 N))) (+ (* -1 (/ (+ 1 (+ (log (/ -1 N)) (+ (* -2 (+ (log -1) (* -1 (log (/ -1 N))))) (* -1 (/ (- (+ (* -2/3 (log (/ -1 N))) (* 2/3 (+ (log -1) (* -1 (log (/ -1 N)))))) 2) N))))) N)) (* 2 (log -1)))) N)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)))","(+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)))","(+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* -1 (/ (+ (* -4 (log (/ -1 N))) (* 2 (log -1))) N)) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))","(+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* -1 (/ (+ (* -4 (log (/ -1 N))) (+ (* -1 (/ (+ 1 (+ (log (/ -1 N)) (+ (* -2 (+ (log -1) (* -1 (log (/ -1 N))))) (* 4 (log (/ -1 N)))))) N)) (* 2 (log -1)))) N)) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))","(+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* -1 (/ (+ (* -4 (log (/ -1 N))) (+ (* -1 (/ (+ 1 (+ (log (/ -1 N)) (+ (* -2 (+ (log -1) (* -1 (log (/ -1 N))))) (+ (* -1 (/ (- (+ (* -2/3 (log (/ -1 N))) (* 2/3 (+ (log -1) (* -1 (log (/ -1 N)))))) 2) N)) (* 4 (log (/ -1 N))))))) N)) (* 2 (log -1)))) N)) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))","(- (* -8 (/ (pow (log (/ -1 N)) 3) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (+ (log -1) (+ (* -1 (log (/ -1 N))) (/ (pow (+ (log -1) (* -1 (log (/ -1 N)))) 3) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)))))))","(- (+ (* -8 (/ (pow (log (/ -1 N)) 3) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (* -1 (/ (- (/ (* (pow (+ (log -1) (* -1 (log (/ -1 N)))) 3) (+ (* -4 (log (/ -1 N))) (* 2 (log -1)))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))) 2)) (+ (* -8 (/ (* (pow (log (/ -1 N)) 3) (+ (* -4 (log (/ -1 N))) (* 2 (log -1)))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))) 2))) (+ (/ (* (+ (log -1) (* -1 (log (/ -1 N)))) (+ (* -2 (log (/ -1 N))) (* 2 (log -1)))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)))) (/ (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))))) N))) (+ (log -1) (+ (* -1 (log (/ -1 N))) (/ (pow (+ (log -1) (* -1 (log (/ -1 N)))) 3) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)))))))","(- (+ (* -8 (/ (pow (log (/ -1 N)) 3) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (* -1 (/ (- (+ (* -1 (/ (- (+ (* -8 (/ (pow (log (/ -1 N)) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (+ (* -4 (/ (pow (log (/ -1 N)) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (+ (/ (* (+ 1 (+ (log (/ -1 N)) (+ (* -2 (+ (log -1) (* -1 (log (/ -1 N))))) (* 4 (log (/ -1 N)))))) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 3)) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))) 2)) (/ (* (+ (* -4 (log (/ -1 N))) (* 2 (log -1))) (- (+ (/ (* (+ (log -1) (* -1 (log (/ -1 N)))) (+ (* -2 (log (/ -1 N))) (* 2 (log -1)))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)))) (/ (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (/ (* (pow (+ (log -1) (* -1 (log (/ -1 N)))) 3) (+ (* -4 (log (/ -1 N))) (* 2 (log -1)))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))) 2)))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))))) (+ (* -8 (/ (* (pow (log (/ -1 N)) 3) (+ 1 (+ (log (/ -1 N)) (+ (* -2 (+ (log -1) (* -1 (log (/ -1 N))))) (* 4 (log (/ -1 N))))))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))) 2))) (+ (* -2 (/ (log (/ -1 N)) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (+ (* -1/2 (/ (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (+ (* 2 (/ (log -1) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (+ (* 8 (/ (* (pow (log (/ -1 N)) 3) (pow (+ (* -4 (log (/ -1 N))) (* 2 (log -1))) 2)) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))) 3))) (/ (* (+ 1 (* -1 (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (log -1) (* -1 (log (/ -1 N))))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)))))))))) N)) (/ (* (pow (+ (log -1) (* -1 (log (/ -1 N)))) 3) (+ (* -4 (log (/ -1 N))) (* 2 (log -1)))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))) 2))) (+ (* -8 (/ (* (pow (log (/ -1 N)) 3) (+ (* -4 (log (/ -1 N))) (* 2 (log -1)))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))) 2))) (+ (/ (* (+ (log -1) (* -1 (log (/ -1 N)))) (+ (* -2 (log (/ -1 N))) (* 2 (log -1)))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)))) (/ (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))))) N))) (+ (log -1) (+ (* -1 (log (/ -1 N))) (/ (pow (+ (log -1) (* -1 (log (/ -1 N)))) 3) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)))))))","(- (+ (* -8 (/ (pow (log (/ -1 N)) 3) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (* -1 (/ (- (+ (* -1 (/ (- (+ (* -8 (/ (pow (log (/ -1 N)) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (+ (* -4 (/ (pow (log (/ -1 N)) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (+ (* -1 (/ (- (+ (/ (* (+ 1 (+ (log (/ -1 N)) (+ (* -2 (+ (log -1) (* -1 (log (/ -1 N))))) (* 4 (log (/ -1 N)))))) (- (+ (/ (* (+ (log -1) (* -1 (log (/ -1 N)))) (+ (* -2 (log (/ -1 N))) (* 2 (log -1)))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)))) (/ (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (/ (* (pow (+ (log -1) (* -1 (log (/ -1 N)))) 3) (+ (* -4 (log (/ -1 N))) (* 2 (log -1)))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))) 2)))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)))) (+ (/ (* (+ (* -4 (log (/ -1 N))) (* 2 (log -1))) (- (+ (* -2 (/ (log (/ -1 N)) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (+ (* -1/2 (/ (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (+ (* 2 (/ (log -1) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (/ (* (+ 1 (* -1 (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (log -1) (* -1 (log (/ -1 N))))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))))) (+ (/ (* (+ 1 (+ (log (/ -1 N)) (+ (* -2 (+ (log -1) (* -1 (log (/ -1 N))))) (* 4 (log (/ -1 N)))))) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 3)) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))) 2)) (/ (* (+ (* -4 (log (/ -1 N))) (* 2 (log -1))) (- (+ (/ (* (+ (log -1) (* -1 (log (/ -1 N)))) (+ (* -2 (log (/ -1 N))) (* 2 (log -1)))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)))) (/ (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (/ (* (pow (+ (log -1) (* -1 (log (/ -1 N)))) 3) (+ (* -4 (log (/ -1 N))) (* 2 (log -1)))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))) 2)))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)))) (/ (* (pow (+ (log -1) (* -1 (log (/ -1 N)))) 3) (- (+ (* -2/3 (log (/ -1 N))) (* 2/3 (+ (log -1) (* -1 (log (/ -1 N)))))) 2)) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))) 2)))) (+ (* -8 (/ (* (pow (log (/ -1 N)) 3) (- (+ (* -2/3 (log (/ -1 N))) (* 2/3 (+ (log -1) (* -1 (log (/ -1 N)))))) 2)) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))) 2))) (+ (* -1 (/ (+ (log -1) (* -1 (log (/ -1 N)))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (+ (* -1/2 (/ (+ (* -2 (log (/ -1 N))) (* 2 (log -1))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (+ (* 1/3 (/ (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (+ (* 8 (/ (* (pow (log (/ -1 N)) 3) (* (+ 1 (+ (log (/ -1 N)) (+ (* -2 (+ (log -1) (* -1 (log (/ -1 N))))) (* 4 (log (/ -1 N)))))) (+ (* -4 (log (/ -1 N))) (* 2 (log -1))))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))) 3))) (+ (/ 1 (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)))) (+ (/ (* (+ (log -1) (* -1 (log (/ -1 N)))) (- (* 2/3 (+ (log -1) (* -1 (log (/ -1 N))))) 1)) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)))) (/ (* (+ (* -4 (log (/ -1 N))) (* 2 (log -1))) (- (+ (* -8 (/ (pow (log (/ -1 N)) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (* -4 (/ (pow (log (/ -1 N)) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)))))) (+ (* -8 (/ (* (pow (log (/ -1 N)) 3) (+ 1 (+ (log (/ -1 N)) (+ (* -2 (+ (log -1) (* -1 (log (/ -1 N))))) (* 4 (log (/ -1 N))))))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))) 2))) (* 8 (/ (* (pow (log (/ -1 N)) 3) (pow (+ (* -4 (log (/ -1 N))) (* 2 (log -1))) 2)) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))) 3)))))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)))))))))))) N)) (+ (/ (* (+ 1 (+ (log (/ -1 N)) (+ (* -2 (+ (log -1) (* -1 (log (/ -1 N))))) (* 4 (log (/ -1 N)))))) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 3)) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))) 2)) (/ (* (+ (* -4 (log (/ -1 N))) (* 2 (log -1))) (- (+ (/ (* (+ (log -1) (* -1 (log (/ -1 N)))) (+ (* -2 (log (/ -1 N))) (* 2 (log -1)))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)))) (/ (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (/ (* (pow (+ (log -1) (* -1 (log (/ -1 N)))) 3) (+ (* -4 (log (/ -1 N))) (* 2 (log -1)))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))) 2)))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)))))))) (+ (* -8 (/ (* (pow (log (/ -1 N)) 3) (+ 1 (+ (log (/ -1 N)) (+ (* -2 (+ (log -1) (* -1 (log (/ -1 N))))) (* 4 (log (/ -1 N))))))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))) 2))) (+ (* -2 (/ (log (/ -1 N)) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (+ (* -1/2 (/ (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (+ (* 2 (/ (log -1) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (+ (* 8 (/ (* (pow (log (/ -1 N)) 3) (pow (+ (* -4 (log (/ -1 N))) (* 2 (log -1))) 2)) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))) 3))) (/ (* (+ 1 (* -1 (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (log -1) (* -1 (log (/ -1 N))))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)))))))))) N)) (/ (* (pow (+ (log -1) (* -1 (log (/ -1 N)))) 3) (+ (* -4 (log (/ -1 N))) (* 2 (log -1)))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))) 2))) (+ (* -8 (/ (* (pow (log (/ -1 N)) 3) (+ (* -4 (log (/ -1 N))) (* 2 (log -1)))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))) 2))) (+ (/ (* (+ (log -1) (* -1 (log (/ -1 N)))) (+ (* -2 (log (/ -1 N))) (* 2 (log -1)))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)))) (/ (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))))) N))) (+ (log -1) (+ (* -1 (log (/ -1 N))) (/ (pow (+ (log -1) (* -1 (log (/ -1 N)))) 3) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)))))))","(/ (- (* -8 (pow (log (/ -1 N)) 3)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 3)) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))","(- (+ (* -8 (/ (pow (log (/ -1 N)) 3) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (* -1 (/ (- (* -1 (/ (+ (* (+ (log -1) (* -1 (log (/ -1 N)))) (+ (* -2 (log (/ -1 N))) (* 2 (log -1)))) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (/ (* (+ (* -4 (log (/ -1 N))) (* 2 (log -1))) (- (* -8 (pow (log (/ -1 N)) 3)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 3))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))) 2))) N))) (/ (pow (+ (log -1) (* -1 (log (/ -1 N)))) 3) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)))))","(- (+ (* -8 (/ (pow (log (/ -1 N)) 3) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (* -1 (/ (- (+ (* -1 (/ (+ (* (+ (log -1) (* -1 (log (/ -1 N)))) (+ (* -2 (log (/ -1 N))) (* 2 (log -1)))) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (* -1 (/ (- (+ (* -8 (/ (pow (log (/ -1 N)) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (* -4 (/ (pow (log (/ -1 N)) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)))))) (+ (* -2 (/ (log (/ -1 N)) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (+ (* -1/2 (/ (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (+ (* 2 (/ (log -1) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (+ (/ (* (+ 1 (* -1 (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (log -1) (* -1 (log (/ -1 N))))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)))) (+ (/ (* (+ 1 (+ (log (/ -1 N)) (+ (* -2 (+ (log -1) (* -1 (log (/ -1 N))))) (* 4 (log (/ -1 N)))))) (- (* -8 (pow (log (/ -1 N)) 3)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 3))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))) 2)) (/ (* (+ (* -4 (log (/ -1 N))) (* 2 (log -1))) (- (* -1 (/ (+ (* (+ (log -1) (* -1 (log (/ -1 N)))) (+ (* -2 (log (/ -1 N))) (* 2 (log -1)))) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (/ (* (+ (* -4 (log (/ -1 N))) (* 2 (log -1))) (- (* -8 (pow (log (/ -1 N)) 3)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 3))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))) 2)))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)))))))))) N))) (/ (* (+ (* -4 (log (/ -1 N))) (* 2 (log -1))) (- (* -8 (pow (log (/ -1 N)) 3)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 3))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))) 2))) N))) (/ (pow (+ (log -1) (* -1 (log (/ -1 N)))) 3) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)))))","(- (+ (* -8 (/ (pow (log (/ -1 N)) 3) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (* -1 (/ (- (+ (* -1 (/ (+ (* (+ (log -1) (* -1 (log (/ -1 N)))) (+ (* -2 (log (/ -1 N))) (* 2 (log -1)))) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (* -1 (/ (- (+ (* -8 (/ (pow (log (/ -1 N)) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (+ (* -4 (/ (pow (log (/ -1 N)) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (* -1 (/ (- (* -1 (/ (+ 1 (+ (* -1 (+ (log -1) (* -1 (log (/ -1 N))))) (+ (* -1/2 (+ (* -2 (log (/ -1 N))) (* 2 (log -1)))) (+ (* 1/3 (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)) (* (+ (log -1) (* -1 (log (/ -1 N)))) (- (* 2/3 (+ (log -1) (* -1 (log (/ -1 N))))) 1)))))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (+ (/ (* (+ 1 (+ (log (/ -1 N)) (+ (* -2 (+ (log -1) (* -1 (log (/ -1 N))))) (* 4 (log (/ -1 N)))))) (- (* -1 (/ (+ (* (+ (log -1) (* -1 (log (/ -1 N)))) (+ (* -2 (log (/ -1 N))) (* 2 (log -1)))) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (/ (* (+ (* -4 (log (/ -1 N))) (* 2 (log -1))) (- (* -8 (pow (log (/ -1 N)) 3)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 3))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))) 2)))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)))) (+ (/ (* (+ (* -4 (log (/ -1 N))) (* 2 (log -1))) (- (+ (* -8 (/ (pow (log (/ -1 N)) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (* -4 (/ (pow (log (/ -1 N)) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)))))) (+ (* -2 (/ (log (/ -1 N)) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (+ (* -1/2 (/ (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (+ (* 2 (/ (log -1) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (+ (/ (* (+ 1 (* -1 (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (log -1) (* -1 (log (/ -1 N))))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)))) (+ (/ (* (+ 1 (+ (log (/ -1 N)) (+ (* -2 (+ (log -1) (* -1 (log (/ -1 N))))) (* 4 (log (/ -1 N)))))) (- (* -8 (pow (log (/ -1 N)) 3)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 3))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))) 2)) (/ (* (+ (* -4 (log (/ -1 N))) (* 2 (log -1))) (- (* -1 (/ (+ (* (+ (log -1) (* -1 (log (/ -1 N)))) (+ (* -2 (log (/ -1 N))) (* 2 (log -1)))) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (/ (* (+ (* -4 (log (/ -1 N))) (* 2 (log -1))) (- (* -8 (pow (log (/ -1 N)) 3)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 3))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))) 2)))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))))))))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)))) (/ (* (- (* -8 (pow (log (/ -1 N)) 3)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 3)) (- (+ (* -2/3 (log (/ -1 N))) (* 2/3 (+ (log -1) (* -1 (log (/ -1 N)))))) 2)) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))) 2))))) N)))) (+ (* -2 (/ (log (/ -1 N)) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (+ (* -1/2 (/ (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (+ (* 2 (/ (log -1) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (+ (/ (* (+ 1 (* -1 (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (log -1) (* -1 (log (/ -1 N))))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)))) (+ (/ (* (+ 1 (+ (log (/ -1 N)) (+ (* -2 (+ (log -1) (* -1 (log (/ -1 N))))) (* 4 (log (/ -1 N)))))) (- (* -8 (pow (log (/ -1 N)) 3)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 3))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))) 2)) (/ (* (+ (* -4 (log (/ -1 N))) (* 2 (log -1))) (- (* -1 (/ (+ (* (+ (log -1) (* -1 (log (/ -1 N)))) (+ (* -2 (log (/ -1 N))) (* 2 (log -1)))) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))))) (/ (* (+ (* -4 (log (/ -1 N))) (* 2 (log -1))) (- (* -8 (pow (log (/ -1 N)) 3)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 3))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))) 2)))) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)))))))))) N))) (/ (* (+ (* -4 (log (/ -1 N))) (* 2 (log -1))) (- (* -8 (pow (log (/ -1 N)) 3)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 3))) (pow (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))) 2))) N))) (/ (pow (+ (log -1) (* -1 (log (/ -1 N)))) 3) (+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (* 4 (pow (log (/ -1 N)) 2)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)))))","(* -8 (pow (log (/ -1 N)) 3))","(+ (* -8 (/ (pow (log (/ -1 N)) 2) (pow N 2))) (+ (* -8 (pow (log (/ -1 N)) 3)) (* -4 (/ (pow (log (/ -1 N)) 2) (pow N 2)))))","(+ (* -8 (/ (pow (log (/ -1 N)) 2) (pow N 2))) (+ (* -8 (pow (log (/ -1 N)) 3)) (+ (* -4 (/ (log (/ -1 N)) (pow N 4))) (+ (* -4 (/ (pow (log (/ -1 N)) 2) (pow N 2))) (+ (* -2 (/ (* (log (/ -1 N)) (+ 1 (* 2 (log (/ -1 N))))) (pow N 4))) (* -2 (/ (pow (log (/ -1 N)) 2) (pow N 4))))))))","(+ (* -8 (/ (pow (log (/ -1 N)) 2) (pow N 2))) (+ (* -8 (pow (log (/ -1 N)) 3)) (+ (* -4 (/ (log (/ -1 N)) (pow N 4))) (+ (* -4 (/ (pow (log (/ -1 N)) 2) (pow N 2))) (+ (* -2 (/ (log (/ -1 N)) (pow N 6))) (+ (* -2 (/ (* (log (/ -1 N)) (+ 1 (* 4/3 (log (/ -1 N))))) (pow N 6))) (+ (* -2 (/ (* (log (/ -1 N)) (+ 1 (* 2 (log (/ -1 N))))) (pow N 4))) (+ (* -2 (/ (pow (log (/ -1 N)) 2) (pow N 4))) (+ (* -4/3 (/ (pow (log (/ -1 N)) 2) (pow N 6))) (* -1 (/ (+ 1 (* 2 (log (/ -1 N)))) (pow N 6))))))))))))","(pow (+ (log -1) (* -1 (log (/ -1 N)))) 3)","(+ (* -1 (/ (+ (* (+ (log -1) (* -1 (log (/ -1 N)))) (+ (* -2 (log (/ -1 N))) (* 2 (log -1)))) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)) N)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 3))","(+ (* -1 (/ (+ (* -1 (/ (+ (* -2 (log (/ -1 N))) (+ (* -1/2 (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)) (+ (* 2 (log -1)) (* (+ 1 (* -1 (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (log -1) (* -1 (log (/ -1 N)))))))) N)) (+ (* (+ (log -1) (* -1 (log (/ -1 N)))) (+ (* -2 (log (/ -1 N))) (* 2 (log -1)))) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))) N)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 3))","(+ (* -1 (/ (+ (* -1 (/ (+ (* -2 (log (/ -1 N))) (+ (* -1 (/ (+ 1 (+ (* -1 (+ (log -1) (* -1 (log (/ -1 N))))) (+ (* -1/2 (+ (* -2 (log (/ -1 N))) (* 2 (log -1)))) (+ (* 1/3 (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)) (* (+ (log -1) (* -1 (log (/ -1 N)))) (- (* 2/3 (+ (log -1) (* -1 (log (/ -1 N))))) 1)))))) N)) (+ (* -1/2 (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2)) (+ (* 2 (log -1)) (* (+ 1 (* -1 (+ (log -1) (* -1 (log (/ -1 N)))))) (+ (log -1) (* -1 (log (/ -1 N))))))))) N)) (+ (* (+ (log -1) (* -1 (log (/ -1 N)))) (+ (* -2 (log (/ -1 N))) (* 2 (log -1)))) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 2))) N)) (pow (+ (log -1) (* -1 (log (/ -1 N)))) 3))","(* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N))))))","(+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (* 2 (/ (log (/ -1 N)) N)))","(+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (* -1 (/ (+ (* -2 (log (/ -1 N))) (* -1 (/ (+ (log (/ -1 N)) (* -1 (+ (log -1) (* -1 (log (/ -1 N)))))) N))) N)))","(+ (* -2 (* (log (/ -1 N)) (+ (log -1) (* -1 (log (/ -1 N)))))) (* -1 (/ (+ (* -2 (log (/ -1 N))) (* -1 (/ (+ (log (/ -1 N)) (+ (* -1 (+ (log -1) (* -1 (log (/ -1 N))))) (* -1 (/ (- (* -2/3 (log (/ -1 N))) 1) N)))) N))) N)))"]],"memory":[[4604624,12570624]],"method":["egg-herbie"],"outputs":[[]],"time":153.4609375,"type":"simplify"},{"count":[[7,98]],"inputs":[["(fma.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64))) (*.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64)))))","(fma.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (fma.f64 N N #s(literal -1 binary64))) (fma.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64))) (*.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64))))))","(-.f64 (/.f64 (-.f64 (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 3 binary64)) (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 3 binary64))) (fma.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (fma.f64 N N #s(literal -1 binary64))) (fma.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64))) (*.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64))))))) (log.f64 N))","(/.f64 (-.f64 (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 3 binary64)) (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 3 binary64))) (fma.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (fma.f64 N N #s(literal -1 binary64))) (fma.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64))) (*.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64)))))))","(pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 3 binary64))","(pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 3 binary64))","(*.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64))))"]],"memory":[[2221136,35369312]],"outputs":[["(neg.f64 (*.f64 (neg.f64 (log.f64 (+.f64 N #s(literal -1 binary64)))) (log.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))))))","(+.f64 (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 2 binary64)) (*.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64)))))","(+.f64 (*.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64)))) (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 2 binary64)))","(+.f64 (*.f64 (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 3 binary64)) (log.f64 (fma.f64 N N #s(literal -1 binary64)))) (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 3 binary64)))","(+.f64 (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 3 binary64)) (*.f64 (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 3 binary64)) (log.f64 (fma.f64 N N #s(literal -1 binary64)))))","(+.f64 (*.f64 (*.f64 (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 3 binary64)) (/.f64 (log1p.f64 N) (log1p.f64 N))) (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 2 binary64))) (*.f64 (*.f64 (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 3 binary64)) (/.f64 (log1p.f64 N) (log1p.f64 N))) (*.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64))))))","(+.f64 (*.f64 (*.f64 (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 3 binary64)) (/.f64 (log1p.f64 N) (log1p.f64 N))) (*.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64))))) (*.f64 (*.f64 (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 3 binary64)) (/.f64 (log1p.f64 N) (log1p.f64 N))) (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 2 binary64))))","(+.f64 (*.f64 (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 3 binary64)) (*.f64 (log.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (log.f64 (+.f64 N #s(literal -1 binary64))))) (*.f64 (pow.f64 (*.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64)))) #s(literal 3 binary64)) (*.f64 (log.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (log.f64 (+.f64 N #s(literal -1 binary64))))))","(+.f64 (*.f64 (*.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64)))) (*.f64 (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 3 binary64)) (/.f64 (log1p.f64 N) (log1p.f64 N)))) (*.f64 (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 3 binary64)) (/.f64 (log1p.f64 N) (log1p.f64 N))))","(+.f64 (*.f64 (pow.f64 (*.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64)))) #s(literal 3 binary64)) (*.f64 (log.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (log.f64 (+.f64 N #s(literal -1 binary64))))) (*.f64 (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 3 binary64)) (*.f64 (log.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (log.f64 (+.f64 N #s(literal -1 binary64))))))","(+.f64 (*.f64 (*.f64 (log.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (log.f64 (+.f64 N #s(literal -1 binary64)))) (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 3 binary64))) (*.f64 (*.f64 (log.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (log.f64 (+.f64 N #s(literal -1 binary64)))) (pow.f64 (*.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64)))) #s(literal 3 binary64))))","(+.f64 (*.f64 (*.f64 (log.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (log.f64 (+.f64 N #s(literal -1 binary64)))) (pow.f64 (*.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64)))) #s(literal 3 binary64))) (*.f64 (*.f64 (log.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (log.f64 (+.f64 N #s(literal -1 binary64)))) (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 3 binary64))))","(+.f64 (*.f64 (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 3 binary64)) (/.f64 (log1p.f64 N) (log1p.f64 N))) (*.f64 (*.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64)))) (*.f64 (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 3 binary64)) (/.f64 (log1p.f64 N) (log1p.f64 N)))))","(+.f64 (/.f64 (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 3 binary64)) (*.f64 (neg.f64 (log1p.f64 N)) (log.f64 (+.f64 N #s(literal -1 binary64))))) (neg.f64 (/.f64 (pow.f64 (*.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64)))) #s(literal 2 binary64)) (*.f64 (neg.f64 (log1p.f64 N)) (log.f64 (+.f64 N #s(literal -1 binary64)))))))","(-.f64 (/.f64 (pow.f64 (*.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64)))) #s(literal 2 binary64)) (*.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) (log1p.f64 N))) (/.f64 (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 3 binary64)) (*.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) (log1p.f64 N))))","(neg.f64 (neg.f64 (fma.f64 (log.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (log.f64 (+.f64 N #s(literal -1 binary64))) (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 2 binary64)))))","(+.f64 (+.f64 (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 2 binary64)) (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 2 binary64))) (*.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64)))))","(+.f64 (*.f64 (log.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (log.f64 (+.f64 N #s(literal -1 binary64)))) (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 2 binary64)))","(+.f64 (*.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))))) (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 2 binary64)))","(+.f64 (*.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64)))) (+.f64 (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 2 binary64)) (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 2 binary64))))","(+.f64 (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 2 binary64)) (*.f64 (log.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (log.f64 (+.f64 N #s(literal -1 binary64)))))","(+.f64 (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 2 binary64)) (*.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))))))","(+.f64 (neg.f64 (neg.f64 (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 2 binary64)))) (*.f64 (log.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (log.f64 (+.f64 N #s(literal -1 binary64)))))","(+.f64 (*.f64 (log.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (log.f64 (+.f64 N #s(literal -1 binary64)))) (neg.f64 (neg.f64 (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 2 binary64)))))","(+.f64 (neg.f64 (neg.f64 (+.f64 (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 2 binary64)) (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 2 binary64))))) (neg.f64 (*.f64 (neg.f64 (log.f64 (+.f64 N #s(literal -1 binary64)))) (log.f64 (fma.f64 N N #s(literal -1 binary64))))))","(+.f64 (/.f64 (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 3 binary64)) (fma.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log1p.f64 N) (neg.f64 (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 2 binary64))))) (neg.f64 (/.f64 (*.f64 (pow.f64 (log.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) #s(literal 2 binary64)) (log.f64 (+.f64 N #s(literal -1 binary64)))) (fma.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log1p.f64 N) (neg.f64 (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 2 binary64)))))))","(-.f64 (+.f64 (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 2 binary64)) (/.f64 (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 3 binary64)) (*.f64 (neg.f64 (log1p.f64 N)) (log.f64 (+.f64 N #s(literal -1 binary64)))))) (/.f64 (pow.f64 (*.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64)))) #s(literal 2 binary64)) (*.f64 (neg.f64 (log1p.f64 N)) (log.f64 (+.f64 N #s(literal -1 binary64))))))","(-.f64 #s(literal 0 binary64) (neg.f64 (fma.f64 (log.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (log.f64 (+.f64 N #s(literal -1 binary64))) (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 2 binary64)))))","(-.f64 (/.f64 (pow.f64 (+.f64 (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 2 binary64)) (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 2 binary64))) #s(literal 2 binary64)) (fma.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log1p.f64 N) (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 2 binary64)))) (/.f64 (pow.f64 (*.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64)))) #s(literal 2 binary64)) (fma.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log1p.f64 N) (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 2 binary64)))))","(-.f64 (/.f64 (*.f64 (pow.f64 (log.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) #s(literal 2 binary64)) (log.f64 (+.f64 N #s(literal -1 binary64)))) (fma.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) (log.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (neg.f64 (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 2 binary64))))) (/.f64 (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 3 binary64)) (fma.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) (log.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (neg.f64 (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 2 binary64))))))","(neg.f64 (+.f64 (neg.f64 (log1p.f64 N)) (log.f64 N)))","(neg.f64 (+.f64 (log.f64 N) (neg.f64 (log1p.f64 N))))","(neg.f64 (/.f64 (*.f64 (log.f64 (fma.f64 N N N)) (log.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) N))) (neg.f64 (log.f64 (fma.f64 N N N)))))","(neg.f64 (/.f64 (-.f64 (pow.f64 (log1p.f64 N) #s(literal 3 binary64)) (pow.f64 (log.f64 N) #s(literal 3 binary64))) (neg.f64 (fma.f64 (log.f64 (fma.f64 N N N)) (log.f64 N) (pow.f64 (log1p.f64 N) #s(literal 2 binary64))))))","(neg.f64 (/.f64 (neg.f64 (-.f64 (pow.f64 (log1p.f64 N) #s(literal 3 binary64)) (pow.f64 (log.f64 N) #s(literal 3 binary64)))) (fma.f64 (log.f64 (fma.f64 N N N)) (log.f64 N) (pow.f64 (log1p.f64 N) #s(literal 2 binary64)))))","(neg.f64 (/.f64 (*.f64 (neg.f64 (log.f64 (fma.f64 N N N))) (log.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) N))) (log.f64 (fma.f64 N N N))))","(+.f64 (neg.f64 (log.f64 N)) (log1p.f64 N))","(+.f64 (log1p.f64 N) (neg.f64 (log.f64 N)))","(+.f64 (+.f64 (neg.f64 (log.f64 N)) (log.f64 (fma.f64 N N #s(literal -1 binary64)))) (neg.f64 (log.f64 (+.f64 N #s(literal -1 binary64)))))","(+.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (+.f64 (neg.f64 (log.f64 (+.f64 N #s(literal -1 binary64)))) (neg.f64 (log.f64 N))))","(+.f64 (/.f64 (pow.f64 (log1p.f64 N) #s(literal 2 binary64)) (log.f64 (fma.f64 N N N))) (neg.f64 (/.f64 (pow.f64 (log.f64 N) #s(literal 2 binary64)) (log.f64 (fma.f64 N N N)))))","(+.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (-.f64 (neg.f64 (log.f64 (+.f64 N #s(literal -1 binary64)))) (log.f64 N)))","(+.f64 (/.f64 (pow.f64 (log1p.f64 N) #s(literal 3 binary64)) (fma.f64 (log.f64 (fma.f64 N N N)) (log.f64 N) (pow.f64 (log1p.f64 N) #s(literal 2 binary64)))) (neg.f64 (/.f64 (pow.f64 (log.f64 N) #s(literal 3 binary64)) (fma.f64 (log.f64 (fma.f64 N N N)) (log.f64 N) (pow.f64 (log1p.f64 N) #s(literal 2 binary64))))))","(+.f64 (+.f64 (neg.f64 (log.f64 N)) (/.f64 (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 3 binary64)) (fma.f64 (log.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (log.f64 (+.f64 N #s(literal -1 binary64))) (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 2 binary64))))) (/.f64 (neg.f64 (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 3 binary64))) (fma.f64 (log.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (log.f64 (+.f64 N #s(literal -1 binary64))) (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 2 binary64)))))","(+.f64 (/.f64 (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 3 binary64)) (fma.f64 (log.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (log.f64 (+.f64 N #s(literal -1 binary64))) (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 2 binary64)))) (+.f64 (/.f64 (neg.f64 (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 3 binary64))) (fma.f64 (log.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (log.f64 (+.f64 N #s(literal -1 binary64))) (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 2 binary64)))) (neg.f64 (log.f64 N))))","(neg.f64 (neg.f64 (log1p.f64 N)))","(neg.f64 (*.f64 (neg.f64 (log1p.f64 N)) #s(literal 1 binary64)))","(+.f64 (neg.f64 (log.f64 (+.f64 N #s(literal -1 binary64)))) (log.f64 (fma.f64 N N #s(literal -1 binary64))))","(+.f64 (-.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (fma.f64 N N #s(literal -1 binary64)))) (log1p.f64 N))","(+.f64 (log1p.f64 N) (-.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64)))))","(+.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (neg.f64 (log.f64 (+.f64 N #s(literal -1 binary64)))))","(+.f64 (-.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (fma.f64 (*.f64 N N) N #s(literal -1 binary64)))) (log1p.f64 (fma.f64 N N N)))","(+.f64 (log1p.f64 N) (+.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) (neg.f64 (log.f64 (+.f64 N #s(literal -1 binary64))))))","(+.f64 (*.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 1 binary64)) (*.f64 (neg.f64 (log.f64 (+.f64 N #s(literal -1 binary64)))) #s(literal 1 binary64)))","(+.f64 (*.f64 #s(literal 1 binary64) (log.f64 (fma.f64 N N #s(literal -1 binary64)))) (*.f64 #s(literal 1 binary64) (neg.f64 (log.f64 (+.f64 N #s(literal -1 binary64))))))","(+.f64 (/.f64 (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 3 binary64)) (fma.f64 (log.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (log.f64 (+.f64 N #s(literal -1 binary64))) (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 2 binary64)))) (/.f64 (neg.f64 (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 3 binary64))) (fma.f64 (log.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (log.f64 (+.f64 N #s(literal -1 binary64))) (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 2 binary64)))))","(+.f64 (/.f64 (neg.f64 (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 3 binary64))) (fma.f64 (log.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (log.f64 (+.f64 N #s(literal -1 binary64))) (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 2 binary64)))) (/.f64 (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 3 binary64)) (fma.f64 (log.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (log.f64 (+.f64 N #s(literal -1 binary64))) (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 2 binary64)))))","(+.f64 (*.f64 (/.f64 (log1p.f64 N) (fma.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log1p.f64 N) (neg.f64 (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 2 binary64))))) (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 2 binary64))) (*.f64 (/.f64 (log1p.f64 N) (fma.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log1p.f64 N) (neg.f64 (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 2 binary64))))) (*.f64 (neg.f64 (log.f64 (+.f64 N #s(literal -1 binary64)))) (log.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))))))","(+.f64 (*.f64 (/.f64 #s(literal 1 binary64) (fma.f64 (log.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (log.f64 (+.f64 N #s(literal -1 binary64))) (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 2 binary64)))) (neg.f64 (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 3 binary64)))) (/.f64 (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 3 binary64)) (fma.f64 (log.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (log.f64 (+.f64 N #s(literal -1 binary64))) (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 2 binary64)))))","(+.f64 (*.f64 (/.f64 (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 3 binary64)) (fma.f64 (log.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (log.f64 (+.f64 N #s(literal -1 binary64))) (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 2 binary64)))) #s(literal 1 binary64)) (*.f64 (/.f64 (neg.f64 (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 3 binary64))) (fma.f64 (log.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (log.f64 (+.f64 N #s(literal -1 binary64))) (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 2 binary64)))) #s(literal 1 binary64)))","(+.f64 (*.f64 (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 2 binary64)) (log1p.f64 N)) (*.f64 (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 2 binary64)) (log.f64 (+.f64 N #s(literal -1 binary64)))))","(+.f64 (*.f64 (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 3 binary64)) (log1p.f64 N)) (*.f64 (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 3 binary64)) (log.f64 (+.f64 N #s(literal -1 binary64)))))","(+.f64 (*.f64 (log1p.f64 N) (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 2 binary64))) (*.f64 (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 2 binary64)) (log.f64 (+.f64 N #s(literal -1 binary64)))))","(+.f64 (*.f64 (log1p.f64 N) (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 3 binary64))) (*.f64 (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 3 binary64)) (log.f64 (+.f64 N #s(literal -1 binary64)))))","(*.f64 (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 2 binary64)) (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 3 binary64)))","(*.f64 (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 2 binary64)) (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 1 binary64)))","(*.f64 (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 2 binary64)) (log.f64 (fma.f64 N N #s(literal -1 binary64))))","(*.f64 (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 2 binary64)) (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 2 binary64)))","(*.f64 (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (/.f64 #s(literal 3 binary64) #s(literal 4 binary64))) (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (/.f64 #s(literal 3 binary64) #s(literal 4 binary64))))","(*.f64 (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (/.f64 #s(literal 9 binary64) #s(literal 2 binary64))) (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (/.f64 #s(literal 9 binary64) #s(literal 2 binary64))))","(*.f64 (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (/.f64 (/.f64 #s(literal 4 binary64) #s(literal 2 binary64)) #s(literal 2 binary64))) (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (/.f64 (/.f64 #s(literal 4 binary64) #s(literal 2 binary64)) #s(literal 2 binary64))))","(*.f64 (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 3 binary64)) (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 3 binary64)))","(*.f64 (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 3 binary64)) (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 2 binary64)))","(*.f64 (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 3 binary64)) (log.f64 (fma.f64 N N #s(literal -1 binary64))))","(*.f64 (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 3 binary64)) (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 1 binary64)))","(neg.f64 (neg.f64 (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 3 binary64))))","(-.f64 #s(literal 0 binary64) (neg.f64 (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 3 binary64))))","(*.f64 (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 2 binary64)) (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 3 binary64)))","(*.f64 (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 2 binary64)) (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 1 binary64)))","(*.f64 (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 2 binary64)) (log.f64 (+.f64 N #s(literal -1 binary64))))","(*.f64 (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 2 binary64)) (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 2 binary64)))","(*.f64 (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) (/.f64 #s(literal 3 binary64) #s(literal 4 binary64))) (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) (/.f64 #s(literal 3 binary64) #s(literal 4 binary64))))","(*.f64 (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) (/.f64 #s(literal 9 binary64) #s(literal 2 binary64))) (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) (/.f64 #s(literal 9 binary64) #s(literal 2 binary64))))","(*.f64 (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) (/.f64 (/.f64 #s(literal 4 binary64) #s(literal 2 binary64)) #s(literal 2 binary64))) (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) (/.f64 (/.f64 #s(literal 4 binary64) #s(literal 2 binary64)) #s(literal 2 binary64))))","(*.f64 (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 3 binary64)) (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 3 binary64)))","(*.f64 (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 3 binary64)) (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 2 binary64)))","(*.f64 (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 3 binary64)) (log.f64 (+.f64 N #s(literal -1 binary64))))","(*.f64 (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 3 binary64)) (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 1 binary64)))","(*.f64 #s(literal 1 binary64) (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 3 binary64)))","(*.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 3 binary64)))","(+.f64 (*.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) (log1p.f64 N)) (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 2 binary64)))","(+.f64 (*.f64 (log1p.f64 N) (log.f64 (+.f64 N #s(literal -1 binary64)))) (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 2 binary64)))","(*.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64))))","(*.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) (log.f64 (fma.f64 N N #s(literal -1 binary64))))","(fma.f64 (neg.f64 (log.f64 (+.f64 N #s(literal -1 binary64)))) (neg.f64 (log1p.f64 N)) (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 2 binary64)))","(fma.f64 #s(literal -1 binary64) (*.f64 (neg.f64 (log1p.f64 N)) (log.f64 (+.f64 N #s(literal -1 binary64)))) (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 2 binary64)))","(fma.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) (log1p.f64 N) (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 2 binary64)))","(fma.f64 (log1p.f64 N) (log.f64 (+.f64 N #s(literal -1 binary64))) (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 2 binary64)))"]],"time":2284.64501953125,"type":"rewrite"},{"compiler":[[4637,455]],"memory":[[-3767248,12085424]],"time":25.054931640625,"type":"eval"},{"alts":[["(-.f64 (/.f64 (-.f64 (pow.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) #s(literal 3 binary64)) (pow.f64 (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) #s(literal 3 binary64))) (fma.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (*.f64 N N) N)) (fma.f64 (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) (*.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)))))) (log.f64 N))","done",48.45388129268919,"binary64"],["(-.f64 (/.f64 (-.f64 (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 3 binary64)) (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 3 binary64))) (fma.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (fma.f64 N N #s(literal -1 binary64))) (+.f64 (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 2 binary64)) (*.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64))))))) (log.f64 N))","fresh",48.93745003381704,"binary64"],["(-.f64 (/.f64 (-.f64 (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 3 binary64)) (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 3 binary64))) (fma.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (fma.f64 N N #s(literal -1 binary64))) (neg.f64 (*.f64 (neg.f64 (log.f64 (+.f64 N #s(literal -1 binary64)))) (log.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))))))) (log.f64 N))","fresh",48.899324459500896,"binary64"],["(-.f64 (/.f64 (-.f64 (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 3 binary64)) (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 3 binary64))) (-.f64 (/.f64 (pow.f64 (+.f64 (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 2 binary64)) (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 2 binary64))) #s(literal 2 binary64)) (fma.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log1p.f64 N) (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 2 binary64)))) (/.f64 (pow.f64 (*.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64)))) #s(literal 2 binary64)) (fma.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log1p.f64 N) (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 2 binary64)))))) (log.f64 N))","fresh",48.68783616578181,"binary64"],["(-.f64 (/.f64 (-.f64 (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 3 binary64)) (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 3 binary64))) (+.f64 (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 2 binary64)) (*.f64 (log.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (log.f64 (+.f64 N #s(literal -1 binary64)))))) (log.f64 N))","fresh",48.8446721427085,"binary64"],["(-.f64 (/.f64 (-.f64 (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 3 binary64)) (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 3 binary64))) (+.f64 (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 2 binary64)) (*.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))))))) (log.f64 N))","fresh",48.915969159653265,"binary64"],["(-.f64 (/.f64 (-.f64 (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 3 binary64)) (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 3 binary64))) (+.f64 (+.f64 (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 2 binary64)) (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 2 binary64))) (*.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64)))))) (log.f64 N))","fresh",48.865295381566845,"binary64"],["(-.f64 (/.f64 (-.f64 (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 3 binary64)) (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 3 binary64))) (neg.f64 (neg.f64 (fma.f64 (log.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (log.f64 (+.f64 N #s(literal -1 binary64))) (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 2 binary64)))))) (log.f64 N))","fresh",48.845885180863974,"binary64"],["(-.f64 (/.f64 (-.f64 (*.f64 (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 2 binary64)) (log.f64 (fma.f64 N N #s(literal -1 binary64)))) (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 3 binary64))) (fma.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (fma.f64 N N #s(literal -1 binary64))) (fma.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64))) (*.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64))))))) (log.f64 N))","fresh",48.79478346317679,"binary64"],["(-.f64 (/.f64 (-.f64 (*.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (*.f64 N N) N))) (*.f64 (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)))) (+.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)))) (log.f64 N))","done",48.62788034417751,"binary64"],["(-.f64 (/.f64 (-.f64 (*.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (fma.f64 N N #s(literal -1 binary64)))) (*.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64))))) (+.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64))))) (log.f64 N))","done",48.96618890513321,"binary64"],["(-.f64 (-.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N))) (log.f64 N))","done",48.58560594139277,"binary64"],["(-.f64 (+.f64 (/.f64 (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 3 binary64)) (fma.f64 (log.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (log.f64 (+.f64 N #s(literal -1 binary64))) (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 2 binary64)))) (/.f64 (neg.f64 (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 3 binary64))) (fma.f64 (log.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (log.f64 (+.f64 N #s(literal -1 binary64))) (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 2 binary64))))) (log.f64 N))","fresh",48.845596681244295,"binary64"],["(-.f64 (+.f64 (-.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (fma.f64 (*.f64 N N) N #s(literal -1 binary64)))) (log1p.f64 (fma.f64 N N N))) (log.f64 N))","fresh",48.80781985277079,"binary64"],["(-.f64 (+.f64 (*.f64 (/.f64 (log1p.f64 N) (fma.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log1p.f64 N) (neg.f64 (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 2 binary64))))) (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 2 binary64))) (*.f64 (/.f64 (log1p.f64 N) (fma.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log1p.f64 N) (neg.f64 (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 2 binary64))))) (*.f64 (neg.f64 (log.f64 (+.f64 N #s(literal -1 binary64)))) (log.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))))))) (log.f64 N))","fresh",49.15009048334052,"binary64"],["(-.f64 (+.f64 (neg.f64 (log.f64 N)) (log1p.f64 (*.f64 (*.f64 N N) N))) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)))","done",48.78744101692509,"binary64"],["(-.f64 (+.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (/.f64 #s(literal -1 binary64) (-.f64 #s(literal 1 binary64) N)))) (log.f64 N))","done",49.134008003385,"binary64"],["(-.f64 (log1p.f64 N) (log.f64 N))","done",48.976030472678374,"binary64"],["(+.f64 (+.f64 (neg.f64 (log.f64 N)) (/.f64 (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 3 binary64)) (fma.f64 (log.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (log.f64 (+.f64 N #s(literal -1 binary64))) (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 2 binary64))))) (/.f64 (neg.f64 (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 3 binary64))) (fma.f64 (log.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (log.f64 (+.f64 N #s(literal -1 binary64))) (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 2 binary64)))))","fresh",47.836693686708635,"binary64"],["(+.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (-.f64 (neg.f64 (log.f64 (+.f64 N #s(literal -1 binary64)))) (log.f64 N)))","fresh",49.51662108285508,"binary64"],["(neg.f64 (/.f64 (*.f64 (neg.f64 (log.f64 (fma.f64 N N N))) (log.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) N))) (log.f64 (fma.f64 N N N))))","done",47.10482384744166,"binary64"],["(neg.f64 (log.f64 (/.f64 N (+.f64 N #s(literal 1 binary64)))))","done",46.77664099805991,"binary64"],["#s(literal 1 binary64)","done",57.65361816382278,"binary64"]],"compiler":[[886,134],[60,18],[46,18],[45,19],[77,25],[40,19],[40,19],[43,19],[41,20],[54,18],[44,15],[35,13],[16,11],[62,20],[22,13],[64,22],[17,12],[15,11],[5,4],[63,21],[14,10],[20,11],[7,6],[1,2]],"count":[[109,23]],"kept":[{"done":[10,10],"fresh":[0,0],"new":[98,13],"picked":[1,0]}],"memory":[[-2362144,15646432]],"min-error":[[43.98333286731407,"binary64"]],"time":29.2451171875,"type":"prune"},{"accuracy":[44.76553905183631],"baseline":[46.77664099805991],"branch":[["N",44.76553905183631,2,"binary64"],["(-.f64 (log.f64 (+.f64 N #s(literal 1 binary64))) (log.f64 N))",45.177435679897066,2,"binary64"]],"compiler":[[1,1],[7,6]],"count":[[25,2]],"inputs":[["#s(literal 1 binary64)","(neg.f64 (log.f64 (/.f64 N (+.f64 N #s(literal 1 binary64)))))","(-.f64 (log1p.f64 N) (log.f64 N))","(-.f64 (log.f64 (+.f64 N #s(literal 1 binary64))) (log.f64 N))","(+.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (-.f64 (neg.f64 (log.f64 (+.f64 N #s(literal -1 binary64)))) (log.f64 N)))","(-.f64 (-.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N))) (log.f64 N))","(-.f64 (+.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (/.f64 #s(literal -1 binary64) (-.f64 #s(literal 1 binary64) N)))) (log.f64 N))","(-.f64 (+.f64 (neg.f64 (log.f64 N)) (log1p.f64 (*.f64 (*.f64 N N) N))) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)))","(neg.f64 (/.f64 (*.f64 (neg.f64 (log.f64 (fma.f64 N N N))) (log.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) N))) (log.f64 (fma.f64 N N N))))","(-.f64 (+.f64 (-.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (fma.f64 (*.f64 N N) N #s(literal -1 binary64)))) (log1p.f64 (fma.f64 N N N))) (log.f64 N))","(-.f64 (/.f64 (-.f64 (*.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (fma.f64 N N #s(literal -1 binary64)))) (*.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64))))) (+.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64))))) (log.f64 N))","(-.f64 (/.f64 (-.f64 (*.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (*.f64 N N) N))) (*.f64 (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)))) (+.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)))) (log.f64 N))","(-.f64 (/.f64 (-.f64 (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 3 binary64)) (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 3 binary64))) (+.f64 (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 2 binary64)) (*.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))))))) (log.f64 N))","(-.f64 (/.f64 (-.f64 (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 3 binary64)) (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 3 binary64))) (+.f64 (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 2 binary64)) (*.f64 (log.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (log.f64 (+.f64 N #s(literal -1 binary64)))))) (log.f64 N))","(-.f64 (/.f64 (-.f64 (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 3 binary64)) (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 3 binary64))) (neg.f64 (neg.f64 (fma.f64 (log.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (log.f64 (+.f64 N #s(literal -1 binary64))) (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 2 binary64)))))) (log.f64 N))","(-.f64 (/.f64 (-.f64 (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 3 binary64)) (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 3 binary64))) (fma.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (fma.f64 N N #s(literal -1 binary64))) (neg.f64 (*.f64 (neg.f64 (log.f64 (+.f64 N #s(literal -1 binary64)))) (log.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))))))) (log.f64 N))","(-.f64 (/.f64 (-.f64 (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 3 binary64)) (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 3 binary64))) (+.f64 (+.f64 (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 2 binary64)) (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 2 binary64))) (*.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64)))))) (log.f64 N))","(-.f64 (/.f64 (-.f64 (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 3 binary64)) (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 3 binary64))) (fma.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (fma.f64 N N #s(literal -1 binary64))) (+.f64 (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 2 binary64)) (*.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64))))))) (log.f64 N))","(-.f64 (/.f64 (-.f64 (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 3 binary64)) (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 3 binary64))) (fma.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (fma.f64 N N #s(literal -1 binary64))) (fma.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64))) (*.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64))))))) (log.f64 N))","(-.f64 (/.f64 (-.f64 (pow.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) #s(literal 3 binary64)) (pow.f64 (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) #s(literal 3 binary64))) (fma.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (*.f64 N N) N)) (fma.f64 (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)) (*.f64 (log1p.f64 (*.f64 (*.f64 N N) N)) (log1p.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) N)))))) (log.f64 N))","(-.f64 (/.f64 (-.f64 (*.f64 (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 2 binary64)) (log.f64 (fma.f64 N N #s(literal -1 binary64)))) (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 3 binary64))) (fma.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (fma.f64 N N #s(literal -1 binary64))) (fma.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64))) (*.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64))))))) (log.f64 N))","(-.f64 (+.f64 (/.f64 (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 3 binary64)) (fma.f64 (log.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (log.f64 (+.f64 N #s(literal -1 binary64))) (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 2 binary64)))) (/.f64 (neg.f64 (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 3 binary64))) (fma.f64 (log.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (log.f64 (+.f64 N #s(literal -1 binary64))) (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 2 binary64))))) (log.f64 N))","(+.f64 (+.f64 (neg.f64 (log.f64 N)) (/.f64 (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 3 binary64)) (fma.f64 (log.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (log.f64 (+.f64 N #s(literal -1 binary64))) (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 2 binary64))))) (/.f64 (neg.f64 (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 3 binary64))) (fma.f64 (log.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (log.f64 (+.f64 N #s(literal -1 binary64))) (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 2 binary64)))))","(-.f64 (+.f64 (*.f64 (/.f64 (log1p.f64 N) (fma.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log1p.f64 N) (neg.f64 (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 2 binary64))))) (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 2 binary64))) (*.f64 (/.f64 (log1p.f64 N) (fma.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log1p.f64 N) (neg.f64 (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 2 binary64))))) (*.f64 (neg.f64 (log.f64 (+.f64 N #s(literal -1 binary64)))) (log.f64 (*.f64 (+.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))))))) (log.f64 N))","(-.f64 (/.f64 (-.f64 (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 3 binary64)) (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 3 binary64))) (-.f64 (/.f64 (pow.f64 (+.f64 (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 2 binary64)) (pow.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) #s(literal 2 binary64))) #s(literal 2 binary64)) (fma.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log1p.f64 N) (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 2 binary64)))) (/.f64 (pow.f64 (*.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log.f64 (+.f64 N #s(literal -1 binary64)))) #s(literal 2 binary64)) (fma.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64))) (log1p.f64 N) (pow.f64 (log.f64 (+.f64 N #s(literal -1 binary64))) #s(literal 2 binary64)))))) (log.f64 N))"]],"memory":[[982272,9043904]],"oracle":[60.62900382516379],"outputs":[["(neg.f64 (log.f64 (/.f64 N (+.f64 N #s(literal 1 binary64)))))","#s(literal 1 binary64)"]],"repr":["binary64"],"time":15.85400390625,"times":[[7.296142578125,"N"],[6.138916015625,"(-.f64 (log.f64 (+.f64 N #s(literal 1 binary64))) (log.f64 N))"]],"type":"regimes"},{"accuracy":[57.65361816382278],"baseline":[57.65361816382278],"branch":[["(-.f64 (log.f64 (+.f64 N #s(literal 1 binary64))) (log.f64 N))",57.65361816382278,1,"binary64"],["N",57.65361816382283,1,"binary64"]],"compiler":[[7,6],[1,1]],"count":[[1,1]],"inputs":[["#s(literal 1 binary64)"]],"link":["."],"memory":[[2781600,2781600]],"name":["2log (problem 3.3.6)"],"oracle":[57.65361816382278],"outputs":[["#s(literal 1 binary64)"]],"repr":["binary64"],"time":2.9169921875,"times":[[1.258056640625,"(-.f64 (log.f64 (+.f64 N #s(literal 1 binary64))) (log.f64 N))"],[1.294921875,"N"]],"type":"regimes"},{"bstep":[[16.190185546875,13531586581319718.0,73541245603132640.0]],"compiler":[[1,3],[7,7],[1,3],[7,7],[1,3],[7,7],[1,3],[7,7],[1,3],[7,7],[1,3],[7,7],[9,7],[1,1]],"memory":[[3576208,3576208]],"method":["binary-search"],"mixsample":[[1.695068359375,"adjust",800],[1.05224609375,"ival-sub",0],[0.083740234375,"ival-true",0],[2.618896484375,"ival-log",0],[3.46533203125,"ival-log1p",0],[0.048583984375,"ival-assert",0]],"outcomes":[[11.94140625,1,"valid",96]],"stop":[["narrow-enough",1]],"time":18.407958984375,"type":"bsearch"},{"inputs":[["(if (<=.f64 N #s(literal 14000000000000000 binary64)) (neg.f64 (log.f64 (/.f64 N (+.f64 N #s(literal 1 binary64))))) #s(literal 1 binary64))","#s(literal 1 binary64)"]],"memory":[[-1596160,15514672]],"method":["egg-herbie"],"outputs":[["(if (<=.f64 N #s(literal 14000000000000000 binary64)) (neg.f64 (log.f64 (/.f64 N (+.f64 N #s(literal 1 binary64))))) #s(literal 1 binary64))","#s(literal 1 binary64)"]],"time":168.56103515625,"type":"simplify"},{"compiler":[[13,9]],"memory":[[521200,521200]],"stop":[["fuel",1]],"time":1.216796875,"type":"soundness"},{"compiler":[[13,9],[13,9],[27,19],[27,19],[7,6],[7,6]],"memory":[[-5972496,18094896]],"remove-preprocessing":[[],[],[]],"time":47.2890625,"type":"preprocess"},{"memory":[[2000,2000]],"time":0.01416015625,"type":"end"}]