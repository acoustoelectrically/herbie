[{"memory":[[14864,14864]],"time":0.030029296875,"type":"start"},{"compiler":[[15,11]],"memory":[[554464,554464]],"method":["search"],"sampling":[[12,{"invalid":0.0,"precondition":0.9189104034689253,"unknown":3.959452955618883e-5,"valid":0.08105000200151859}],[11,{"invalid":0.0,"precondition":0.9189104034689253,"unknown":7.918905911237766e-5,"valid":0.08101040747196239}],[10,{"invalid":0.0,"precondition":0.9189104034689253,"unknown":0.00015837811822475538,"valid":0.08093121841285002}],[9,{"invalid":0.0,"precondition":0.9189104034689253,"unknown":0.0003167562364495108,"valid":0.08077284029462527}],[8,{"invalid":0.0,"precondition":0.9189104034689253,"unknown":0.0006335124728990216,"valid":0.08045608405817575}],[7,{"invalid":0.0,"precondition":0.9189104034689253,"unknown":0.0012670249457980432,"valid":0.07982257158527672}],[6,{"invalid":0.0,"precondition":0.9189104034689253,"unknown":0.0025340498915960865,"valid":0.07855554663947868}],[5,{"invalid":0.0,"precondition":0.9189104034689253,"unknown":0.005068099783192173,"valid":0.0760214967478826}],[4,{"invalid":0.0,"precondition":0.9189104034689253,"unknown":0.010136199566384346,"valid":0.07095339696469043}],[3,{"invalid":0.0,"precondition":0.9189104034689253,"unknown":0.020272399132768692,"valid":0.06081719739830608}],[2,{"invalid":0.0,"precondition":0.9189104034689253,"unknown":0.040544798265537384,"valid":0.040544798265537384}],[1,{"invalid":0.0,"precondition":0.9189104034689253,"unknown":0.08108959653107477,"valid":0.0}],[0,{"invalid":0.0,"precondition":0.9189104034689253,"unknown":0.08108959653107477,"valid":0.0}]],"time":2.018798828125,"type":"analyze"},{"bogosity":[{"invalid":0.0,"precondition":0.9189104034689253,"valid":0.08108959653107478}],"memory":[[17641024,362386736]],"mixsample":[[1.7197265625,"ival-atan",1600],[273.17822265625,"adjust",800],[75.21728515625,"ival-add",0],[0.149658203125,"ival-sub",800],[184.77880859375,"ival-atan",0],[4.395263671875,"ival-assert",0],[105.62646484375,"ival-sub",0],[38.804443359375,"ival-add",400],[16.636474609375,"ival-and",0],[0.052734375,"ival-sub",400],[134.619873046875,"const",0],[33.94189453125,"ival->",0],[392.987548828125,"ival-atan",400],[10.26123046875,"exact",0],[14.20751953125,"adjust",2000],[24.79345703125,"ival-<",0]],"outcomes":[[1444.273681640625,1,"valid",7448],[114.27587890625,2,"valid",403],[45.2294921875,0,"valid",405]],"time":1998.328125,"type":"sample"},{"compiler":[[7,6],[20,8],[20,8]],"confusion":[[254,0,0,2]],"explanations":[["-.f64","(-.f64 (atan.f64 (+.f64 N #s(literal 1 binary64))) (atan.f64 N))","cancellation",254,0,[],[[]]]],"fperrors":[["(-.f64 (atan.f64 (+.f64 N #s(literal 1 binary64))) (atan.f64 N))",254,0,false,0,false],["N",0,0,false,0,false],["(+.f64 N #s(literal 1 binary64))",0,0,false,0,false],["#s(literal 1 binary64)",0,0,false,0,false],["(atan.f64 N)",0,0,false,0,false],["(atan.f64 (+.f64 N #s(literal 1 binary64)))",0,0,false,0,false]],"freqs":[[1,254],[0,2]],"maybe-confusion":[[254,0,0,0,0,2]],"memory":[[2517088,44576992]],"mixsample":[[12.301025390625,"adjust",800],[3.172119140625,"ival-add",0],[8.39599609375,"ival-atan",0],[0.19384765625,"ival-assert",0],[1.87060546875,"ival-add",400],[5.42919921875,"ival-sub",0],[0.45703125,"ival-true",0],[18.9228515625,"ival-atan",400],[0.3349609375,"exact",0],[0.69873046875,"adjust",2000]],"outcomes":[[62.95361328125,1,"valid",460],[5.14453125,2,"valid",28],[1.8818359375,0,"valid",24]],"time":121.843994140625,"total-confusion":[[1,0,0,0,0,0]],"type":"explain"},{"compiler":[[7,6]],"egraph":[[0,182,7,0.000656595],[10,182,7,0.000738279],[9,174,7,0.0008579],[8,158,7,0.000889339],[7,109,7,0.000761477],[6,80,7,0.000808018],[5,48,7,0.000458817],[4,33,7,0.000360143],[3,25,7,0.00047802],[2,19,7,0.0002966],[1,15,7,0.000116336],[0,10,7,0.000165258],[0,6,7,0.00011431]],"inputs":[["(-.f64 (atan.f64 (+.f64 N #s(literal 1 binary64))) (atan.f64 N))"]],"memory":[[-1377936,14777360]],"method":["egg-herbie"],"outputs":[["(-.f64 (atan.f64 (+.f64 N #s(literal 1 binary64))) (atan.f64 N))","(-.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) (atan.f64 N))"]],"stop":[["iter limit",1],["saturated",1],["iter limit",1]],"symmetry":[[]],"time":163.264892578125,"type":"preprocess"},{"compiler":[[0,1]],"memory":[[41072,41072]],"time":0.087158203125,"type":"eval"},{"alts":[["(-.f64 (atan.f64 (+.f64 N #s(literal 1 binary64))) (atan.f64 N))","next",58.773505010387474,"binary64"]],"compiler":[[7,6]],"memory":[[311456,311456]],"time":0.577880859375,"type":"prune"},{"egraph":[[0,182,18,0.000848878],[10,182,18,0.001188309],[9,174,18,0.000945618],[8,158,18,0.001132222],[7,109,18,0.001148765],[6,80,18,0.00119991],[5,48,18,0.000770908],[4,33,18,0.000467851],[3,25,18,0.000271956],[2,19,18,0.00021196],[1,15,18,0.000214197],[0,10,18,0.000262227],[0,6,18,0.000109379]],"inputs":[["(-.f64 (atan.f64 (+.f64 N #s(literal 1 binary64))) (atan.f64 N))","(atan.f64 (+.f64 N #s(literal 1 binary64)))","(+.f64 N #s(literal 1 binary64))","N","#s(literal 1 binary64)","(atan.f64 N)"]],"locations":[["(atan.f64 N)","cost-diff",0],["(+.f64 N #s(literal 1 binary64))","cost-diff",0],["(atan.f64 (+.f64 N #s(literal 1 binary64)))","cost-diff",0],["(-.f64 (atan.f64 (+.f64 N #s(literal 1 binary64))) (atan.f64 N))","cost-diff",0]],"memory":[[830784,830784]],"method":["egg-herbie"],"outputs":[["(-.f64 (atan.f64 (+.f64 N #s(literal 1 binary64))) (atan.f64 N))","(-.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) (atan.f64 N))","(atan.f64 (+.f64 N #s(literal 1 binary64)))","(atan.f64 (+.f64 #s(literal 1 binary64) N))","(+.f64 N #s(literal 1 binary64))","(+.f64 #s(literal 1 binary64) N)","N","#s(literal 1 binary64)","(atan.f64 N)"]],"stop":[["iter limit",1],["saturated",1],["iter limit",1]],"time":17.238037109375,"type":"simplify"},{"compiler":[[20,8]],"locations":[["(+.f64 N #s(literal 1 binary64))","accuracy",0.0],["(atan.f64 N)","accuracy",0.0],["(atan.f64 (+.f64 N #s(literal 1 binary64)))","accuracy",0.00390625],["(-.f64 (atan.f64 (+.f64 N #s(literal 1 binary64))) (atan.f64 N))","accuracy",58.76873003999163]],"memory":[[1765376,10908432]],"mixsample":[[7.28564453125,"adjust",800],[3.288818359375,"ival-add",0],[4.84765625,"ival-atan",0],[0.1640625,"ival-assert",0],[1.257080078125,"ival-add",400],[2.906005859375,"ival-sub",0],[0.245361328125,"ival-true",0],[10.968505859375,"ival-atan",400],[0.1748046875,"exact",0],[0.333984375,"adjust",2000]],"outcomes":[[41.342529296875,1,"valid",230],[3.22998046875,2,"valid",14],[0.988525390625,0,"valid",12]],"time":54.626953125,"type":"localize"},{"count":[[4,9]],"inputs":[["(-.f64 (atan.f64 (+.f64 N #s(literal 1 binary64))) (atan.f64 N))","(atan.f64 (+.f64 N #s(literal 1 binary64)))","(+.f64 N #s(literal 1 binary64))","(atan.f64 N)"]],"memory":[[-7603040,523984]],"outputs":[["(- (atan (+ 1 N)) (atan N))","(atan (+ 1 N))","1","(+ 1 N)","(atan N)","N","(* N (+ 1 (/ 1 N)))","(- (atan (- 1 (* -1 N))) (atan N))","(atan (- 1 (* -1 N)))"]],"series":[[0.982177734375,"((- (atan (+ N 1)) (atan N)) (atan (+ N 1)) (+ N 1) (atan N))","N","-inf"],[0.389892578125,"((- (atan (+ N 1)) (atan N)) (atan (+ N 1)) (+ N 1) (atan N))","N","inf"],[0.22998046875,"((- (atan (+ N 1)) (atan N)) (atan (+ N 1)) (+ N 1) (atan N))","N","0"]],"time":1.820068359375,"type":"series"},{"count":[[9,8]],"egraph":[[0,540,32,0.001504875],[10,540,32,0.002024712],[9,532,32,0.001952094],[8,516,32,0.001948125],[7,457,32,0.002195714],[6,417,32,0.002042979],[5,369,32,0.001941198],[4,189,32,0.001986429],[3,89,32,0.000803574],[2,44,32,0.000495929],[1,34,32,0.00024542],[0,14,32,0.000226333]],"inputs":[["(- (atan (+ 1 N)) (atan N))","(atan (+ 1 N))","1","(+ 1 N)","(atan N)","N","(* N (+ 1 (/ 1 N)))","(- (atan (- 1 (* -1 N))) (atan N))","(atan (- 1 (* -1 N)))"]],"memory":[[1242288,1242288]],"method":["egg-herbie"],"outputs":[["(- (atan (+ 1 N)) (atan N))","(-.f64 (atan.f64 (-.f64 N #s(literal -1 binary64))) (atan.f64 N))","(atan (+ 1 N))","(atan.f64 (-.f64 N #s(literal -1 binary64)))","1","#s(literal 1 binary64)","(+ 1 N)","(-.f64 N #s(literal -1 binary64))","(atan N)","(atan.f64 N)","N","(* N (+ 1 (/ 1 N)))","(-.f64 N #s(literal -1 binary64))","(- (atan (- 1 (* -1 N))) (atan N))","(-.f64 (atan.f64 (-.f64 N #s(literal -1 binary64))) (atan.f64 N))","(atan (- 1 (* -1 N)))","(atan.f64 (-.f64 N #s(literal -1 binary64)))"]],"stop":[["iter limit",1],["saturated",1]],"time":24.31591796875,"type":"simplify"},{"count":[[4,239]],"egraph":[[0,8376,16,0.073561959],[3,2885,16,0.037025586],[2,284,16,0.007584228],[1,44,16,0.001082234],[0,10,16,0.000663144],[0,6,16,9.0712e-5]],"inputs":[["(-.f64 (atan.f64 (+.f64 N #s(literal 1 binary64))) (atan.f64 N))","(atan.f64 (+.f64 N #s(literal 1 binary64)))","(+.f64 N #s(literal 1 binary64))","(atan.f64 N)"]],"memory":[[4788944,50528432]],"outputs":[["(atan2.f64 #s(literal 1 binary64) (fma.f64 (+.f64 #s(literal 1 binary64) N) N #s(literal 1 binary64)))","(*.f64 (pow.f64 (/.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 6 binary64)) (pow.f64 (atan.f64 N) #s(literal 6 binary64)))) #s(literal -1 binary64)) (pow.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64)) (pow.f64 (atan.f64 N) #s(literal 3 binary64))) #s(literal -1 binary64)))","(*.f64 (pow.f64 (/.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 9 binary64)) (pow.f64 (atan.f64 N) #s(literal 9 binary64)))) #s(literal -1 binary64)) (pow.f64 (+.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 6 binary64)) (+.f64 (pow.f64 (*.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) #s(literal 3 binary64)) (pow.f64 (atan.f64 N) #s(literal 6 binary64)))) #s(literal -1 binary64)))","(*.f64 (pow.f64 (/.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 4 binary64)) (pow.f64 (atan.f64 N) #s(literal 4 binary64)))) #s(literal -1 binary64)) (pow.f64 (fma.f64 (atan.f64 N) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) #s(literal -1 binary64)))","(*.f64 (pow.f64 (/.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 6 binary64)) (pow.f64 (atan.f64 N) #s(literal 6 binary64)))) #s(literal -1 binary64)) (pow.f64 (+.f64 (+.f64 (pow.f64 (*.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) #s(literal 2 binary64)) (pow.f64 (atan.f64 N) #s(literal 4 binary64))) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 4 binary64))) #s(literal -1 binary64)))","(*.f64 (/.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64)) (pow.f64 (atan.f64 N) #s(literal 3 binary64))) (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 4 binary64)) (pow.f64 (*.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N)) #s(literal 2 binary64)))) (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)) (*.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N))))","(*.f64 (/.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64)) (pow.f64 (atan.f64 N) #s(literal 3 binary64))) (+.f64 (pow.f64 (*.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N)) #s(literal 3 binary64)) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 6 binary64)))) (fma.f64 (*.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N)) (-.f64 (*.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N)) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 4 binary64))))","(*.f64 (/.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)) (pow.f64 (atan.f64 N) #s(literal 2 binary64))) (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)) (pow.f64 (atan.f64 N) #s(literal 2 binary64)))) (-.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) (atan.f64 N)))","(*.f64 (/.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)) (pow.f64 (atan.f64 N) #s(literal 2 binary64))) (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64)) (pow.f64 (atan.f64 N) #s(literal 3 binary64)))) (fma.f64 (atan.f64 N) (-.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))))","(*.f64 (pow.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) #s(literal -1 binary64)) (pow.f64 (pow.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)) (pow.f64 (atan.f64 N) #s(literal 2 binary64))) #s(literal -1 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) #s(literal -1 binary64)) (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)) (pow.f64 (atan.f64 N) #s(literal 2 binary64))))","(*.f64 (pow.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) #s(literal -1 binary64)) (pow.f64 (pow.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64)) (pow.f64 (atan.f64 N) #s(literal 3 binary64))) #s(literal -1 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) #s(literal -1 binary64)) (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64)) (pow.f64 (atan.f64 N) #s(literal 3 binary64))))","(*.f64 (neg.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)) (pow.f64 (atan.f64 N) #s(literal 2 binary64)))) (pow.f64 (neg.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N)))) #s(literal -1 binary64)))","(*.f64 (neg.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64)) (pow.f64 (atan.f64 N) #s(literal 3 binary64)))) (pow.f64 (neg.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)))) #s(literal -1 binary64)))","(*.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (/.f64 (-.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) (atan.f64 N)) (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N)))))","(*.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (*.f64 (-.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) (atan.f64 N)) (pow.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) #s(literal -1 binary64))))","(*.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)) (pow.f64 (atan.f64 N) #s(literal 2 binary64))) (pow.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) #s(literal -1 binary64)))","(*.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) (/.f64 (-.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) (atan.f64 N)) (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)))))","(*.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) (*.f64 (-.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) (atan.f64 N)) (pow.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) #s(literal -1 binary64))))","(*.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64)) (pow.f64 (atan.f64 N) #s(literal 3 binary64))) (pow.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) #s(literal -1 binary64)))","(*.f64 #s(literal 1 binary64) (-.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) (atan.f64 N)))","(pow.f64 (/.f64 (pow.f64 (-.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) (atan.f64 N)) #s(literal -1 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64))","(pow.f64 (pow.f64 (-.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) (atan.f64 N)) #s(literal -1 binary64)) #s(literal -1 binary64))","(/.f64 (neg.f64 (*.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64)) (pow.f64 (atan.f64 N) #s(literal 3 binary64))) #s(literal 1 binary64))) (neg.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)))))","(/.f64 (neg.f64 (*.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 4 binary64)) (pow.f64 (atan.f64 N) #s(literal 4 binary64))) (pow.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) #s(literal -1 binary64)))) (neg.f64 (fma.f64 (atan.f64 N) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)))))","(/.f64 (neg.f64 (*.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 6 binary64)) (pow.f64 (atan.f64 N) #s(literal 6 binary64))) (pow.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) #s(literal -1 binary64)))) (neg.f64 (+.f64 (+.f64 (pow.f64 (*.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) #s(literal 2 binary64)) (pow.f64 (atan.f64 N) #s(literal 4 binary64))) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 4 binary64)))))","(/.f64 (neg.f64 (*.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 6 binary64)) (pow.f64 (atan.f64 N) #s(literal 6 binary64))) (pow.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) #s(literal -1 binary64)))) (neg.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64)) (pow.f64 (atan.f64 N) #s(literal 3 binary64)))))","(/.f64 (neg.f64 (*.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 9 binary64)) (pow.f64 (atan.f64 N) #s(literal 9 binary64))) (pow.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) #s(literal -1 binary64)))) (neg.f64 (+.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 6 binary64)) (+.f64 (pow.f64 (*.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) #s(literal 3 binary64)) (pow.f64 (atan.f64 N) #s(literal 6 binary64))))))","(/.f64 (neg.f64 (-.f64 (pow.f64 (/.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)) (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N)))) #s(literal 2 binary64)) (pow.f64 (/.f64 (pow.f64 (atan.f64 N) #s(literal 2 binary64)) (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N)))) #s(literal 2 binary64)))) (neg.f64 (+.f64 (/.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)) (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N)))) (/.f64 (pow.f64 (atan.f64 N) #s(literal 2 binary64)) (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N)))))))","(/.f64 (neg.f64 (-.f64 (pow.f64 (/.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64)) (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)))) #s(literal 2 binary64)) (pow.f64 (/.f64 (pow.f64 (atan.f64 N) #s(literal 3 binary64)) (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)))) #s(literal 2 binary64)))) (neg.f64 (+.f64 (/.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64)) (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)))) (/.f64 (pow.f64 (atan.f64 N) #s(literal 3 binary64)) (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)))))))","(/.f64 (neg.f64 (-.f64 (pow.f64 (/.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)) (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N)))) #s(literal 3 binary64)) (pow.f64 (/.f64 (pow.f64 (atan.f64 N) #s(literal 2 binary64)) (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N)))) #s(literal 3 binary64)))) (neg.f64 (+.f64 (pow.f64 (/.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)) (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N)))) #s(literal 2 binary64)) (+.f64 (pow.f64 (/.f64 (pow.f64 (atan.f64 N) #s(literal 2 binary64)) (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N)))) #s(literal 2 binary64)) (*.f64 (/.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)) (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N)))) (/.f64 (pow.f64 (atan.f64 N) #s(literal 2 binary64)) (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N)))))))))","(/.f64 (neg.f64 (-.f64 (pow.f64 (/.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64)) (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)))) #s(literal 3 binary64)) (pow.f64 (/.f64 (pow.f64 (atan.f64 N) #s(literal 3 binary64)) (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)))) #s(literal 3 binary64)))) (neg.f64 (+.f64 (pow.f64 (/.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64)) (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)))) #s(literal 2 binary64)) (+.f64 (pow.f64 (/.f64 (pow.f64 (atan.f64 N) #s(literal 3 binary64)) (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)))) #s(literal 2 binary64)) (*.f64 (/.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64)) (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)))) (/.f64 (pow.f64 (atan.f64 N) #s(literal 3 binary64)) (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)))))))))","(/.f64 (neg.f64 (neg.f64 (neg.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)) (pow.f64 (atan.f64 N) #s(literal 2 binary64)))))) (neg.f64 (neg.f64 (neg.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N)))))))","(/.f64 (neg.f64 (neg.f64 (neg.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64)) (pow.f64 (atan.f64 N) #s(literal 3 binary64)))))) (neg.f64 (neg.f64 (neg.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)))))))","(/.f64 (neg.f64 (*.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 4 binary64)) (pow.f64 (atan.f64 N) #s(literal 4 binary64))) #s(literal 1 binary64))) (neg.f64 (*.f64 (fma.f64 (atan.f64 N) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))))))","(/.f64 (neg.f64 (*.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 6 binary64)) (pow.f64 (atan.f64 N) #s(literal 6 binary64))) #s(literal 1 binary64))) (neg.f64 (*.f64 (+.f64 (+.f64 (pow.f64 (*.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) #s(literal 2 binary64)) (pow.f64 (atan.f64 N) #s(literal 4 binary64))) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 4 binary64))) (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))))))","(/.f64 (neg.f64 (*.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 6 binary64)) (pow.f64 (atan.f64 N) #s(literal 6 binary64))) #s(literal 1 binary64))) (neg.f64 (*.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64)) (pow.f64 (atan.f64 N) #s(literal 3 binary64))) (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))))))","(/.f64 (neg.f64 (*.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 9 binary64)) (pow.f64 (atan.f64 N) #s(literal 9 binary64))) #s(literal 1 binary64))) (neg.f64 (*.f64 (+.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 6 binary64)) (+.f64 (pow.f64 (*.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) #s(literal 3 binary64)) (pow.f64 (atan.f64 N) #s(literal 6 binary64)))) (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))))))","(/.f64 (neg.f64 (*.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)) (pow.f64 (atan.f64 N) #s(literal 2 binary64))) #s(literal 1 binary64))) (neg.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N)))))","(/.f64 (neg.f64 (-.f64 (*.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)) (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N)))) (*.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (pow.f64 (atan.f64 N) #s(literal 2 binary64))))) (neg.f64 (pow.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) #s(literal 2 binary64))))","(/.f64 (neg.f64 (-.f64 (*.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64)) (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)))) (*.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) (pow.f64 (atan.f64 N) #s(literal 3 binary64))))) (neg.f64 (pow.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) #s(literal 2 binary64))))","(/.f64 (neg.f64 (-.f64 (pow.f64 (atan.f64 N) #s(literal 2 binary64)) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)))) (neg.f64 (-.f64 (neg.f64 (atan.f64 N)) (atan.f64 (+.f64 #s(literal 1 binary64) N)))))","(/.f64 (-.f64 (*.f64 (neg.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) (neg.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))))) (*.f64 (neg.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N)))) (neg.f64 (pow.f64 (atan.f64 N) #s(literal 2 binary64))))) (*.f64 (neg.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N)))) (neg.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))))))","(/.f64 (-.f64 (*.f64 (neg.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N)))) (*.f64 (neg.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N)))) (pow.f64 (atan.f64 N) #s(literal 2 binary64)))) (*.f64 (neg.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N)))) (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N)))))","(/.f64 (-.f64 (*.f64 (neg.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) (/.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (pow.f64 (atan.f64 N) #s(literal 2 binary64)))) (*.f64 (neg.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N)))) #s(literal 1 binary64))) (*.f64 (neg.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N)))) (/.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (pow.f64 (atan.f64 N) #s(literal 2 binary64)))))","(/.f64 (-.f64 (*.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)) (neg.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))))) (*.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (neg.f64 (pow.f64 (atan.f64 N) #s(literal 2 binary64))))) (*.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (neg.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))))))","(/.f64 (-.f64 (*.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)) (/.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (pow.f64 (atan.f64 N) #s(literal 2 binary64)))) (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N)))) (*.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (/.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (pow.f64 (atan.f64 N) #s(literal 2 binary64)))))","(/.f64 (-.f64 (*.f64 #s(literal 1 binary64) (neg.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))))) (*.f64 (/.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) (neg.f64 (pow.f64 (atan.f64 N) #s(literal 2 binary64))))) (*.f64 (/.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) (neg.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))))))","(/.f64 (-.f64 (*.f64 #s(literal 1 binary64) (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N)))) (*.f64 (/.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) (pow.f64 (atan.f64 N) #s(literal 2 binary64)))) (*.f64 (/.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N)))))","(/.f64 (-.f64 (*.f64 #s(literal 1 binary64) (/.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (pow.f64 (atan.f64 N) #s(literal 2 binary64)))) (*.f64 (/.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) #s(literal 1 binary64))) (*.f64 (/.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) (/.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (pow.f64 (atan.f64 N) #s(literal 2 binary64)))))","(/.f64 (-.f64 (*.f64 (neg.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64))) (neg.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))))) (*.f64 (neg.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)))) (pow.f64 (atan.f64 N) #s(literal 3 binary64)))) (*.f64 (neg.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)))) (neg.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))))))","(/.f64 (-.f64 (*.f64 (neg.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64))) (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)))) (*.f64 (neg.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)))) (pow.f64 (atan.f64 N) #s(literal 3 binary64)))) (*.f64 (neg.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)))) (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)))))","(/.f64 (-.f64 (*.f64 (neg.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64))) (/.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) (pow.f64 (atan.f64 N) #s(literal 3 binary64)))) (*.f64 (neg.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)))) #s(literal 1 binary64))) (*.f64 (neg.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)))) (/.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) (pow.f64 (atan.f64 N) #s(literal 3 binary64)))))","(/.f64 (-.f64 (*.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64)) (neg.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))))) (*.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) (pow.f64 (atan.f64 N) #s(literal 3 binary64)))) (*.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) (neg.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))))))","(/.f64 (-.f64 (*.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64)) (/.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) (pow.f64 (atan.f64 N) #s(literal 3 binary64)))) (*.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) #s(literal 1 binary64))) (*.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) (/.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) (pow.f64 (atan.f64 N) #s(literal 3 binary64)))))","(/.f64 (-.f64 (*.f64 #s(literal 1 binary64) (neg.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))))) (*.f64 (/.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64))) (pow.f64 (atan.f64 N) #s(literal 3 binary64)))) (*.f64 (/.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64))) (neg.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))))))","(/.f64 (-.f64 (*.f64 #s(literal 1 binary64) (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)))) (*.f64 (/.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64))) (pow.f64 (atan.f64 N) #s(literal 3 binary64)))) (*.f64 (/.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64))) (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)))))","(/.f64 (-.f64 (*.f64 #s(literal 1 binary64) (/.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) (pow.f64 (atan.f64 N) #s(literal 3 binary64)))) (*.f64 (/.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64))) #s(literal 1 binary64))) (*.f64 (/.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64))) (/.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) (pow.f64 (atan.f64 N) #s(literal 3 binary64)))))","(/.f64 (-.f64 (neg.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) (neg.f64 (pow.f64 (atan.f64 N) #s(literal 2 binary64)))) (neg.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N)))))","(/.f64 (-.f64 (neg.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64))) (pow.f64 (atan.f64 N) #s(literal 3 binary64))) (neg.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)))))","(/.f64 (*.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 4 binary64)) (pow.f64 (atan.f64 N) #s(literal 4 binary64))) (pow.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) #s(literal -1 binary64))) (fma.f64 (atan.f64 N) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))))","(/.f64 (*.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 6 binary64)) (pow.f64 (atan.f64 N) #s(literal 6 binary64))) (pow.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) #s(literal -1 binary64))) (+.f64 (+.f64 (pow.f64 (*.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) #s(literal 2 binary64)) (pow.f64 (atan.f64 N) #s(literal 4 binary64))) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 4 binary64))))","(/.f64 (*.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 6 binary64)) (pow.f64 (atan.f64 N) #s(literal 6 binary64))) (pow.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) #s(literal -1 binary64))) (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64)) (pow.f64 (atan.f64 N) #s(literal 3 binary64))))","(/.f64 (*.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 9 binary64)) (pow.f64 (atan.f64 N) #s(literal 9 binary64))) (pow.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) #s(literal -1 binary64))) (+.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 6 binary64)) (+.f64 (pow.f64 (*.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) #s(literal 3 binary64)) (pow.f64 (atan.f64 N) #s(literal 6 binary64)))))","(/.f64 (-.f64 (pow.f64 (/.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)) (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N)))) #s(literal 2 binary64)) (pow.f64 (/.f64 (pow.f64 (atan.f64 N) #s(literal 2 binary64)) (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N)))) #s(literal 2 binary64))) (+.f64 (/.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)) (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N)))) (/.f64 (pow.f64 (atan.f64 N) #s(literal 2 binary64)) (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))))))","(/.f64 (-.f64 (pow.f64 (/.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64)) (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)))) #s(literal 2 binary64)) (pow.f64 (/.f64 (pow.f64 (atan.f64 N) #s(literal 3 binary64)) (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)))) #s(literal 2 binary64))) (+.f64 (/.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64)) (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)))) (/.f64 (pow.f64 (atan.f64 N) #s(literal 3 binary64)) (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))))))","(/.f64 (-.f64 (pow.f64 (atan.f64 N) #s(literal 2 binary64)) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) (-.f64 (neg.f64 (atan.f64 N)) (atan.f64 (+.f64 #s(literal 1 binary64) N))))","(/.f64 (-.f64 (pow.f64 (/.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)) (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N)))) #s(literal 3 binary64)) (pow.f64 (/.f64 (pow.f64 (atan.f64 N) #s(literal 2 binary64)) (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N)))) #s(literal 3 binary64))) (+.f64 (pow.f64 (/.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)) (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N)))) #s(literal 2 binary64)) (+.f64 (pow.f64 (/.f64 (pow.f64 (atan.f64 N) #s(literal 2 binary64)) (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N)))) #s(literal 2 binary64)) (*.f64 (/.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)) (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N)))) (/.f64 (pow.f64 (atan.f64 N) #s(literal 2 binary64)) (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))))))))","(/.f64 (-.f64 (pow.f64 (/.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64)) (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)))) #s(literal 3 binary64)) (pow.f64 (/.f64 (pow.f64 (atan.f64 N) #s(literal 3 binary64)) (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)))) #s(literal 3 binary64))) (+.f64 (pow.f64 (/.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64)) (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)))) #s(literal 2 binary64)) (+.f64 (pow.f64 (/.f64 (pow.f64 (atan.f64 N) #s(literal 3 binary64)) (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)))) #s(literal 2 binary64)) (*.f64 (/.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64)) (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)))) (/.f64 (pow.f64 (atan.f64 N) #s(literal 3 binary64)) (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))))))))","(/.f64 (neg.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 4 binary64)) (pow.f64 (atan.f64 N) #s(literal 4 binary64)))) (neg.f64 (*.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (fma.f64 (atan.f64 N) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))))))","(/.f64 (neg.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 6 binary64)) (pow.f64 (atan.f64 N) #s(literal 6 binary64)))) (neg.f64 (*.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (+.f64 (+.f64 (pow.f64 (*.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) #s(literal 2 binary64)) (pow.f64 (atan.f64 N) #s(literal 4 binary64))) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 4 binary64))))))","(/.f64 (neg.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 6 binary64)) (pow.f64 (atan.f64 N) #s(literal 6 binary64)))) (neg.f64 (*.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64)) (pow.f64 (atan.f64 N) #s(literal 3 binary64))))))","(/.f64 (neg.f64 (neg.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)) (pow.f64 (atan.f64 N) #s(literal 2 binary64))))) (neg.f64 (neg.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))))))","(/.f64 (neg.f64 (neg.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64)) (pow.f64 (atan.f64 N) #s(literal 3 binary64))))) (neg.f64 (neg.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))))))","(/.f64 (neg.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 9 binary64)) (pow.f64 (atan.f64 N) #s(literal 9 binary64)))) (neg.f64 (*.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) (+.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 6 binary64)) (+.f64 (pow.f64 (*.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) #s(literal 3 binary64)) (pow.f64 (atan.f64 N) #s(literal 6 binary64)))))))","(/.f64 (*.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 4 binary64)) (pow.f64 (atan.f64 N) #s(literal 4 binary64))) #s(literal 1 binary64)) (*.f64 (fma.f64 (atan.f64 N) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N)))))","(/.f64 (*.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 6 binary64)) (pow.f64 (atan.f64 N) #s(literal 6 binary64))) #s(literal 1 binary64)) (*.f64 (+.f64 (+.f64 (pow.f64 (*.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) #s(literal 2 binary64)) (pow.f64 (atan.f64 N) #s(literal 4 binary64))) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 4 binary64))) (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N)))))","(/.f64 (*.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 6 binary64)) (pow.f64 (atan.f64 N) #s(literal 6 binary64))) #s(literal 1 binary64)) (*.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64)) (pow.f64 (atan.f64 N) #s(literal 3 binary64))) (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)))))","(/.f64 (*.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 9 binary64)) (pow.f64 (atan.f64 N) #s(literal 9 binary64))) #s(literal 1 binary64)) (*.f64 (+.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 6 binary64)) (+.f64 (pow.f64 (*.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) #s(literal 3 binary64)) (pow.f64 (atan.f64 N) #s(literal 6 binary64)))) (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)))))","(/.f64 (*.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64)) (pow.f64 (atan.f64 N) #s(literal 3 binary64))) #s(literal 1 binary64)) (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))))","(/.f64 (*.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)) (pow.f64 (atan.f64 N) #s(literal 2 binary64))) #s(literal 1 binary64)) (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))))","(/.f64 (-.f64 (*.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)) (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N)))) (*.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (pow.f64 (atan.f64 N) #s(literal 2 binary64)))) (pow.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) #s(literal 2 binary64)))","(/.f64 (-.f64 (*.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64)) (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)))) (*.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) (pow.f64 (atan.f64 N) #s(literal 3 binary64)))) (pow.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) #s(literal 2 binary64)))","(/.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 4 binary64)) (pow.f64 (atan.f64 N) #s(literal 4 binary64))) (*.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (fma.f64 (atan.f64 N) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)))))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (pow.f64 (-.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) (atan.f64 N)) #s(literal -1 binary64)) #s(literal 1 binary64))))","(/.f64 #s(literal -1 binary64) (neg.f64 (pow.f64 (-.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) (atan.f64 N)) #s(literal -1 binary64))))","(/.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 6 binary64)) (pow.f64 (atan.f64 N) #s(literal 6 binary64))) (*.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (+.f64 (+.f64 (pow.f64 (*.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) #s(literal 2 binary64)) (pow.f64 (atan.f64 N) #s(literal 4 binary64))) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 4 binary64)))))","(/.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 6 binary64)) (pow.f64 (atan.f64 N) #s(literal 6 binary64))) (*.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64)) (pow.f64 (atan.f64 N) #s(literal 3 binary64)))))","(/.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 9 binary64)) (pow.f64 (atan.f64 N) #s(literal 9 binary64))) (*.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) (+.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 6 binary64)) (+.f64 (pow.f64 (*.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) #s(literal 3 binary64)) (pow.f64 (atan.f64 N) #s(literal 6 binary64))))))","(/.f64 (neg.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)) (pow.f64 (atan.f64 N) #s(literal 2 binary64)))) (neg.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N)))))","(/.f64 (neg.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64)) (pow.f64 (atan.f64 N) #s(literal 3 binary64)))) (neg.f64 (fma.f64 (atan.f64 N) (atan.f64 N) (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)) (*.f64 (neg.f64 (atan.f64 N)) (atan.f64 (+.f64 #s(literal 1 binary64) N)))))))","(/.f64 (neg.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64)) (pow.f64 (atan.f64 N) #s(literal 3 binary64)))) (neg.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)))))","(/.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)) (pow.f64 (atan.f64 N) #s(literal 2 binary64))) (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))))","(/.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64)) (pow.f64 (atan.f64 N) #s(literal 3 binary64))) (fma.f64 (atan.f64 N) (atan.f64 N) (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)) (*.f64 (neg.f64 (atan.f64 N)) (atan.f64 (+.f64 #s(literal 1 binary64) N))))))","(/.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64)) (pow.f64 (atan.f64 N) #s(literal 3 binary64))) (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))))","(/.f64 #s(literal 1 binary64) (neg.f64 (neg.f64 (pow.f64 (-.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) (atan.f64 N)) #s(literal -1 binary64)))))","(/.f64 #s(literal 1 binary64) (/.f64 (pow.f64 (-.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) (atan.f64 N)) #s(literal -1 binary64)) #s(literal 1 binary64)))","(/.f64 #s(literal 1 binary64) (pow.f64 (-.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) (atan.f64 N)) #s(literal -1 binary64)))","(neg.f64 (/.f64 (neg.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)) (pow.f64 (atan.f64 N) #s(literal 2 binary64)))) (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N)))))","(neg.f64 (/.f64 (neg.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64)) (pow.f64 (atan.f64 N) #s(literal 3 binary64)))) (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)))))","(neg.f64 (/.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)) (pow.f64 (atan.f64 N) #s(literal 2 binary64))) (neg.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))))))","(neg.f64 (/.f64 (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64)) (pow.f64 (atan.f64 N) #s(literal 3 binary64))) (neg.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))))))","(fma.f64 (/.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64)) (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 4 binary64)) (pow.f64 (*.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N)) #s(literal 2 binary64)))) (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)) (*.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N))) (neg.f64 (/.f64 (pow.f64 (atan.f64 N) #s(literal 3 binary64)) (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))))))","(fma.f64 (/.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64)) (+.f64 (pow.f64 (*.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N)) #s(literal 3 binary64)) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 6 binary64)))) (fma.f64 (*.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N)) (-.f64 (*.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N)) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 4 binary64))) (neg.f64 (/.f64 (pow.f64 (atan.f64 N) #s(literal 3 binary64)) (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))))))","(fma.f64 (/.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)) (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64)) (pow.f64 (atan.f64 N) #s(literal 3 binary64)))) (fma.f64 (atan.f64 N) (-.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) (neg.f64 (/.f64 (pow.f64 (atan.f64 N) #s(literal 2 binary64)) (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))))))","(fma.f64 (/.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)) (-.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)) (pow.f64 (atan.f64 N) #s(literal 2 binary64)))) (-.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) (atan.f64 N)) (neg.f64 (/.f64 (pow.f64 (atan.f64 N) #s(literal 2 binary64)) (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))))))","(fma.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3/2 binary64)) (/.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3/2 binary64)) (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)))) (neg.f64 (/.f64 (pow.f64 (atan.f64 N) #s(literal 3 binary64)) (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))))))","(fma.f64 #s(literal -1 binary64) (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N)))","(fma.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)) (/.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)))) (neg.f64 (/.f64 (pow.f64 (atan.f64 N) #s(literal 3 binary64)) (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))))))","(fma.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)) (pow.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) #s(literal -1 binary64)) (neg.f64 (/.f64 (pow.f64 (atan.f64 N) #s(literal 2 binary64)) (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))))))","(fma.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64)) (pow.f64 (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))) #s(literal -1 binary64)) (neg.f64 (/.f64 (pow.f64 (atan.f64 N) #s(literal 3 binary64)) (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))))))","(fma.f64 (atan.f64 N) #s(literal -1 binary64) (atan.f64 (+.f64 #s(literal 1 binary64) N)))","(fma.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) (/.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)) (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)))) (neg.f64 (/.f64 (pow.f64 (atan.f64 N) #s(literal 3 binary64)) (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))))))","(fma.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) (/.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N)))) (neg.f64 (/.f64 (pow.f64 (atan.f64 N) #s(literal 2 binary64)) (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))))))","(-.f64 (+.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 0 binary64)) (atan.f64 N))","(-.f64 (/.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)) (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N)))) (/.f64 (pow.f64 (atan.f64 N) #s(literal 2 binary64)) (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N)))))","(-.f64 (/.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64)) (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)))) (/.f64 (pow.f64 (atan.f64 N) #s(literal 3 binary64)) (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)))))","(-.f64 #s(literal 0 binary64) (-.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))))","(-.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) (atan.f64 N))","(exp.f64 (*.f64 (log.f64 (pow.f64 (-.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) (atan.f64 N)) #s(literal -1 binary64))) #s(literal -1 binary64)))","(+.f64 (/.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)) (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N)))) (neg.f64 (/.f64 (pow.f64 (atan.f64 N) #s(literal 2 binary64)) (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))))))","(+.f64 (/.f64 (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 3 binary64)) (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64)))) (neg.f64 (/.f64 (pow.f64 (atan.f64 N) #s(literal 3 binary64)) (fma.f64 (+.f64 (atan.f64 N) (atan.f64 (+.f64 #s(literal 1 binary64) N))) (atan.f64 N) (pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 2 binary64))))))","(+.f64 (neg.f64 (atan.f64 N)) (atan.f64 (+.f64 #s(literal 1 binary64) N)))","(+.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) (neg.f64 (atan.f64 N)))","(pow.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N)) #s(literal 1 binary64))","(neg.f64 (atan.f64 (/.f64 (neg.f64 (fma.f64 N N #s(literal -1 binary64))) (-.f64 N #s(literal 1 binary64)))))","(neg.f64 (atan.f64 (/.f64 (fma.f64 #s(literal -1 binary64) (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)) (fma.f64 N N (-.f64 #s(literal 1 binary64) N)))))","(neg.f64 (atan.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) N))))","(neg.f64 (atan.f64 (/.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (neg.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N))))))","(atan.f64 (+.f64 #s(literal 1 binary64) N))","(exp.f64 (*.f64 (log.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N))) #s(literal 1 binary64)))","(exp.f64 (log.f64 (atan.f64 (+.f64 #s(literal 1 binary64) N))))","(*.f64 (pow.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64)) (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64)) (pow.f64 (+.f64 (fma.f64 N N #s(literal 1 binary64)) (pow.f64 N #s(literal 4 binary64))) #s(literal -1 binary64)))","(*.f64 (pow.f64 (/.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64)) (pow.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (/.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) (+.f64 (pow.f64 N #s(literal 9 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64)) (pow.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (pow.f64 N #s(literal 3 binary64))) #s(literal -1 binary64)))","(*.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (*.f64 N N))) (+.f64 #s(literal 1 binary64) N))","(*.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64)))) (fma.f64 (+.f64 #s(literal 1 binary64) N) N #s(literal 1 binary64)))","(*.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (fma.f64 (+.f64 #s(literal 1 binary64) N) N #s(literal 1 binary64)))","(*.f64 (/.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 4 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)))) (+.f64 (fma.f64 N N #s(literal -1 binary64)) N))","(*.f64 (/.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (+.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal 3 binary64)) (pow.f64 N #s(literal 6 binary64)))) (fma.f64 (-.f64 #s(literal 1 binary64) N) (-.f64 (-.f64 #s(literal 1 binary64) N) (*.f64 N N)) (pow.f64 N #s(literal 4 binary64))))","(*.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (+.f64 #s(literal 1 binary64) N))","(*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)))","(*.f64 (pow.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) #s(literal -1 binary64)) (pow.f64 (pow.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) #s(literal -1 binary64)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))","(*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (pow.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))","(*.f64 (neg.f64 (fma.f64 N N #s(literal -1 binary64))) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)))","(*.f64 (fma.f64 #s(literal -1 binary64) (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)) (pow.f64 (neg.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N))) #s(literal -1 binary64)))","(*.f64 (fma.f64 N N #s(literal -1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(*.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) #s(literal -1 binary64)))","(*.f64 (+.f64 #s(literal 1 binary64) N) (/.f64 (-.f64 N #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64))))","(*.f64 (+.f64 #s(literal 1 binary64) N) (*.f64 (-.f64 N #s(literal 1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))))","(*.f64 (+.f64 #s(literal 1 binary64) N) #s(literal 1 binary64))","(*.f64 #s(literal 1 binary64) (+.f64 #s(literal 1 binary64) N))","(pow.f64 (/.f64 (-.f64 #s(literal 1 binary64) N) (-.f64 #s(literal 1 binary64) (*.f64 N N))) #s(literal -1 binary64))","(pow.f64 (/.f64 (pow.f64 (+.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64))","(pow.f64 (pow.f64 (+.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) #s(literal -1 binary64))","(/.f64 (neg.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))) (neg.f64 (fma.f64 N N #s(literal 1 binary64))))","(/.f64 (neg.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))) (neg.f64 (+.f64 (fma.f64 N N #s(literal 1 binary64)) (pow.f64 N #s(literal 4 binary64)))))","(/.f64 (neg.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) #s(literal -1 binary64)))) (neg.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))))","(/.f64 (neg.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 9 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) #s(literal -1 binary64)))) (neg.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (pow.f64 N #s(literal 3 binary64)))))","(/.f64 (neg.f64 (-.f64 (pow.f64 (*.f64 N (/.f64 N (-.f64 N #s(literal 1 binary64)))) #s(literal 2 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -2 binary64)))) (neg.f64 (fma.f64 N (/.f64 N (-.f64 N #s(literal 1 binary64))) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))))","(/.f64 (neg.f64 (-.f64 (*.f64 (pow.f64 N #s(literal 6 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -3 binary64))) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -3 binary64)))) (neg.f64 (+.f64 (pow.f64 (*.f64 N (/.f64 N (-.f64 N #s(literal 1 binary64)))) #s(literal 2 binary64)) (+.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -2 binary64)) (*.f64 (*.f64 N (/.f64 N (-.f64 N #s(literal 1 binary64)))) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))))))","(/.f64 (neg.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (neg.f64 (neg.f64 (-.f64 #s(literal 1 binary64) N))))","(/.f64 (neg.f64 (neg.f64 (neg.f64 (fma.f64 N N #s(literal -1 binary64))))) (neg.f64 (neg.f64 (-.f64 #s(literal 1 binary64) N))))","(/.f64 (neg.f64 (neg.f64 (fma.f64 #s(literal -1 binary64) (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)))) (neg.f64 (neg.f64 (neg.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N))))))","(/.f64 (neg.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64))) (neg.f64 (*.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64)))))","(/.f64 (neg.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64))) (neg.f64 (*.f64 (+.f64 (fma.f64 N N #s(literal 1 binary64)) (pow.f64 N #s(literal 4 binary64))) (-.f64 N #s(literal 1 binary64)))))","(/.f64 (neg.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64))) (neg.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (fma.f64 N N (-.f64 #s(literal 1 binary64) N)))))","(/.f64 (neg.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 9 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64))) (neg.f64 (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (pow.f64 N #s(literal 3 binary64))) (fma.f64 N N (-.f64 #s(literal 1 binary64) N)))))","(/.f64 (neg.f64 (-.f64 (*.f64 (*.f64 N N) (-.f64 N #s(literal 1 binary64))) (*.f64 (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64)))) (neg.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal 2 binary64))))","(/.f64 (neg.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64))) (neg.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N))))","(/.f64 (-.f64 (*.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) N)) (*.f64 (-.f64 #s(literal 1 binary64) N) (*.f64 N N))) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)))","(/.f64 (-.f64 (*.f64 (neg.f64 (*.f64 N N)) (-.f64 #s(literal 1 binary64) N)) (*.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64))) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)))","(/.f64 (-.f64 (*.f64 (neg.f64 (*.f64 N N)) (/.f64 (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))) (-.f64 #s(literal 1 binary64) N)) (*.f64 (-.f64 #s(literal 1 binary64) N) (/.f64 (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))))","(/.f64 (-.f64 (*.f64 (neg.f64 (*.f64 N N)) (-.f64 N #s(literal 1 binary64))) (-.f64 #s(literal 1 binary64) N)) (*.f64 (-.f64 #s(literal 1 binary64) N) (-.f64 N #s(literal 1 binary64))))","(/.f64 (-.f64 (*.f64 (-.f64 #s(literal 1 binary64) N) (*.f64 N N)) (*.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (*.f64 (-.f64 N #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) N)))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (/.f64 (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))) (*.f64 (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))) (*.f64 (-.f64 N #s(literal 1 binary64)) (/.f64 (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))))","(/.f64 (-.f64 (*.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) N)) (*.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (*.f64 N N)) #s(literal -1 binary64))) (*.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (*.f64 N N)) (-.f64 #s(literal 1 binary64) N)))","(/.f64 (-.f64 (*.f64 #s(literal 1 binary64) (/.f64 (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))) (*.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (*.f64 N N)) #s(literal 1 binary64))) (*.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (*.f64 N N)) (/.f64 (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))))","(/.f64 (-.f64 (*.f64 #s(literal 1 binary64) (-.f64 N #s(literal 1 binary64))) (*.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (*.f64 N N)) #s(literal 1 binary64))) (*.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (*.f64 N N)) (-.f64 N #s(literal 1 binary64))))","(/.f64 (-.f64 (neg.f64 (*.f64 N N)) #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) N))","(/.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (fma.f64 N N #s(literal 1 binary64)))","(/.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (+.f64 (fma.f64 N N #s(literal 1 binary64)) (pow.f64 N #s(literal 4 binary64))))","(/.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) #s(literal -1 binary64))) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))","(/.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 9 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) #s(literal -1 binary64))) (-.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (pow.f64 N #s(literal 3 binary64))))","(/.f64 (-.f64 (pow.f64 (*.f64 N (/.f64 N (-.f64 N #s(literal 1 binary64)))) #s(literal 2 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -2 binary64))) (fma.f64 N (/.f64 N (-.f64 N #s(literal 1 binary64))) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))))","(/.f64 (-.f64 (*.f64 (pow.f64 N #s(literal 6 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -3 binary64))) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -3 binary64))) (+.f64 (pow.f64 (*.f64 N (/.f64 N (-.f64 N #s(literal 1 binary64)))) #s(literal 2 binary64)) (+.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -2 binary64)) (*.f64 (*.f64 N (/.f64 N (-.f64 N #s(literal 1 binary64)))) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))))))","(/.f64 (neg.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) (neg.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64)))))","(/.f64 (neg.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64))) (neg.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) (+.f64 (fma.f64 N N #s(literal 1 binary64)) (pow.f64 N #s(literal 4 binary64))))))","(/.f64 (neg.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64))) (neg.f64 (*.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))))","(/.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N))) (neg.f64 (-.f64 #s(literal 1 binary64) N)))","(/.f64 (neg.f64 (neg.f64 (fma.f64 N N #s(literal -1 binary64)))) (neg.f64 (-.f64 #s(literal 1 binary64) N)))","(/.f64 (neg.f64 (fma.f64 #s(literal -1 binary64) (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64))) (neg.f64 (neg.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)))))","(/.f64 (neg.f64 (+.f64 (pow.f64 N #s(literal 9 binary64)) #s(literal 1 binary64))) (neg.f64 (*.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) (-.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (pow.f64 N #s(literal 3 binary64))))))","(/.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64)) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64))))","(/.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64)) (*.f64 (+.f64 (fma.f64 N N #s(literal 1 binary64)) (pow.f64 N #s(literal 4 binary64))) (-.f64 N #s(literal 1 binary64))))","(/.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64)) (*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (fma.f64 N N (-.f64 #s(literal 1 binary64) N))))","(/.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 9 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64)) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (pow.f64 N #s(literal 3 binary64))) (fma.f64 N N (-.f64 #s(literal 1 binary64) N))))","(/.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64)) (fma.f64 N N (-.f64 #s(literal 1 binary64) N)))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (-.f64 N #s(literal 1 binary64))) (*.f64 (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)))","(/.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64))))","(/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) N))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (-.f64 #s(literal 1 binary64) N) (-.f64 #s(literal 1 binary64) (*.f64 N N)))))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (pow.f64 (+.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) #s(literal 1 binary64))))","(/.f64 #s(literal -1 binary64) (neg.f64 (pow.f64 (+.f64 #s(literal 1 binary64) N) #s(literal -1 binary64))))","(/.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) (+.f64 (fma.f64 N N #s(literal 1 binary64)) (pow.f64 N #s(literal 4 binary64)))))","(/.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (*.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))))","(/.f64 (+.f64 (pow.f64 N #s(literal 9 binary64)) #s(literal 1 binary64)) (*.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) (-.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (pow.f64 N #s(literal 3 binary64)))))","(/.f64 (neg.f64 (fma.f64 N N #s(literal -1 binary64))) (-.f64 #s(literal 1 binary64) N))","(/.f64 (fma.f64 #s(literal -1 binary64) (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)) (neg.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N))))","(/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 N #s(literal 1 binary64)))","(/.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (fma.f64 N N (-.f64 #s(literal 1 binary64) N)))","(/.f64 #s(literal 1 binary64) (neg.f64 (neg.f64 (pow.f64 (+.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)))))","(/.f64 #s(literal 1 binary64) (/.f64 (-.f64 #s(literal 1 binary64) N) (-.f64 #s(literal 1 binary64) (*.f64 N N))))","(/.f64 #s(literal 1 binary64) (/.f64 (pow.f64 (+.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) #s(literal 1 binary64)))","(/.f64 #s(literal 1 binary64) (pow.f64 (+.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)))","(neg.f64 (/.f64 (neg.f64 (fma.f64 N N #s(literal -1 binary64))) (-.f64 N #s(literal 1 binary64))))","(neg.f64 (/.f64 (fma.f64 #s(literal -1 binary64) (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)) (fma.f64 N N (-.f64 #s(literal 1 binary64) N))))","(neg.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) N)))","(neg.f64 (/.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (neg.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)))))","(fma.f64 (/.f64 (*.f64 N N) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (fma.f64 (+.f64 #s(literal 1 binary64) N) N #s(literal 1 binary64)) (neg.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))))","(fma.f64 (/.f64 (*.f64 N N) (fma.f64 N N #s(literal -1 binary64))) (+.f64 #s(literal 1 binary64) N) (neg.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))))","(fma.f64 (*.f64 N N) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (neg.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))))","(fma.f64 #s(literal 1 binary64) N #s(literal 1 binary64))","(fma.f64 N (/.f64 N (-.f64 N #s(literal 1 binary64))) (neg.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))))","(fma.f64 N #s(literal 1 binary64) #s(literal 1 binary64))","(-.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) (/.f64 (*.f64 N N) (-.f64 #s(literal 1 binary64) N)))","(-.f64 (*.f64 N (/.f64 N (-.f64 N #s(literal 1 binary64)))) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(exp.f64 (*.f64 (log.f64 (pow.f64 (+.f64 #s(literal 1 binary64) N) #s(literal -1 binary64))) #s(literal -1 binary64)))","(+.f64 (*.f64 N (/.f64 N (-.f64 N #s(literal 1 binary64)))) (neg.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))))","(+.f64 #s(literal 1 binary64) N)","(+.f64 N #s(literal 1 binary64))","(pow.f64 (atan.f64 N) #s(literal 1 binary64))","(atan.f64 N)","(exp.f64 (*.f64 (log.f64 (atan.f64 N)) #s(literal 1 binary64)))","(exp.f64 (log.f64 (atan.f64 N)))"]],"stop":[["iter limit",1],["node limit",1],["iter limit",1]],"time":241.97216796875,"type":"rewrite"},{"compiler":[[7523,927]],"memory":[[-238480,25393152]],"time":40.531005859375,"type":"eval"},{"alts":[["(atan2.f64 #s(literal 1 binary64) (fma.f64 (+.f64 #s(literal 1 binary64) N) N #s(literal 1 binary64)))","next",0.265625,"binary64"]],"compiler":[[8,5]],"count":[[245,1]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[244,1],"picked":[1,0]}],"memory":[[931072,9288992]],"min-error":[[0.265625,"binary64"]],"time":4.956787109375,"type":"prune"},{"egraph":[[0,45,19,0.00027938],[6,45,19,0.000258919],[5,42,19,0.000265458],[4,39,19,0.000244607],[3,29,19,0.000248834],[2,21,19,0.000230911],[1,14,19,0.000175181],[0,9,19,0.00022563],[0,5,19,0.000102397]],"inputs":[["(atan2.f64 #s(literal 1 binary64) (fma.f64 (+.f64 #s(literal 1 binary64) N) N #s(literal 1 binary64)))","#s(literal 1 binary64)","(fma.f64 (+.f64 #s(literal 1 binary64) N) N #s(literal 1 binary64))","(+.f64 #s(literal 1 binary64) N)","N"]],"locations":[["(+.f64 #s(literal 1 binary64) N)","cost-diff",0],["(fma.f64 (+.f64 #s(literal 1 binary64) N) N #s(literal 1 binary64))","cost-diff",0],["(atan2.f64 #s(literal 1 binary64) (fma.f64 (+.f64 #s(literal 1 binary64) N) N #s(literal 1 binary64)))","cost-diff",0]],"memory":[[639344,639344]],"method":["egg-herbie"],"outputs":[["(atan2.f64 #s(literal 1 binary64) (fma.f64 (+.f64 #s(literal 1 binary64) N) N #s(literal 1 binary64)))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))","#s(literal 1 binary64)","(fma.f64 (+.f64 #s(literal 1 binary64) N) N #s(literal 1 binary64))","(fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))","(+.f64 #s(literal 1 binary64) N)","(+.f64 N #s(literal 1 binary64))","N"]],"stop":[["iter limit",1],["saturated",1],["iter limit",1]],"time":9.22802734375,"type":"simplify"},{"compiler":[[23,8]],"locations":[["(+.f64 #s(literal 1 binary64) N)","accuracy",0.0],["(fma.f64 (+.f64 #s(literal 1 binary64) N) N #s(literal 1 binary64))","accuracy",0.00390625],["(atan2.f64 #s(literal 1 binary64) (fma.f64 (+.f64 #s(literal 1 binary64) N) N #s(literal 1 binary64)))","accuracy",0.26953125]],"memory":[[-3949360,6904144]],"mixsample":[[4.1015625,"ival-atan2",0],[0.248779296875,"ival-true",0],[3.64306640625,"ival-add",0],[2.356689453125,"ival-mult",0],[0.199462890625,"exact",0],[0.139404296875,"ival-assert",0]],"outcomes":[[18.140869140625,0,"valid",256]],"time":26.2451171875,"type":"localize"},{"count":[[3,11]],"inputs":[["(atan2.f64 #s(literal 1 binary64) (fma.f64 (+.f64 #s(literal 1 binary64) N) N #s(literal 1 binary64)))","(fma.f64 (+.f64 #s(literal 1 binary64) N) N #s(literal 1 binary64))","(+.f64 #s(literal 1 binary64) N)"]],"memory":[[608896,608896]],"outputs":[["(atan2 1 (+ 1 (* N (+ 1 N))))","1","(+ 1 N)","(+ 1 (* N (+ 1 N)))","(atan2 1 (+ 1 (+ N (pow N 2))))","(pow N 2)","(* (pow N 2) (+ 1 (/ 1 N)))","(* (pow N 2) (+ 1 (+ (/ 1 N) (/ 1 (pow N 2)))))","N","(* N (+ 1 (/ 1 N)))","(atan2 1 (+ 1 (* N (- 1 (* -1 N)))))"]],"series":[[0.85302734375,"((atan2 1 (+ (* (+ 1 N) N) 1)) (+ (* (+ 1 N) N) 1) (+ 1 N))","N","-inf"],[0.424072265625,"((atan2 1 (+ (* (+ 1 N) N) 1)) (+ (* (+ 1 N) N) 1) (+ 1 N))","N","inf"],[0.35693359375,"((atan2 1 (+ (* (+ 1 N) N) 1)) (+ (* (+ 1 N) N) 1) (+ 1 N))","N","0"]],"time":1.966064453125,"type":"series"},{"count":[[11,10]],"egraph":[[0,8117,51,0.063744384],[5,5464,57,0.02522013],[4,2415,57,0.025178359],[3,451,57,0.011296002],[2,117,57,0.002634511],[1,67,57,0.000674634],[0,25,61,0.000293674]],"inputs":[["(atan2 1 (+ 1 (* N (+ 1 N))))","1","(+ 1 N)","(+ 1 (* N (+ 1 N)))","(atan2 1 (+ 1 (+ N (pow N 2))))","(pow N 2)","(* (pow N 2) (+ 1 (/ 1 N)))","(* (pow N 2) (+ 1 (+ (/ 1 N) (/ 1 (pow N 2)))))","N","(* N (+ 1 (/ 1 N)))","(atan2 1 (+ 1 (* N (- 1 (* -1 N)))))"]],"memory":[[8822800,29756448]],"method":["egg-herbie"],"outputs":[["(atan2 1 (+ 1 (* N (+ 1 N))))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)))","1","#s(literal 1 binary64)","(+ 1 N)","(-.f64 N #s(literal -1 binary64))","(+ 1 (* N (+ 1 N)))","(fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64))","(atan2 1 (+ 1 (+ N (pow N 2))))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)))","(pow N 2)","(*.f64 N N)","(* (pow N 2) (+ 1 (/ 1 N)))","(fma.f64 N N N)","(* (pow N 2) (+ 1 (+ (/ 1 N) (/ 1 (pow N 2)))))","(fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64))","N","(* N (+ 1 (/ 1 N)))","(-.f64 N #s(literal -1 binary64))","(atan2 1 (+ 1 (* N (- 1 (* -1 N)))))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)))"]],"stop":[["iter limit",1],["node limit",1]],"time":215.7568359375,"type":"simplify"},{"count":[[3,289]],"egraph":[[0,8410,17,0.082441931],[3,2796,17,0.041949044],[2,262,17,0.011053261],[1,37,17,0.001594308],[0,9,17,0.000773031],[0,5,17,0.000114999]],"inputs":[["(atan2.f64 #s(literal 1 binary64) (fma.f64 (+.f64 #s(literal 1 binary64) N) N #s(literal 1 binary64)))","(fma.f64 (+.f64 #s(literal 1 binary64) N) N #s(literal 1 binary64))","(+.f64 #s(literal 1 binary64) N)"]],"memory":[[-7068656,47728624]],"outputs":[["(atan2.f64 #s(literal 1 binary64) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))","(*.f64 (pow.f64 (/.f64 (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 1 binary64)) (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 6 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64)) (pow.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (/.f64 (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 1 binary64)) (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 9 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64)) (pow.f64 (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 6 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 N N N) #s(literal 3 binary64))) #s(literal -1 binary64)))","(*.f64 (pow.f64 (/.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 4 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64)) (pow.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (/.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 6 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64)) (pow.f64 (+.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 4 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal -1 binary64)))","(*.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)))) (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1 binary64)))","(*.f64 (/.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64))) (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1 binary64)))","(*.f64 (/.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64)) (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 4 binary64)) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 2 binary64)))) (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (-.f64 #s(literal 1 binary64) (fma.f64 N N N))))","(*.f64 (/.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64)) (+.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal 3 binary64)) (pow.f64 (fma.f64 N N N) #s(literal 6 binary64)))) (fma.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) (-.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (pow.f64 (fma.f64 N N N) #s(literal 4 binary64))))","(*.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))","(*.f64 (/.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))","(*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) (pow.f64 (pow.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64)))","(*.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64)) (pow.f64 (pow.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64)) (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)))","(*.f64 (neg.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64))) (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64)))","(*.f64 (fma.f64 #s(literal -1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal -1 binary64)) (pow.f64 (neg.f64 (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64)))","(*.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64)))","(*.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)))","(*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (/.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))))","(*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64))))","(*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1 binary64))","(*.f64 #s(literal 1 binary64) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))","(pow.f64 (/.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) #s(literal -1 binary64))","(pow.f64 (/.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64))","(pow.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64))","(/.f64 (neg.f64 (*.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 4 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64)))) (neg.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64))))","(/.f64 (neg.f64 (*.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 6 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64)))) (neg.f64 (+.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 4 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))))","(/.f64 (neg.f64 (*.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 6 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)))) (neg.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64))))","(/.f64 (neg.f64 (*.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 9 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)))) (neg.f64 (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 6 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)))))","(/.f64 (neg.f64 (*.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64))) (neg.f64 (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 1 binary64))))","(/.f64 (neg.f64 (-.f64 (pow.f64 (/.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))) #s(literal 2 binary64)) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -2 binary64)))) (neg.f64 (+.f64 (/.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64)))))","(/.f64 (neg.f64 (-.f64 (*.f64 (pow.f64 (fma.f64 N N N) #s(literal 6 binary64)) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -3 binary64))) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -3 binary64)))) (neg.f64 (+.f64 (pow.f64 (/.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))) #s(literal 2 binary64)) (+.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -2 binary64)) (*.f64 (/.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64)))))))","(/.f64 (neg.f64 (neg.f64 (neg.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64))))) (neg.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)))))","(/.f64 (neg.f64 (neg.f64 (fma.f64 #s(literal -1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal -1 binary64)))) (neg.f64 (neg.f64 (neg.f64 (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 1 binary64))))))","(/.f64 (neg.f64 (*.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 4 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64))) (neg.f64 (*.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)))))","(/.f64 (neg.f64 (*.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 6 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64))) (neg.f64 (*.f64 (+.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 4 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)))))","(/.f64 (neg.f64 (*.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 6 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64))) (neg.f64 (*.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64)) (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 1 binary64)))))","(/.f64 (neg.f64 (*.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 9 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64))) (neg.f64 (*.f64 (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 6 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 N N N) #s(literal 3 binary64))) (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 1 binary64)))))","(/.f64 (neg.f64 (-.f64 (*.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 1 binary64)))) (neg.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 2 binary64))))","(/.f64 (neg.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))))) (neg.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)))))","(/.f64 (-.f64 (neg.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (fma.f64 N N N)))","(/.f64 (*.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 4 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64))) (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)))","(/.f64 (*.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 6 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64))) (+.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 4 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))))","(/.f64 (*.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 6 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64))) (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64)))","(/.f64 (*.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 9 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64))) (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 6 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 N N N) #s(literal 3 binary64))))","(/.f64 (*.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64)) (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 1 binary64)))","(/.f64 (-.f64 (pow.f64 (/.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))) #s(literal 2 binary64)) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -2 binary64))) (+.f64 (/.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64))))","(/.f64 (-.f64 (*.f64 (pow.f64 (fma.f64 N N N) #s(literal 6 binary64)) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -3 binary64))) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -3 binary64))) (+.f64 (pow.f64 (/.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))) #s(literal 2 binary64)) (+.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -2 binary64)) (*.f64 (/.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64))))))","(/.f64 (neg.f64 (neg.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)))) (neg.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N))))","(/.f64 (neg.f64 (fma.f64 #s(literal -1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal -1 binary64))) (neg.f64 (neg.f64 (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 1 binary64)))))","(/.f64 (neg.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 9 binary64)) #s(literal 1 binary64))) (neg.f64 (*.f64 (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 1 binary64)) (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 6 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 N N N) #s(literal 3 binary64))))))","(/.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) (neg.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N))))","(/.f64 (neg.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 4 binary64)) #s(literal 1 binary64))) (neg.f64 (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)))))","(/.f64 (neg.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 6 binary64)) #s(literal 1 binary64))) (neg.f64 (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) (+.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 4 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))))))","(/.f64 (neg.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 6 binary64)) #s(literal 1 binary64))) (neg.f64 (*.f64 (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 1 binary64)) (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64)))))","(/.f64 (*.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 4 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64)) (*.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))))","(/.f64 (*.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 6 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64)) (*.f64 (+.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 4 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))))","(/.f64 (*.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 6 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64)) (*.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64)) (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 1 binary64))))","(/.f64 (*.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 9 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64)) (*.f64 (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 6 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 N N N) #s(literal 3 binary64))) (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 1 binary64))))","(/.f64 (-.f64 (*.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 1 binary64))) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 2 binary64)))","(/.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64))))","(/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (-.f64 #s(literal 1 binary64) (fma.f64 N N N)))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))))))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64))))","(/.f64 #s(literal -1 binary64) (neg.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64))))","(/.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 6 binary64)) #s(literal 1 binary64)) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) (+.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 4 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))))","(/.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 6 binary64)) #s(literal 1 binary64)) (*.f64 (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 1 binary64)) (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64))))","(/.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 9 binary64)) #s(literal 1 binary64)) (*.f64 (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 1 binary64)) (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 6 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)))))","(/.f64 (neg.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64))) (-.f64 #s(literal 1 binary64) (fma.f64 N N N)))","(/.f64 (fma.f64 #s(literal -1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal -1 binary64)) (neg.f64 (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 1 binary64))))","(/.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)))","(/.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64)) (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 1 binary64)))","(/.f64 #s(literal 1 binary64) (neg.f64 (neg.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)))))","(/.f64 #s(literal 1 binary64) (/.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))))","(/.f64 #s(literal 1 binary64) (/.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64)))","(/.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)))","(neg.f64 (-.f64 (/.f64 #s(literal 0 binary64) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))","(neg.f64 (-.f64 (/.f64 #s(literal 0 binary64) (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 1 binary64))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))","(neg.f64 (/.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) (fma.f64 N N N))))","(neg.f64 (/.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64)) (neg.f64 (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 1 binary64)))))","(fma.f64 (exp.f64 (log1p.f64 N)) N #s(literal 1 binary64))","(fma.f64 (pow.f64 (/.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) N) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64)))) #s(literal 1 binary64)) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (/.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) N) (-.f64 #s(literal 1 binary64) (*.f64 N N))) #s(literal 1 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (/.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) N) (-.f64 #s(literal 1 binary64) (pow.f64 (-.f64 (*.f64 N N) N) #s(literal 2 binary64)))) #s(literal 1 binary64)) (pow.f64 (-.f64 #s(literal 1 binary64) (-.f64 (*.f64 N N) N)) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (/.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) N) (+.f64 (pow.f64 (-.f64 (*.f64 N N) N) #s(literal 3 binary64)) #s(literal 1 binary64))) #s(literal 1 binary64)) (pow.f64 (fma.f64 (-.f64 (*.f64 N N) N) (-.f64 (-.f64 (*.f64 N N) N) #s(literal 1 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) N) #s(literal 1 binary64)) (pow.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) N) #s(literal 1 binary64)) (pow.f64 (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal 1 binary64)) (pow.f64 (/.f64 N (-.f64 #s(literal 1 binary64) N)) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal 1 binary64)) (pow.f64 (*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) N) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64)) (pow.f64 (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64)) (pow.f64 (*.f64 (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)) N) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 1 binary64)) N #s(literal 1 binary64))","(fma.f64 (pow.f64 (/.f64 (-.f64 #s(literal 1 binary64) N) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64)))) #s(literal -1 binary64)) (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N))","(fma.f64 (pow.f64 (/.f64 (-.f64 #s(literal 1 binary64) N) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64)))) #s(literal -1 binary64)) (pow.f64 (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N))","(fma.f64 (pow.f64 (/.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64)))) #s(literal -1 binary64)) (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64))) #s(literal -1 binary64)) (*.f64 N N))","(fma.f64 (pow.f64 (/.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (+.f64 (pow.f64 N #s(literal 9 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64)) (pow.f64 (-.f64 (+.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64))) (pow.f64 N #s(literal 3 binary64))) #s(literal -1 binary64)) (*.f64 N N))","(fma.f64 (/.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64))) (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1 binary64)) (neg.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64))))","(fma.f64 (/.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (neg.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64))))","(fma.f64 (/.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) N) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64)))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (/.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) N) (-.f64 #s(literal 1 binary64) (*.f64 N N))) (+.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (/.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) N) (-.f64 #s(literal 1 binary64) (pow.f64 (-.f64 (*.f64 N N) N) #s(literal 2 binary64)))) (-.f64 #s(literal 1 binary64) (-.f64 (*.f64 N N) N)) #s(literal 1 binary64))","(fma.f64 (/.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) N) (+.f64 (pow.f64 (-.f64 (*.f64 N N) N) #s(literal 3 binary64)) #s(literal 1 binary64))) (fma.f64 (-.f64 (*.f64 N N) N) (-.f64 (-.f64 (*.f64 N N) N) #s(literal 1 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64)))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (/.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) (pow.f64 (-.f64 (*.f64 N N) N) #s(literal 2 binary64)))) (-.f64 #s(literal 1 binary64) (-.f64 (*.f64 N N) N)) (*.f64 N N))","(fma.f64 (/.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (+.f64 (pow.f64 (-.f64 (*.f64 N N) N) #s(literal 3 binary64)) #s(literal 1 binary64))) (fma.f64 (-.f64 (*.f64 N N) N) (-.f64 (-.f64 (*.f64 N N) N) #s(literal 1 binary64)) #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (*.f64 N N))) (+.f64 N #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) N) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) #s(literal 1 binary64))","(fma.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) N) (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64))","(fma.f64 (*.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)) N) (/.f64 N (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))) (neg.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64))))","(fma.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)) (/.f64 (*.f64 N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))) (neg.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64))))","(fma.f64 (fma.f64 N N #s(literal -1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N))","(fma.f64 (neg.f64 N) (neg.f64 N) (+.f64 N #s(literal 1 binary64)))","(fma.f64 (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)) (pow.f64 (pow.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64)) (*.f64 N N))","(fma.f64 (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (*.f64 (fma.f64 N N N) N) (/.f64 (+.f64 N #s(literal 1 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))) (neg.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64))))","(fma.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) (pow.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal -1 binary64)) #s(literal -1 binary64)) (*.f64 N N))","(fma.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N)) (*.f64 N N))","(fma.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N))) (pow.f64 (neg.f64 (-.f64 #s(literal 1 binary64) N)) #s(literal -1 binary64)) (*.f64 N N))","(fma.f64 (fma.f64 #s(literal -1 binary64) (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)) (pow.f64 (neg.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal -1 binary64)) (*.f64 N N))","(fma.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (/.f64 N (-.f64 #s(literal 1 binary64) N)) #s(literal 1 binary64))","(fma.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) N) #s(literal 1 binary64))","(fma.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) (*.f64 N N))","(fma.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64)) (neg.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64))))","(fma.f64 (*.f64 N N) (/.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))) (neg.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64))))","(fma.f64 (*.f64 N N) #s(literal 1 binary64) (+.f64 N #s(literal 1 binary64)))","(fma.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64))","(fma.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (*.f64 (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (*.f64 (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)) N) #s(literal 1 binary64))","(fma.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N))","(fma.f64 (fma.f64 N N N) (/.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))) (neg.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64))))","(fma.f64 (fma.f64 N N N) #s(literal 1 binary64) #s(literal 1 binary64))","(fma.f64 (+.f64 N #s(literal 1 binary64)) (/.f64 (*.f64 (fma.f64 N N N) N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))) (neg.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64))))","(fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))","(fma.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 1 binary64) (*.f64 N N))","(fma.f64 N (exp.f64 (log1p.f64 N)) #s(literal 1 binary64))","(fma.f64 N (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 N (/.f64 (*.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)) N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))) (neg.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64))))","(fma.f64 N (+.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 N N (+.f64 N #s(literal 1 binary64)))","(fma.f64 N #s(literal 1 binary64) (fma.f64 N N #s(literal 1 binary64)))","(fma.f64 #s(literal 1 binary64) (*.f64 N N) (+.f64 N #s(literal 1 binary64)))","(fma.f64 #s(literal 1 binary64) (fma.f64 N N N) #s(literal 1 binary64))","(fma.f64 #s(literal 1 binary64) (+.f64 N #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 #s(literal 1 binary64) N (fma.f64 N N #s(literal 1 binary64)))","(-.f64 (/.f64 (pow.f64 (/.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))) #s(literal 2 binary64)) (+.f64 (/.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64)))) (/.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -2 binary64)) (+.f64 (/.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64)))))","(-.f64 (/.f64 (*.f64 (pow.f64 (fma.f64 N N N) #s(literal 6 binary64)) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -3 binary64))) (+.f64 (pow.f64 (/.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))) #s(literal 2 binary64)) (+.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -2 binary64)) (*.f64 (/.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64)))))) (/.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -3 binary64)) (+.f64 (pow.f64 (/.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))) #s(literal 2 binary64)) (+.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -2 binary64)) (*.f64 (/.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64)))))))","(-.f64 (/.f64 (*.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 2 binary64))) (/.f64 (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 2 binary64))))","(-.f64 (/.f64 (pow.f64 (fma.f64 N N N) #s(literal 4 binary64)) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)))) (/.f64 #s(literal 1 binary64) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)))))","(-.f64 (/.f64 (pow.f64 (fma.f64 N N N) #s(literal 6 binary64)) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) (+.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 4 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))))) (/.f64 #s(literal 1 binary64) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) (+.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 4 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))))))","(-.f64 (/.f64 (pow.f64 (fma.f64 N N N) #s(literal 6 binary64)) (*.f64 (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 1 binary64)) (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64)))) (/.f64 #s(literal 1 binary64) (*.f64 (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 1 binary64)) (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64)))))","(-.f64 (/.f64 #s(literal 0 binary64) (-.f64 #s(literal 1 binary64) (fma.f64 N N N))) (/.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) (fma.f64 N N N))))","(-.f64 (/.f64 #s(literal 0 binary64) (neg.f64 (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 1 binary64)))) (/.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64)) (neg.f64 (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 1 binary64)))))","(-.f64 (/.f64 (/.f64 (pow.f64 (fma.f64 N N N) #s(literal 4 binary64)) (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))) (/.f64 (pow.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))))","(-.f64 (/.f64 (/.f64 (pow.f64 (fma.f64 N N N) #s(literal 6 binary64)) (+.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 4 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))) (/.f64 (pow.f64 (+.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 4 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) #s(literal -1 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))))","(-.f64 (/.f64 (/.f64 (pow.f64 (fma.f64 N N N) #s(literal 6 binary64)) (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64))) (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 1 binary64))) (/.f64 (pow.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 1 binary64))))","(-.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64)) (/.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (-.f64 #s(literal 1 binary64) (fma.f64 N N N))))","(-.f64 (/.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64)))","(exp.f64 (*.f64 (log.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64))) #s(literal -1 binary64)))","(+.f64 (fma.f64 N N #s(literal 1 binary64)) N)","(+.f64 (/.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))) (neg.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64))))","(+.f64 (*.f64 N N) (+.f64 N #s(literal 1 binary64)))","(+.f64 (fma.f64 N N N) #s(literal 1 binary64))","(+.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 N N))","(+.f64 N (fma.f64 N N #s(literal 1 binary64)))","(+.f64 #s(literal 1 binary64) (fma.f64 N N N))","(*.f64 (pow.f64 (/.f64 (-.f64 #s(literal 1 binary64) N) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64)))) #s(literal -1 binary64)) (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (/.f64 (-.f64 #s(literal 1 binary64) N) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64)))) #s(literal -1 binary64)) (pow.f64 (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (/.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64)))) #s(literal -1 binary64)) (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64))) #s(literal -1 binary64)))","(*.f64 (pow.f64 (/.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (+.f64 (pow.f64 N #s(literal 9 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64)) (pow.f64 (-.f64 (+.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64))) (pow.f64 N #s(literal 3 binary64))) #s(literal -1 binary64)))","(*.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64)))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))","(*.f64 (/.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) (pow.f64 (-.f64 (*.f64 N N) N) #s(literal 2 binary64)))) (-.f64 #s(literal 1 binary64) (-.f64 (*.f64 N N) N)))","(*.f64 (/.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (+.f64 (pow.f64 (-.f64 (*.f64 N N) N) #s(literal 3 binary64)) #s(literal 1 binary64))) (fma.f64 (-.f64 (*.f64 N N) N) (-.f64 (-.f64 (*.f64 N N) N) #s(literal 1 binary64)) #s(literal 1 binary64)))","(*.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (*.f64 N N))) (+.f64 N #s(literal 1 binary64)))","(*.f64 (fma.f64 N N #s(literal -1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)) (pow.f64 (pow.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))","(*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) (pow.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal -1 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N)))","(*.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N))) (pow.f64 (neg.f64 (-.f64 #s(literal 1 binary64) N)) #s(literal -1 binary64)))","(*.f64 (fma.f64 #s(literal -1 binary64) (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)) (pow.f64 (neg.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal -1 binary64)))","(*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) #s(literal 1 binary64)))","(*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)))","(*.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (*.f64 (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64)))","(*.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)))","(*.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))","(*.f64 #s(literal 1 binary64) (+.f64 N #s(literal 1 binary64)))","(pow.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64))) #s(literal -1 binary64))","(pow.f64 (/.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64))","(pow.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64))","(/.f64 (neg.f64 (*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64))) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)))) (neg.f64 (fma.f64 N N #s(literal 1 binary64))))","(/.f64 (neg.f64 (*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64))) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)))) (neg.f64 (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64))))","(/.f64 (neg.f64 (*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64))) (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)))) (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64)))))","(/.f64 (neg.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 9 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)))) (neg.f64 (-.f64 (+.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64))) (pow.f64 N #s(literal 3 binary64)))))","(/.f64 (neg.f64 (-.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -2 binary64)) (pow.f64 (*.f64 N (/.f64 N (-.f64 #s(literal 1 binary64) N))) #s(literal 2 binary64)))) (neg.f64 (+.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) (*.f64 N (/.f64 N (-.f64 #s(literal 1 binary64) N))))))","(/.f64 (neg.f64 (-.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -3 binary64)) (*.f64 (pow.f64 N #s(literal 6 binary64)) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -3 binary64))))) (neg.f64 (+.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -2 binary64)) (+.f64 (pow.f64 (*.f64 N (/.f64 N (-.f64 #s(literal 1 binary64) N))) #s(literal 2 binary64)) (*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) (*.f64 N (/.f64 N (-.f64 #s(literal 1 binary64) N))))))))","(/.f64 (neg.f64 (neg.f64 (fma.f64 N N #s(literal -1 binary64)))) (neg.f64 (neg.f64 (-.f64 N #s(literal 1 binary64)))))","(/.f64 (neg.f64 (neg.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N))))) (neg.f64 (neg.f64 (neg.f64 (-.f64 #s(literal 1 binary64) N)))))","(/.f64 (neg.f64 (neg.f64 (fma.f64 #s(literal -1 binary64) (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)))) (neg.f64 (neg.f64 (neg.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))))","(/.f64 (neg.f64 (*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64))) (neg.f64 (*.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) N))))","(/.f64 (neg.f64 (*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64))) #s(literal 1 binary64))) (neg.f64 (*.f64 (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) N))))","(/.f64 (neg.f64 (*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64))) #s(literal 1 binary64))) (neg.f64 (*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64))) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))))","(/.f64 (neg.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 9 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64))) (neg.f64 (*.f64 (-.f64 (+.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64))) (pow.f64 N #s(literal 3 binary64))) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))))","(/.f64 (neg.f64 (-.f64 (*.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) N)) (*.f64 (-.f64 #s(literal 1 binary64) N) (*.f64 N N)))) (neg.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal 2 binary64))))","(/.f64 (neg.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64))) (neg.f64 (-.f64 N #s(literal 1 binary64))))","(/.f64 (neg.f64 (*.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N))) #s(literal 1 binary64))) (neg.f64 (neg.f64 (-.f64 #s(literal 1 binary64) N))))","(/.f64 (neg.f64 (*.f64 (fma.f64 #s(literal -1 binary64) (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64))) (neg.f64 (neg.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))))","(/.f64 (neg.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal 1 binary64))) (neg.f64 (-.f64 #s(literal 1 binary64) N)))","(/.f64 (neg.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64))) (neg.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))","(/.f64 (-.f64 #s(literal -1 binary64) (*.f64 (neg.f64 N) N)) (neg.f64 (-.f64 #s(literal 1 binary64) N)))","(/.f64 (*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64))) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64))) (fma.f64 N N #s(literal 1 binary64)))","(/.f64 (*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64))) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64))) (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)))","(/.f64 (*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64))) (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64))) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64))))","(/.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 9 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64))) (-.f64 (+.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64))) (pow.f64 N #s(literal 3 binary64))))","(/.f64 (-.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -2 binary64)) (pow.f64 (*.f64 N (/.f64 N (-.f64 #s(literal 1 binary64) N))) #s(literal 2 binary64))) (+.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) (*.f64 N (/.f64 N (-.f64 #s(literal 1 binary64) N)))))","(/.f64 (-.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -3 binary64)) (*.f64 (pow.f64 N #s(literal 6 binary64)) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -3 binary64)))) (+.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -2 binary64)) (+.f64 (pow.f64 (*.f64 N (/.f64 N (-.f64 #s(literal 1 binary64) N))) #s(literal 2 binary64)) (*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) (*.f64 N (/.f64 N (-.f64 #s(literal 1 binary64) N)))))))","(/.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64)))) (neg.f64 (*.f64 (-.f64 #s(literal 1 binary64) N) (fma.f64 N N #s(literal 1 binary64)))))","(/.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64)))) (neg.f64 (*.f64 (-.f64 #s(literal 1 binary64) N) (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)))))","(/.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64)))) (neg.f64 (*.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64))))))","(/.f64 (neg.f64 (fma.f64 N N #s(literal -1 binary64))) (neg.f64 (-.f64 N #s(literal 1 binary64))))","(/.f64 (neg.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (neg.f64 (neg.f64 (-.f64 #s(literal 1 binary64) N))))","(/.f64 (neg.f64 (fma.f64 #s(literal -1 binary64) (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64))) (neg.f64 (neg.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))))","(/.f64 (neg.f64 (+.f64 (pow.f64 N #s(literal 9 binary64)) #s(literal 1 binary64))) (neg.f64 (*.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (-.f64 (+.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64))) (pow.f64 N #s(literal 3 binary64))))))","(/.f64 (*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) N)))","(/.f64 (*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64))) #s(literal 1 binary64)) (*.f64 (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) N)))","(/.f64 (*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64))) #s(literal 1 binary64)) (*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64))) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))","(/.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 9 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64)) (*.f64 (-.f64 (+.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64))) (pow.f64 N #s(literal 3 binary64))) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))","(/.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64)))","(/.f64 (*.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N))) #s(literal 1 binary64)) (neg.f64 (-.f64 #s(literal 1 binary64) N)))","(/.f64 (*.f64 (fma.f64 #s(literal -1 binary64) (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64)) (neg.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))","(/.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) N))","(/.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64)) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))","(/.f64 (-.f64 (*.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) N)) (*.f64 (-.f64 #s(literal 1 binary64) N) (*.f64 N N))) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal 2 binary64)))","(/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64))) (*.f64 (-.f64 #s(literal 1 binary64) N) (fma.f64 N N #s(literal 1 binary64))))","(/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 N #s(literal 1 binary64)))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64)))))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64))))","(/.f64 #s(literal -1 binary64) (neg.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))))","(/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64))) (*.f64 (-.f64 #s(literal 1 binary64) N) (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64))))","(/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64))) (*.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64)))))","(/.f64 (+.f64 (pow.f64 N #s(literal 9 binary64)) #s(literal 1 binary64)) (*.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (-.f64 (+.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64))) (pow.f64 N #s(literal 3 binary64)))))","(/.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N))) (neg.f64 (-.f64 #s(literal 1 binary64) N)))","(/.f64 (fma.f64 #s(literal -1 binary64) (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)) (neg.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))","(/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) N))","(/.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))","(/.f64 #s(literal 1 binary64) (neg.f64 (neg.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))))","(/.f64 #s(literal 1 binary64) (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64))))","(/.f64 #s(literal 1 binary64) (/.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64)))","(/.f64 #s(literal 1 binary64) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(neg.f64 (-.f64 (/.f64 #s(literal 0 binary64) (-.f64 #s(literal 1 binary64) N)) (+.f64 N #s(literal 1 binary64))))","(neg.f64 (-.f64 (/.f64 #s(literal 0 binary64) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (+.f64 N #s(literal 1 binary64))))","(neg.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (neg.f64 (-.f64 #s(literal 1 binary64) N))))","(neg.f64 (/.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (neg.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))))","(fma.f64 (pow.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64))) (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) #s(literal -1 binary64)) (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64)) (neg.f64 (*.f64 N (/.f64 N (-.f64 #s(literal 1 binary64) N)))))","(fma.f64 (pow.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64))) (neg.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)))) #s(literal -1 binary64)) (pow.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N)) #s(literal -1 binary64)) (neg.f64 (*.f64 N (/.f64 N (-.f64 #s(literal 1 binary64) N)))))","(fma.f64 (pow.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64))) (fma.f64 #s(literal -1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal -1 binary64))) #s(literal -1 binary64)) (pow.f64 (neg.f64 (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64)) (neg.f64 (*.f64 N (/.f64 N (-.f64 #s(literal 1 binary64) N)))))","(fma.f64 (pow.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64))) #s(literal 1 binary64)) #s(literal -1 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (neg.f64 (*.f64 N (/.f64 N (-.f64 #s(literal 1 binary64) N)))))","(fma.f64 (pow.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (fma.f64 N N #s(literal -1 binary64))) #s(literal -1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (neg.f64 (*.f64 N (/.f64 N (-.f64 #s(literal 1 binary64) N)))))","(fma.f64 (pow.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (neg.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)))) #s(literal -1 binary64)) (pow.f64 (neg.f64 (-.f64 #s(literal 1 binary64) N)) #s(literal -1 binary64)) (neg.f64 (*.f64 N (/.f64 N (-.f64 #s(literal 1 binary64) N)))))","(fma.f64 (pow.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (fma.f64 #s(literal -1 binary64) (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64))) #s(literal -1 binary64)) (pow.f64 (neg.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal -1 binary64)) (neg.f64 (*.f64 N (/.f64 N (-.f64 #s(literal 1 binary64) N)))))","(fma.f64 (pow.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal 1 binary64)) #s(literal -1 binary64)) (+.f64 N #s(literal 1 binary64)) (neg.f64 (*.f64 N (/.f64 N (-.f64 #s(literal 1 binary64) N)))))","(fma.f64 (pow.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64))) (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64)) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64)) (neg.f64 (*.f64 N (/.f64 N (-.f64 #s(literal 1 binary64) N)))))","(fma.f64 (pow.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64))) (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64)) (pow.f64 (fma.f64 (fma.f64 N N N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) (neg.f64 (*.f64 N (/.f64 N (-.f64 #s(literal 1 binary64) N)))))","(fma.f64 (pow.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (*.f64 N N))) #s(literal -1 binary64)) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) (neg.f64 (*.f64 N (/.f64 N (-.f64 #s(literal 1 binary64) N)))))","(fma.f64 (pow.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64)) (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)) (neg.f64 (*.f64 N (/.f64 N (-.f64 #s(literal 1 binary64) N)))))","(fma.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal -1 binary64)) (+.f64 N #s(literal 1 binary64)) (neg.f64 (*.f64 N (/.f64 N (-.f64 #s(literal 1 binary64) N)))))","(fma.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64))) #s(literal -1 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (neg.f64 (*.f64 N (/.f64 N (-.f64 #s(literal 1 binary64) N)))))","(fma.f64 N #s(literal 1 binary64) #s(literal 1 binary64))","(fma.f64 #s(literal 1 binary64) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) (neg.f64 (*.f64 N (/.f64 N (-.f64 #s(literal 1 binary64) N)))))","(fma.f64 #s(literal 1 binary64) N #s(literal 1 binary64))","(-.f64 (/.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -2 binary64)) (+.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) (*.f64 N (/.f64 N (-.f64 #s(literal 1 binary64) N))))) (/.f64 (pow.f64 (*.f64 N (/.f64 N (-.f64 #s(literal 1 binary64) N))) #s(literal 2 binary64)) (+.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) (*.f64 N (/.f64 N (-.f64 #s(literal 1 binary64) N))))))","(-.f64 (/.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -3 binary64)) (+.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -2 binary64)) (+.f64 (pow.f64 (*.f64 N (/.f64 N (-.f64 #s(literal 1 binary64) N))) #s(literal 2 binary64)) (*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) (*.f64 N (/.f64 N (-.f64 #s(literal 1 binary64) N))))))) (/.f64 (*.f64 (pow.f64 N #s(literal 6 binary64)) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -3 binary64))) (+.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -2 binary64)) (+.f64 (pow.f64 (*.f64 N (/.f64 N (-.f64 #s(literal 1 binary64) N))) #s(literal 2 binary64)) (*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) (*.f64 N (/.f64 N (-.f64 #s(literal 1 binary64) N))))))))","(-.f64 (/.f64 (*.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) N)) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal 2 binary64))) (/.f64 (*.f64 (-.f64 #s(literal 1 binary64) N) (*.f64 N N)) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal 2 binary64))))","(-.f64 (/.f64 #s(literal 1 binary64) (*.f64 (-.f64 #s(literal 1 binary64) N) (fma.f64 N N #s(literal 1 binary64)))) (/.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 (-.f64 #s(literal 1 binary64) N) (fma.f64 N N #s(literal 1 binary64)))))","(-.f64 (/.f64 #s(literal 1 binary64) (*.f64 (-.f64 #s(literal 1 binary64) N) (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)))) (/.f64 (pow.f64 N #s(literal 6 binary64)) (*.f64 (-.f64 #s(literal 1 binary64) N) (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)))))","(-.f64 (/.f64 #s(literal 1 binary64) (*.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64))))) (/.f64 (pow.f64 N #s(literal 6 binary64)) (*.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64))))))","(-.f64 (/.f64 #s(literal 0 binary64) (neg.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))) (/.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (neg.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))))","(-.f64 (/.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) N)) (/.f64 (/.f64 (pow.f64 N #s(literal 4 binary64)) (fma.f64 N N #s(literal 1 binary64))) (-.f64 #s(literal 1 binary64) N)))","(-.f64 (/.f64 (pow.f64 (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)) #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) N)) (/.f64 (/.f64 (pow.f64 N #s(literal 6 binary64)) (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64))) (-.f64 #s(literal 1 binary64) N)))","(-.f64 (/.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64))) #s(literal -1 binary64)) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (/.f64 (/.f64 (pow.f64 N #s(literal 6 binary64)) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64)))) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))","(-.f64 (/.f64 #s(literal 0 binary64) (neg.f64 (-.f64 #s(literal 1 binary64) N))) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (neg.f64 (-.f64 #s(literal 1 binary64) N))))","(-.f64 (/.f64 (*.f64 N N) (-.f64 N #s(literal 1 binary64))) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(-.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) (*.f64 N (/.f64 N (-.f64 #s(literal 1 binary64) N))))","(exp.f64 (*.f64 (log.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) #s(literal -1 binary64)))","(+.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) (neg.f64 (*.f64 N (/.f64 N (-.f64 #s(literal 1 binary64) N)))))","(+.f64 N #s(literal 1 binary64))","(+.f64 #s(literal 1 binary64) N)"]],"stop":[["iter limit",1],["node limit",1],["iter limit",1]],"time":360.047119140625,"type":"rewrite"},{"compiler":[[7357,1147]],"memory":[[4690528,29241408]],"time":42.208984375,"type":"eval"},{"alts":[["(atan2.f64 #s(literal 1 binary64) (fma.f64 (fma.f64 N N #s(literal -1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N)))","next",0.28353500976844204,"binary64"],["(atan2.f64 #s(literal 1 binary64) (fma.f64 (/.f64 (-.f64 (*.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) N)) (*.f64 (-.f64 #s(literal 1 binary64) N) (*.f64 N N))) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal 2 binary64))) N #s(literal 1 binary64)))","fresh",0.35289003907376804,"binary64"],["(atan2.f64 #s(literal 1 binary64) (fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64))) (*.f64 (-.f64 #s(literal 1 binary64) N) (fma.f64 N N #s(literal 1 binary64)))) N #s(literal 1 binary64)))","fresh",13.452249475843718,"binary64"],["(atan2.f64 #s(literal 1 binary64) (fma.f64 (/.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) N #s(literal 1 binary64)))","fresh",0.43005756837909415,"binary64"],["(atan2.f64 #s(literal 1 binary64) (fma.f64 (/.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) N) (-.f64 #s(literal 1 binary64) (*.f64 N N))) (+.f64 N #s(literal 1 binary64)) #s(literal 1 binary64)))","fresh",0.32259750976844204,"binary64"],["(atan2.f64 #s(literal 1 binary64) (fma.f64 (/.f64 #s(literal 1 binary64) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) N #s(literal 1 binary64)))","fresh",0.37337875976844204,"binary64"],["(atan2.f64 #s(literal 1 binary64) (fma.f64 (/.f64 #s(literal 1 binary64) (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) N #s(literal 1 binary64)))","fresh",0.47206884768442026,"binary64"],["(atan2.f64 #s(literal 1 binary64) (fma.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (/.f64 N (-.f64 #s(literal 1 binary64) N)) #s(literal 1 binary64)))","next",0.3037300293053261,"binary64"],["(atan2.f64 #s(literal 1 binary64) (fma.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) N) #s(literal 1 binary64)))","fresh",0.3815613281475362,"binary64"],["(atan2.f64 #s(literal 1 binary64) (fma.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) N) (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64)))","fresh",13.416059387927742,"binary64"],["(atan2.f64 #s(literal 1 binary64) (fma.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64)))","next",0.4909363281475362,"binary64"],["(atan2.f64 #s(literal 1 binary64) (fma.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (*.f64 (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)) N) #s(literal 1 binary64)))","fresh",0.4925575683790942,"binary64"],["(atan2.f64 #s(literal 1 binary64) (fma.f64 (+.f64 #s(literal 1 binary64) N) N #s(literal 1 binary64)))","done",0.265625,"binary64"],["(atan2.f64 #s(literal 1 binary64) (fma.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) N) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) #s(literal 1 binary64)))","fresh",0.4238663086106521,"binary64"],["(atan2.f64 #s(literal 1 binary64) (/.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))))","fresh",13.298208118390857,"binary64"],["(atan2.f64 #s(literal 1 binary64) (/.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64))))","next",0.26171875,"binary64"],["(atan2.f64 #s(literal 1 binary64) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64)))))","fresh",0.3170700195368841,"binary64"],["(atan2.f64 #s(literal 1 binary64) #s(approx (+ (* (+ 1 N) N) 1) (fma.f64 N N N)))","fresh",2.1208237455288637,"binary64"],["(atan2.f64 #s(literal 1 binary64) #s(approx (+ (* (+ 1 N) N) 1) (-.f64 N #s(literal -1 binary64))))","fresh",59.06128682863241,"binary64"],["(atan2.f64 #s(literal 1 binary64) #s(approx (+ (* (+ 1 N) N) 1) (*.f64 N N)))","fresh",3.42698024626267,"binary64"],["(atan2.f64 #s(literal 1 binary64) #s(approx (+ (* (+ 1 N) N) 1) #s(literal 1 binary64)))","next",60.057922010139634,"binary64"]],"compiler":[[15,9],[24,12],[19,11],[17,10],[20,9],[12,8],[15,9],[14,8],[16,10],[17,11],[17,10],[19,12],[8,5],[16,10],[17,11],[12,8],[24,10],[14,9],[13,10],[13,9],[11,8],[15,9],[24,12],[19,11],[17,10],[20,9],[12,8],[15,9],[14,8],[16,10],[17,11],[17,10],[19,12],[16,10],[17,11],[12,8],[24,10],[14,9],[13,10],[13,9],[11,8]],"count":[[297,21]],"kept":[{"done":[0,0],"fresh":[0,0],"new":[296,20],"picked":[1,1]}],"memory":[[-4113088,19543824]],"min-error":[[0.1171875,"binary64"]],"time":19.68896484375,"type":"prune"},{"egraph":[[0,8390,175,0.104286491],[5,2834,175,0.030924604],[4,890,175,0.012346376],[3,371,175,0.002880276],[2,156,177,0.001494636],[1,92,177,0.000665907],[0,59,189,0.000521801],[0,31,213,0.000334093]],"inputs":[["(atan2.f64 #s(literal 1 binary64) (/.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64))))","#s(literal 1 binary64)","(/.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)))","(pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64))","(fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))","(+.f64 N #s(literal 1 binary64))","N","#s(literal -1 binary64)","(atan2.f64 #s(literal 1 binary64) #s(approx (+ (* (+ 1 N) N) 1) #s(literal 1 binary64)))","#s(literal 1 binary64)","#s(approx (+ (* (+ 1 N) N) 1) #s(literal 1 binary64))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (/.f64 N (-.f64 #s(literal 1 binary64) N)) #s(literal 1 binary64)))","#s(literal 1 binary64)","(fma.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (/.f64 N (-.f64 #s(literal 1 binary64) N)) #s(literal 1 binary64))","(-.f64 #s(literal 1 binary64) (*.f64 N N))","(*.f64 N N)","N","(/.f64 N (-.f64 #s(literal 1 binary64) N))","(-.f64 #s(literal 1 binary64) N)","(atan2.f64 #s(literal 1 binary64) (fma.f64 (fma.f64 N N #s(literal -1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N)))","#s(literal 1 binary64)","(fma.f64 (fma.f64 N N #s(literal -1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N))","(fma.f64 N N #s(literal -1 binary64))","N","#s(literal -1 binary64)","(pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))","(-.f64 N #s(literal 1 binary64))","(*.f64 N N)","(atan2.f64 #s(literal 1 binary64) (fma.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64)))","#s(literal 1 binary64)","(fma.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64))","(+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))","(pow.f64 N #s(literal 3 binary64))","N","#s(literal 3 binary64)","(/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))","(fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))","(-.f64 N #s(literal 1 binary64))"]],"locations":[["(pow.f64 N #s(literal 3 binary64))","cost-diff",0],["(+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))","cost-diff",0],["(atan2.f64 #s(literal 1 binary64) (fma.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64)))","cost-diff",0],["(fma.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64))","cost-diff",1],["(pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))","cost-diff",0],["(fma.f64 N N #s(literal -1 binary64))","cost-diff",0],["(atan2.f64 #s(literal 1 binary64) (fma.f64 (fma.f64 N N #s(literal -1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N)))","cost-diff",0],["(fma.f64 (fma.f64 N N #s(literal -1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N))","cost-diff",7],["(*.f64 N N)","cost-diff",0],["(-.f64 #s(literal 1 binary64) (*.f64 N N))","cost-diff",0],["(atan2.f64 #s(literal 1 binary64) (fma.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (/.f64 N (-.f64 #s(literal 1 binary64) N)) #s(literal 1 binary64)))","cost-diff",0],["(fma.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (/.f64 N (-.f64 #s(literal 1 binary64) N)) #s(literal 1 binary64))","cost-diff",6],["#s(approx (+ (* (+ 1 N) N) 1) #s(literal 1 binary64))","cost-diff",0],["(atan2.f64 #s(literal 1 binary64) #s(approx (+ (* (+ 1 N) N) 1) #s(literal 1 binary64)))","cost-diff",0],["(fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))","cost-diff",0],["(pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64))","cost-diff",0],["(atan2.f64 #s(literal 1 binary64) (/.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64))))","cost-diff",0],["(/.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)))","cost-diff",4]],"memory":[[4415952,46419312]],"method":["egg-herbie"],"outputs":[["(atan2.f64 #s(literal 1 binary64) (/.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64))))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)))","#s(literal 1 binary64)","(/.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)))","(fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64))","(pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64))","(pow.f64 (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64))","(fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))","(fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64))","(+.f64 N #s(literal 1 binary64))","(-.f64 N #s(literal -1 binary64))","N","#s(literal -1 binary64)","(atan2.f64 #s(literal 1 binary64) #s(approx (+ (* (+ 1 N) N) 1) #s(literal 1 binary64)))","#s(literal 1 binary64)","#s(approx (+ (* (+ 1 N) N) 1) #s(literal 1 binary64))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (/.f64 N (-.f64 #s(literal 1 binary64) N)) #s(literal 1 binary64)))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)))","#s(literal 1 binary64)","(fma.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (/.f64 N (-.f64 #s(literal 1 binary64) N)) #s(literal 1 binary64))","(fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64))","(-.f64 #s(literal 1 binary64) (*.f64 N N))","(*.f64 N N)","N","(/.f64 N (-.f64 #s(literal 1 binary64) N))","(-.f64 #s(literal 1 binary64) N)","(atan2.f64 #s(literal 1 binary64) (fma.f64 (fma.f64 N N #s(literal -1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N)))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)))","#s(literal 1 binary64)","(fma.f64 (fma.f64 N N #s(literal -1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N))","(fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64))","(fma.f64 N N #s(literal -1 binary64))","N","#s(literal -1 binary64)","(pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))","(-.f64 N #s(literal 1 binary64))","(*.f64 N N)","(atan2.f64 #s(literal 1 binary64) (fma.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64)))","(atan2.f64 #s(literal 1 binary64) (+.f64 (/.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) N) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64)))","#s(literal 1 binary64)","(fma.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64))","(+.f64 (/.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) N) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64))","(+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))","(pow.f64 N #s(literal 3 binary64))","N","#s(literal 3 binary64)","(/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))","(fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))","(-.f64 N #s(literal 1 binary64))"]],"stop":[["iter limit",1],["node limit",1],["iter limit",1]],"time":313.696044921875,"type":"simplify"},{"compiler":[[228,37]],"locations":[["(+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))","accuracy",0.00390625],["(/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))","accuracy",0.2421875],["(atan2.f64 #s(literal 1 binary64) (fma.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64)))","accuracy",0.26953125],["(fma.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64))","accuracy",0.40072250976844204],["(-.f64 N #s(literal 1 binary64))","accuracy",0.0],["(*.f64 N N)","accuracy",0.0],["(fma.f64 (fma.f64 N N #s(literal -1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N))","accuracy",0.04296875],["(atan2.f64 #s(literal 1 binary64) (fma.f64 (fma.f64 N N #s(literal -1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N)))","accuracy",0.26953125],["(-.f64 #s(literal 1 binary64) N)","accuracy",0.0],["(*.f64 N N)","accuracy",0.0],["(fma.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (/.f64 N (-.f64 #s(literal 1 binary64) N)) #s(literal 1 binary64))","accuracy",0.05859375],["(atan2.f64 #s(literal 1 binary64) (fma.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (/.f64 N (-.f64 #s(literal 1 binary64) N)) #s(literal 1 binary64)))","accuracy",0.26953125],["(atan2.f64 #s(literal 1 binary64) #s(approx (+ (* (+ 1 N) N) 1) #s(literal 1 binary64)))","accuracy",0.26953125],["#s(approx (+ (* (+ 1 N) N) 1) #s(literal 1 binary64))","accuracy",60.06216012909289],["(fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))","accuracy",0.00390625],["(atan2.f64 #s(literal 1 binary64) (/.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64))))","accuracy",0.26953125],["(pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64))","accuracy",0.2734375],["(/.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)))","accuracy",0.296875]],"memory":[[-17463264,34370832]],"mixsample":[[5.2646484375,"ival-div",0],[12.186767578125,"ival-add",0],[10.881103515625,"ival-mult",0],[0.09130859375,"ival-assert",0],[8.281982421875,"ival-atan2",0],[3.910888671875,"ival-sub",0],[0.211181640625,"ival-true",0],[0.43310546875,"exact",0],[11.2177734375,"ival-pow",0]],"outcomes":[[71.94677734375,0,"valid",256]],"time":100.671875,"type":"localize"},{"count":[[21,58]],"inputs":[["(/.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)))","(atan2.f64 #s(literal 1 binary64) (/.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64))))","(pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64))","(fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))","(atan2.f64 #s(literal 1 binary64) #s(approx (+ (* (+ 1 N) N) 1) #s(literal 1 binary64)))","#s(approx (+ (* (+ 1 N) N) 1) #s(literal 1 binary64))","(fma.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (/.f64 N (-.f64 #s(literal 1 binary64) N)) #s(literal 1 binary64))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (/.f64 N (-.f64 #s(literal 1 binary64) N)) #s(literal 1 binary64)))","(-.f64 #s(literal 1 binary64) (*.f64 N N))","(*.f64 N N)","(fma.f64 (fma.f64 N N #s(literal -1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (fma.f64 N N #s(literal -1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N)))","(fma.f64 N N #s(literal -1 binary64))","(pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))","(fma.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64)))","(+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))","(pow.f64 N #s(literal 3 binary64))","(-.f64 #s(literal 1 binary64) N)","(-.f64 N #s(literal 1 binary64))","(/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))"]],"memory":[[-2897968,4861872]],"outputs":[["1","(+ 1 N)","(+ 1 (* N (+ 1 N)))","(atan2 1 (+ 1 (* N (+ 1 N))))","(+ 1 (* -1 N))","(+ 1 (* N (- (pow N 2) 1)))","(+ 1 (* N (- (* (pow N 2) (+ 1 (* -1 N))) 1)))","(atan2 1 (+ 1 (/ (* N (- 1 (pow N 2))) (- 1 N))))","(+ 1 (* -1 (pow N 2)))","(pow N 2)","(atan2 1 (- (+ (/ (pow N 2) (- N 1)) (pow N 2)) (/ 1 (- N 1))))","-1","(- (pow N 2) 1)","(- (* -1 N) 1)","(- (* N (- (* -1 N) 1)) 1)","(- (* N (- (* N (- (* -1 N) 1)) 1)) 1)","(atan2 1 (+ 1 (/ (* N (+ 1 (pow N 3))) (+ 1 (* N (- N 1))))))","(+ 1 (pow N 3))","(pow N 3)","(- N 1)","N","(* N (+ 1 N))","(* N (+ 1 (* N (+ 1 (* -1 (pow N 2))))))","(* N (+ 1 (* N (+ 1 (* (pow N 2) (- (* -1 N) 1))))))","(* (pow N 2) (+ 1 (/ 1 N)))","(* (pow N 2) (+ 1 (+ (/ 1 N) (/ 1 (pow N 2)))))","(atan2 1 (+ 1 (+ N (pow N 2))))","(/ 1 (pow N 2))","(/ (- 1 (/ 1 N)) (pow N 2))","(/ (- (+ 1 (/ 1 (pow N 3))) (/ 1 N)) (pow N 2))","(/ (- (+ 1 (/ 1 (pow N 3))) (+ (/ 1 N) (/ 1 (pow N 4)))) (pow N 2))","(atan2 1 (- (+ 1 (/ N (- 1 N))) (/ (pow N 3) (- 1 N))))","(* -1 (pow N 2))","(* (pow N 2) (- (/ 1 (pow N 2)) 1))","(* (pow N 2) (- 1 (/ 1 (pow N 2))))","(/ 1 N)","(/ (+ 1 (/ 1 N)) N)","(/ (+ 1 (+ (/ 1 N) (/ 1 (pow N 2)))) N)","(/ (+ 1 (+ (/ 1 N) (+ (/ 1 (pow N 2)) (/ 1 (pow N 3))))) N)","(atan2 1 (+ 1 (+ (/ N (- (+ 1 (pow N 2)) N)) (/ (pow N 4) (- (+ 1 (pow N 2)) N)))))","(* (pow N 3) (+ 1 (/ 1 (pow N 3))))","(* -1 N)","(* N (- (/ 1 N) 1))","(* N (- 1 (/ 1 N)))","(/ (- (+ 1 (/ 1 N)) (/ 1 (pow N 3))) N)","(/ (+ 1 (+ (* -1 (/ (+ 1 (/ 1 N)) (pow N 3))) (/ 1 N))) N)","(atan2 1 (+ 1 (* N (- 1 (* -1 N)))))","(/ (+ 1 (* -1 (/ (- 1 (/ 1 (pow N 2))) N))) (pow N 2))","(/ (+ 1 (* -1 (/ (- (+ 1 (/ 1 (pow N 3))) (/ 1 (pow N 2))) N))) (pow N 2))","(atan2 1 (+ 1 (/ (* N (- 1 (pow N 2))) (+ 1 (* -1 N)))))","(atan2 1 (+ (* -1 (/ (- (pow N 2) 1) (+ 1 (* -1 N)))) (pow N 2)))","(* -1 (/ (- (* -1 (/ (+ 1 (/ 1 N)) N)) 1) N))","(* -1 (/ (- (* -1 (/ (+ 1 (+ (/ 1 N) (/ 1 (pow N 2)))) N)) 1) N))","(atan2 1 (+ 1 (/ (* N (- 1 (* -1 (pow N 3)))) (+ 1 (+ (* -1 N) (pow N 2))))))","(* -1 (* N (- 1 (/ 1 N))))","(* -1 (* N (- (/ 1 N) 1)))","(* -1 (/ (- (* -1 (/ (- 1 (/ 1 (pow N 2))) N)) 1) N))","(* -1 (/ (- (* -1 (/ (+ 1 (* -1 (/ (+ 1 (/ 1 N)) (pow N 2)))) N)) 1) N))"]],"series":[[2.85595703125,"((/ 1 (pow (+ (* (+ N 1) N) 1) -1)) (atan2 1 (/ 1 (pow (+ (* (+ N 1) N) 1) -1))) (pow (+ (* (+ N 1) N) 1) -1) (+ (* (+ N 1) N) 1) (atan2 1 (+ (* (+ 1 N) N) 1)) (+ (* (+ 1 N) N) 1) (+ (* (- 1 (* N N)) (/ N (- 1 N))) 1) (atan2 1 (+ (* (- 1 (* N N)) (/ N (- 1 N))) 1)) (- 1 (* N N)) (* N N) (+ (* (+ (* N N) -1) (pow (- N 1) -1)) (* N N)) (atan2 1 (+ (* (+ (* N N) -1) (pow (- N 1) -1)) (* N N))) (+ (* N N) -1) (pow (- N 1) -1) (+ (* (+ (pow N 3) 1) (/ N (+ (* (- N 1) N) 1))) 1) (atan2 1 (+ (* (+ (pow N 3) 1) (/ N (+ (* (- N 1) N) 1))) 1)) (+ (pow N 3) 1) (pow N 3) (- 1 N) (- N 1) (/ N (+ (* (- N 1) N) 1)))","N","-inf"],[3.208984375,"((/ 1 (pow (+ (* (+ N 1) N) 1) -1)) (atan2 1 (/ 1 (pow (+ (* (+ N 1) N) 1) -1))) (pow (+ (* (+ N 1) N) 1) -1) (+ (* (+ N 1) N) 1) (atan2 1 (+ (* (+ 1 N) N) 1)) (+ (* (+ 1 N) N) 1) (+ (* (- 1 (* N N)) (/ N (- 1 N))) 1) (atan2 1 (+ (* (- 1 (* N N)) (/ N (- 1 N))) 1)) (- 1 (* N N)) (* N N) (+ (* (+ (* N N) -1) (pow (- N 1) -1)) (* N N)) (atan2 1 (+ (* (+ (* N N) -1) (pow (- N 1) -1)) (* N N))) (+ (* N N) -1) (pow (- N 1) -1) (+ (* (+ (pow N 3) 1) (/ N (+ (* (- N 1) N) 1))) 1) (atan2 1 (+ (* (+ (pow N 3) 1) (/ N (+ (* (- N 1) N) 1))) 1)) (+ (pow N 3) 1) (pow N 3) (- 1 N) (- N 1) (/ N (+ (* (- N 1) N) 1)))","N","inf"],[3.7119140625,"((/ 1 (pow (+ (* (+ N 1) N) 1) -1)) (atan2 1 (/ 1 (pow (+ (* (+ N 1) N) 1) -1))) (pow (+ (* (+ N 1) N) 1) -1) (+ (* (+ N 1) N) 1) (atan2 1 (+ (* (+ 1 N) N) 1)) (+ (* (+ 1 N) N) 1) (+ (* (- 1 (* N N)) (/ N (- 1 N))) 1) (atan2 1 (+ (* (- 1 (* N N)) (/ N (- 1 N))) 1)) (- 1 (* N N)) (* N N) (+ (* (+ (* N N) -1) (pow (- N 1) -1)) (* N N)) (atan2 1 (+ (* (+ (* N N) -1) (pow (- N 1) -1)) (* N N))) (+ (* N N) -1) (pow (- N 1) -1) (+ (* (+ (pow N 3) 1) (/ N (+ (* (- N 1) N) 1))) 1) (atan2 1 (+ (* (+ (pow N 3) 1) (/ N (+ (* (- N 1) N) 1))) 1)) (+ (pow N 3) 1) (pow N 3) (- 1 N) (- N 1) (/ N (+ (* (- N 1) N) 1)))","N","0"]],"time":10.922119140625,"type":"series"},{"count":[[58,57]],"egraph":[[0,8103,445,0.066775598],[3,3468,467,0.033593274],[2,986,494,0.01269004],[1,424,502,0.003383062],[0,158,514,0.001262394]],"inputs":[["1","(+ 1 N)","(+ 1 (* N (+ 1 N)))","(atan2 1 (+ 1 (* N (+ 1 N))))","(+ 1 (* -1 N))","(+ 1 (* N (- (pow N 2) 1)))","(+ 1 (* N (- (* (pow N 2) (+ 1 (* -1 N))) 1)))","(atan2 1 (+ 1 (/ (* N (- 1 (pow N 2))) (- 1 N))))","(+ 1 (* -1 (pow N 2)))","(pow N 2)","(atan2 1 (- (+ (/ (pow N 2) (- N 1)) (pow N 2)) (/ 1 (- N 1))))","-1","(- (pow N 2) 1)","(- (* -1 N) 1)","(- (* N (- (* -1 N) 1)) 1)","(- (* N (- (* N (- (* -1 N) 1)) 1)) 1)","(atan2 1 (+ 1 (/ (* N (+ 1 (pow N 3))) (+ 1 (* N (- N 1))))))","(+ 1 (pow N 3))","(pow N 3)","(- N 1)","N","(* N (+ 1 N))","(* N (+ 1 (* N (+ 1 (* -1 (pow N 2))))))","(* N (+ 1 (* N (+ 1 (* (pow N 2) (- (* -1 N) 1))))))","(* (pow N 2) (+ 1 (/ 1 N)))","(* (pow N 2) (+ 1 (+ (/ 1 N) (/ 1 (pow N 2)))))","(atan2 1 (+ 1 (+ N (pow N 2))))","(/ 1 (pow N 2))","(/ (- 1 (/ 1 N)) (pow N 2))","(/ (- (+ 1 (/ 1 (pow N 3))) (/ 1 N)) (pow N 2))","(/ (- (+ 1 (/ 1 (pow N 3))) (+ (/ 1 N) (/ 1 (pow N 4)))) (pow N 2))","(atan2 1 (- (+ 1 (/ N (- 1 N))) (/ (pow N 3) (- 1 N))))","(* -1 (pow N 2))","(* (pow N 2) (- (/ 1 (pow N 2)) 1))","(* (pow N 2) (- 1 (/ 1 (pow N 2))))","(/ 1 N)","(/ (+ 1 (/ 1 N)) N)","(/ (+ 1 (+ (/ 1 N) (/ 1 (pow N 2)))) N)","(/ (+ 1 (+ (/ 1 N) (+ (/ 1 (pow N 2)) (/ 1 (pow N 3))))) N)","(atan2 1 (+ 1 (+ (/ N (- (+ 1 (pow N 2)) N)) (/ (pow N 4) (- (+ 1 (pow N 2)) N)))))","(* (pow N 3) (+ 1 (/ 1 (pow N 3))))","(* -1 N)","(* N (- (/ 1 N) 1))","(* N (- 1 (/ 1 N)))","(/ (- (+ 1 (/ 1 N)) (/ 1 (pow N 3))) N)","(/ (+ 1 (+ (* -1 (/ (+ 1 (/ 1 N)) (pow N 3))) (/ 1 N))) N)","(atan2 1 (+ 1 (* N (- 1 (* -1 N)))))","(/ (+ 1 (* -1 (/ (- 1 (/ 1 (pow N 2))) N))) (pow N 2))","(/ (+ 1 (* -1 (/ (- (+ 1 (/ 1 (pow N 3))) (/ 1 (pow N 2))) N))) (pow N 2))","(atan2 1 (+ 1 (/ (* N (- 1 (pow N 2))) (+ 1 (* -1 N)))))","(atan2 1 (+ (* -1 (/ (- (pow N 2) 1) (+ 1 (* -1 N)))) (pow N 2)))","(* -1 (/ (- (* -1 (/ (+ 1 (/ 1 N)) N)) 1) N))","(* -1 (/ (- (* -1 (/ (+ 1 (+ (/ 1 N) (/ 1 (pow N 2)))) N)) 1) N))","(atan2 1 (+ 1 (/ (* N (- 1 (* -1 (pow N 3)))) (+ 1 (+ (* -1 N) (pow N 2))))))","(* -1 (* N (- 1 (/ 1 N))))","(* -1 (* N (- (/ 1 N) 1)))","(* -1 (/ (- (* -1 (/ (- 1 (/ 1 (pow N 2))) N)) 1) N))","(* -1 (/ (- (* -1 (/ (+ 1 (* -1 (/ (+ 1 (/ 1 N)) (pow N 2)))) N)) 1) N))"]],"memory":[[1402336,33327248]],"method":["egg-herbie"],"outputs":[["1","#s(literal 1 binary64)","(+ 1 N)","(-.f64 N #s(literal -1 binary64))","(+ 1 (* N (+ 1 N)))","(fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64))","(atan2 1 (+ 1 (* N (+ 1 N))))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)))","(+ 1 (* -1 N))","(-.f64 #s(literal 1 binary64) N)","(+ 1 (* N (- (pow N 2) 1)))","(fma.f64 (fma.f64 N N #s(literal -1 binary64)) N #s(literal 1 binary64))","(+ 1 (* N (- (* (pow N 2) (+ 1 (* -1 N))) 1)))","(*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) N))","(atan2 1 (+ 1 (/ (* N (- 1 (pow N 2))) (- 1 N))))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)))","(+ 1 (* -1 (pow N 2)))","(fma.f64 (neg.f64 N) N #s(literal 1 binary64))","(pow N 2)","(*.f64 N N)","(atan2 1 (- (+ (/ (pow N 2) (- N 1)) (pow N 2)) (/ 1 (- N 1))))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)))","-1","#s(literal -1 binary64)","(- (pow N 2) 1)","(fma.f64 N N #s(literal -1 binary64))","(- (* -1 N) 1)","(-.f64 #s(literal -1 binary64) N)","(- (* N (- (* -1 N) 1)) 1)","(fma.f64 (-.f64 #s(literal -1 binary64) N) N #s(literal -1 binary64))","(- (* N (- (* N (- (* -1 N) 1)) 1)) 1)","(*.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 #s(literal -1 binary64) N))","(atan2 1 (+ 1 (/ (* N (+ 1 (pow N 3))) (+ 1 (* N (- N 1))))))","(atan2.f64 #s(literal 1 binary64) (+.f64 (/.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) N) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64)))","(+ 1 (pow N 3))","(-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64))","(pow N 3)","(pow.f64 N #s(literal 3 binary64))","(- N 1)","(-.f64 N #s(literal 1 binary64))","N","(* N (+ 1 N))","(fma.f64 N N N)","(* N (+ 1 (* N (+ 1 (* -1 (pow N 2))))))","(fma.f64 (-.f64 N (pow.f64 N #s(literal 3 binary64))) N N)","(* N (+ 1 (* N (+ 1 (* (pow N 2) (- (* -1 N) 1))))))","(*.f64 (-.f64 #s(literal -1 binary64) N) (fma.f64 #s(literal -1 binary64) N (pow.f64 N #s(literal 4 binary64))))","(* (pow N 2) (+ 1 (/ 1 N)))","(fma.f64 N N N)","(* (pow N 2) (+ 1 (+ (/ 1 N) (/ 1 (pow N 2)))))","(fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64))","(atan2 1 (+ 1 (+ N (pow N 2))))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)))","(/ 1 (pow N 2))","(/.f64 (/.f64 #s(literal 1 binary64) N) N)","(/ (- 1 (/ 1 N)) (pow N 2))","(*.f64 (/.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64))) (-.f64 N #s(literal 1 binary64)))","(/ (- (+ 1 (/ 1 (pow N 3))) (/ 1 N)) (pow N 2))","(/.f64 (-.f64 (-.f64 (/.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64))) #s(literal -1 binary64)) (/.f64 #s(literal 1 binary64) N)) (*.f64 N N))","(/ (- (+ 1 (/ 1 (pow N 3))) (+ (/ 1 N) (/ 1 (pow N 4)))) (pow N 2))","(/.f64 (-.f64 (/.f64 (fma.f64 (/.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64))) (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) N) #s(literal -1 binary64)) (*.f64 N N))","(atan2 1 (- (+ 1 (/ N (- 1 N))) (/ (pow N 3) (- 1 N))))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)))","(* -1 (pow N 2))","(*.f64 (neg.f64 N) N)","(* (pow N 2) (- (/ 1 (pow N 2)) 1))","(fma.f64 (neg.f64 N) N #s(literal 1 binary64))","(* (pow N 2) (- 1 (/ 1 (pow N 2))))","(fma.f64 N N #s(literal -1 binary64))","(/ 1 N)","(/.f64 #s(literal 1 binary64) N)","(/ (+ 1 (/ 1 N)) N)","(/.f64 (-.f64 (/.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) N)","(/ (+ 1 (+ (/ 1 N) (/ 1 (pow N 2)))) N)","(/.f64 (-.f64 (/.f64 (-.f64 (/.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) N) #s(literal -1 binary64)) N)","(/ (+ 1 (+ (/ 1 N) (+ (/ 1 (pow N 2)) (/ 1 (pow N 3))))) N)","(/.f64 (-.f64 #s(literal 1 binary64) (/.f64 (-.f64 #s(literal -1 binary64) (/.f64 (-.f64 (/.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) N)) N)) N)","(atan2 1 (+ 1 (+ (/ N (- (+ 1 (pow N 2)) N)) (/ (pow N 4) (- (+ 1 (pow N 2)) N)))))","(atan2.f64 #s(literal 1 binary64) (+.f64 (/.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) N) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64)))","(* (pow N 3) (+ 1 (/ 1 (pow N 3))))","(-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64))","(* -1 N)","(neg.f64 N)","(* N (- (/ 1 N) 1))","(-.f64 #s(literal 1 binary64) N)","(* N (- 1 (/ 1 N)))","(-.f64 N #s(literal 1 binary64))","(/ (- (+ 1 (/ 1 N)) (/ 1 (pow N 3))) N)","(/.f64 (fma.f64 (/.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64))) (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64)) N)","(/ (+ 1 (+ (* -1 (/ (+ 1 (/ 1 N)) (pow N 3))) (/ 1 N))) N)","(/.f64 (*.f64 (-.f64 (/.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (/.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64))))) N)","(atan2 1 (+ 1 (* N (- 1 (* -1 N)))))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)))","(/ (+ 1 (* -1 (/ (- 1 (/ 1 (pow N 2))) N))) (pow N 2))","(/.f64 (-.f64 (-.f64 (/.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64))) #s(literal -1 binary64)) (/.f64 #s(literal 1 binary64) N)) (*.f64 N N))","(/ (+ 1 (* -1 (/ (- (+ 1 (/ 1 (pow N 3))) (/ 1 (pow N 2))) N))) (pow N 2))","(/.f64 (-.f64 (/.f64 (fma.f64 (/.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64))) (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) N) #s(literal -1 binary64)) (*.f64 N N))","(atan2 1 (+ 1 (/ (* N (- 1 (pow N 2))) (+ 1 (* -1 N)))))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)))","(atan2 1 (+ (* -1 (/ (- (pow N 2) 1) (+ 1 (* -1 N)))) (pow N 2)))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)))","(* -1 (/ (- (* -1 (/ (+ 1 (/ 1 N)) N)) 1) N))","(/.f64 (-.f64 (/.f64 (-.f64 (/.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) N) #s(literal -1 binary64)) N)","(* -1 (/ (- (* -1 (/ (+ 1 (+ (/ 1 N) (/ 1 (pow N 2)))) N)) 1) N))","(/.f64 (-.f64 #s(literal 1 binary64) (/.f64 (-.f64 #s(literal -1 binary64) (/.f64 (-.f64 (/.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) N)) N)) N)","(atan2 1 (+ 1 (/ (* N (- 1 (* -1 (pow N 3)))) (+ 1 (+ (* -1 N) (pow N 2))))))","(atan2.f64 #s(literal 1 binary64) (+.f64 (/.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) N) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64)))","(* -1 (* N (- 1 (/ 1 N))))","(-.f64 #s(literal 1 binary64) N)","(* -1 (* N (- (/ 1 N) 1)))","(-.f64 N #s(literal 1 binary64))","(* -1 (/ (- (* -1 (/ (- 1 (/ 1 (pow N 2))) N)) 1) N))","(/.f64 (fma.f64 (/.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64))) (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64)) N)","(* -1 (/ (- (* -1 (/ (+ 1 (* -1 (/ (+ 1 (/ 1 N)) (pow N 2)))) N)) 1) N))","(/.f64 (*.f64 (-.f64 (/.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (/.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64))))) N)"]],"stop":[["iter limit",1],["node limit",1]],"time":198.423828125,"type":"simplify"},{"count":[[21,1576]],"egraph":[[0,9376,126,0.077195287],[2,2014,127,0.026236483],[1,250,127,0.006413262],[0,59,135,0.00186895],[0,31,181,0.00034868]],"inputs":[["(/.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)))","(atan2.f64 #s(literal 1 binary64) (/.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64))))","(pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64))","(fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))","(atan2.f64 #s(literal 1 binary64) #s(approx (+ (* (+ 1 N) N) 1) #s(literal 1 binary64)))","#s(approx (+ (* (+ 1 N) N) 1) #s(literal 1 binary64))","(fma.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (/.f64 N (-.f64 #s(literal 1 binary64) N)) #s(literal 1 binary64))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (/.f64 N (-.f64 #s(literal 1 binary64) N)) #s(literal 1 binary64)))","(-.f64 #s(literal 1 binary64) (*.f64 N N))","(*.f64 N N)","(fma.f64 (fma.f64 N N #s(literal -1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (fma.f64 N N #s(literal -1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N)))","(fma.f64 N N #s(literal -1 binary64))","(pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))","(fma.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64)))","(+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))","(pow.f64 N #s(literal 3 binary64))","(-.f64 #s(literal 1 binary64) N)","(-.f64 N #s(literal 1 binary64))","(/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))"]],"memory":[[3418896,79960992]],"outputs":[["(*.f64 (pow.f64 (pow.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64)) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (pow.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64)) (pow.f64 (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 N N N)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (sqrt.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64)) (pow.f64 (sqrt.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64)))","(*.f64 (pow.f64 (-.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)) (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)) (pow.f64 (pow.f64 (-.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 N N)) #s(literal -1 binary64)) #s(literal 1 binary64)))","(*.f64 (pow.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64)) (pow.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64)))","(*.f64 (pow.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 3 binary64))) #s(literal 1 binary64)) (pow.f64 (pow.f64 (+.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 (fma.f64 N N N) N)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64))) #s(literal -1 binary64)) #s(literal 1 binary64)))","(*.f64 (pow.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64)) (pow.f64 (pow.f64 (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 N N N)) #s(literal -1 binary64)) #s(literal 1 binary64)))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (pow.f64 (/.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1/2 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (sqrt.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))","(*.f64 (-.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)) (pow.f64 N #s(literal 4 binary64))) (pow.f64 (-.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 N N)) #s(literal -1 binary64)))","(*.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64)))","(*.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 3 binary64))) (pow.f64 (+.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 (fma.f64 N N N) N)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64))) #s(literal -1 binary64)))","(*.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64)) (pow.f64 (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 N N N)) #s(literal -1 binary64)))","(*.f64 #s(literal -1 binary64) (pow.f64 (/.f64 #s(literal -1 binary64) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))) #s(literal 1 binary64)))","(*.f64 #s(literal -1 binary64) (/.f64 #s(literal -1 binary64) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))))","(*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1 binary64))","(*.f64 #s(literal 1 binary64) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))","(pow.f64 (*.f64 (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N)))) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))) #s(literal -1/2 binary64))","(pow.f64 (/.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64))","(pow.f64 (/.f64 (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 N N N)) (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64))","(pow.f64 (/.f64 (-.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 N N)) (-.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)) (pow.f64 N #s(literal 4 binary64)))) #s(literal -1 binary64))","(pow.f64 (/.f64 (+.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 (fma.f64 N N N) N)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64))) (+.f64 (pow.f64 N #s(literal 6 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 3 binary64)))) #s(literal -1 binary64))","(pow.f64 (neg.f64 (/.f64 #s(literal -1 binary64) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))) #s(literal -1 binary64))","(pow.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 2 binary64)) #s(literal 1/2 binary64))","(pow.f64 (sqrt.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 2 binary64))","(pow.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1/2 binary64)) #s(literal -2 binary64))","(pow.f64 (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N)))) #s(literal -1 binary64))","(pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1 binary64))","(/.f64 (neg.f64 (sqrt.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))) (neg.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1/2 binary64))))","(/.f64 (neg.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)))) (neg.f64 (-.f64 (*.f64 N N) (+.f64 N #s(literal 1 binary64)))))","(/.f64 (neg.f64 (neg.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)))) (neg.f64 (neg.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)))))","(/.f64 (neg.f64 (neg.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64)))) (neg.f64 (neg.f64 (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 N N N)))))","(/.f64 (neg.f64 (neg.f64 (-.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)) (pow.f64 N #s(literal 4 binary64))))) (neg.f64 (neg.f64 (-.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 N N)))))","(/.f64 (neg.f64 (neg.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 3 binary64))))) (neg.f64 (neg.f64 (+.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 (fma.f64 N N N) N)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64))))))","(/.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) (neg.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N))))","(/.f64 (-.f64 (*.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 1 binary64))) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))))","(/.f64 (-.f64 (*.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)) (-.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 N N))) (*.f64 (-.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 N N)) (pow.f64 N #s(literal 4 binary64)))) (*.f64 (-.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 N N)) (-.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 N N))))","(/.f64 (exp.f64 (log.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)))) (exp.f64 (log.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)))))","(/.f64 (exp.f64 (log1p.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)))) (exp.f64 (log.f64 (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 N N N)))))","(/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (-.f64 #s(literal 1 binary64) (fma.f64 N N N)))","(/.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64))) (-.f64 (*.f64 N N) (+.f64 N #s(literal 1 binary64))))","(/.f64 (neg.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64))) (neg.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))))","(/.f64 (neg.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64))) (neg.f64 (+.f64 #s(literal 1 binary64) (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (fma.f64 N N N)))))","(/.f64 (neg.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64))) (neg.f64 (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 N N N))))","(/.f64 (neg.f64 (-.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)) (pow.f64 N #s(literal 4 binary64)))) (neg.f64 (-.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 N N))))","(/.f64 (neg.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 3 binary64)))) (neg.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) (-.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)) (*.f64 (fma.f64 N N N) N)))))","(/.f64 (neg.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 3 binary64)))) (neg.f64 (+.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 (fma.f64 N N N) N)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)))))","(/.f64 (sqrt.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1/2 binary64)))","(/.f64 (-.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)) (pow.f64 N #s(literal 4 binary64))) (-.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 N N)))","(/.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)))","(/.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 3 binary64))) (+.f64 (pow.f64 N #s(literal 4 binary64)) (-.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)) (*.f64 (fma.f64 N N N) N))))","(/.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 3 binary64))) (+.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 (fma.f64 N N N) N)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64))))","(/.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64)) (+.f64 #s(literal 1 binary64) (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (fma.f64 N N N))))","(/.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64)) (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 N N N)))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)))))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 N N N)) (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64)))))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (-.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 N N)) (-.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)) (pow.f64 N #s(literal 4 binary64))))))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (+.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 (fma.f64 N N N) N)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64))) (+.f64 (pow.f64 N #s(literal 6 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 3 binary64))))))","(/.f64 #s(literal -1 binary64) (neg.f64 (neg.f64 (/.f64 #s(literal -1 binary64) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))))","(/.f64 #s(literal -1 binary64) (/.f64 #s(literal -1 binary64) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))","(/.f64 #s(literal 1 binary64) (/.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64))))","(/.f64 #s(literal 1 binary64) (/.f64 (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 N N N)) (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64))))","(/.f64 #s(literal 1 binary64) (/.f64 (-.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 N N)) (-.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)) (pow.f64 N #s(literal 4 binary64)))))","(/.f64 #s(literal 1 binary64) (/.f64 (+.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 (fma.f64 N N N) N)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64))) (+.f64 (pow.f64 N #s(literal 6 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 3 binary64)))))","(/.f64 #s(literal 1 binary64) (neg.f64 (/.f64 #s(literal -1 binary64) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))))","(/.f64 #s(literal 1 binary64) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N)))))","(neg.f64 (/.f64 #s(literal -1 binary64) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))))","(fma.f64 (/.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64))) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (pow.f64 (+.f64 (fma.f64 N N #s(literal 1 binary64)) (pow.f64 N #s(literal 4 binary64))) #s(literal -1 binary64))) N)","(fma.f64 (/.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64))) (-.f64 N #s(literal 1 binary64)) N)","(fma.f64 (/.f64 (fma.f64 N N #s(literal 1 binary64)) (+.f64 N #s(literal 1 binary64))) (+.f64 N #s(literal 1 binary64)) N)","(fma.f64 (/.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (+.f64 (pow.f64 N #s(literal 3/2 binary64)) #s(literal 1 binary64))) (/.f64 (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (-.f64 (pow.f64 N #s(literal 3/2 binary64)) #s(literal 1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) N) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (fma.f64 N N #s(literal -1 binary64)))) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64))","(fma.f64 (/.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) N) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64))","(fma.f64 (/.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) N) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) #s(literal 1 binary64))","(fma.f64 (/.f64 (neg.f64 N) #s(literal -1 binary64)) (+.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (/.f64 (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (+.f64 (pow.f64 N #s(literal 3/2 binary64)) #s(literal 1 binary64))) (/.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 3/2 binary64)) #s(literal 1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) (/.f64 (neg.f64 N) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal -1 binary64)) (/.f64 (neg.f64 N) (-.f64 #s(literal 1 binary64) N)) #s(literal 1 binary64))","(fma.f64 (/.f64 N (/.f64 (fma.f64 N N #s(literal -1 binary64)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 N (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) N)) #s(literal 1 binary64))","(fma.f64 (/.f64 N (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))) #s(literal 1 binary64))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (fma.f64 N N #s(literal -1 binary64)))) (/.f64 N (-.f64 N #s(literal 1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (/.f64 N (-.f64 #s(literal 1 binary64) N)) #s(literal 1 binary64))","(fma.f64 (/.f64 N (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (fma.f64 N N #s(literal -1 binary64)))) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 N #s(literal 1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 N (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (-.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 2 binary64)) #s(literal 1 binary64))) (/.f64 N (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 3 binary64)) #s(literal 1 binary64))) (/.f64 N (pow.f64 (-.f64 (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 2 binary64)) #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) N)) #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (/.f64 (pow.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) (pow.f64 N #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 (+.f64 (pow.f64 N #s(literal 9 binary64)) #s(literal 1 binary64)) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (/.f64 (pow.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (pow.f64 N #s(literal 3 binary64))) #s(literal -1 binary64)) (pow.f64 N #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64))) (-.f64 #s(literal 1 binary64) N)) (/.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (pow.f64 N #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64))) (-.f64 #s(literal 1 binary64) N)) (/.f64 (pow.f64 (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)) #s(literal -1 binary64)) (pow.f64 N #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 #s(literal 1 binary64) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (+.f64 N #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (/.f64 #s(literal 1 binary64) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 #s(literal 1 binary64) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) N)) (*.f64 N N))","(fma.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N))","(fma.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) (*.f64 N N))","(fma.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (/.f64 N (-.f64 #s(literal 1 binary64) N)) #s(literal 1 binary64))","(fma.f64 (/.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (/.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (-.f64 N #s(literal 1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (/.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (/.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) N)) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (/.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (/.f64 (pow.f64 (+.f64 (fma.f64 N N #s(literal 1 binary64)) (pow.f64 N #s(literal 4 binary64))) #s(literal -1 binary64)) (-.f64 N #s(literal 1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (/.f64 (pow.f64 (+.f64 (fma.f64 N N #s(literal 1 binary64)) (pow.f64 N #s(literal 4 binary64))) #s(literal -1 binary64)) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (/.f64 (pow.f64 (+.f64 (fma.f64 N N #s(literal 1 binary64)) (pow.f64 N #s(literal 4 binary64))) #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) N)) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (/.f64 (pow.f64 (+.f64 (fma.f64 N N #s(literal 1 binary64)) (pow.f64 N #s(literal 4 binary64))) #s(literal -1 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (/.f64 (+.f64 N #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (/.f64 (+.f64 N #s(literal 1 binary64)) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (/.f64 (+.f64 N #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) N)) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (/.f64 (+.f64 N #s(literal 1 binary64)) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))) (*.f64 N N))","(fma.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (/.f64 (-.f64 N #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (/.f64 (-.f64 N #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) N)) (*.f64 N N))","(fma.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (/.f64 (-.f64 N #s(literal 1 binary64)) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (-.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 2 binary64)) #s(literal 1 binary64))) (/.f64 (pow.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 3 binary64)) #s(literal 1 binary64))) (/.f64 (pow.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) (pow.f64 (-.f64 (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 2 binary64)) #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) N)) #s(literal -1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (+.f64 (pow.f64 N #s(literal 9 binary64)) #s(literal 1 binary64)) (-.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 2 binary64)) #s(literal 1 binary64))) (/.f64 (pow.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (pow.f64 N #s(literal 3 binary64))) #s(literal -1 binary64)) (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (+.f64 (pow.f64 N #s(literal 9 binary64)) #s(literal 1 binary64)) (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 3 binary64)) #s(literal 1 binary64))) (/.f64 (pow.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (pow.f64 N #s(literal 3 binary64))) #s(literal -1 binary64)) (pow.f64 (-.f64 (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 2 binary64)) #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) N)) #s(literal -1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64))) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (fma.f64 N N #s(literal -1 binary64)))) (/.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (-.f64 N #s(literal 1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64))) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (/.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64))) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (/.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) N)) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64))) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64)))) (/.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64))) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (fma.f64 N N #s(literal -1 binary64)))) (/.f64 (pow.f64 (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)) #s(literal -1 binary64)) (-.f64 N #s(literal 1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64))) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (/.f64 (pow.f64 (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)) #s(literal -1 binary64)) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64))) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (/.f64 (pow.f64 (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)) #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) N)) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64))) (-.f64 #s(literal 1 binary64) (*.f64 N N))) (/.f64 (pow.f64 (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)) #s(literal -1 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (/.f64 N (-.f64 N #s(literal 1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N))","(fma.f64 (/.f64 N (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (+.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (/.f64 N (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (+.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) N) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64)))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (/.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) N) (-.f64 #s(literal 1 binary64) (*.f64 N N))) (/.f64 #s(literal 1 binary64) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) N) (-.f64 #s(literal 1 binary64) (*.f64 N N))) (+.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (*.f64 N N))","(fma.f64 (*.f64 (+.f64 N #s(literal 1 binary64)) (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)))) (/.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (*.f64 (+.f64 N #s(literal 1 binary64)) (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)))) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 1 binary64))","(fma.f64 (/.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) N) (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 3 binary64)) #s(literal 1 binary64))) (/.f64 #s(literal 1 binary64) (pow.f64 (-.f64 (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 2 binary64)) #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) N)) #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) N) (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 3 binary64)) #s(literal 1 binary64))) (-.f64 (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 2 binary64)) #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) N)) #s(literal 1 binary64))","(fma.f64 (/.f64 N (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64)))) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))) #s(literal 1 binary64))","(fma.f64 (/.f64 N (-.f64 #s(literal 1 binary64) (*.f64 N N))) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 N (-.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 2 binary64)) #s(literal 1 binary64))) (/.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 N (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 3 binary64)) #s(literal 1 binary64))) (/.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (pow.f64 (-.f64 (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 2 binary64)) #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) N)) #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (/.f64 N (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))) #s(literal 1 binary64))","(fma.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64)))) (/.f64 N (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))) #s(literal 1 binary64))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64)))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (*.f64 N N))) (/.f64 N (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (*.f64 N N))) (+.f64 N #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (/.f64 N (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (/.f64 #s(literal 1 binary64) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (+.f64 N #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (+.f64 N #s(literal 1 binary64))) (-.f64 N #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1/2 binary64))) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1/2 binary64)) (*.f64 N N))","(fma.f64 (/.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64))) N)","(fma.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (/.f64 (+.f64 N #s(literal 1 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (/.f64 (-.f64 N #s(literal 1 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (*.f64 N N))","(fma.f64 (pow.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))) (*.f64 N N))","(fma.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) N) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) #s(literal 1 binary64))","(fma.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) N) (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1/2 binary64)) (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1/2 binary64)) (fma.f64 N N #s(literal -1 binary64))) (*.f64 N N))","(fma.f64 (fma.f64 N N #s(literal 1 binary64)) (/.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (*.f64 N N))","(fma.f64 (fma.f64 N N #s(literal -1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N))","(fma.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (pow.f64 N #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)) (/.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (pow.f64 N #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (neg.f64 N) (neg.f64 N) (+.f64 N #s(literal 1 binary64)))","(fma.f64 (fma.f64 N N N) #s(literal 1 binary64) #s(literal 1 binary64))","(fma.f64 (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (*.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (/.f64 (pow.f64 (+.f64 (fma.f64 N N #s(literal 1 binary64)) (pow.f64 N #s(literal 4 binary64))) #s(literal -1 binary64)) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))) (*.f64 N N))","(fma.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (/.f64 (pow.f64 (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)) #s(literal -1 binary64)) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))) (*.f64 N N))","(fma.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (*.f64 (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N))","(fma.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64))","(fma.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)) (*.f64 N N))","(fma.f64 (/.f64 N (-.f64 #s(literal 1 binary64) N)) (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (/.f64 N (-.f64 #s(literal 1 binary64) N)) (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal 1 binary64))","(fma.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (*.f64 (/.f64 N (-.f64 #s(literal 1 binary64) N)) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) (*.f64 N N))","(fma.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (/.f64 N (-.f64 #s(literal 1 binary64) N)) #s(literal 1 binary64))","(fma.f64 (*.f64 N N) #s(literal 1 binary64) (+.f64 N #s(literal 1 binary64)))","(fma.f64 (+.f64 N #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) (pow.f64 N #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (+.f64 N #s(literal 1 binary64)) (/.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (*.f64 N N))","(fma.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (*.f64 N N))","(fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))","(fma.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 1 binary64) (*.f64 N N))","(fma.f64 N (*.f64 (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) #s(literal 1 binary64))","(fma.f64 N (*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N))) #s(literal 1 binary64))","(fma.f64 N (+.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 N N (+.f64 N #s(literal 1 binary64)))","(fma.f64 #s(literal 1 binary64) (fma.f64 N N N) #s(literal 1 binary64))","(fma.f64 #s(literal 1 binary64) (*.f64 N N) (+.f64 N #s(literal 1 binary64)))","(-.f64 (/.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) (fma.f64 N N N))) (/.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (-.f64 #s(literal 1 binary64) (fma.f64 N N N))))","(-.f64 (/.f64 (pow.f64 N #s(literal 4 binary64)) (-.f64 (*.f64 N N) (+.f64 N #s(literal 1 binary64)))) (/.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)) (-.f64 (*.f64 N N) (+.f64 N #s(literal 1 binary64)))))","(-.f64 (/.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64)))","(-.f64 (/.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)) (-.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 N N))) (/.f64 (pow.f64 N #s(literal 4 binary64)) (-.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 N N))))","(exp.f64 (log1p.f64 (fma.f64 N N N)))","(+.f64 (fma.f64 N N #s(literal 1 binary64)) N)","(+.f64 (fma.f64 N N N) #s(literal 1 binary64))","(+.f64 (*.f64 N N) (+.f64 N #s(literal 1 binary64)))","(+.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 N N))","(+.f64 #s(literal 1 binary64) (fma.f64 N N N))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))","(*.f64 (pow.f64 (sqrt.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal -1 binary64)) (pow.f64 (sqrt.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal -1 binary64)))","(*.f64 (pow.f64 (-.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)) (pow.f64 N #s(literal 4 binary64))) #s(literal -1 binary64)) (pow.f64 (pow.f64 (-.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 N N)) #s(literal -1 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 3 binary64))) #s(literal -1 binary64)) (pow.f64 (pow.f64 (+.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 (fma.f64 N N N) N)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64))) #s(literal -1 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) (pow.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)))","(*.f64 (pow.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) (pow.f64 (pow.f64 (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 N N N)) #s(literal -1 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 N N N)))","(*.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1/2 binary64)) (/.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1/2 binary64)) #s(literal 1 binary64)))","(*.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1/2 binary64)) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1/2 binary64)))","(*.f64 (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N)))) #s(literal 1 binary64))","(*.f64 #s(literal -1 binary64) (pow.f64 (/.f64 #s(literal -1 binary64) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))) #s(literal -1 binary64)))","(*.f64 #s(literal 1 binary64) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N)))))","(pow.f64 (exp.f64 #s(literal -1 binary64)) (log1p.f64 (fma.f64 N N N)))","(pow.f64 (/.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64))","(pow.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 2 binary64)) #s(literal -1/2 binary64))","(pow.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1/2 binary64)) #s(literal 2 binary64))","(pow.f64 (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N)))) #s(literal 1 binary64))","(pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64))","(/.f64 (neg.f64 (/.f64 #s(literal -1 binary64) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))) #s(literal 1 binary64))","(/.f64 (/.f64 #s(literal -1 binary64) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal -1 binary64))","(/.f64 (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N)))) #s(literal 1 binary64))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1 binary64))))","(/.f64 #s(literal -1 binary64) (neg.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))","(/.f64 #s(literal 1 binary64) (neg.f64 (neg.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))))","(/.f64 #s(literal 1 binary64) (/.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1 binary64)))","(/.f64 #s(literal 1 binary64) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))","(-.f64 #s(literal 0 binary64) (/.f64 (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N)))) #s(literal -1 binary64)))","(exp.f64 (fma.f64 (log1p.f64 (fma.f64 N N N)) #s(literal -1/2 binary64) (*.f64 (log1p.f64 (fma.f64 N N N)) #s(literal -1/2 binary64))))","(exp.f64 (*.f64 (*.f64 (log1p.f64 (fma.f64 N N N)) #s(literal -1/2 binary64)) #s(literal 2 binary64)))","(exp.f64 (*.f64 (log.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 2 binary64))) #s(literal -1/2 binary64)))","(exp.f64 (*.f64 (log.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1/2 binary64))) #s(literal 2 binary64)))","(exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))","(*.f64 (pow.f64 (pow.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64)) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (pow.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64)) (pow.f64 (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 N N N)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (sqrt.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64)) (pow.f64 (sqrt.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64)))","(*.f64 (pow.f64 (-.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)) (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)) (pow.f64 (pow.f64 (-.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 N N)) #s(literal -1 binary64)) #s(literal 1 binary64)))","(*.f64 (pow.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64)) (pow.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64)))","(*.f64 (pow.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 3 binary64))) #s(literal 1 binary64)) (pow.f64 (pow.f64 (+.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 (fma.f64 N N N) N)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64))) #s(literal -1 binary64)) #s(literal 1 binary64)))","(*.f64 (pow.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64)) (pow.f64 (pow.f64 (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 N N N)) #s(literal -1 binary64)) #s(literal 1 binary64)))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (pow.f64 (/.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1/2 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (sqrt.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))","(*.f64 (-.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)) (pow.f64 N #s(literal 4 binary64))) (pow.f64 (-.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 N N)) #s(literal -1 binary64)))","(*.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64)))","(*.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 3 binary64))) (pow.f64 (+.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 (fma.f64 N N N) N)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64))) #s(literal -1 binary64)))","(*.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64)) (pow.f64 (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 N N N)) #s(literal -1 binary64)))","(*.f64 #s(literal -1 binary64) (pow.f64 (/.f64 #s(literal -1 binary64) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))) #s(literal 1 binary64)))","(*.f64 #s(literal -1 binary64) (/.f64 #s(literal -1 binary64) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))))","(*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1 binary64))","(*.f64 #s(literal 1 binary64) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))","(pow.f64 (*.f64 (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N)))) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))) #s(literal -1/2 binary64))","(pow.f64 (/.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64))","(pow.f64 (/.f64 (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 N N N)) (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64))","(pow.f64 (/.f64 (-.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 N N)) (-.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)) (pow.f64 N #s(literal 4 binary64)))) #s(literal -1 binary64))","(pow.f64 (/.f64 (+.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 (fma.f64 N N N) N)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64))) (+.f64 (pow.f64 N #s(literal 6 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 3 binary64)))) #s(literal -1 binary64))","(pow.f64 (neg.f64 (/.f64 #s(literal -1 binary64) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))) #s(literal -1 binary64))","(pow.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 2 binary64)) #s(literal 1/2 binary64))","(pow.f64 (sqrt.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 2 binary64))","(pow.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1/2 binary64)) #s(literal -2 binary64))","(pow.f64 (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N)))) #s(literal -1 binary64))","(pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1 binary64))","(/.f64 (neg.f64 (sqrt.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))) (neg.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1/2 binary64))))","(/.f64 (neg.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)))) (neg.f64 (-.f64 (*.f64 N N) (+.f64 N #s(literal 1 binary64)))))","(/.f64 (neg.f64 (neg.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)))) (neg.f64 (neg.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)))))","(/.f64 (neg.f64 (neg.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64)))) (neg.f64 (neg.f64 (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 N N N)))))","(/.f64 (neg.f64 (neg.f64 (-.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)) (pow.f64 N #s(literal 4 binary64))))) (neg.f64 (neg.f64 (-.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 N N)))))","(/.f64 (neg.f64 (neg.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 3 binary64))))) (neg.f64 (neg.f64 (+.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 (fma.f64 N N N) N)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64))))))","(/.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) (neg.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N))))","(/.f64 (-.f64 (*.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 1 binary64))) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))))","(/.f64 (-.f64 (*.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)) (-.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 N N))) (*.f64 (-.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 N N)) (pow.f64 N #s(literal 4 binary64)))) (*.f64 (-.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 N N)) (-.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 N N))))","(/.f64 (exp.f64 (log.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)))) (exp.f64 (log.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)))))","(/.f64 (exp.f64 (log1p.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)))) (exp.f64 (log.f64 (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 N N N)))))","(/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (-.f64 #s(literal 1 binary64) (fma.f64 N N N)))","(/.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64))) (-.f64 (*.f64 N N) (+.f64 N #s(literal 1 binary64))))","(/.f64 (neg.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64))) (neg.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))))","(/.f64 (neg.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64))) (neg.f64 (+.f64 #s(literal 1 binary64) (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (fma.f64 N N N)))))","(/.f64 (neg.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64))) (neg.f64 (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 N N N))))","(/.f64 (neg.f64 (-.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)) (pow.f64 N #s(literal 4 binary64)))) (neg.f64 (-.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 N N))))","(/.f64 (neg.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 3 binary64)))) (neg.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) (-.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)) (*.f64 (fma.f64 N N N) N)))))","(/.f64 (neg.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 3 binary64)))) (neg.f64 (+.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 (fma.f64 N N N) N)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)))))","(/.f64 (sqrt.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1/2 binary64)))","(/.f64 (-.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)) (pow.f64 N #s(literal 4 binary64))) (-.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 N N)))","(/.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)))","(/.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 3 binary64))) (+.f64 (pow.f64 N #s(literal 4 binary64)) (-.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)) (*.f64 (fma.f64 N N N) N))))","(/.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 3 binary64))) (+.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 (fma.f64 N N N) N)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64))))","(/.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64)) (+.f64 #s(literal 1 binary64) (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (fma.f64 N N N))))","(/.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64)) (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 N N N)))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)))))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 N N N)) (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64)))))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (-.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 N N)) (-.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)) (pow.f64 N #s(literal 4 binary64))))))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (+.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 (fma.f64 N N N) N)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64))) (+.f64 (pow.f64 N #s(literal 6 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 3 binary64))))))","(/.f64 #s(literal -1 binary64) (neg.f64 (neg.f64 (/.f64 #s(literal -1 binary64) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))))","(/.f64 #s(literal -1 binary64) (/.f64 #s(literal -1 binary64) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))","(/.f64 #s(literal 1 binary64) (/.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64))))","(/.f64 #s(literal 1 binary64) (/.f64 (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 N N N)) (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64))))","(/.f64 #s(literal 1 binary64) (/.f64 (-.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 N N)) (-.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)) (pow.f64 N #s(literal 4 binary64)))))","(/.f64 #s(literal 1 binary64) (/.f64 (+.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 (fma.f64 N N N) N)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64))) (+.f64 (pow.f64 N #s(literal 6 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 3 binary64)))))","(/.f64 #s(literal 1 binary64) (neg.f64 (/.f64 #s(literal -1 binary64) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))))","(/.f64 #s(literal 1 binary64) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N)))))","(neg.f64 (/.f64 #s(literal -1 binary64) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))))","(fma.f64 (/.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64))) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (pow.f64 (+.f64 (fma.f64 N N #s(literal 1 binary64)) (pow.f64 N #s(literal 4 binary64))) #s(literal -1 binary64))) N)","(fma.f64 (/.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64))) (-.f64 N #s(literal 1 binary64)) N)","(fma.f64 (/.f64 (fma.f64 N N #s(literal 1 binary64)) (+.f64 N #s(literal 1 binary64))) (+.f64 N #s(literal 1 binary64)) N)","(fma.f64 (/.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (+.f64 (pow.f64 N #s(literal 3/2 binary64)) #s(literal 1 binary64))) (/.f64 (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (-.f64 (pow.f64 N #s(literal 3/2 binary64)) #s(literal 1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) N) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (fma.f64 N N #s(literal -1 binary64)))) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64))","(fma.f64 (/.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) N) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64))","(fma.f64 (/.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) N) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) #s(literal 1 binary64))","(fma.f64 (/.f64 (neg.f64 N) #s(literal -1 binary64)) (+.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (/.f64 (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (+.f64 (pow.f64 N #s(literal 3/2 binary64)) #s(literal 1 binary64))) (/.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 3/2 binary64)) #s(literal 1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) (/.f64 (neg.f64 N) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal -1 binary64)) (/.f64 (neg.f64 N) (-.f64 #s(literal 1 binary64) N)) #s(literal 1 binary64))","(fma.f64 (/.f64 N (/.f64 (fma.f64 N N #s(literal -1 binary64)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 N (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) N)) #s(literal 1 binary64))","(fma.f64 (/.f64 N (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))) #s(literal 1 binary64))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (fma.f64 N N #s(literal -1 binary64)))) (/.f64 N (-.f64 N #s(literal 1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (/.f64 N (-.f64 #s(literal 1 binary64) N)) #s(literal 1 binary64))","(fma.f64 (/.f64 N (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (fma.f64 N N #s(literal -1 binary64)))) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 N #s(literal 1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 N (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (-.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 2 binary64)) #s(literal 1 binary64))) (/.f64 N (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 3 binary64)) #s(literal 1 binary64))) (/.f64 N (pow.f64 (-.f64 (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 2 binary64)) #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) N)) #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (/.f64 (pow.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) (pow.f64 N #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 (+.f64 (pow.f64 N #s(literal 9 binary64)) #s(literal 1 binary64)) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (/.f64 (pow.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (pow.f64 N #s(literal 3 binary64))) #s(literal -1 binary64)) (pow.f64 N #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64))) (-.f64 #s(literal 1 binary64) N)) (/.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (pow.f64 N #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64))) (-.f64 #s(literal 1 binary64) N)) (/.f64 (pow.f64 (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)) #s(literal -1 binary64)) (pow.f64 N #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 #s(literal 1 binary64) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (+.f64 N #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (/.f64 #s(literal 1 binary64) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 #s(literal 1 binary64) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) N)) (*.f64 N N))","(fma.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N))","(fma.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) (*.f64 N N))","(fma.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (/.f64 N (-.f64 #s(literal 1 binary64) N)) #s(literal 1 binary64))","(fma.f64 (/.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (/.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (-.f64 N #s(literal 1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (/.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (/.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) N)) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (/.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (/.f64 (pow.f64 (+.f64 (fma.f64 N N #s(literal 1 binary64)) (pow.f64 N #s(literal 4 binary64))) #s(literal -1 binary64)) (-.f64 N #s(literal 1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (/.f64 (pow.f64 (+.f64 (fma.f64 N N #s(literal 1 binary64)) (pow.f64 N #s(literal 4 binary64))) #s(literal -1 binary64)) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (/.f64 (pow.f64 (+.f64 (fma.f64 N N #s(literal 1 binary64)) (pow.f64 N #s(literal 4 binary64))) #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) N)) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (/.f64 (pow.f64 (+.f64 (fma.f64 N N #s(literal 1 binary64)) (pow.f64 N #s(literal 4 binary64))) #s(literal -1 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (/.f64 (+.f64 N #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (/.f64 (+.f64 N #s(literal 1 binary64)) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (/.f64 (+.f64 N #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) N)) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (/.f64 (+.f64 N #s(literal 1 binary64)) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))) (*.f64 N N))","(fma.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (/.f64 (-.f64 N #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (/.f64 (-.f64 N #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) N)) (*.f64 N N))","(fma.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (/.f64 (-.f64 N #s(literal 1 binary64)) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (-.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 2 binary64)) #s(literal 1 binary64))) (/.f64 (pow.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 3 binary64)) #s(literal 1 binary64))) (/.f64 (pow.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) (pow.f64 (-.f64 (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 2 binary64)) #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) N)) #s(literal -1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (+.f64 (pow.f64 N #s(literal 9 binary64)) #s(literal 1 binary64)) (-.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 2 binary64)) #s(literal 1 binary64))) (/.f64 (pow.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (pow.f64 N #s(literal 3 binary64))) #s(literal -1 binary64)) (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (+.f64 (pow.f64 N #s(literal 9 binary64)) #s(literal 1 binary64)) (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 3 binary64)) #s(literal 1 binary64))) (/.f64 (pow.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (pow.f64 N #s(literal 3 binary64))) #s(literal -1 binary64)) (pow.f64 (-.f64 (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 2 binary64)) #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) N)) #s(literal -1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64))) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (fma.f64 N N #s(literal -1 binary64)))) (/.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (-.f64 N #s(literal 1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64))) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (/.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64))) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (/.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) N)) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64))) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64)))) (/.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64))) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (fma.f64 N N #s(literal -1 binary64)))) (/.f64 (pow.f64 (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)) #s(literal -1 binary64)) (-.f64 N #s(literal 1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64))) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (/.f64 (pow.f64 (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)) #s(literal -1 binary64)) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64))) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (/.f64 (pow.f64 (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)) #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) N)) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64))) (-.f64 #s(literal 1 binary64) (*.f64 N N))) (/.f64 (pow.f64 (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)) #s(literal -1 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (/.f64 N (-.f64 N #s(literal 1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N))","(fma.f64 (/.f64 N (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (+.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (/.f64 N (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (+.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) N) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64)))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (/.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) N) (-.f64 #s(literal 1 binary64) (*.f64 N N))) (/.f64 #s(literal 1 binary64) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) N) (-.f64 #s(literal 1 binary64) (*.f64 N N))) (+.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (*.f64 N N))","(fma.f64 (*.f64 (+.f64 N #s(literal 1 binary64)) (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)))) (/.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (*.f64 (+.f64 N #s(literal 1 binary64)) (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)))) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 1 binary64))","(fma.f64 (/.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) N) (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 3 binary64)) #s(literal 1 binary64))) (/.f64 #s(literal 1 binary64) (pow.f64 (-.f64 (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 2 binary64)) #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) N)) #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) N) (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 3 binary64)) #s(literal 1 binary64))) (-.f64 (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 2 binary64)) #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) N)) #s(literal 1 binary64))","(fma.f64 (/.f64 N (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64)))) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))) #s(literal 1 binary64))","(fma.f64 (/.f64 N (-.f64 #s(literal 1 binary64) (*.f64 N N))) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 N (-.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 2 binary64)) #s(literal 1 binary64))) (/.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 N (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 3 binary64)) #s(literal 1 binary64))) (/.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (pow.f64 (-.f64 (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 2 binary64)) #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) N)) #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (/.f64 N (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))) #s(literal 1 binary64))","(fma.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64)))) (/.f64 N (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))) #s(literal 1 binary64))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64)))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (*.f64 N N))) (/.f64 N (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (*.f64 N N))) (+.f64 N #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (/.f64 N (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (/.f64 #s(literal 1 binary64) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (+.f64 N #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (+.f64 N #s(literal 1 binary64))) (-.f64 N #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1/2 binary64))) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1/2 binary64)) (*.f64 N N))","(fma.f64 (/.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64))) N)","(fma.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (/.f64 (+.f64 N #s(literal 1 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (/.f64 (-.f64 N #s(literal 1 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (*.f64 N N))","(fma.f64 (pow.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))) (*.f64 N N))","(fma.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) N) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) #s(literal 1 binary64))","(fma.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) N) (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1/2 binary64)) (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1/2 binary64)) (fma.f64 N N #s(literal -1 binary64))) (*.f64 N N))","(fma.f64 (fma.f64 N N #s(literal 1 binary64)) (/.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (*.f64 N N))","(fma.f64 (fma.f64 N N #s(literal -1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N))","(fma.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (pow.f64 N #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)) (/.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (pow.f64 N #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (neg.f64 N) (neg.f64 N) (+.f64 N #s(literal 1 binary64)))","(fma.f64 (fma.f64 N N N) #s(literal 1 binary64) #s(literal 1 binary64))","(fma.f64 (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (*.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (/.f64 (pow.f64 (+.f64 (fma.f64 N N #s(literal 1 binary64)) (pow.f64 N #s(literal 4 binary64))) #s(literal -1 binary64)) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))) (*.f64 N N))","(fma.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (/.f64 (pow.f64 (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)) #s(literal -1 binary64)) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))) (*.f64 N N))","(fma.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (*.f64 (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N))","(fma.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64))","(fma.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)) (*.f64 N N))","(fma.f64 (/.f64 N (-.f64 #s(literal 1 binary64) N)) (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (/.f64 N (-.f64 #s(literal 1 binary64) N)) (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal 1 binary64))","(fma.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (*.f64 (/.f64 N (-.f64 #s(literal 1 binary64) N)) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) (*.f64 N N))","(fma.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (/.f64 N (-.f64 #s(literal 1 binary64) N)) #s(literal 1 binary64))","(fma.f64 (*.f64 N N) #s(literal 1 binary64) (+.f64 N #s(literal 1 binary64)))","(fma.f64 (+.f64 N #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) (pow.f64 N #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (+.f64 N #s(literal 1 binary64)) (/.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (*.f64 N N))","(fma.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (*.f64 N N))","(fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))","(fma.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 1 binary64) (*.f64 N N))","(fma.f64 N (*.f64 (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) #s(literal 1 binary64))","(fma.f64 N (*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N))) #s(literal 1 binary64))","(fma.f64 N (+.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 N N (+.f64 N #s(literal 1 binary64)))","(fma.f64 #s(literal 1 binary64) (fma.f64 N N N) #s(literal 1 binary64))","(fma.f64 #s(literal 1 binary64) (*.f64 N N) (+.f64 N #s(literal 1 binary64)))","(-.f64 (/.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) (fma.f64 N N N))) (/.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (-.f64 #s(literal 1 binary64) (fma.f64 N N N))))","(-.f64 (/.f64 (pow.f64 N #s(literal 4 binary64)) (-.f64 (*.f64 N N) (+.f64 N #s(literal 1 binary64)))) (/.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)) (-.f64 (*.f64 N N) (+.f64 N #s(literal 1 binary64)))))","(-.f64 (/.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64)))","(-.f64 (/.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)) (-.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 N N))) (/.f64 (pow.f64 N #s(literal 4 binary64)) (-.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 N N))))","(exp.f64 (log1p.f64 (fma.f64 N N N)))","(+.f64 (fma.f64 N N #s(literal 1 binary64)) N)","(+.f64 (fma.f64 N N N) #s(literal 1 binary64))","(+.f64 (*.f64 N N) (+.f64 N #s(literal 1 binary64)))","(+.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 N N))","(+.f64 #s(literal 1 binary64) (fma.f64 N N N))","(atan2.f64 #s(literal 1 binary64) #s(approx (+ (* (+ 1 N) N) 1) #s(literal 1 binary64)))","#s(approx (+ (* (+ 1 N) N) 1) #s(literal 1 binary64))","(*.f64 (pow.f64 (pow.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64)) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (pow.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64)) (pow.f64 (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 N N N)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (sqrt.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64)) (pow.f64 (sqrt.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64)))","(*.f64 (pow.f64 (-.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)) (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)) (pow.f64 (pow.f64 (-.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 N N)) #s(literal -1 binary64)) #s(literal 1 binary64)))","(*.f64 (pow.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64)) (pow.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64)))","(*.f64 (pow.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 3 binary64))) #s(literal 1 binary64)) (pow.f64 (pow.f64 (+.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 (fma.f64 N N N) N)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64))) #s(literal -1 binary64)) #s(literal 1 binary64)))","(*.f64 (pow.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64)) (pow.f64 (pow.f64 (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 N N N)) #s(literal -1 binary64)) #s(literal 1 binary64)))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (pow.f64 (/.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1/2 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (sqrt.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))","(*.f64 (-.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)) (pow.f64 N #s(literal 4 binary64))) (pow.f64 (-.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 N N)) #s(literal -1 binary64)))","(*.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64)))","(*.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 3 binary64))) (pow.f64 (+.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 (fma.f64 N N N) N)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64))) #s(literal -1 binary64)))","(*.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64)) (pow.f64 (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 N N N)) #s(literal -1 binary64)))","(*.f64 #s(literal -1 binary64) (pow.f64 (/.f64 #s(literal -1 binary64) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))) #s(literal 1 binary64)))","(*.f64 #s(literal -1 binary64) (/.f64 #s(literal -1 binary64) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))))","(*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1 binary64))","(*.f64 #s(literal 1 binary64) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))","(pow.f64 (*.f64 (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N)))) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))) #s(literal -1/2 binary64))","(pow.f64 (/.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64))","(pow.f64 (/.f64 (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 N N N)) (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64))","(pow.f64 (/.f64 (-.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 N N)) (-.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)) (pow.f64 N #s(literal 4 binary64)))) #s(literal -1 binary64))","(pow.f64 (/.f64 (+.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 (fma.f64 N N N) N)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64))) (+.f64 (pow.f64 N #s(literal 6 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 3 binary64)))) #s(literal -1 binary64))","(pow.f64 (neg.f64 (/.f64 #s(literal -1 binary64) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))) #s(literal -1 binary64))","(pow.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 2 binary64)) #s(literal 1/2 binary64))","(pow.f64 (sqrt.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 2 binary64))","(pow.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1/2 binary64)) #s(literal -2 binary64))","(pow.f64 (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N)))) #s(literal -1 binary64))","(pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1 binary64))","(/.f64 (neg.f64 (sqrt.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))) (neg.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1/2 binary64))))","(/.f64 (neg.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)))) (neg.f64 (-.f64 (*.f64 N N) (+.f64 N #s(literal 1 binary64)))))","(/.f64 (neg.f64 (neg.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)))) (neg.f64 (neg.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)))))","(/.f64 (neg.f64 (neg.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64)))) (neg.f64 (neg.f64 (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 N N N)))))","(/.f64 (neg.f64 (neg.f64 (-.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)) (pow.f64 N #s(literal 4 binary64))))) (neg.f64 (neg.f64 (-.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 N N)))))","(/.f64 (neg.f64 (neg.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 3 binary64))))) (neg.f64 (neg.f64 (+.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 (fma.f64 N N N) N)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64))))))","(/.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) (neg.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N))))","(/.f64 (-.f64 (*.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 1 binary64))) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))))","(/.f64 (-.f64 (*.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)) (-.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 N N))) (*.f64 (-.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 N N)) (pow.f64 N #s(literal 4 binary64)))) (*.f64 (-.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 N N)) (-.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 N N))))","(/.f64 (exp.f64 (log.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)))) (exp.f64 (log.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)))))","(/.f64 (exp.f64 (log1p.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)))) (exp.f64 (log.f64 (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 N N N)))))","(/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (-.f64 #s(literal 1 binary64) (fma.f64 N N N)))","(/.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64))) (-.f64 (*.f64 N N) (+.f64 N #s(literal 1 binary64))))","(/.f64 (neg.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64))) (neg.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))))","(/.f64 (neg.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64))) (neg.f64 (+.f64 #s(literal 1 binary64) (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (fma.f64 N N N)))))","(/.f64 (neg.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64))) (neg.f64 (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 N N N))))","(/.f64 (neg.f64 (-.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)) (pow.f64 N #s(literal 4 binary64)))) (neg.f64 (-.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 N N))))","(/.f64 (neg.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 3 binary64)))) (neg.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) (-.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)) (*.f64 (fma.f64 N N N) N)))))","(/.f64 (neg.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 3 binary64)))) (neg.f64 (+.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 (fma.f64 N N N) N)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)))))","(/.f64 (sqrt.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1/2 binary64)))","(/.f64 (-.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)) (pow.f64 N #s(literal 4 binary64))) (-.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 N N)))","(/.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)))","(/.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 3 binary64))) (+.f64 (pow.f64 N #s(literal 4 binary64)) (-.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)) (*.f64 (fma.f64 N N N) N))))","(/.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 3 binary64))) (+.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 (fma.f64 N N N) N)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64))))","(/.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64)) (+.f64 #s(literal 1 binary64) (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (fma.f64 N N N))))","(/.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64)) (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 N N N)))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)))))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 N N N)) (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64)))))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (-.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 N N)) (-.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)) (pow.f64 N #s(literal 4 binary64))))))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (+.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 (fma.f64 N N N) N)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64))) (+.f64 (pow.f64 N #s(literal 6 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 3 binary64))))))","(/.f64 #s(literal -1 binary64) (neg.f64 (neg.f64 (/.f64 #s(literal -1 binary64) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))))","(/.f64 #s(literal -1 binary64) (/.f64 #s(literal -1 binary64) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))","(/.f64 #s(literal 1 binary64) (/.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64))))","(/.f64 #s(literal 1 binary64) (/.f64 (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 N N N)) (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64))))","(/.f64 #s(literal 1 binary64) (/.f64 (-.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 N N)) (-.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)) (pow.f64 N #s(literal 4 binary64)))))","(/.f64 #s(literal 1 binary64) (/.f64 (+.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 (fma.f64 N N N) N)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64))) (+.f64 (pow.f64 N #s(literal 6 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 3 binary64)))))","(/.f64 #s(literal 1 binary64) (neg.f64 (/.f64 #s(literal -1 binary64) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))))","(/.f64 #s(literal 1 binary64) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N)))))","(neg.f64 (/.f64 #s(literal -1 binary64) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))))","(fma.f64 (/.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64))) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (pow.f64 (+.f64 (fma.f64 N N #s(literal 1 binary64)) (pow.f64 N #s(literal 4 binary64))) #s(literal -1 binary64))) N)","(fma.f64 (/.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64))) (-.f64 N #s(literal 1 binary64)) N)","(fma.f64 (/.f64 (fma.f64 N N #s(literal 1 binary64)) (+.f64 N #s(literal 1 binary64))) (+.f64 N #s(literal 1 binary64)) N)","(fma.f64 (/.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (+.f64 (pow.f64 N #s(literal 3/2 binary64)) #s(literal 1 binary64))) (/.f64 (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (-.f64 (pow.f64 N #s(literal 3/2 binary64)) #s(literal 1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) N) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (fma.f64 N N #s(literal -1 binary64)))) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64))","(fma.f64 (/.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) N) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64))","(fma.f64 (/.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) N) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) #s(literal 1 binary64))","(fma.f64 (/.f64 (neg.f64 N) #s(literal -1 binary64)) (+.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (/.f64 (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (+.f64 (pow.f64 N #s(literal 3/2 binary64)) #s(literal 1 binary64))) (/.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 3/2 binary64)) #s(literal 1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) (/.f64 (neg.f64 N) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal -1 binary64)) (/.f64 (neg.f64 N) (-.f64 #s(literal 1 binary64) N)) #s(literal 1 binary64))","(fma.f64 (/.f64 N (/.f64 (fma.f64 N N #s(literal -1 binary64)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 N (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) N)) #s(literal 1 binary64))","(fma.f64 (/.f64 N (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))) #s(literal 1 binary64))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (fma.f64 N N #s(literal -1 binary64)))) (/.f64 N (-.f64 N #s(literal 1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (/.f64 N (-.f64 #s(literal 1 binary64) N)) #s(literal 1 binary64))","(fma.f64 (/.f64 N (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (fma.f64 N N #s(literal -1 binary64)))) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 N #s(literal 1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 N (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (-.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 2 binary64)) #s(literal 1 binary64))) (/.f64 N (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 3 binary64)) #s(literal 1 binary64))) (/.f64 N (pow.f64 (-.f64 (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 2 binary64)) #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) N)) #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (/.f64 (pow.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) (pow.f64 N #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 (+.f64 (pow.f64 N #s(literal 9 binary64)) #s(literal 1 binary64)) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (/.f64 (pow.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (pow.f64 N #s(literal 3 binary64))) #s(literal -1 binary64)) (pow.f64 N #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64))) (-.f64 #s(literal 1 binary64) N)) (/.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (pow.f64 N #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64))) (-.f64 #s(literal 1 binary64) N)) (/.f64 (pow.f64 (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)) #s(literal -1 binary64)) (pow.f64 N #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 #s(literal 1 binary64) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (+.f64 N #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (/.f64 #s(literal 1 binary64) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 #s(literal 1 binary64) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) N)) (*.f64 N N))","(fma.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N))","(fma.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) (*.f64 N N))","(fma.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (/.f64 N (-.f64 #s(literal 1 binary64) N)) #s(literal 1 binary64))","(fma.f64 (/.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (/.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (-.f64 N #s(literal 1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (/.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (/.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) N)) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (/.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (/.f64 (pow.f64 (+.f64 (fma.f64 N N #s(literal 1 binary64)) (pow.f64 N #s(literal 4 binary64))) #s(literal -1 binary64)) (-.f64 N #s(literal 1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (/.f64 (pow.f64 (+.f64 (fma.f64 N N #s(literal 1 binary64)) (pow.f64 N #s(literal 4 binary64))) #s(literal -1 binary64)) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (/.f64 (pow.f64 (+.f64 (fma.f64 N N #s(literal 1 binary64)) (pow.f64 N #s(literal 4 binary64))) #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) N)) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (/.f64 (pow.f64 (+.f64 (fma.f64 N N #s(literal 1 binary64)) (pow.f64 N #s(literal 4 binary64))) #s(literal -1 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (/.f64 (+.f64 N #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (/.f64 (+.f64 N #s(literal 1 binary64)) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (/.f64 (+.f64 N #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) N)) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (/.f64 (+.f64 N #s(literal 1 binary64)) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))) (*.f64 N N))","(fma.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (/.f64 (-.f64 N #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (/.f64 (-.f64 N #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) N)) (*.f64 N N))","(fma.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (/.f64 (-.f64 N #s(literal 1 binary64)) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (-.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 2 binary64)) #s(literal 1 binary64))) (/.f64 (pow.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 3 binary64)) #s(literal 1 binary64))) (/.f64 (pow.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) (pow.f64 (-.f64 (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 2 binary64)) #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) N)) #s(literal -1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (+.f64 (pow.f64 N #s(literal 9 binary64)) #s(literal 1 binary64)) (-.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 2 binary64)) #s(literal 1 binary64))) (/.f64 (pow.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (pow.f64 N #s(literal 3 binary64))) #s(literal -1 binary64)) (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (+.f64 (pow.f64 N #s(literal 9 binary64)) #s(literal 1 binary64)) (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 3 binary64)) #s(literal 1 binary64))) (/.f64 (pow.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (pow.f64 N #s(literal 3 binary64))) #s(literal -1 binary64)) (pow.f64 (-.f64 (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 2 binary64)) #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) N)) #s(literal -1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64))) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (fma.f64 N N #s(literal -1 binary64)))) (/.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (-.f64 N #s(literal 1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64))) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (/.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64))) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (/.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) N)) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64))) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64)))) (/.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64))) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (fma.f64 N N #s(literal -1 binary64)))) (/.f64 (pow.f64 (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)) #s(literal -1 binary64)) (-.f64 N #s(literal 1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64))) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (/.f64 (pow.f64 (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)) #s(literal -1 binary64)) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64))) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (/.f64 (pow.f64 (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)) #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) N)) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64))) (-.f64 #s(literal 1 binary64) (*.f64 N N))) (/.f64 (pow.f64 (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)) #s(literal -1 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (/.f64 N (-.f64 N #s(literal 1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N))","(fma.f64 (/.f64 N (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (+.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (/.f64 N (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (+.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) N) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64)))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (/.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) N) (-.f64 #s(literal 1 binary64) (*.f64 N N))) (/.f64 #s(literal 1 binary64) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) N) (-.f64 #s(literal 1 binary64) (*.f64 N N))) (+.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (*.f64 N N))","(fma.f64 (*.f64 (+.f64 N #s(literal 1 binary64)) (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)))) (/.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (*.f64 (+.f64 N #s(literal 1 binary64)) (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)))) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 1 binary64))","(fma.f64 (/.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) N) (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 3 binary64)) #s(literal 1 binary64))) (/.f64 #s(literal 1 binary64) (pow.f64 (-.f64 (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 2 binary64)) #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) N)) #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) N) (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 3 binary64)) #s(literal 1 binary64))) (-.f64 (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 2 binary64)) #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) N)) #s(literal 1 binary64))","(fma.f64 (/.f64 N (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64)))) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))) #s(literal 1 binary64))","(fma.f64 (/.f64 N (-.f64 #s(literal 1 binary64) (*.f64 N N))) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 N (-.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 2 binary64)) #s(literal 1 binary64))) (/.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 N (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 3 binary64)) #s(literal 1 binary64))) (/.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (pow.f64 (-.f64 (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 2 binary64)) #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) N)) #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (/.f64 N (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))) #s(literal 1 binary64))","(fma.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64)))) (/.f64 N (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))) #s(literal 1 binary64))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64)))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (*.f64 N N))) (/.f64 N (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (*.f64 N N))) (+.f64 N #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (/.f64 N (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (/.f64 #s(literal 1 binary64) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (+.f64 N #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (+.f64 N #s(literal 1 binary64))) (-.f64 N #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1/2 binary64))) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1/2 binary64)) (*.f64 N N))","(fma.f64 (/.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64))) N)","(fma.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (/.f64 (+.f64 N #s(literal 1 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (/.f64 (-.f64 N #s(literal 1 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (*.f64 N N))","(fma.f64 (pow.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))) (*.f64 N N))","(fma.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) N) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) #s(literal 1 binary64))","(fma.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) N) (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1/2 binary64)) (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1/2 binary64)) (fma.f64 N N #s(literal -1 binary64))) (*.f64 N N))","(fma.f64 (fma.f64 N N #s(literal 1 binary64)) (/.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (*.f64 N N))","(fma.f64 (fma.f64 N N #s(literal -1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N))","(fma.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (pow.f64 N #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)) (/.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (pow.f64 N #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (neg.f64 N) (neg.f64 N) (+.f64 N #s(literal 1 binary64)))","(fma.f64 (fma.f64 N N N) #s(literal 1 binary64) #s(literal 1 binary64))","(fma.f64 (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (*.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (/.f64 (pow.f64 (+.f64 (fma.f64 N N #s(literal 1 binary64)) (pow.f64 N #s(literal 4 binary64))) #s(literal -1 binary64)) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))) (*.f64 N N))","(fma.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (/.f64 (pow.f64 (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)) #s(literal -1 binary64)) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))) (*.f64 N N))","(fma.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (*.f64 (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N))","(fma.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64))","(fma.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)) (*.f64 N N))","(fma.f64 (/.f64 N (-.f64 #s(literal 1 binary64) N)) (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (/.f64 N (-.f64 #s(literal 1 binary64) N)) (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal 1 binary64))","(fma.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (*.f64 (/.f64 N (-.f64 #s(literal 1 binary64) N)) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) (*.f64 N N))","(fma.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (/.f64 N (-.f64 #s(literal 1 binary64) N)) #s(literal 1 binary64))","(fma.f64 (*.f64 N N) #s(literal 1 binary64) (+.f64 N #s(literal 1 binary64)))","(fma.f64 (+.f64 N #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) (pow.f64 N #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (+.f64 N #s(literal 1 binary64)) (/.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (*.f64 N N))","(fma.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (*.f64 N N))","(fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))","(fma.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 1 binary64) (*.f64 N N))","(fma.f64 N (*.f64 (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) #s(literal 1 binary64))","(fma.f64 N (*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N))) #s(literal 1 binary64))","(fma.f64 N (+.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 N N (+.f64 N #s(literal 1 binary64)))","(fma.f64 #s(literal 1 binary64) (fma.f64 N N N) #s(literal 1 binary64))","(fma.f64 #s(literal 1 binary64) (*.f64 N N) (+.f64 N #s(literal 1 binary64)))","(-.f64 (/.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) (fma.f64 N N N))) (/.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (-.f64 #s(literal 1 binary64) (fma.f64 N N N))))","(-.f64 (/.f64 (pow.f64 N #s(literal 4 binary64)) (-.f64 (*.f64 N N) (+.f64 N #s(literal 1 binary64)))) (/.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)) (-.f64 (*.f64 N N) (+.f64 N #s(literal 1 binary64)))))","(-.f64 (/.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64)))","(-.f64 (/.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)) (-.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 N N))) (/.f64 (pow.f64 N #s(literal 4 binary64)) (-.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 N N))))","(exp.f64 (log1p.f64 (fma.f64 N N N)))","(+.f64 (fma.f64 N N #s(literal 1 binary64)) N)","(+.f64 (fma.f64 N N N) #s(literal 1 binary64))","(+.f64 (*.f64 N N) (+.f64 N #s(literal 1 binary64)))","(+.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 N N))","(+.f64 #s(literal 1 binary64) (fma.f64 N N N))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))","(*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64))) (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)))","(*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64))) (pow.f64 (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)) #s(literal -1 binary64)))","(pow.f64 (/.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64)))) #s(literal -1 binary64))","(pow.f64 (/.f64 (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64)))) #s(literal -1 binary64))","(/.f64 (neg.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64))))) (neg.f64 (neg.f64 (fma.f64 N N #s(literal 1 binary64)))))","(/.f64 (neg.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64))))) (neg.f64 (neg.f64 (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)))))","(/.f64 (-.f64 (*.f64 #s(literal 1 binary64) (fma.f64 N N #s(literal 1 binary64))) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (pow.f64 N #s(literal 4 binary64)))) (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64)))","(/.f64 (-.f64 (*.f64 #s(literal 1 binary64) (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64))) (*.f64 (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)) (pow.f64 N #s(literal 6 binary64)))) (*.f64 (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)) (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64))))","(/.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64)))) (neg.f64 (fma.f64 N N #s(literal 1 binary64))))","(/.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64)))) (neg.f64 (+.f64 #s(literal 1 binary64) (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 #s(literal 1 binary64) (*.f64 (neg.f64 N) N))))))","(/.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64)))) (neg.f64 (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64))))","(/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64))) (fma.f64 N N #s(literal 1 binary64)))","(/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64))) (+.f64 #s(literal 1 binary64) (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 #s(literal 1 binary64) (*.f64 (neg.f64 N) N)))))","(/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64))) (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64))))))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64))))))","(/.f64 #s(literal 1 binary64) (/.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64)))))","(/.f64 #s(literal 1 binary64) (/.f64 (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64)))))","(fma.f64 (neg.f64 N) N #s(literal 1 binary64))","(fma.f64 (*.f64 N N) #s(literal -1 binary64) #s(literal 1 binary64))","(fma.f64 #s(literal -1 binary64) (*.f64 N N) #s(literal 1 binary64))","(fma.f64 N (*.f64 N #s(literal -1 binary64)) #s(literal 1 binary64))","(fma.f64 N (neg.f64 N) #s(literal 1 binary64))","(-.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (/.f64 (pow.f64 N #s(literal 4 binary64)) (fma.f64 N N #s(literal 1 binary64))))","(-.f64 (pow.f64 (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)) #s(literal -1 binary64)) (/.f64 (pow.f64 N #s(literal 6 binary64)) (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64))))","(-.f64 #s(literal 1 binary64) (*.f64 N N))","(+.f64 (*.f64 (neg.f64 N) N) #s(literal 1 binary64))","(+.f64 #s(literal 1 binary64) (*.f64 (neg.f64 N) N))","(*.f64 (neg.f64 N) (neg.f64 N))","(*.f64 (*.f64 N N) #s(literal 1 binary64))","(*.f64 N N)","(*.f64 #s(literal 1 binary64) (*.f64 N N))","(pow.f64 (neg.f64 N) #s(literal 2 binary64))","(pow.f64 (*.f64 N N) #s(literal 1 binary64))","(pow.f64 N #s(literal 2 binary64))","(exp.f64 (*.f64 #s(literal 2 binary64) (log.f64 N)))","(*.f64 (pow.f64 (pow.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64)) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (pow.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64)) (pow.f64 (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 N N N)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (sqrt.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64)) (pow.f64 (sqrt.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64)))","(*.f64 (pow.f64 (-.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)) (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)) (pow.f64 (pow.f64 (-.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 N N)) #s(literal -1 binary64)) #s(literal 1 binary64)))","(*.f64 (pow.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64)) (pow.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64)))","(*.f64 (pow.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 3 binary64))) #s(literal 1 binary64)) (pow.f64 (pow.f64 (+.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 (fma.f64 N N N) N)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64))) #s(literal -1 binary64)) #s(literal 1 binary64)))","(*.f64 (pow.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64)) (pow.f64 (pow.f64 (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 N N N)) #s(literal -1 binary64)) #s(literal 1 binary64)))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (pow.f64 (/.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1/2 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (sqrt.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))","(*.f64 (-.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)) (pow.f64 N #s(literal 4 binary64))) (pow.f64 (-.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 N N)) #s(literal -1 binary64)))","(*.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64)))","(*.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 3 binary64))) (pow.f64 (+.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 (fma.f64 N N N) N)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64))) #s(literal -1 binary64)))","(*.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64)) (pow.f64 (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 N N N)) #s(literal -1 binary64)))","(*.f64 #s(literal -1 binary64) (pow.f64 (/.f64 #s(literal -1 binary64) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))) #s(literal 1 binary64)))","(*.f64 #s(literal -1 binary64) (/.f64 #s(literal -1 binary64) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))))","(*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1 binary64))","(*.f64 #s(literal 1 binary64) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))","(pow.f64 (*.f64 (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N)))) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))) #s(literal -1/2 binary64))","(pow.f64 (/.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64))","(pow.f64 (/.f64 (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 N N N)) (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64))","(pow.f64 (/.f64 (-.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 N N)) (-.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)) (pow.f64 N #s(literal 4 binary64)))) #s(literal -1 binary64))","(pow.f64 (/.f64 (+.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 (fma.f64 N N N) N)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64))) (+.f64 (pow.f64 N #s(literal 6 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 3 binary64)))) #s(literal -1 binary64))","(pow.f64 (neg.f64 (/.f64 #s(literal -1 binary64) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))) #s(literal -1 binary64))","(pow.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 2 binary64)) #s(literal 1/2 binary64))","(pow.f64 (sqrt.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 2 binary64))","(pow.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1/2 binary64)) #s(literal -2 binary64))","(pow.f64 (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N)))) #s(literal -1 binary64))","(pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1 binary64))","(/.f64 (neg.f64 (sqrt.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))) (neg.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1/2 binary64))))","(/.f64 (neg.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)))) (neg.f64 (-.f64 (*.f64 N N) (+.f64 N #s(literal 1 binary64)))))","(/.f64 (neg.f64 (neg.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)))) (neg.f64 (neg.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)))))","(/.f64 (neg.f64 (neg.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64)))) (neg.f64 (neg.f64 (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 N N N)))))","(/.f64 (neg.f64 (neg.f64 (-.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)) (pow.f64 N #s(literal 4 binary64))))) (neg.f64 (neg.f64 (-.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 N N)))))","(/.f64 (neg.f64 (neg.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 3 binary64))))) (neg.f64 (neg.f64 (+.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 (fma.f64 N N N) N)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64))))))","(/.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) (neg.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N))))","(/.f64 (-.f64 (*.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 1 binary64))) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))))","(/.f64 (-.f64 (*.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)) (-.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 N N))) (*.f64 (-.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 N N)) (pow.f64 N #s(literal 4 binary64)))) (*.f64 (-.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 N N)) (-.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 N N))))","(/.f64 (exp.f64 (log.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)))) (exp.f64 (log.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)))))","(/.f64 (exp.f64 (log1p.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)))) (exp.f64 (log.f64 (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 N N N)))))","(/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (-.f64 #s(literal 1 binary64) (fma.f64 N N N)))","(/.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64))) (-.f64 (*.f64 N N) (+.f64 N #s(literal 1 binary64))))","(/.f64 (neg.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64))) (neg.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))))","(/.f64 (neg.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64))) (neg.f64 (+.f64 #s(literal 1 binary64) (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (fma.f64 N N N)))))","(/.f64 (neg.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64))) (neg.f64 (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 N N N))))","(/.f64 (neg.f64 (-.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)) (pow.f64 N #s(literal 4 binary64)))) (neg.f64 (-.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 N N))))","(/.f64 (neg.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 3 binary64)))) (neg.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) (-.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)) (*.f64 (fma.f64 N N N) N)))))","(/.f64 (neg.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 3 binary64)))) (neg.f64 (+.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 (fma.f64 N N N) N)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)))))","(/.f64 (sqrt.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1/2 binary64)))","(/.f64 (-.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)) (pow.f64 N #s(literal 4 binary64))) (-.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 N N)))","(/.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)))","(/.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 3 binary64))) (+.f64 (pow.f64 N #s(literal 4 binary64)) (-.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)) (*.f64 (fma.f64 N N N) N))))","(/.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 3 binary64))) (+.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 (fma.f64 N N N) N)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64))))","(/.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64)) (+.f64 #s(literal 1 binary64) (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (fma.f64 N N N))))","(/.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64)) (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 N N N)))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)))))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 N N N)) (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64)))))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (-.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 N N)) (-.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)) (pow.f64 N #s(literal 4 binary64))))))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (+.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 (fma.f64 N N N) N)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64))) (+.f64 (pow.f64 N #s(literal 6 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 3 binary64))))))","(/.f64 #s(literal -1 binary64) (neg.f64 (neg.f64 (/.f64 #s(literal -1 binary64) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))))","(/.f64 #s(literal -1 binary64) (/.f64 #s(literal -1 binary64) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))","(/.f64 #s(literal 1 binary64) (/.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64))))","(/.f64 #s(literal 1 binary64) (/.f64 (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 N N N)) (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64))))","(/.f64 #s(literal 1 binary64) (/.f64 (-.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 N N)) (-.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)) (pow.f64 N #s(literal 4 binary64)))))","(/.f64 #s(literal 1 binary64) (/.f64 (+.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 (fma.f64 N N N) N)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64))) (+.f64 (pow.f64 N #s(literal 6 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 3 binary64)))))","(/.f64 #s(literal 1 binary64) (neg.f64 (/.f64 #s(literal -1 binary64) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))))","(/.f64 #s(literal 1 binary64) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N)))))","(neg.f64 (/.f64 #s(literal -1 binary64) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))))","(fma.f64 (/.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64))) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (pow.f64 (+.f64 (fma.f64 N N #s(literal 1 binary64)) (pow.f64 N #s(literal 4 binary64))) #s(literal -1 binary64))) N)","(fma.f64 (/.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64))) (-.f64 N #s(literal 1 binary64)) N)","(fma.f64 (/.f64 (fma.f64 N N #s(literal 1 binary64)) (+.f64 N #s(literal 1 binary64))) (+.f64 N #s(literal 1 binary64)) N)","(fma.f64 (/.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (+.f64 (pow.f64 N #s(literal 3/2 binary64)) #s(literal 1 binary64))) (/.f64 (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (-.f64 (pow.f64 N #s(literal 3/2 binary64)) #s(literal 1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) N) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (fma.f64 N N #s(literal -1 binary64)))) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64))","(fma.f64 (/.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) N) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64))","(fma.f64 (/.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) N) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) #s(literal 1 binary64))","(fma.f64 (/.f64 (neg.f64 N) #s(literal -1 binary64)) (+.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (/.f64 (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (+.f64 (pow.f64 N #s(literal 3/2 binary64)) #s(literal 1 binary64))) (/.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 3/2 binary64)) #s(literal 1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) (/.f64 (neg.f64 N) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal -1 binary64)) (/.f64 (neg.f64 N) (-.f64 #s(literal 1 binary64) N)) #s(literal 1 binary64))","(fma.f64 (/.f64 N (/.f64 (fma.f64 N N #s(literal -1 binary64)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 N (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) N)) #s(literal 1 binary64))","(fma.f64 (/.f64 N (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))) #s(literal 1 binary64))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (fma.f64 N N #s(literal -1 binary64)))) (/.f64 N (-.f64 N #s(literal 1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (/.f64 N (-.f64 #s(literal 1 binary64) N)) #s(literal 1 binary64))","(fma.f64 (/.f64 N (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (fma.f64 N N #s(literal -1 binary64)))) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 N #s(literal 1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 N (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (-.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 2 binary64)) #s(literal 1 binary64))) (/.f64 N (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 3 binary64)) #s(literal 1 binary64))) (/.f64 N (pow.f64 (-.f64 (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 2 binary64)) #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) N)) #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (/.f64 (pow.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) (pow.f64 N #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 (+.f64 (pow.f64 N #s(literal 9 binary64)) #s(literal 1 binary64)) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (/.f64 (pow.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (pow.f64 N #s(literal 3 binary64))) #s(literal -1 binary64)) (pow.f64 N #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64))) (-.f64 #s(literal 1 binary64) N)) (/.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (pow.f64 N #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64))) (-.f64 #s(literal 1 binary64) N)) (/.f64 (pow.f64 (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)) #s(literal -1 binary64)) (pow.f64 N #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 #s(literal 1 binary64) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (+.f64 N #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (/.f64 #s(literal 1 binary64) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 #s(literal 1 binary64) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) N)) (*.f64 N N))","(fma.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N))","(fma.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) (*.f64 N N))","(fma.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (/.f64 N (-.f64 #s(literal 1 binary64) N)) #s(literal 1 binary64))","(fma.f64 (/.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (/.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (-.f64 N #s(literal 1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (/.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (/.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) N)) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (/.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (/.f64 (pow.f64 (+.f64 (fma.f64 N N #s(literal 1 binary64)) (pow.f64 N #s(literal 4 binary64))) #s(literal -1 binary64)) (-.f64 N #s(literal 1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (/.f64 (pow.f64 (+.f64 (fma.f64 N N #s(literal 1 binary64)) (pow.f64 N #s(literal 4 binary64))) #s(literal -1 binary64)) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (/.f64 (pow.f64 (+.f64 (fma.f64 N N #s(literal 1 binary64)) (pow.f64 N #s(literal 4 binary64))) #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) N)) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (/.f64 (pow.f64 (+.f64 (fma.f64 N N #s(literal 1 binary64)) (pow.f64 N #s(literal 4 binary64))) #s(literal -1 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (/.f64 (+.f64 N #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (/.f64 (+.f64 N #s(literal 1 binary64)) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (/.f64 (+.f64 N #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) N)) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (/.f64 (+.f64 N #s(literal 1 binary64)) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))) (*.f64 N N))","(fma.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (/.f64 (-.f64 N #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (/.f64 (-.f64 N #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) N)) (*.f64 N N))","(fma.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (/.f64 (-.f64 N #s(literal 1 binary64)) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (-.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 2 binary64)) #s(literal 1 binary64))) (/.f64 (pow.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 3 binary64)) #s(literal 1 binary64))) (/.f64 (pow.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) (pow.f64 (-.f64 (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 2 binary64)) #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) N)) #s(literal -1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (+.f64 (pow.f64 N #s(literal 9 binary64)) #s(literal 1 binary64)) (-.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 2 binary64)) #s(literal 1 binary64))) (/.f64 (pow.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (pow.f64 N #s(literal 3 binary64))) #s(literal -1 binary64)) (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (+.f64 (pow.f64 N #s(literal 9 binary64)) #s(literal 1 binary64)) (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 3 binary64)) #s(literal 1 binary64))) (/.f64 (pow.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (pow.f64 N #s(literal 3 binary64))) #s(literal -1 binary64)) (pow.f64 (-.f64 (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 2 binary64)) #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) N)) #s(literal -1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64))) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (fma.f64 N N #s(literal -1 binary64)))) (/.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (-.f64 N #s(literal 1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64))) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (/.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64))) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (/.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) N)) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64))) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64)))) (/.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64))) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (fma.f64 N N #s(literal -1 binary64)))) (/.f64 (pow.f64 (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)) #s(literal -1 binary64)) (-.f64 N #s(literal 1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64))) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (/.f64 (pow.f64 (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)) #s(literal -1 binary64)) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64))) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (/.f64 (pow.f64 (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)) #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) N)) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64))) (-.f64 #s(literal 1 binary64) (*.f64 N N))) (/.f64 (pow.f64 (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)) #s(literal -1 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (/.f64 N (-.f64 N #s(literal 1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N))","(fma.f64 (/.f64 N (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (+.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (/.f64 N (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (+.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) N) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64)))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (/.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) N) (-.f64 #s(literal 1 binary64) (*.f64 N N))) (/.f64 #s(literal 1 binary64) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) N) (-.f64 #s(literal 1 binary64) (*.f64 N N))) (+.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (*.f64 N N))","(fma.f64 (*.f64 (+.f64 N #s(literal 1 binary64)) (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)))) (/.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (*.f64 (+.f64 N #s(literal 1 binary64)) (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)))) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 1 binary64))","(fma.f64 (/.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) N) (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 3 binary64)) #s(literal 1 binary64))) (/.f64 #s(literal 1 binary64) (pow.f64 (-.f64 (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 2 binary64)) #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) N)) #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) N) (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 3 binary64)) #s(literal 1 binary64))) (-.f64 (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 2 binary64)) #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) N)) #s(literal 1 binary64))","(fma.f64 (/.f64 N (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64)))) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))) #s(literal 1 binary64))","(fma.f64 (/.f64 N (-.f64 #s(literal 1 binary64) (*.f64 N N))) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 N (-.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 2 binary64)) #s(literal 1 binary64))) (/.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 N (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 3 binary64)) #s(literal 1 binary64))) (/.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (pow.f64 (-.f64 (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 2 binary64)) #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) N)) #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (/.f64 N (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))) #s(literal 1 binary64))","(fma.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64)))) (/.f64 N (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))) #s(literal 1 binary64))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64)))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (*.f64 N N))) (/.f64 N (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (*.f64 N N))) (+.f64 N #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (/.f64 N (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (/.f64 #s(literal 1 binary64) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (+.f64 N #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (+.f64 N #s(literal 1 binary64))) (-.f64 N #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1/2 binary64))) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1/2 binary64)) (*.f64 N N))","(fma.f64 (/.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64))) N)","(fma.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (/.f64 (+.f64 N #s(literal 1 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (/.f64 (-.f64 N #s(literal 1 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (*.f64 N N))","(fma.f64 (pow.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))) (*.f64 N N))","(fma.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) N) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) #s(literal 1 binary64))","(fma.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) N) (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1/2 binary64)) (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1/2 binary64)) (fma.f64 N N #s(literal -1 binary64))) (*.f64 N N))","(fma.f64 (fma.f64 N N #s(literal 1 binary64)) (/.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (*.f64 N N))","(fma.f64 (fma.f64 N N #s(literal -1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N))","(fma.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (pow.f64 N #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)) (/.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (pow.f64 N #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (neg.f64 N) (neg.f64 N) (+.f64 N #s(literal 1 binary64)))","(fma.f64 (fma.f64 N N N) #s(literal 1 binary64) #s(literal 1 binary64))","(fma.f64 (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (*.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (/.f64 (pow.f64 (+.f64 (fma.f64 N N #s(literal 1 binary64)) (pow.f64 N #s(literal 4 binary64))) #s(literal -1 binary64)) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))) (*.f64 N N))","(fma.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (/.f64 (pow.f64 (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)) #s(literal -1 binary64)) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))) (*.f64 N N))","(fma.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (*.f64 (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N))","(fma.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64))","(fma.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)) (*.f64 N N))","(fma.f64 (/.f64 N (-.f64 #s(literal 1 binary64) N)) (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (/.f64 N (-.f64 #s(literal 1 binary64) N)) (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal 1 binary64))","(fma.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (*.f64 (/.f64 N (-.f64 #s(literal 1 binary64) N)) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) (*.f64 N N))","(fma.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (/.f64 N (-.f64 #s(literal 1 binary64) N)) #s(literal 1 binary64))","(fma.f64 (*.f64 N N) #s(literal 1 binary64) (+.f64 N #s(literal 1 binary64)))","(fma.f64 (+.f64 N #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) (pow.f64 N #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (+.f64 N #s(literal 1 binary64)) (/.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (*.f64 N N))","(fma.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (*.f64 N N))","(fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))","(fma.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 1 binary64) (*.f64 N N))","(fma.f64 N (*.f64 (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) #s(literal 1 binary64))","(fma.f64 N (*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N))) #s(literal 1 binary64))","(fma.f64 N (+.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 N N (+.f64 N #s(literal 1 binary64)))","(fma.f64 #s(literal 1 binary64) (fma.f64 N N N) #s(literal 1 binary64))","(fma.f64 #s(literal 1 binary64) (*.f64 N N) (+.f64 N #s(literal 1 binary64)))","(-.f64 (/.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) (fma.f64 N N N))) (/.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (-.f64 #s(literal 1 binary64) (fma.f64 N N N))))","(-.f64 (/.f64 (pow.f64 N #s(literal 4 binary64)) (-.f64 (*.f64 N N) (+.f64 N #s(literal 1 binary64)))) (/.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)) (-.f64 (*.f64 N N) (+.f64 N #s(literal 1 binary64)))))","(-.f64 (/.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64)))","(-.f64 (/.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)) (-.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 N N))) (/.f64 (pow.f64 N #s(literal 4 binary64)) (-.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 N N))))","(exp.f64 (log1p.f64 (fma.f64 N N N)))","(+.f64 (fma.f64 N N #s(literal 1 binary64)) N)","(+.f64 (fma.f64 N N N) #s(literal 1 binary64))","(+.f64 (*.f64 N N) (+.f64 N #s(literal 1 binary64)))","(+.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 N N))","(+.f64 #s(literal 1 binary64) (fma.f64 N N N))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))","(*.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))","(*.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64))))) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))","(*.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (-.f64 N #s(literal 1 binary64)))","(*.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (+.f64 N #s(literal 1 binary64)))) (+.f64 N #s(literal 1 binary64)))","(*.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1/2 binary64)))) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1/2 binary64))))","(*.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1/2 binary64))) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1/2 binary64)) (fma.f64 N N #s(literal -1 binary64)))))","(*.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64))))","(*.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))))","(*.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) (sqrt.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))) (/.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (sqrt.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))))","(*.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64))) (/.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64))))","(*.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) (+.f64 (pow.f64 N #s(literal 6 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 3 binary64)))) (/.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (pow.f64 (+.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 (fma.f64 N N N) N)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64))) #s(literal -1 binary64))))","(*.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64))) (/.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (pow.f64 (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 N N N)) #s(literal -1 binary64))))","(*.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (/.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (/.f64 #s(literal -1 binary64) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N)))))))","(*.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (/.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64)))","(*.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64)))","(*.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64))))","(*.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64))) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (pow.f64 (+.f64 (fma.f64 N N #s(literal 1 binary64)) (pow.f64 N #s(literal 4 binary64))) #s(literal -1 binary64))))","(*.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) (+.f64 N #s(literal 1 binary64))) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))))","(*.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) (+.f64 N #s(literal 1 binary64))) (/.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64)))","(*.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (fma.f64 N N #s(literal -1 binary64)))) (/.f64 (-.f64 N #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64))))","(*.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))","(*.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (/.f64 (-.f64 N #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) N)))","(*.f64 (/.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (-.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 2 binary64)) #s(literal 1 binary64))) (/.f64 (-.f64 N #s(literal 1 binary64)) (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64))))","(*.f64 (/.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 3 binary64)) #s(literal 1 binary64))) (/.f64 (-.f64 N #s(literal 1 binary64)) (pow.f64 (-.f64 (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 2 binary64)) #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) N)) #s(literal -1 binary64))))","(*.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))","(*.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (/.f64 (-.f64 N #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) N)))","(*.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (-.f64 N #s(literal 1 binary64)))","(*.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (/.f64 (-.f64 N #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64))))","(*.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) (-.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)) (pow.f64 N #s(literal 4 binary64)))) (/.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (pow.f64 (-.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 N N)) #s(literal -1 binary64))))","(*.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (/.f64 (-.f64 N #s(literal 1 binary64)) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))))","(*.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64)))) (/.f64 (-.f64 N #s(literal 1 binary64)) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))))","(*.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (*.f64 N N))) (/.f64 (-.f64 N #s(literal 1 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))))","(*.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (/.f64 (-.f64 N #s(literal 1 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))))","(*.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N))) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64))))","(*.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))))","(*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)))","(*.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (pow.f64 (+.f64 (fma.f64 N N #s(literal 1 binary64)) (pow.f64 N #s(literal 4 binary64))) #s(literal -1 binary64)))","(*.f64 (-.f64 N #s(literal 1 binary64)) (+.f64 N #s(literal 1 binary64)))","(*.f64 (+.f64 N #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64)))","(pow.f64 (/.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64))","(pow.f64 (/.f64 (+.f64 (fma.f64 N N #s(literal 1 binary64)) (pow.f64 N #s(literal 4 binary64))) (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64))","(/.f64 (neg.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 N #s(literal 1 binary64)))) (neg.f64 (-.f64 N #s(literal 1 binary64))))","(/.f64 (neg.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64)))) (neg.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))","(/.f64 (neg.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 N #s(literal 1 binary64)))) (neg.f64 (-.f64 #s(literal 1 binary64) N)))","(/.f64 (neg.f64 (*.f64 (+.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (neg.f64 (+.f64 N #s(literal 1 binary64))))","(/.f64 (neg.f64 (*.f64 (+.f64 N #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (neg.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))","(/.f64 (neg.f64 (neg.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)))) (neg.f64 (neg.f64 (fma.f64 N N #s(literal 1 binary64)))))","(/.f64 (neg.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 2 binary64))) (neg.f64 (fma.f64 N N #s(literal -1 binary64))))","(/.f64 (neg.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (neg.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))))","(/.f64 (neg.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (neg.f64 (*.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (+.f64 N #s(literal 1 binary64)))))","(/.f64 (neg.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (fma.f64 N N #s(literal -1 binary64)))) (neg.f64 (*.f64 (-.f64 #s(literal 1 binary64) N) (+.f64 N #s(literal 1 binary64)))))","(/.f64 (neg.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (neg.f64 (*.f64 (-.f64 #s(literal 1 binary64) N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))))","(/.f64 (neg.f64 (neg.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)))) (neg.f64 (neg.f64 (+.f64 (fma.f64 N N #s(literal 1 binary64)) (pow.f64 N #s(literal 4 binary64))))))","(/.f64 (-.f64 (*.f64 (pow.f64 N #s(literal 4 binary64)) (fma.f64 N N #s(literal 1 binary64))) (*.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 1 binary64))) (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64)))","(/.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 N #s(literal 1 binary64))) (-.f64 N #s(literal 1 binary64)))","(/.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64))) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))","(/.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 N #s(literal 1 binary64))) (-.f64 #s(literal 1 binary64) N))","(/.f64 (*.f64 (+.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (+.f64 N #s(literal 1 binary64)))","(/.f64 (*.f64 (+.f64 N #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))","(/.f64 (neg.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) (neg.f64 (fma.f64 N N #s(literal 1 binary64))))","(/.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64)))) (neg.f64 (-.f64 #s(literal -1 binary64) (*.f64 N N))))","(/.f64 (neg.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64))) (neg.f64 (+.f64 #s(literal 1 binary64) (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 (neg.f64 N) N)))))","(/.f64 (neg.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64))) (neg.f64 (*.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))))","(/.f64 (neg.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64))) (neg.f64 (+.f64 (fma.f64 N N #s(literal 1 binary64)) (pow.f64 N #s(literal 4 binary64)))))","(/.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 2 binary64)) (fma.f64 N N #s(literal -1 binary64)))","(/.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))","(/.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (*.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (+.f64 N #s(literal 1 binary64))))","(/.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (fma.f64 N N #s(literal -1 binary64))) (*.f64 (-.f64 #s(literal 1 binary64) N) (+.f64 N #s(literal 1 binary64))))","(/.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (*.f64 (-.f64 #s(literal 1 binary64) N) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))","(/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64))) (-.f64 #s(literal -1 binary64) (*.f64 N N)))","(/.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64)))","(/.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (+.f64 #s(literal 1 binary64) (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 (neg.f64 N) N))))","(/.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (*.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))","(/.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (+.f64 (fma.f64 N N #s(literal 1 binary64)) (pow.f64 N #s(literal 4 binary64))))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)))))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (+.f64 (fma.f64 N N #s(literal 1 binary64)) (pow.f64 N #s(literal 4 binary64))) (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)))))","(/.f64 #s(literal 1 binary64) (/.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))))","(/.f64 #s(literal 1 binary64) (/.f64 (+.f64 (fma.f64 N N #s(literal 1 binary64)) (pow.f64 N #s(literal 4 binary64))) (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64))))","(fma.f64 (/.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (+.f64 (pow.f64 N #s(literal 3/2 binary64)) #s(literal 1 binary64))) (/.f64 (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (-.f64 (pow.f64 N #s(literal 3/2 binary64)) #s(literal 1 binary64))) (*.f64 #s(literal -1 binary64) (+.f64 N #s(literal 1 binary64))))","(fma.f64 (/.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (+.f64 (pow.f64 N #s(literal 3/2 binary64)) #s(literal 1 binary64))) (/.f64 (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (-.f64 (pow.f64 N #s(literal 3/2 binary64)) #s(literal 1 binary64))) (*.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(fma.f64 (/.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) N) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (fma.f64 N N #s(literal -1 binary64)))) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 #s(literal -1 binary64) (+.f64 N #s(literal 1 binary64))))","(fma.f64 (/.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) N) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (fma.f64 N N #s(literal -1 binary64)))) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(fma.f64 (/.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) N) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 #s(literal -1 binary64) (+.f64 N #s(literal 1 binary64))))","(fma.f64 (/.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) N) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(fma.f64 (/.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) N) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) (*.f64 #s(literal -1 binary64) (+.f64 N #s(literal 1 binary64))))","(fma.f64 (/.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) N) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) (*.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(fma.f64 (/.f64 (neg.f64 N) #s(literal -1 binary64)) (+.f64 N #s(literal 1 binary64)) (*.f64 #s(literal -1 binary64) (+.f64 N #s(literal 1 binary64))))","(fma.f64 (/.f64 (neg.f64 N) #s(literal -1 binary64)) (+.f64 N #s(literal 1 binary64)) (*.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(fma.f64 (/.f64 (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (+.f64 (pow.f64 N #s(literal 3/2 binary64)) #s(literal 1 binary64))) (/.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 3/2 binary64)) #s(literal 1 binary64))) (*.f64 #s(literal -1 binary64) (+.f64 N #s(literal 1 binary64))))","(fma.f64 (/.f64 (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (+.f64 (pow.f64 N #s(literal 3/2 binary64)) #s(literal 1 binary64))) (/.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 3/2 binary64)) #s(literal 1 binary64))) (*.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(fma.f64 (/.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) (/.f64 (neg.f64 N) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (*.f64 #s(literal -1 binary64) (+.f64 N #s(literal 1 binary64))))","(fma.f64 (/.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) (/.f64 (neg.f64 N) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (*.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal -1 binary64)) (/.f64 (neg.f64 N) (-.f64 #s(literal 1 binary64) N)) (*.f64 #s(literal -1 binary64) (+.f64 N #s(literal 1 binary64))))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal -1 binary64)) (/.f64 (neg.f64 N) (-.f64 #s(literal 1 binary64) N)) (*.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(fma.f64 (/.f64 N (/.f64 (fma.f64 N N #s(literal -1 binary64)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (*.f64 #s(literal -1 binary64) (+.f64 N #s(literal 1 binary64))))","(fma.f64 (/.f64 N (/.f64 (fma.f64 N N #s(literal -1 binary64)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (*.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(fma.f64 (/.f64 N (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) N)) (*.f64 #s(literal -1 binary64) (+.f64 N #s(literal 1 binary64))))","(fma.f64 (/.f64 N (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) N)) (*.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(fma.f64 (/.f64 N (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))) (*.f64 #s(literal -1 binary64) (+.f64 N #s(literal 1 binary64))))","(fma.f64 (/.f64 N (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))) (*.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (fma.f64 N N #s(literal -1 binary64)))) (/.f64 N (-.f64 N #s(literal 1 binary64))) (*.f64 #s(literal -1 binary64) (+.f64 N #s(literal 1 binary64))))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (fma.f64 N N #s(literal -1 binary64)))) (/.f64 N (-.f64 N #s(literal 1 binary64))) (*.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (*.f64 #s(literal -1 binary64) (+.f64 N #s(literal 1 binary64))))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (*.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (/.f64 N (-.f64 #s(literal 1 binary64) N)) (*.f64 #s(literal -1 binary64) (+.f64 N #s(literal 1 binary64))))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (/.f64 N (-.f64 #s(literal 1 binary64) N)) (*.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(fma.f64 (/.f64 N (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (fma.f64 N N #s(literal -1 binary64)))) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 N #s(literal 1 binary64))) (*.f64 #s(literal -1 binary64) (+.f64 N #s(literal 1 binary64))))","(fma.f64 (/.f64 N (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (fma.f64 N N #s(literal -1 binary64)))) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 N #s(literal 1 binary64))) (*.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(fma.f64 (/.f64 N (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (*.f64 #s(literal -1 binary64) (+.f64 N #s(literal 1 binary64))))","(fma.f64 (/.f64 N (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (*.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(fma.f64 (/.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (-.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 2 binary64)) #s(literal 1 binary64))) (/.f64 N (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64))) (*.f64 #s(literal -1 binary64) (+.f64 N #s(literal 1 binary64))))","(fma.f64 (/.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (-.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 2 binary64)) #s(literal 1 binary64))) (/.f64 N (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64))) (*.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(fma.f64 (/.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 3 binary64)) #s(literal 1 binary64))) (/.f64 N (pow.f64 (-.f64 (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 2 binary64)) #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) N)) #s(literal -1 binary64))) (*.f64 #s(literal -1 binary64) (+.f64 N #s(literal 1 binary64))))","(fma.f64 (/.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 3 binary64)) #s(literal 1 binary64))) (/.f64 N (pow.f64 (-.f64 (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 2 binary64)) #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) N)) #s(literal -1 binary64))) (*.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(fma.f64 (/.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (/.f64 (pow.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) (pow.f64 N #s(literal -1 binary64))) (*.f64 #s(literal -1 binary64) (+.f64 N #s(literal 1 binary64))))","(fma.f64 (/.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (/.f64 (pow.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) (pow.f64 N #s(literal -1 binary64))) (*.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(fma.f64 (/.f64 (+.f64 (pow.f64 N #s(literal 9 binary64)) #s(literal 1 binary64)) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (/.f64 (pow.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (pow.f64 N #s(literal 3 binary64))) #s(literal -1 binary64)) (pow.f64 N #s(literal -1 binary64))) (*.f64 #s(literal -1 binary64) (+.f64 N #s(literal 1 binary64))))","(fma.f64 (/.f64 (+.f64 (pow.f64 N #s(literal 9 binary64)) #s(literal 1 binary64)) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (/.f64 (pow.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (pow.f64 N #s(literal 3 binary64))) #s(literal -1 binary64)) (pow.f64 N #s(literal -1 binary64))) (*.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64))) (-.f64 #s(literal 1 binary64) N)) (/.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (pow.f64 N #s(literal -1 binary64))) (*.f64 #s(literal -1 binary64) (+.f64 N #s(literal 1 binary64))))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64))) (-.f64 #s(literal 1 binary64) N)) (/.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (pow.f64 N #s(literal -1 binary64))) (*.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64))) (-.f64 #s(literal 1 binary64) N)) (/.f64 (pow.f64 (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)) #s(literal -1 binary64)) (pow.f64 N #s(literal -1 binary64))) (*.f64 #s(literal -1 binary64) (+.f64 N #s(literal 1 binary64))))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64))) (-.f64 #s(literal 1 binary64) N)) (/.f64 (pow.f64 (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)) #s(literal -1 binary64)) (pow.f64 N #s(literal -1 binary64))) (*.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(fma.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (*.f64 #s(literal -1 binary64) (+.f64 N #s(literal 1 binary64))))","(fma.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (*.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(fma.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (/.f64 N (-.f64 #s(literal 1 binary64) N)) (*.f64 #s(literal -1 binary64) (+.f64 N #s(literal 1 binary64))))","(fma.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (/.f64 N (-.f64 #s(literal 1 binary64) N)) (*.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(fma.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (/.f64 N (-.f64 N #s(literal 1 binary64))) (*.f64 #s(literal -1 binary64) (+.f64 N #s(literal 1 binary64))))","(fma.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (/.f64 N (-.f64 N #s(literal 1 binary64))) (*.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(fma.f64 (/.f64 N (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (+.f64 N #s(literal 1 binary64)) (*.f64 #s(literal -1 binary64) (+.f64 N #s(literal 1 binary64))))","(fma.f64 (/.f64 N (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (+.f64 N #s(literal 1 binary64)) (*.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(fma.f64 (/.f64 N (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (+.f64 N #s(literal 1 binary64)) (*.f64 #s(literal -1 binary64) (+.f64 N #s(literal 1 binary64))))","(fma.f64 (/.f64 N (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (+.f64 N #s(literal 1 binary64)) (*.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(fma.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (*.f64 #s(literal -1 binary64) (+.f64 N #s(literal 1 binary64))))","(fma.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (*.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(fma.f64 (/.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) N) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64)))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (*.f64 #s(literal -1 binary64) (+.f64 N #s(literal 1 binary64))))","(fma.f64 (/.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) N) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64)))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (*.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(fma.f64 (/.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) N) (-.f64 #s(literal 1 binary64) (*.f64 N N))) (/.f64 #s(literal 1 binary64) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (*.f64 #s(literal -1 binary64) (+.f64 N #s(literal 1 binary64))))","(fma.f64 (/.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) N) (-.f64 #s(literal 1 binary64) (*.f64 N N))) (/.f64 #s(literal 1 binary64) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (*.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(fma.f64 (/.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) N) (-.f64 #s(literal 1 binary64) (*.f64 N N))) (+.f64 N #s(literal 1 binary64)) (*.f64 #s(literal -1 binary64) (+.f64 N #s(literal 1 binary64))))","(fma.f64 (/.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) N) (-.f64 #s(literal 1 binary64) (*.f64 N N))) (+.f64 N #s(literal 1 binary64)) (*.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(fma.f64 (*.f64 (+.f64 N #s(literal 1 binary64)) (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)))) (/.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64))) (*.f64 #s(literal -1 binary64) (+.f64 N #s(literal 1 binary64))))","(fma.f64 (*.f64 (+.f64 N #s(literal 1 binary64)) (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)))) (/.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64))) (*.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(fma.f64 (*.f64 (+.f64 N #s(literal 1 binary64)) (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)))) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) (*.f64 #s(literal -1 binary64) (+.f64 N #s(literal 1 binary64))))","(fma.f64 (*.f64 (+.f64 N #s(literal 1 binary64)) (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)))) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) (*.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(fma.f64 (/.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) N) (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 3 binary64)) #s(literal 1 binary64))) (/.f64 #s(literal 1 binary64) (pow.f64 (-.f64 (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 2 binary64)) #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) N)) #s(literal -1 binary64))) (*.f64 #s(literal -1 binary64) (+.f64 N #s(literal 1 binary64))))","(fma.f64 (/.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) N) (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 3 binary64)) #s(literal 1 binary64))) (/.f64 #s(literal 1 binary64) (pow.f64 (-.f64 (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 2 binary64)) #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) N)) #s(literal -1 binary64))) (*.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(fma.f64 (/.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) N) (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 3 binary64)) #s(literal 1 binary64))) (-.f64 (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 2 binary64)) #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) N)) (*.f64 #s(literal -1 binary64) (+.f64 N #s(literal 1 binary64))))","(fma.f64 (/.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) N) (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 3 binary64)) #s(literal 1 binary64))) (-.f64 (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 2 binary64)) #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) N)) (*.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(fma.f64 (/.f64 N (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64)))) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))) (*.f64 #s(literal -1 binary64) (+.f64 N #s(literal 1 binary64))))","(fma.f64 (/.f64 N (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64)))) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))) (*.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(fma.f64 (/.f64 N (-.f64 #s(literal 1 binary64) (*.f64 N N))) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (*.f64 #s(literal -1 binary64) (+.f64 N #s(literal 1 binary64))))","(fma.f64 (/.f64 N (-.f64 #s(literal 1 binary64) (*.f64 N N))) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (*.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(fma.f64 (/.f64 N (-.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 2 binary64)) #s(literal 1 binary64))) (/.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64))) (*.f64 #s(literal -1 binary64) (+.f64 N #s(literal 1 binary64))))","(fma.f64 (/.f64 N (-.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 2 binary64)) #s(literal 1 binary64))) (/.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64))) (*.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(fma.f64 (/.f64 N (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 3 binary64)) #s(literal 1 binary64))) (/.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (pow.f64 (-.f64 (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 2 binary64)) #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) N)) #s(literal -1 binary64))) (*.f64 #s(literal -1 binary64) (+.f64 N #s(literal 1 binary64))))","(fma.f64 (/.f64 N (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 3 binary64)) #s(literal 1 binary64))) (/.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (pow.f64 (-.f64 (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 2 binary64)) #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) N)) #s(literal -1 binary64))) (*.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(fma.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (/.f64 N (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))) (*.f64 #s(literal -1 binary64) (+.f64 N #s(literal 1 binary64))))","(fma.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (/.f64 N (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))) (*.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64)))) (/.f64 N (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))) (*.f64 #s(literal -1 binary64) (+.f64 N #s(literal 1 binary64))))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64)))) (/.f64 N (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))) (*.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (*.f64 N N))) (/.f64 N (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (*.f64 #s(literal -1 binary64) (+.f64 N #s(literal 1 binary64))))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (*.f64 N N))) (/.f64 N (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (*.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(fma.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (/.f64 N (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (*.f64 #s(literal -1 binary64) (+.f64 N #s(literal 1 binary64))))","(fma.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (/.f64 N (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (*.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(fma.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) N) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) (*.f64 #s(literal -1 binary64) (+.f64 N #s(literal 1 binary64))))","(fma.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) N) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) (*.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(fma.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) N) (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 #s(literal -1 binary64) (+.f64 N #s(literal 1 binary64))))","(fma.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) N) (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(fma.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (pow.f64 N #s(literal -1 binary64))) (*.f64 #s(literal -1 binary64) (+.f64 N #s(literal 1 binary64))))","(fma.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (pow.f64 N #s(literal -1 binary64))) (*.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(fma.f64 (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)) (/.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (pow.f64 N #s(literal -1 binary64))) (*.f64 #s(literal -1 binary64) (+.f64 N #s(literal 1 binary64))))","(fma.f64 (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)) (/.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (pow.f64 N #s(literal -1 binary64))) (*.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(fma.f64 (neg.f64 N) (neg.f64 N) #s(literal -1 binary64))","(fma.f64 (fma.f64 N N N) #s(literal 1 binary64) (*.f64 #s(literal -1 binary64) (+.f64 N #s(literal 1 binary64))))","(fma.f64 (fma.f64 N N N) #s(literal 1 binary64) (*.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(fma.f64 (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (*.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64)) (*.f64 #s(literal -1 binary64) (+.f64 N #s(literal 1 binary64))))","(fma.f64 (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (*.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64)) (*.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(fma.f64 (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (*.f64 #s(literal -1 binary64) (+.f64 N #s(literal 1 binary64))))","(fma.f64 (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (*.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(fma.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (*.f64 (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64)) (*.f64 #s(literal -1 binary64) (+.f64 N #s(literal 1 binary64))))","(fma.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (*.f64 (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64)) (*.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(fma.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (*.f64 #s(literal -1 binary64) (+.f64 N #s(literal 1 binary64))))","(fma.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (*.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(fma.f64 (/.f64 N (-.f64 #s(literal 1 binary64) N)) (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal 1 binary64)) (*.f64 #s(literal -1 binary64) (+.f64 N #s(literal 1 binary64))))","(fma.f64 (/.f64 N (-.f64 #s(literal 1 binary64) N)) (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal 1 binary64)) (*.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(fma.f64 (/.f64 N (-.f64 #s(literal 1 binary64) N)) (-.f64 #s(literal 1 binary64) (*.f64 N N)) (*.f64 #s(literal -1 binary64) (+.f64 N #s(literal 1 binary64))))","(fma.f64 (/.f64 N (-.f64 #s(literal 1 binary64) N)) (-.f64 #s(literal 1 binary64) (*.f64 N N)) (*.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(fma.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (*.f64 (/.f64 N (-.f64 #s(literal 1 binary64) N)) #s(literal 1 binary64)) (*.f64 #s(literal -1 binary64) (+.f64 N #s(literal 1 binary64))))","(fma.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (*.f64 (/.f64 N (-.f64 #s(literal 1 binary64) N)) #s(literal 1 binary64)) (*.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(fma.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (/.f64 N (-.f64 #s(literal 1 binary64) N)) (*.f64 #s(literal -1 binary64) (+.f64 N #s(literal 1 binary64))))","(fma.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (/.f64 N (-.f64 #s(literal 1 binary64) N)) (*.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(fma.f64 (*.f64 N N) #s(literal 1 binary64) #s(literal -1 binary64))","(fma.f64 (+.f64 N #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) (pow.f64 N #s(literal -1 binary64))) (*.f64 #s(literal -1 binary64) (+.f64 N #s(literal 1 binary64))))","(fma.f64 (+.f64 N #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) (pow.f64 N #s(literal -1 binary64))) (*.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(fma.f64 (+.f64 N #s(literal 1 binary64)) N (*.f64 #s(literal -1 binary64) (+.f64 N #s(literal 1 binary64))))","(fma.f64 (+.f64 N #s(literal 1 binary64)) N (*.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(fma.f64 N (*.f64 (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (*.f64 #s(literal -1 binary64) (+.f64 N #s(literal 1 binary64))))","(fma.f64 N (*.f64 (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (*.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(fma.f64 N (*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N))) (*.f64 #s(literal -1 binary64) (+.f64 N #s(literal 1 binary64))))","(fma.f64 N (*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N))) (*.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(fma.f64 N (+.f64 N #s(literal 1 binary64)) (*.f64 #s(literal -1 binary64) (+.f64 N #s(literal 1 binary64))))","(fma.f64 N (+.f64 N #s(literal 1 binary64)) (*.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(fma.f64 N N #s(literal -1 binary64))","(fma.f64 #s(literal 1 binary64) (fma.f64 N N N) (*.f64 #s(literal -1 binary64) (+.f64 N #s(literal 1 binary64))))","(fma.f64 #s(literal 1 binary64) (fma.f64 N N N) (*.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(fma.f64 #s(literal 1 binary64) (*.f64 N N) #s(literal -1 binary64))","(expm1.f64 (*.f64 #s(literal 2 binary64) (log.f64 N)))","(-.f64 (/.f64 #s(literal 1 binary64) (-.f64 #s(literal -1 binary64) (*.f64 N N))) (/.f64 (pow.f64 N #s(literal 4 binary64)) (-.f64 #s(literal -1 binary64) (*.f64 N N))))","(-.f64 (/.f64 (pow.f64 N #s(literal 6 binary64)) (+.f64 #s(literal 1 binary64) (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 (neg.f64 N) N)))) (/.f64 #s(literal 1 binary64) (+.f64 #s(literal 1 binary64) (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 (neg.f64 N) N)))))","(-.f64 (/.f64 (pow.f64 N #s(literal 6 binary64)) (*.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))) (/.f64 #s(literal 1 binary64) (*.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))))","(-.f64 (/.f64 (pow.f64 N #s(literal 6 binary64)) (+.f64 (fma.f64 N N #s(literal 1 binary64)) (pow.f64 N #s(literal 4 binary64)))) (pow.f64 (+.f64 (fma.f64 N N #s(literal 1 binary64)) (pow.f64 N #s(literal 4 binary64))) #s(literal -1 binary64)))","(-.f64 (/.f64 (pow.f64 N #s(literal 4 binary64)) (fma.f64 N N #s(literal 1 binary64))) (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)))","(-.f64 (*.f64 N N) #s(literal 1 binary64))","(+.f64 (fma.f64 N N N) (*.f64 #s(literal -1 binary64) (+.f64 N #s(literal 1 binary64))))","(+.f64 (fma.f64 N N N) (*.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(+.f64 (*.f64 N N) #s(literal -1 binary64))","(+.f64 #s(literal -1 binary64) (*.f64 N N))","(*.f64 (pow.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) #s(literal -1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64)) (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N))) #s(literal -1 binary64)) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)))","(*.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)) (pow.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)) (+.f64 N #s(literal 1 binary64)))","(*.f64 (pow.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))","(*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1/2 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1/2 binary64)))","(*.f64 #s(literal 1 binary64) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(pow.f64 (exp.f64 #s(literal -1 binary64)) (log.f64 (-.f64 N #s(literal 1 binary64))))","(pow.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64))","(pow.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)) #s(literal -1/2 binary64))","(pow.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1/2 binary64)) #s(literal 2 binary64))","(pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))))","(/.f64 #s(literal -1 binary64) (neg.f64 (-.f64 N #s(literal 1 binary64))))","(/.f64 #s(literal 1 binary64) (neg.f64 (neg.f64 (-.f64 N #s(literal 1 binary64)))))","(/.f64 #s(literal 1 binary64) (/.f64 (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64)))","(/.f64 #s(literal 1 binary64) (-.f64 N #s(literal 1 binary64)))","(exp.f64 (fma.f64 (log.f64 (-.f64 N #s(literal 1 binary64))) #s(literal -1/2 binary64) (*.f64 (log.f64 (-.f64 N #s(literal 1 binary64))) #s(literal -1/2 binary64))))","(exp.f64 (*.f64 (*.f64 (log.f64 (-.f64 N #s(literal 1 binary64))) #s(literal -1/2 binary64)) #s(literal 2 binary64)))","(exp.f64 (*.f64 (log.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal 2 binary64))) #s(literal -1/2 binary64)))","(exp.f64 (*.f64 (log.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1/2 binary64))) #s(literal 2 binary64)))","(exp.f64 (*.f64 (log.f64 (-.f64 N #s(literal 1 binary64))) #s(literal -1 binary64)))","(*.f64 (pow.f64 (pow.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64)) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (pow.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64)) (pow.f64 (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 N N N)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (sqrt.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64)) (pow.f64 (sqrt.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64)))","(*.f64 (pow.f64 (-.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)) (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)) (pow.f64 (pow.f64 (-.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 N N)) #s(literal -1 binary64)) #s(literal 1 binary64)))","(*.f64 (pow.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64)) (pow.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64)))","(*.f64 (pow.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 3 binary64))) #s(literal 1 binary64)) (pow.f64 (pow.f64 (+.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 (fma.f64 N N N) N)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64))) #s(literal -1 binary64)) #s(literal 1 binary64)))","(*.f64 (pow.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64)) (pow.f64 (pow.f64 (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 N N N)) #s(literal -1 binary64)) #s(literal 1 binary64)))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (pow.f64 (/.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1/2 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)))","(*.f64 (sqrt.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (sqrt.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))","(*.f64 (-.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)) (pow.f64 N #s(literal 4 binary64))) (pow.f64 (-.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 N N)) #s(literal -1 binary64)))","(*.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64)))","(*.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 3 binary64))) (pow.f64 (+.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 (fma.f64 N N N) N)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64))) #s(literal -1 binary64)))","(*.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64)) (pow.f64 (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 N N N)) #s(literal -1 binary64)))","(*.f64 #s(literal -1 binary64) (pow.f64 (/.f64 #s(literal -1 binary64) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))) #s(literal 1 binary64)))","(*.f64 #s(literal -1 binary64) (/.f64 #s(literal -1 binary64) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))))","(*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1 binary64))","(*.f64 #s(literal 1 binary64) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))","(pow.f64 (*.f64 (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N)))) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))) #s(literal -1/2 binary64))","(pow.f64 (/.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64))","(pow.f64 (/.f64 (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 N N N)) (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64))","(pow.f64 (/.f64 (-.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 N N)) (-.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)) (pow.f64 N #s(literal 4 binary64)))) #s(literal -1 binary64))","(pow.f64 (/.f64 (+.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 (fma.f64 N N N) N)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64))) (+.f64 (pow.f64 N #s(literal 6 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 3 binary64)))) #s(literal -1 binary64))","(pow.f64 (neg.f64 (/.f64 #s(literal -1 binary64) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))) #s(literal -1 binary64))","(pow.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 2 binary64)) #s(literal 1/2 binary64))","(pow.f64 (sqrt.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 2 binary64))","(pow.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1/2 binary64)) #s(literal -2 binary64))","(pow.f64 (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N)))) #s(literal -1 binary64))","(pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1 binary64))","(/.f64 (neg.f64 (sqrt.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))) (neg.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1/2 binary64))))","(/.f64 (neg.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)))) (neg.f64 (-.f64 (*.f64 N N) (+.f64 N #s(literal 1 binary64)))))","(/.f64 (neg.f64 (neg.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)))) (neg.f64 (neg.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)))))","(/.f64 (neg.f64 (neg.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64)))) (neg.f64 (neg.f64 (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 N N N)))))","(/.f64 (neg.f64 (neg.f64 (-.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)) (pow.f64 N #s(literal 4 binary64))))) (neg.f64 (neg.f64 (-.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 N N)))))","(/.f64 (neg.f64 (neg.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 3 binary64))))) (neg.f64 (neg.f64 (+.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 (fma.f64 N N N) N)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64))))))","(/.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)))) (neg.f64 (-.f64 #s(literal 1 binary64) (fma.f64 N N N))))","(/.f64 (-.f64 (*.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 1 binary64))) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))))","(/.f64 (-.f64 (*.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)) (-.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 N N))) (*.f64 (-.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 N N)) (pow.f64 N #s(literal 4 binary64)))) (*.f64 (-.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 N N)) (-.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 N N))))","(/.f64 (exp.f64 (log.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)))) (exp.f64 (log.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)))))","(/.f64 (exp.f64 (log1p.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)))) (exp.f64 (log.f64 (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 N N N)))))","(/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 N N N) #s(literal 2 binary64))) (-.f64 #s(literal 1 binary64) (fma.f64 N N N)))","(/.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64))) (-.f64 (*.f64 N N) (+.f64 N #s(literal 1 binary64))))","(/.f64 (neg.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64))) (neg.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))))","(/.f64 (neg.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64))) (neg.f64 (+.f64 #s(literal 1 binary64) (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (fma.f64 N N N)))))","(/.f64 (neg.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64))) (neg.f64 (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 N N N))))","(/.f64 (neg.f64 (-.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)) (pow.f64 N #s(literal 4 binary64)))) (neg.f64 (-.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 N N))))","(/.f64 (neg.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 3 binary64)))) (neg.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) (-.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)) (*.f64 (fma.f64 N N N) N)))))","(/.f64 (neg.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 3 binary64)))) (neg.f64 (+.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 (fma.f64 N N N) N)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)))))","(/.f64 (sqrt.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1/2 binary64)))","(/.f64 (-.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)) (pow.f64 N #s(literal 4 binary64))) (-.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 N N)))","(/.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)))","(/.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 3 binary64))) (+.f64 (pow.f64 N #s(literal 4 binary64)) (-.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)) (*.f64 (fma.f64 N N N) N))))","(/.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 3 binary64))) (+.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 (fma.f64 N N N) N)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64))))","(/.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64)) (+.f64 #s(literal 1 binary64) (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (fma.f64 N N N))))","(/.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64)) (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 N N N)))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)))))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 N N N)) (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64)))))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (-.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 N N)) (-.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)) (pow.f64 N #s(literal 4 binary64))))))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (+.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 (fma.f64 N N N) N)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64))) (+.f64 (pow.f64 N #s(literal 6 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 3 binary64))))))","(/.f64 #s(literal -1 binary64) (neg.f64 (neg.f64 (/.f64 #s(literal -1 binary64) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))))","(/.f64 #s(literal -1 binary64) (/.f64 #s(literal -1 binary64) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))","(/.f64 #s(literal 1 binary64) (/.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64))))","(/.f64 #s(literal 1 binary64) (/.f64 (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 N N N)) (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64))))","(/.f64 #s(literal 1 binary64) (/.f64 (-.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 N N)) (-.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)) (pow.f64 N #s(literal 4 binary64)))))","(/.f64 #s(literal 1 binary64) (/.f64 (+.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 (fma.f64 N N N) N)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64))) (+.f64 (pow.f64 N #s(literal 6 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 3 binary64)))))","(/.f64 #s(literal 1 binary64) (neg.f64 (/.f64 #s(literal -1 binary64) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))))","(/.f64 #s(literal 1 binary64) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N)))))","(neg.f64 (/.f64 #s(literal -1 binary64) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))))","(fma.f64 (/.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64))) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (pow.f64 (+.f64 (fma.f64 N N #s(literal 1 binary64)) (pow.f64 N #s(literal 4 binary64))) #s(literal -1 binary64))) N)","(fma.f64 (/.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64))) (-.f64 N #s(literal 1 binary64)) N)","(fma.f64 (/.f64 (fma.f64 N N #s(literal 1 binary64)) (+.f64 N #s(literal 1 binary64))) (+.f64 N #s(literal 1 binary64)) N)","(fma.f64 (/.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (+.f64 (pow.f64 N #s(literal 3/2 binary64)) #s(literal 1 binary64))) (/.f64 (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (-.f64 (pow.f64 N #s(literal 3/2 binary64)) #s(literal 1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) N) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (fma.f64 N N #s(literal -1 binary64)))) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64))","(fma.f64 (/.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) N) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64))","(fma.f64 (/.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) N) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) #s(literal 1 binary64))","(fma.f64 (/.f64 (neg.f64 N) #s(literal -1 binary64)) (+.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (/.f64 (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (+.f64 (pow.f64 N #s(literal 3/2 binary64)) #s(literal 1 binary64))) (/.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 3/2 binary64)) #s(literal 1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) (/.f64 (neg.f64 N) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal -1 binary64)) (/.f64 (neg.f64 N) (-.f64 #s(literal 1 binary64) N)) #s(literal 1 binary64))","(fma.f64 (/.f64 N (/.f64 (fma.f64 N N #s(literal -1 binary64)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 N (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) N)) #s(literal 1 binary64))","(fma.f64 (/.f64 N (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))) #s(literal 1 binary64))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (fma.f64 N N #s(literal -1 binary64)))) (/.f64 N (-.f64 N #s(literal 1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (/.f64 N (-.f64 #s(literal 1 binary64) N)) #s(literal 1 binary64))","(fma.f64 (/.f64 N (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (fma.f64 N N #s(literal -1 binary64)))) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 N #s(literal 1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 N (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (-.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 2 binary64)) #s(literal 1 binary64))) (/.f64 N (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 3 binary64)) #s(literal 1 binary64))) (/.f64 N (pow.f64 (-.f64 (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 2 binary64)) #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) N)) #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (/.f64 (pow.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) (pow.f64 N #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 (+.f64 (pow.f64 N #s(literal 9 binary64)) #s(literal 1 binary64)) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (/.f64 (pow.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (pow.f64 N #s(literal 3 binary64))) #s(literal -1 binary64)) (pow.f64 N #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64))) (-.f64 #s(literal 1 binary64) N)) (/.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (pow.f64 N #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64))) (-.f64 #s(literal 1 binary64) N)) (/.f64 (pow.f64 (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)) #s(literal -1 binary64)) (pow.f64 N #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 #s(literal 1 binary64) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (+.f64 N #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (/.f64 #s(literal 1 binary64) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 #s(literal 1 binary64) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) N)) (*.f64 N N))","(fma.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N))","(fma.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) (*.f64 N N))","(fma.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (/.f64 N (-.f64 #s(literal 1 binary64) N)) #s(literal 1 binary64))","(fma.f64 (/.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (/.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (-.f64 N #s(literal 1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (/.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (/.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) N)) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (/.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (/.f64 (pow.f64 (+.f64 (fma.f64 N N #s(literal 1 binary64)) (pow.f64 N #s(literal 4 binary64))) #s(literal -1 binary64)) (-.f64 N #s(literal 1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (/.f64 (pow.f64 (+.f64 (fma.f64 N N #s(literal 1 binary64)) (pow.f64 N #s(literal 4 binary64))) #s(literal -1 binary64)) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (/.f64 (pow.f64 (+.f64 (fma.f64 N N #s(literal 1 binary64)) (pow.f64 N #s(literal 4 binary64))) #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) N)) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (/.f64 (pow.f64 (+.f64 (fma.f64 N N #s(literal 1 binary64)) (pow.f64 N #s(literal 4 binary64))) #s(literal -1 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (/.f64 (+.f64 N #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (/.f64 (+.f64 N #s(literal 1 binary64)) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (/.f64 (+.f64 N #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) N)) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (/.f64 (+.f64 N #s(literal 1 binary64)) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))) (*.f64 N N))","(fma.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (/.f64 (-.f64 N #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (/.f64 (-.f64 N #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) N)) (*.f64 N N))","(fma.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (/.f64 (-.f64 N #s(literal 1 binary64)) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (-.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 2 binary64)) #s(literal 1 binary64))) (/.f64 (pow.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 3 binary64)) #s(literal 1 binary64))) (/.f64 (pow.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) (pow.f64 (-.f64 (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 2 binary64)) #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) N)) #s(literal -1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (+.f64 (pow.f64 N #s(literal 9 binary64)) #s(literal 1 binary64)) (-.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 2 binary64)) #s(literal 1 binary64))) (/.f64 (pow.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (pow.f64 N #s(literal 3 binary64))) #s(literal -1 binary64)) (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (+.f64 (pow.f64 N #s(literal 9 binary64)) #s(literal 1 binary64)) (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 3 binary64)) #s(literal 1 binary64))) (/.f64 (pow.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (pow.f64 N #s(literal 3 binary64))) #s(literal -1 binary64)) (pow.f64 (-.f64 (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 2 binary64)) #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) N)) #s(literal -1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64))) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (fma.f64 N N #s(literal -1 binary64)))) (/.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (-.f64 N #s(literal 1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64))) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (/.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64))) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (/.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) N)) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64))) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64)))) (/.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64))) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (fma.f64 N N #s(literal -1 binary64)))) (/.f64 (pow.f64 (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)) #s(literal -1 binary64)) (-.f64 N #s(literal 1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64))) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (/.f64 (pow.f64 (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)) #s(literal -1 binary64)) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64))) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (/.f64 (pow.f64 (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)) #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) N)) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64))) (-.f64 #s(literal 1 binary64) (*.f64 N N))) (/.f64 (pow.f64 (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)) #s(literal -1 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (/.f64 N (-.f64 N #s(literal 1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N))","(fma.f64 (/.f64 N (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (+.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (/.f64 N (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (+.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (/.f64 N (fma.f64 N N #s(literal -1 binary64))) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) N) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64)))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (/.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) N) (-.f64 #s(literal 1 binary64) (*.f64 N N))) (/.f64 #s(literal 1 binary64) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) N) (-.f64 #s(literal 1 binary64) (*.f64 N N))) (+.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (*.f64 N N))","(fma.f64 (*.f64 (+.f64 N #s(literal 1 binary64)) (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)))) (/.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (*.f64 (+.f64 N #s(literal 1 binary64)) (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)))) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 1 binary64))","(fma.f64 (/.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) N) (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 3 binary64)) #s(literal 1 binary64))) (/.f64 #s(literal 1 binary64) (pow.f64 (-.f64 (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 2 binary64)) #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) N)) #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) N) (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 3 binary64)) #s(literal 1 binary64))) (-.f64 (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 2 binary64)) #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) N)) #s(literal 1 binary64))","(fma.f64 (/.f64 N (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64)))) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))) #s(literal 1 binary64))","(fma.f64 (/.f64 N (-.f64 #s(literal 1 binary64) (*.f64 N N))) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 N (-.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 2 binary64)) #s(literal 1 binary64))) (/.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 N (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 3 binary64)) #s(literal 1 binary64))) (/.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (pow.f64 (-.f64 (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 2 binary64)) #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) N)) #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (/.f64 N (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))) #s(literal 1 binary64))","(fma.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64)))) (/.f64 N (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))) #s(literal 1 binary64))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64)))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (*.f64 N N))) (/.f64 N (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (*.f64 N N))) (+.f64 N #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (/.f64 N (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (/.f64 #s(literal 1 binary64) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (+.f64 N #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (+.f64 N #s(literal 1 binary64))) (-.f64 N #s(literal 1 binary64)) (*.f64 N N))","(fma.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1/2 binary64))) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1/2 binary64)) (*.f64 N N))","(fma.f64 (/.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64))) N)","(fma.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (/.f64 (+.f64 N #s(literal 1 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (*.f64 N N))","(fma.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (/.f64 (-.f64 N #s(literal 1 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (*.f64 N N))","(fma.f64 (pow.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))) (*.f64 N N))","(fma.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) N) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) #s(literal 1 binary64))","(fma.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) N) (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1/2 binary64)) (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1/2 binary64)) (fma.f64 N N #s(literal -1 binary64))) (*.f64 N N))","(fma.f64 (fma.f64 N N #s(literal 1 binary64)) (/.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (*.f64 N N))","(fma.f64 (fma.f64 N N #s(literal -1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N))","(fma.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (pow.f64 N #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)) (/.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (pow.f64 N #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (neg.f64 N) (neg.f64 N) (+.f64 N #s(literal 1 binary64)))","(fma.f64 (fma.f64 N N N) #s(literal 1 binary64) #s(literal 1 binary64))","(fma.f64 (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (*.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (/.f64 (pow.f64 (+.f64 (fma.f64 N N #s(literal 1 binary64)) (pow.f64 N #s(literal 4 binary64))) #s(literal -1 binary64)) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))) (*.f64 N N))","(fma.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (/.f64 (pow.f64 (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)) #s(literal -1 binary64)) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N))))) (*.f64 N N))","(fma.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (*.f64 (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N))","(fma.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64))","(fma.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)) (*.f64 N N))","(fma.f64 (/.f64 N (-.f64 #s(literal 1 binary64) N)) (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (/.f64 N (-.f64 #s(literal 1 binary64) N)) (-.f64 #s(literal 1 binary64) (*.f64 N N)) #s(literal 1 binary64))","(fma.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (*.f64 (/.f64 N (-.f64 #s(literal 1 binary64) N)) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) (*.f64 N N))","(fma.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (/.f64 N (-.f64 #s(literal 1 binary64) N)) #s(literal 1 binary64))","(fma.f64 (*.f64 N N) #s(literal 1 binary64) (+.f64 N #s(literal 1 binary64)))","(fma.f64 (+.f64 N #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) (pow.f64 N #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 (+.f64 N #s(literal 1 binary64)) (/.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (*.f64 N N))","(fma.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (*.f64 N N))","(fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))","(fma.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 1 binary64) (*.f64 N N))","(fma.f64 N (*.f64 (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) #s(literal 1 binary64))","(fma.f64 N (*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N))) #s(literal 1 binary64))","(fma.f64 N (+.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 N N (+.f64 N #s(literal 1 binary64)))","(fma.f64 #s(literal 1 binary64) (fma.f64 N N N) #s(literal 1 binary64))","(fma.f64 #s(literal 1 binary64) (*.f64 N N) (+.f64 N #s(literal 1 binary64)))","(-.f64 (/.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) (fma.f64 N N N))) (/.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (-.f64 #s(literal 1 binary64) (fma.f64 N N N))))","(-.f64 (/.f64 (pow.f64 N #s(literal 4 binary64)) (-.f64 (*.f64 N N) (+.f64 N #s(literal 1 binary64)))) (/.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)) (-.f64 (*.f64 N N) (+.f64 N #s(literal 1 binary64)))))","(-.f64 (/.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64)))","(-.f64 (/.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)) (-.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 N N))) (/.f64 (pow.f64 N #s(literal 4 binary64)) (-.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 N N))))","(exp.f64 (log1p.f64 (fma.f64 N N N)))","(+.f64 (fma.f64 N N #s(literal 1 binary64)) N)","(+.f64 (fma.f64 N N N) #s(literal 1 binary64))","(+.f64 (*.f64 N N) (+.f64 N #s(literal 1 binary64)))","(+.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 N N))","(+.f64 #s(literal 1 binary64) (fma.f64 N N N))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))","(*.f64 (/.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (+.f64 (pow.f64 N #s(literal 3/2 binary64)) #s(literal 1 binary64))) (/.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 3/2 binary64)) #s(literal 1 binary64))))","(*.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (pow.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)))","(*.f64 (+.f64 (pow.f64 N #s(literal 9 binary64)) #s(literal 1 binary64)) (pow.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (pow.f64 N #s(literal 3 binary64))) #s(literal -1 binary64)))","(pow.f64 (/.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64))","(pow.f64 (/.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (pow.f64 N #s(literal 3 binary64))) (+.f64 (pow.f64 N #s(literal 9 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64))","(/.f64 (neg.f64 (neg.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)))) (neg.f64 (neg.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))))","(/.f64 (neg.f64 (neg.f64 (+.f64 (pow.f64 N #s(literal 9 binary64)) #s(literal 1 binary64)))) (neg.f64 (neg.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (pow.f64 N #s(literal 3 binary64))))))","(/.f64 (-.f64 (*.f64 (pow.f64 N #s(literal 6 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64))) (*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))))","(/.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64)))) (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64)))))","(/.f64 (neg.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64))) (neg.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))))","(/.f64 (neg.f64 (+.f64 (pow.f64 N #s(literal 9 binary64)) #s(literal 1 binary64))) (neg.f64 (+.f64 #s(literal 1 binary64) (-.f64 (pow.f64 N #s(literal 6 binary64)) (pow.f64 N #s(literal 3 binary64))))))","(/.f64 (neg.f64 (+.f64 (pow.f64 N #s(literal 9 binary64)) #s(literal 1 binary64))) (neg.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (pow.f64 N #s(literal 3 binary64)))))","(/.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))","(/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64))) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64))))","(/.f64 (+.f64 (pow.f64 N #s(literal 9 binary64)) #s(literal 1 binary64)) (+.f64 #s(literal 1 binary64) (-.f64 (pow.f64 N #s(literal 6 binary64)) (pow.f64 N #s(literal 3 binary64)))))","(/.f64 (+.f64 (pow.f64 N #s(literal 9 binary64)) #s(literal 1 binary64)) (-.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (pow.f64 N #s(literal 3 binary64))))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)))))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (pow.f64 N #s(literal 3 binary64))) (+.f64 (pow.f64 N #s(literal 9 binary64)) #s(literal 1 binary64)))))","(/.f64 #s(literal 1 binary64) (/.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64))))","(/.f64 #s(literal 1 binary64) (/.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (pow.f64 N #s(literal 3 binary64))) (+.f64 (pow.f64 N #s(literal 9 binary64)) #s(literal 1 binary64))))","(fma.f64 (pow.f64 #s(literal 1 binary64) #s(literal 3/2 binary64)) (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 N #s(literal 3/2 binary64)) (*.f64 (pow.f64 N #s(literal 3/2 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 N #s(literal 3/2 binary64)) (pow.f64 N #s(literal 3/2 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 N #s(literal 3 binary64)) (pow.f64 #s(literal 1 binary64) #s(literal 3/2 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64) #s(literal 1 binary64))","(fma.f64 (*.f64 N N) N #s(literal 1 binary64))","(fma.f64 N (*.f64 N N) #s(literal 1 binary64))","(fma.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))","(-.f64 (pow.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64))) #s(literal -1 binary64)) (/.f64 (pow.f64 N #s(literal 6 binary64)) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64)))))","(-.f64 (/.f64 (pow.f64 N #s(literal 6 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (pow.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)))","(+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))","(+.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64)))","(*.f64 (pow.f64 #s(literal 1 binary64) #s(literal 3/2 binary64)) (pow.f64 N #s(literal 3 binary64)))","(*.f64 (pow.f64 N #s(literal 3/2 binary64)) (*.f64 (pow.f64 N #s(literal 3/2 binary64)) #s(literal 1 binary64)))","(*.f64 (pow.f64 N #s(literal 3/2 binary64)) (pow.f64 N #s(literal 3/2 binary64)))","(*.f64 (pow.f64 N #s(literal 3 binary64)) (pow.f64 #s(literal 1 binary64) #s(literal 3/2 binary64)))","(*.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))","(*.f64 (*.f64 N N) N)","(*.f64 N (*.f64 N N))","(*.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64)))","(pow.f64 (exp.f64 #s(literal 3 binary64)) (log.f64 N))","(pow.f64 (pow.f64 N #s(literal 3/2 binary64)) #s(literal 2 binary64))","(pow.f64 (*.f64 N N) #s(literal 3/2 binary64))","(pow.f64 N #s(literal 3 binary64))","(exp.f64 (fma.f64 (log.f64 N) #s(literal 3/2 binary64) (*.f64 (log.f64 N) #s(literal 3/2 binary64))))","(exp.f64 (*.f64 (*.f64 (log.f64 N) #s(literal 3/2 binary64)) #s(literal 2 binary64)))","(exp.f64 (*.f64 (*.f64 #s(literal 2 binary64) (log.f64 N)) #s(literal 3/2 binary64)))","(exp.f64 (*.f64 (log.f64 (pow.f64 N #s(literal 3/2 binary64))) #s(literal 2 binary64)))","(exp.f64 (*.f64 (log.f64 N) #s(literal 3 binary64)))","(*.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64))) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (/.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))","(*.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64))) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64))))) (/.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))","(*.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64))) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (/.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (+.f64 N #s(literal 1 binary64))))","(*.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64))) (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (+.f64 N #s(literal 1 binary64)))) (/.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (-.f64 N #s(literal 1 binary64))))","(*.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64))) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1/2 binary64)))) (/.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1/2 binary64))))","(*.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64))) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1/2 binary64))) (/.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1/2 binary64)) (fma.f64 N N #s(literal -1 binary64)))))","(*.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64))) (fma.f64 N N #s(literal -1 binary64))) (/.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))))","(*.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64))) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (/.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))))","(*.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64))) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (/.f64 (pow.f64 (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)) #s(literal -1 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))","(*.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64))) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64))))) (/.f64 (pow.f64 (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)) #s(literal -1 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))","(*.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64))) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (/.f64 (pow.f64 (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)) #s(literal -1 binary64)) (+.f64 N #s(literal 1 binary64))))","(*.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64))) (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (+.f64 N #s(literal 1 binary64)))) (/.f64 (pow.f64 (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)) #s(literal -1 binary64)) (-.f64 N #s(literal 1 binary64))))","(*.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64))) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1/2 binary64)))) (/.f64 (pow.f64 (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)) #s(literal -1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1/2 binary64))))","(*.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64))) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1/2 binary64))) (/.f64 (pow.f64 (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1/2 binary64)) (fma.f64 N N #s(literal -1 binary64)))))","(*.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64))) (fma.f64 N N #s(literal -1 binary64))) (/.f64 (pow.f64 (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)) #s(literal -1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))))","(*.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64))) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (/.f64 (pow.f64 (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)) #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))))","(*.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64))) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (/.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64))))","(*.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64))) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (/.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (+.f64 N #s(literal 1 binary64))))","(*.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64))) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (/.f64 (pow.f64 (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)) #s(literal -1 binary64)) (+.f64 N #s(literal 1 binary64))))","(*.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64))) (-.f64 #s(literal 1 binary64) (*.f64 N N))) (/.f64 (pow.f64 (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)) #s(literal -1 binary64)) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64))))","(*.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64))) (+.f64 N #s(literal 1 binary64))) (/.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))))","(*.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64))) (+.f64 N #s(literal 1 binary64))) (/.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64)))","(*.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64))) (+.f64 N #s(literal 1 binary64))) (/.f64 (pow.f64 (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))))","(*.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64))) (+.f64 N #s(literal 1 binary64))) (/.f64 (pow.f64 (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64)))","(*.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (fma.f64 N N #s(literal -1 binary64))) (-.f64 N #s(literal 1 binary64)))","(*.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))","(*.f64 (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (*.f64 N N))) (-.f64 #s(literal 1 binary64) N))","(*.f64 (fma.f64 N N #s(literal 1 binary64)) (/.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64))))","(*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64))) (/.f64 (pow.f64 (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)) #s(literal -1 binary64)) (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64))))","(*.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64))) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N)))))","(*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(pow.f64 (/.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64)))) #s(literal -1 binary64))","(pow.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N))) #s(literal -1 binary64))","(/.f64 (neg.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64))))) (neg.f64 (neg.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))))","(/.f64 (neg.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (neg.f64 (neg.f64 (+.f64 N #s(literal 1 binary64)))))","(/.f64 (-.f64 (*.f64 #s(literal 1 binary64) (+.f64 N #s(literal 1 binary64))) (*.f64 (fma.f64 N N N) N)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)))","(/.f64 (-.f64 (*.f64 (/.f64 #s(literal -1 binary64) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (pow.f64 (neg.f64 N) #s(literal 3 binary64))) (*.f64 #s(literal -1 binary64) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))","(/.f64 (-.f64 (*.f64 (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N)))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (pow.f64 N #s(literal 3 binary64))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))","(/.f64 (-.f64 (*.f64 #s(literal -1 binary64) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (*.f64 (neg.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (pow.f64 N #s(literal 3 binary64)))) (*.f64 (neg.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))","(/.f64 (-.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (*.f64 (/.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1 binary64)) (pow.f64 N #s(literal 3 binary64)))) (*.f64 (/.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))","(/.f64 (-.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (pow.f64 N #s(literal 3 binary64)))) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 2 binary64)))","(/.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64)))) (neg.f64 (+.f64 #s(literal 1 binary64) (-.f64 (*.f64 N N) (*.f64 #s(literal 1 binary64) (neg.f64 N))))))","(/.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64)))) (neg.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))","(/.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N))) (neg.f64 (-.f64 #s(literal 1 binary64) (neg.f64 N))))","(/.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N))) (neg.f64 (+.f64 N #s(literal 1 binary64))))","(/.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64)))) (neg.f64 (*.f64 (+.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64)))))","(/.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64)))) (neg.f64 (*.f64 (+.f64 N #s(literal 1 binary64)) (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)))))","(/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64))) (*.f64 (+.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64))))","(/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64))) (+.f64 #s(literal 1 binary64) (-.f64 (*.f64 N N) (*.f64 #s(literal 1 binary64) (neg.f64 N)))))","(/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))","(/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64))) (*.f64 (+.f64 N #s(literal 1 binary64)) (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64))))","(/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (neg.f64 N)))","(/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (+.f64 N #s(literal 1 binary64)))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64))))))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N)))))","(/.f64 #s(literal 1 binary64) (/.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64)))))","(/.f64 #s(literal 1 binary64) (/.f64 (+.f64 N #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N))))","(fma.f64 #s(literal -1 binary64) N #s(literal 1 binary64))","(-.f64 (/.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) (neg.f64 N))) (/.f64 (*.f64 N N) (-.f64 #s(literal 1 binary64) (neg.f64 N))))","(-.f64 (/.f64 #s(literal 1 binary64) (*.f64 (+.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64)))) (/.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 (+.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64)))))","(-.f64 (/.f64 #s(literal 1 binary64) (*.f64 (+.f64 N #s(literal 1 binary64)) (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)))) (/.f64 (pow.f64 N #s(literal 6 binary64)) (*.f64 (+.f64 N #s(literal 1 binary64)) (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)))))","(-.f64 (/.f64 (pow.f64 (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64)) #s(literal -1 binary64)) (+.f64 N #s(literal 1 binary64))) (/.f64 (/.f64 (pow.f64 N #s(literal 6 binary64)) (+.f64 (fma.f64 N N (pow.f64 N #s(literal 4 binary64))) #s(literal 1 binary64))) (+.f64 N #s(literal 1 binary64))))","(-.f64 (/.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (+.f64 N #s(literal 1 binary64))) (/.f64 (/.f64 (pow.f64 N #s(literal 4 binary64)) (fma.f64 N N #s(literal 1 binary64))) (+.f64 N #s(literal 1 binary64))))","(-.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (/.f64 (*.f64 N N) (+.f64 N #s(literal 1 binary64))))","(-.f64 (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N)))) (/.f64 (pow.f64 N #s(literal 3 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))","(-.f64 #s(literal 1 binary64) N)","(+.f64 (neg.f64 N) #s(literal 1 binary64))","(+.f64 #s(literal 1 binary64) (*.f64 (neg.f64 N) #s(literal 1 binary64)))","(+.f64 #s(literal 1 binary64) (neg.f64 N))","(*.f64 (/.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (/.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))","(*.f64 (/.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64))))) (/.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))","(*.f64 (/.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (/.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (+.f64 N #s(literal 1 binary64))))","(*.f64 (/.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (+.f64 N #s(literal 1 binary64)))) (/.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (-.f64 N #s(literal 1 binary64))))","(*.f64 (/.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1/2 binary64)))) (/.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1/2 binary64))))","(*.f64 (/.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1/2 binary64))) (/.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1/2 binary64)) (fma.f64 N N #s(literal -1 binary64)))))","(*.f64 (/.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (/.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64))))","(*.f64 (/.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (/.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))))","(*.f64 (/.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N))) (/.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64))))","(*.f64 (/.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (/.f64 (pow.f64 (+.f64 (fma.f64 N N #s(literal 1 binary64)) (pow.f64 N #s(literal 4 binary64))) #s(literal -1 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))","(*.f64 (/.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64))))) (/.f64 (pow.f64 (+.f64 (fma.f64 N N #s(literal 1 binary64)) (pow.f64 N #s(literal 4 binary64))) #s(literal -1 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))","(*.f64 (/.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (/.f64 (pow.f64 (+.f64 (fma.f64 N N #s(literal 1 binary64)) (pow.f64 N #s(literal 4 binary64))) #s(literal -1 binary64)) (+.f64 N #s(literal 1 binary64))))","(*.f64 (/.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (+.f64 N #s(literal 1 binary64)))) (/.f64 (pow.f64 (+.f64 (fma.f64 N N #s(literal 1 binary64)) (pow.f64 N #s(literal 4 binary64))) #s(literal -1 binary64)) (-.f64 N #s(literal 1 binary64))))","(*.f64 (/.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1/2 binary64)))) (/.f64 (pow.f64 (+.f64 (fma.f64 N N #s(literal 1 binary64)) (pow.f64 N #s(literal 4 binary64))) #s(literal -1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1/2 binary64))))","(*.f64 (/.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1/2 binary64))) (/.f64 (pow.f64 (+.f64 (fma.f64 N N #s(literal 1 binary64)) (pow.f64 N #s(literal 4 binary64))) #s(literal -1 binary64)) (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1/2 binary64)) (fma.f64 N N #s(literal -1 binary64)))))","(*.f64 (/.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (/.f64 (pow.f64 (+.f64 (fma.f64 N N #s(literal 1 binary64)) (pow.f64 N #s(literal 4 binary64))) #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))))","(*.f64 (/.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N))) (/.f64 (pow.f64 (+.f64 (fma.f64 N N #s(literal 1 binary64)) (pow.f64 N #s(literal 4 binary64))) #s(literal -1 binary64)) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64))))","(*.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (/.f64 (+.f64 N #s(literal 1 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))","(*.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64))))) (/.f64 (+.f64 N #s(literal 1 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))","(*.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (/.f64 (+.f64 N #s(literal 1 binary64)) (+.f64 N #s(literal 1 binary64))))","(*.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (+.f64 N #s(literal 1 binary64)))) (/.f64 (+.f64 N #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64))))","(*.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1/2 binary64)))) (/.f64 (+.f64 N #s(literal 1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1/2 binary64))))","(*.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (/.f64 (+.f64 N #s(literal 1 binary64)) (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64))))","(*.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1/2 binary64))) (/.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1/2 binary64)) (fma.f64 N N #s(literal -1 binary64)))))","(*.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (/.f64 (+.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64))))","(*.f64 (/.f64 (+.f64 (pow.f64 N #s(literal 3/2 binary64)) #s(literal 1 binary64)) (sqrt.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))) (/.f64 (-.f64 (pow.f64 N #s(literal 3/2 binary64)) #s(literal 1 binary64)) (sqrt.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))))","(*.f64 (/.f64 (+.f64 (pow.f64 N #s(literal 3/2 binary64)) #s(literal 1 binary64)) (-.f64 (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)) (pow.f64 N #s(literal 4 binary64)))) (/.f64 (-.f64 (pow.f64 N #s(literal 3/2 binary64)) #s(literal 1 binary64)) (pow.f64 (-.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 N N)) #s(literal -1 binary64))))","(*.f64 (/.f64 (+.f64 (pow.f64 N #s(literal 3/2 binary64)) #s(literal 1 binary64)) (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64))) (/.f64 (-.f64 (pow.f64 N #s(literal 3/2 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64))))","(*.f64 (/.f64 (+.f64 (pow.f64 N #s(literal 3/2 binary64)) #s(literal 1 binary64)) (+.f64 (pow.f64 N #s(literal 6 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 3 binary64)))) (/.f64 (-.f64 (pow.f64 N #s(literal 3/2 binary64)) #s(literal 1 binary64)) (pow.f64 (+.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 (fma.f64 N N N) N)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64))) #s(literal -1 binary64))))","(*.f64 (/.f64 (+.f64 (pow.f64 N #s(literal 3/2 binary64)) #s(literal 1 binary64)) (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 3 binary64)) #s(literal 1 binary64))) (/.f64 (-.f64 (pow.f64 N #s(literal 3/2 binary64)) #s(literal 1 binary64)) (pow.f64 (-.f64 (+.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 N N N)) #s(literal -1 binary64))))","(*.f64 (/.f64 (+.f64 (pow.f64 N #s(literal 3/2 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) (/.f64 (-.f64 (pow.f64 N #s(literal 3/2 binary64)) #s(literal 1 binary64)) (/.f64 #s(literal -1 binary64) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N)))))))","(*.f64 (/.f64 (+.f64 (pow.f64 N #s(literal 3/2 binary64)) #s(literal 1 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (/.f64 (-.f64 (pow.f64 N #s(literal 3/2 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64)))","(*.f64 (/.f64 (+.f64 (pow.f64 N #s(literal 3/2 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64)) (/.f64 (-.f64 (pow.f64 N #s(literal 3/2 binary64)) #s(literal 1 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))","(*.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))","(*.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64))))) (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))","(*.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) (/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) (*.f64 N N)))) (/.f64 (-.f64 N #s(literal 1 binary64)) (+.f64 N #s(literal 1 binary64))))","(*.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (+.f64 N #s(literal 1 binary64)))) (/.f64 (-.f64 N #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64))))","(*.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1/2 binary64)))) (/.f64 (-.f64 N #s(literal 1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1/2 binary64))))","(*.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1/2 binary64))) (/.f64 (-.f64 N #s(literal 1 binary64)) (*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1/2 binary64)) (fma.f64 N N #s(literal -1 binary64)))))","(*.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (/.f64 (-.f64 N #s(literal 1 binary64)) (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64))))","(*.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64))))","(*.f64 (/.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (+.f64 N #s(literal 1 binary64))) (/.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))))","(*.f64 (/.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (+.f64 N #s(literal 1 binary64))) (/.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64)))","(*.f64 (/.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (+.f64 N #s(literal 1 binary64))) (/.f64 (pow.f64 (+.f64 (fma.f64 N N #s(literal 1 binary64)) (pow.f64 N #s(literal 4 binary64))) #s(literal -1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))))","(*.f64 (/.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (+.f64 N #s(literal 1 binary64))) (/.f64 (pow.f64 (+.f64 (fma.f64 N N #s(literal 1 binary64)) (pow.f64 N #s(literal 4 binary64))) #s(literal -1 binary64)) #s(literal 1 binary64)))","(*.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (+.f64 N #s(literal 1 binary64))) (/.f64 (+.f64 N #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))))","(*.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (+.f64 N #s(literal 1 binary64))) (/.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 1 binary64)))","(*.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) (+.f64 N #s(literal 1 binary64))) (/.f64 (-.f64 N #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))))","(*.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) (+.f64 N #s(literal 1 binary64))) (/.f64 (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64)))","(*.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N))) (/.f64 (+.f64 N #s(literal 1 binary64)) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64))))","(*.f64 (/.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (/.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (+.f64 N #s(literal 1 binary64))))","(*.f64 (/.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (/.f64 (pow.f64 (+.f64 (fma.f64 N N #s(literal 1 binary64)) (pow.f64 N #s(literal 4 binary64))) #s(literal -1 binary64)) (+.f64 N #s(literal 1 binary64))))","(*.f64 (/.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (/.f64 (pow.f64 (+.f64 (fma.f64 N N #s(literal 1 binary64)) (pow.f64 N #s(literal 4 binary64))) #s(literal -1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))))","(*.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (/.f64 (+.f64 N #s(literal 1 binary64)) (+.f64 N #s(literal 1 binary64))))","(*.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) (/.f64 (-.f64 N #s(literal 1 binary64)) (+.f64 N #s(literal 1 binary64))))","(*.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (-.f64 N #s(literal 1 binary64)))","(*.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))","(*.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N))) (-.f64 #s(literal 1 binary64) N))","(*.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N))) (/.f64 (-.f64 N #s(literal 1 binary64)) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64))))","(*.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (/.f64 (+.f64 N #s(literal 1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))))","(*.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (/.f64 (-.f64 N #s(literal 1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))))","(*.f64 (fma.f64 N N #s(literal 1 binary64)) (/.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))))","(*.f64 (fma.f64 N N #s(literal -1 binary64)) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (/.f64 (pow.f64 (+.f64 (fma.f64 N N #s(literal 1 binary64)) (pow.f64 N #s(literal 4 binary64))) #s(literal -1 binary64)) (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64))))","(*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N)))))","(pow.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64))) #s(literal -1 binary64))","(pow.f64 (/.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64))","(/.f64 (neg.f64 (neg.f64 (fma.f64 N N #s(literal -1 binary64)))) (neg.f64 (neg.f64 (+.f64 N #s(literal 1 binary64)))))","(/.f64 (neg.f64 (neg.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (neg.f64 (neg.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))))","(/.f64 (-.f64 (*.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (/.f64 #s(literal -1 binary64) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)))","(/.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N)))))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))","(/.f64 (-.f64 (*.f64 (pow.f64 N #s(literal 3 binary64)) (neg.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64))) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (neg.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))))","(/.f64 (-.f64 (*.f64 (pow.f64 N #s(literal 3 binary64)) (/.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1 binary64))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (/.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 1 binary64))))","(/.f64 (-.f64 (*.f64 (pow.f64 N #s(literal 3 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal 2 binary64)))","(/.f64 (-.f64 (*.f64 (fma.f64 N N N) N) (+.f64 N #s(literal 1 binary64))) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal 2 binary64)))","(/.f64 (exp.f64 (log.f64 (fma.f64 N N #s(literal -1 binary64)))) (exp.f64 (log1p.f64 N)))","(/.f64 (exp.f64 (log.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))","(/.f64 (neg.f64 (fma.f64 N N #s(literal -1 binary64))) (neg.f64 (-.f64 N #s(literal -1 binary64))))","(/.f64 (neg.f64 (fma.f64 N N #s(literal -1 binary64))) (neg.f64 (+.f64 N #s(literal 1 binary64))))","(/.f64 (neg.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (neg.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) (*.f64 N #s(literal -1 binary64))))))","(/.f64 (neg.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (neg.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))","(/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 N #s(literal -1 binary64)))","(/.f64 (fma.f64 N N #s(literal -1 binary64)) (+.f64 N #s(literal 1 binary64)))","(/.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (fma.f64 N N (-.f64 #s(literal 1 binary64) (*.f64 N #s(literal -1 binary64)))))","(/.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (+.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64)))))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))))","(/.f64 #s(literal 1 binary64) (/.f64 (+.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64))))","(/.f64 #s(literal 1 binary64) (/.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))))","(fma.f64 N #s(literal 1 binary64) #s(literal -1 binary64))","(fma.f64 #s(literal 1 binary64) N #s(literal -1 binary64))","(expm1.f64 (*.f64 (log.f64 N) #s(literal 1 binary64)))","(expm1.f64 (log.f64 N))","(-.f64 (/.f64 (/.f64 (pow.f64 N #s(literal 4 binary64)) (fma.f64 N N #s(literal 1 binary64))) (-.f64 N #s(literal -1 binary64))) (/.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (-.f64 N #s(literal -1 binary64))))","(-.f64 (/.f64 (*.f64 N N) (-.f64 N #s(literal -1 binary64))) (/.f64 #s(literal 1 binary64) (-.f64 N #s(literal -1 binary64))))","(-.f64 (/.f64 (/.f64 (pow.f64 N #s(literal 4 binary64)) (fma.f64 N N #s(literal 1 binary64))) (+.f64 N #s(literal 1 binary64))) (/.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) (+.f64 N #s(literal 1 binary64))))","(-.f64 (/.f64 (pow.f64 N #s(literal 3 binary64)) (fma.f64 N N (-.f64 #s(literal 1 binary64) (*.f64 N #s(literal -1 binary64))))) (/.f64 #s(literal 1 binary64) (fma.f64 N N (-.f64 #s(literal 1 binary64) (*.f64 N #s(literal -1 binary64))))))","(-.f64 (/.f64 (pow.f64 N #s(literal 3 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N)))))","(-.f64 (/.f64 (*.f64 N N) (+.f64 N #s(literal 1 binary64))) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(-.f64 N #s(literal 1 binary64))","(exp.f64 (log.f64 (-.f64 N #s(literal 1 binary64))))","(+.f64 #s(literal -1 binary64) N)","(+.f64 N #s(literal -1 binary64))","(*.f64 (pow.f64 (-.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 2 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) (/.f64 N (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64))))","(*.f64 (pow.f64 (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)) (/.f64 N (pow.f64 (-.f64 (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 2 binary64)) #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) N)) #s(literal -1 binary64))))","(*.f64 (/.f64 N (-.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 2 binary64)) #s(literal 1 binary64))) (/.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64))))","(*.f64 (/.f64 N (-.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 2 binary64)) #s(literal 1 binary64))) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)))","(*.f64 (/.f64 N (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 3 binary64)) #s(literal 1 binary64))) (/.f64 #s(literal 1 binary64) (pow.f64 (-.f64 (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 2 binary64)) #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) N)) #s(literal -1 binary64))))","(*.f64 (/.f64 N (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 3 binary64)) #s(literal 1 binary64))) (-.f64 (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 2 binary64)) #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) N)))","(*.f64 (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)) (pow.f64 (pow.f64 N #s(literal -1 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)) N)","(*.f64 (neg.f64 N) (pow.f64 (neg.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal -1 binary64)))","(*.f64 N (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)))","(*.f64 #s(literal 1 binary64) (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))","(pow.f64 (/.f64 (/.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) N) #s(literal 1 binary64)) #s(literal -1 binary64))","(pow.f64 (/.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) N) #s(literal -1 binary64))","(/.f64 (neg.f64 (neg.f64 (neg.f64 N))) (neg.f64 (neg.f64 (neg.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))))","(/.f64 (neg.f64 (neg.f64 N)) (neg.f64 (neg.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))))","(/.f64 (neg.f64 N) (neg.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (/.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) N) #s(literal 1 binary64))))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) N)))","(/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))","(/.f64 #s(literal 1 binary64) (neg.f64 (neg.f64 (/.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) N))))","(/.f64 #s(literal 1 binary64) (/.f64 (/.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) N) #s(literal 1 binary64)))","(/.f64 #s(literal 1 binary64) (/.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) N))","(neg.f64 (/.f64 (neg.f64 N) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))","(neg.f64 (/.f64 N (neg.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))))","(-.f64 (/.f64 #s(literal 0 binary64) (neg.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))) (/.f64 N (neg.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))))","(exp.f64 (*.f64 (log.f64 (/.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) N)) #s(literal -1 binary64)))"]],"stop":[["iter limit",1],["node limit",1],["iter limit",1]],"time":283.72900390625,"type":"rewrite"},{"compiler":[[25348,3572]],"memory":[[2225600,95175520]],"time":229.010009765625,"type":"eval"},{"alts":[["(atan2.f64 #s(literal 1 binary64) (fma.f64 (fma.f64 (*.f64 N N) N #s(literal 1 binary64)) (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64)))","next",0.40824130861065216,"binary64"],["(atan2.f64 #s(literal 1 binary64) (fma.f64 (/.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64))) (-.f64 N #s(literal 1 binary64)) N))","next",0.28419877930532605,"binary64"],["(atan2.f64 #s(literal 1 binary64) (fma.f64 (/.f64 #s(literal 1 binary64) (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) N #s(literal 1 binary64)))","fresh",0.47206884768442026,"binary64"],["(atan2.f64 #s(literal 1 binary64) (fma.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (/.f64 N (/.f64 #s(literal 1 binary64) (/.f64 (+.f64 N #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N))))) #s(literal 1 binary64)))","fresh",0.4089050781475362,"binary64"],["(atan2.f64 #s(literal 1 binary64) (fma.f64 (+.f64 #s(literal 1 binary64) N) N #s(literal 1 binary64)))","done",0.265625,"binary64"],["(atan2.f64 #s(literal 1 binary64) (fma.f64 (*.f64 (+.f64 N #s(literal 1 binary64)) (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)))) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 1 binary64)))","fresh",0.39880756837909415,"binary64"],["(atan2.f64 #s(literal 1 binary64) (fma.f64 #s(approx (- 1 (* N N)) (*.f64 (neg.f64 N) N)) (/.f64 N (-.f64 #s(literal 1 binary64) N)) #s(literal 1 binary64)))","fresh",2.1433644458525527,"binary64"],["(atan2.f64 #s(literal 1 binary64) (/.f64 #s(literal 1 binary64) #s(approx (pow (+ (* (+ N 1) N) 1) -1) (/.f64 (/.f64 #s(literal 1 binary64) N) N))))","next",3.460426506233577,"binary64"],["(atan2.f64 #s(literal 1 binary64) (/.f64 #s(literal 1 binary64) #s(approx (pow (+ (* (+ N 1) N) 1) -1) (*.f64 (/.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64))) (-.f64 N #s(literal 1 binary64))))))","fresh",1.8572089900704594,"binary64"],["(atan2.f64 #s(literal 1 binary64) #s(approx (/ 1 (pow (+ (* (+ N 1) N) 1) -1)) (fma.f64 N N N)))","next",2.1208237455288637,"binary64"],["(atan2.f64 #s(literal 1 binary64) #s(approx (/ 1 (pow (+ (* (+ N 1) N) 1) -1)) (-.f64 N #s(literal -1 binary64))))","next",59.06128682863241,"binary64"],["(atan2.f64 #s(literal 1 binary64) #s(approx (+ (* (+ 1 N) N) 1) (*.f64 N N)))","fresh",3.42698024626267,"binary64"],["(atan2.f64 #s(literal 1 binary64) #s(approx (+ (* (+ 1 N) N) 1) #s(literal 1 binary64)))","done",60.057922010139634,"binary64"],["#s(approx (atan2 1 (+ (* (+ (pow N 3) 1) (/ N (+ (* (- N 1) N) 1))) 1)) (atan2.f64 #s(literal 1 binary64) (+.f64 (/.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) N) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64))))","fresh",13.396528137927742,"binary64"]],"compiler":[[18,9],[15,7],[15,9],[22,10],[8,5],[22,10],[19,12],[19,13],[23,16],[18,12],[17,13],[13,9],[11,8],[36,22],[18,9],[15,7],[15,9],[22,10],[22,10],[19,12],[19,13],[23,16],[18,12],[17,13],[13,9],[36,22]],"count":[[932,14]],"kept":[{"done":[1,1],"fresh":[15,2],"new":[911,10],"picked":[5,1]}],"memory":[[-4103632,39506768]],"min-error":[[0.1171875,"binary64"]],"time":24.487060546875,"type":"prune"},{"egraph":[[0,8471,204,0.104735291],[6,2912,204,0.033081746],[5,724,204,0.012067767],[4,393,204,0.003326558],[3,243,204,0.001509414],[2,127,206,0.000939678],[1,79,220,0.000564309],[0,53,239,0.000481274],[0,30,246,0.000313361]],"inputs":[["(atan2.f64 #s(literal 1 binary64) (fma.f64 (/.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64))) (-.f64 N #s(literal 1 binary64)) N))","#s(literal 1 binary64)","(fma.f64 (/.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64))) (-.f64 N #s(literal 1 binary64)) N)","(/.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64)))","(fma.f64 N N #s(literal 1 binary64))","N","(-.f64 N #s(literal 1 binary64))","(atan2.f64 #s(literal 1 binary64) #s(approx (/ 1 (pow (+ (* (+ N 1) N) 1) -1)) (-.f64 N #s(literal -1 binary64))))","#s(literal 1 binary64)","#s(approx (/ 1 (pow (+ (* (+ N 1) N) 1) -1)) (-.f64 N #s(literal -1 binary64)))","(-.f64 N #s(literal -1 binary64))","N","#s(literal -1 binary64)","(atan2.f64 #s(literal 1 binary64) #s(approx (/ 1 (pow (+ (* (+ N 1) N) 1) -1)) (fma.f64 N N N)))","#s(literal 1 binary64)","#s(approx (/ 1 (pow (+ (* (+ N 1) N) 1) -1)) (fma.f64 N N N))","(fma.f64 N N N)","N","(atan2.f64 #s(literal 1 binary64) (/.f64 #s(literal 1 binary64) #s(approx (pow (+ (* (+ N 1) N) 1) -1) (/.f64 (/.f64 #s(literal 1 binary64) N) N))))","#s(literal 1 binary64)","(/.f64 #s(literal 1 binary64) #s(approx (pow (+ (* (+ N 1) N) 1) -1) (/.f64 (/.f64 #s(literal 1 binary64) N) N)))","#s(approx (pow (+ (* (+ N 1) N) 1) -1) (/.f64 (/.f64 #s(literal 1 binary64) N) N))","(/.f64 (/.f64 #s(literal 1 binary64) N) N)","(/.f64 #s(literal 1 binary64) N)","N","(atan2.f64 #s(literal 1 binary64) (fma.f64 (fma.f64 (*.f64 N N) N #s(literal 1 binary64)) (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64)))","#s(literal 1 binary64)","(fma.f64 (fma.f64 (*.f64 N N) N #s(literal 1 binary64)) (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64))","(fma.f64 (*.f64 N N) N #s(literal 1 binary64))","(*.f64 N N)","N","(/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))","(fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))","(-.f64 N #s(literal 1 binary64))"]],"locations":[["(*.f64 N N)","cost-diff",0],["(atan2.f64 #s(literal 1 binary64) (fma.f64 (fma.f64 (*.f64 N N) N #s(literal 1 binary64)) (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64)))","cost-diff",0],["(fma.f64 (*.f64 N N) N #s(literal 1 binary64))","cost-diff",1],["(fma.f64 (fma.f64 (*.f64 N N) N #s(literal 1 binary64)) (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64))","cost-diff",1],["(/.f64 (/.f64 #s(literal 1 binary64) N) N)","cost-diff",0],["#s(approx (pow (+ (* (+ N 1) N) 1) -1) (/.f64 (/.f64 #s(literal 1 binary64) N) N))","cost-diff",0],["(/.f64 #s(literal 1 binary64) #s(approx (pow (+ (* (+ N 1) N) 1) -1) (/.f64 (/.f64 #s(literal 1 binary64) N) N)))","cost-diff",0],["(atan2.f64 #s(literal 1 binary64) (/.f64 #s(literal 1 binary64) #s(approx (pow (+ (* (+ N 1) N) 1) -1) (/.f64 (/.f64 #s(literal 1 binary64) N) N))))","cost-diff",0],["(fma.f64 N N N)","cost-diff",0],["#s(approx (/ 1 (pow (+ (* (+ N 1) N) 1) -1)) (fma.f64 N N N))","cost-diff",0],["(atan2.f64 #s(literal 1 binary64) #s(approx (/ 1 (pow (+ (* (+ N 1) N) 1) -1)) (fma.f64 N N N)))","cost-diff",0],["(-.f64 N #s(literal -1 binary64))","cost-diff",0],["#s(approx (/ 1 (pow (+ (* (+ N 1) N) 1) -1)) (-.f64 N #s(literal -1 binary64)))","cost-diff",0],["(atan2.f64 #s(literal 1 binary64) #s(approx (/ 1 (pow (+ (* (+ N 1) N) 1) -1)) (-.f64 N #s(literal -1 binary64))))","cost-diff",0],["(fma.f64 N N #s(literal 1 binary64))","cost-diff",0],["(/.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64)))","cost-diff",0],["(atan2.f64 #s(literal 1 binary64) (fma.f64 (/.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64))) (-.f64 N #s(literal 1 binary64)) N))","cost-diff",0],["(fma.f64 (/.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64))) (-.f64 N #s(literal 1 binary64)) N)","cost-diff",7]],"memory":[[1278544,47671024]],"method":["egg-herbie"],"outputs":[["(atan2.f64 #s(literal 1 binary64) (fma.f64 (/.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64))) (-.f64 N #s(literal 1 binary64)) N))","(atan2.f64 #s(literal 1 binary64) (-.f64 (fma.f64 N N N) #s(literal -1 binary64)))","#s(literal 1 binary64)","(fma.f64 (/.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64))) (-.f64 N #s(literal 1 binary64)) N)","(-.f64 (fma.f64 N N N) #s(literal -1 binary64))","(/.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64)))","(fma.f64 N N #s(literal 1 binary64))","N","(-.f64 N #s(literal 1 binary64))","(atan2.f64 #s(literal 1 binary64) #s(approx (/ 1 (pow (+ (* (+ N 1) N) 1) -1)) (-.f64 N #s(literal -1 binary64))))","#s(literal 1 binary64)","#s(approx (/ 1 (pow (+ (* (+ N 1) N) 1) -1)) (-.f64 N #s(literal -1 binary64)))","(-.f64 N #s(literal -1 binary64))","N","#s(literal -1 binary64)","(atan2.f64 #s(literal 1 binary64) #s(approx (/ 1 (pow (+ (* (+ N 1) N) 1) -1)) (fma.f64 N N N)))","#s(literal 1 binary64)","#s(approx (/ 1 (pow (+ (* (+ N 1) N) 1) -1)) (fma.f64 N N N))","(fma.f64 N N N)","N","(atan2.f64 #s(literal 1 binary64) (/.f64 #s(literal 1 binary64) #s(approx (pow (+ (* (+ N 1) N) 1) -1) (/.f64 (/.f64 #s(literal 1 binary64) N) N))))","#s(literal 1 binary64)","(/.f64 #s(literal 1 binary64) #s(approx (pow (+ (* (+ N 1) N) 1) -1) (/.f64 (/.f64 #s(literal 1 binary64) N) N)))","#s(approx (pow (+ (* (+ N 1) N) 1) -1) (/.f64 (/.f64 #s(literal 1 binary64) N) N))","(/.f64 (/.f64 #s(literal 1 binary64) N) N)","(/.f64 #s(literal 1 binary64) N)","N","(atan2.f64 #s(literal 1 binary64) (fma.f64 (fma.f64 (*.f64 N N) N #s(literal 1 binary64)) (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64)))","(atan2.f64 #s(literal 1 binary64) (+.f64 (/.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) N) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64)))","#s(literal 1 binary64)","(fma.f64 (fma.f64 (*.f64 N N) N #s(literal 1 binary64)) (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64))","(+.f64 (/.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) N) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64))","(fma.f64 (*.f64 N N) N #s(literal 1 binary64))","(+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))","(*.f64 N N)","N","(/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))","(fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))","(-.f64 N #s(literal 1 binary64))"]],"stop":[["iter limit",1],["node limit",1],["iter limit",1]],"time":336.450927734375,"type":"simplify"},{"compiler":[[228,30]],"locations":[["(/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))","accuracy",0.2421875],["(atan2.f64 #s(literal 1 binary64) (fma.f64 (fma.f64 (*.f64 N N) N #s(literal 1 binary64)) (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64)))","accuracy",0.26953125],["(fma.f64 (*.f64 N N) N #s(literal 1 binary64))","accuracy",0.3046875],["(fma.f64 (fma.f64 (*.f64 N N) N #s(literal 1 binary64)) (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64))","accuracy",0.40072250976844204],["(/.f64 (/.f64 #s(literal 1 binary64) N) N)","accuracy",0.20703125],["(atan2.f64 #s(literal 1 binary64) (/.f64 #s(literal 1 binary64) #s(approx (pow (+ (* (+ N 1) N) 1) -1) (/.f64 (/.f64 #s(literal 1 binary64) N) N))))","accuracy",0.26953125],["(/.f64 #s(literal 1 binary64) #s(approx (pow (+ (* (+ N 1) N) 1) -1) (/.f64 (/.f64 #s(literal 1 binary64) N) N)))","accuracy",0.296875],["#s(approx (pow (+ (* (+ N 1) N) 1) -1) (/.f64 (/.f64 #s(literal 1 binary64) N) N))","accuracy",3.1976479824680464],["(fma.f64 N N N)","accuracy",0.0],["(atan2.f64 #s(literal 1 binary64) #s(approx (/ 1 (pow (+ (* (+ N 1) N) 1) -1)) (fma.f64 N N N)))","accuracy",0.26953125],["#s(approx (/ 1 (pow (+ (* (+ N 1) N) 1) -1)) (fma.f64 N N N))","accuracy",1.8528858617553696],["(-.f64 N #s(literal -1 binary64))","accuracy",0.0],["(atan2.f64 #s(literal 1 binary64) #s(approx (/ 1 (pow (+ (* (+ N 1) N) 1) -1)) (-.f64 N #s(literal -1 binary64))))","accuracy",0.26953125],["#s(approx (/ 1 (pow (+ (* (+ N 1) N) 1) -1)) (-.f64 N #s(literal -1 binary64)))","accuracy",59.06159732915332],["(-.f64 N #s(literal 1 binary64))","accuracy",0.0],["(fma.f64 (/.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64))) (-.f64 N #s(literal 1 binary64)) N)","accuracy",0.0234375],["(/.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64)))","accuracy",0.09765625],["(atan2.f64 #s(literal 1 binary64) (fma.f64 (/.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64))) (-.f64 N #s(literal 1 binary64)) N))","accuracy",0.26953125]],"memory":[[-3535952,28770160]],"mixsample":[[7.8583984375,"ival-div",0],[9.82421875,"ival-add",0],[10.359130859375,"ival-mult",0],[0.088623046875,"ival-assert",0],[5.139404296875,"ival-atan2",0],[2.469482421875,"ival-sub",0],[0.2275390625,"ival-true",0],[0.291259765625,"exact",0],[3.06982421875,"ival-pow",0]],"outcomes":[[55.510498046875,0,"valid",256]],"time":76.498046875,"type":"localize"},{"count":[[20,49]],"inputs":[["(fma.f64 (/.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64))) (-.f64 N #s(literal 1 binary64)) N)","(atan2.f64 #s(literal 1 binary64) (fma.f64 (/.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64))) (-.f64 N #s(literal 1 binary64)) N))","(/.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64)))","(fma.f64 N N #s(literal 1 binary64))","(atan2.f64 #s(literal 1 binary64) #s(approx (/ 1 (pow (+ (* (+ N 1) N) 1) -1)) (-.f64 N #s(literal -1 binary64))))","#s(approx (/ 1 (pow (+ (* (+ N 1) N) 1) -1)) (-.f64 N #s(literal -1 binary64)))","(-.f64 N #s(literal -1 binary64))","(atan2.f64 #s(literal 1 binary64) #s(approx (/ 1 (pow (+ (* (+ N 1) N) 1) -1)) (fma.f64 N N N)))","#s(approx (/ 1 (pow (+ (* (+ N 1) N) 1) -1)) (fma.f64 N N N))","(fma.f64 N N N)","(atan2.f64 #s(literal 1 binary64) (/.f64 #s(literal 1 binary64) #s(approx (pow (+ (* (+ N 1) N) 1) -1) (/.f64 (/.f64 #s(literal 1 binary64) N) N))))","(/.f64 #s(literal 1 binary64) #s(approx (pow (+ (* (+ N 1) N) 1) -1) (/.f64 (/.f64 #s(literal 1 binary64) N) N)))","#s(approx (pow (+ (* (+ N 1) N) 1) -1) (/.f64 (/.f64 #s(literal 1 binary64) N) N))","(/.f64 (/.f64 #s(literal 1 binary64) N) N)","(fma.f64 (fma.f64 (*.f64 N N) N #s(literal 1 binary64)) (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64))","(fma.f64 (*.f64 N N) N #s(literal 1 binary64))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (fma.f64 (*.f64 N N) N #s(literal 1 binary64)) (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64)))","(*.f64 N N)","(-.f64 N #s(literal 1 binary64))","(/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))"]],"memory":[[3285888,3285888]],"outputs":[["1","(+ 1 N)","(+ 1 (* N (+ 1 N)))","(atan2 1 (+ 1 (+ N (pow N 2))))","-1","(- (* -1 N) 1)","(- (* N (- (* -2 N) 1)) 1)","(- (* N (- (* N (- (* -2 N) 2)) 1)) 1)","(+ 1 (pow N 2))","(atan2 1 (+ 1 (* N (+ 1 N))))","N","(* N (+ 1 N))","(+ 1 (* -1 N))","(+ 1 (* N (- (pow N 2) 1)))","(+ 1 (* N (- (* (pow N 2) (+ 1 (* -1 N))) 1)))","(/ 1 (pow N 2))","(+ 1 (pow N 3))","(atan2 1 (+ 1 (/ (* N (+ 1 (pow N 3))) (+ 1 (* N (- N 1))))))","(pow N 2)","(- N 1)","(* N (+ 1 (* N (+ 1 (* -1 (pow N 2))))))","(* N (+ 1 (* N (+ 1 (* (pow N 2) (- (* -1 N) 1))))))","(* (pow N 2) (+ 1 (/ 1 N)))","(* (pow N 2) (+ 1 (+ (/ 1 N) (/ 1 (pow N 2)))))","(* N (+ 1 (/ 1 N)))","(* N (+ 1 (+ (/ 1 N) (/ 2 (pow N 2)))))","(* N (+ 1 (+ (/ 1 N) (+ (* 2 (/ 1 (pow N 3))) (/ 2 (pow N 2))))))","(* (pow N 2) (+ 1 (/ 1 (pow N 2))))","(/ (- 1 (/ 1 N)) (pow N 2))","(/ (- (+ 1 (/ 1 (pow N 3))) (/ 1 N)) (pow N 2))","(/ (- (+ 1 (/ 1 (pow N 3))) (+ (/ 1 N) (/ 1 (pow N 4)))) (pow N 2))","(pow N 3)","(* (pow N 3) (+ 1 (/ 1 (pow N 3))))","(atan2 1 (+ 1 (+ (/ N (- (+ 1 (pow N 2)) N)) (/ (pow N 4) (- (+ 1 (pow N 2)) N)))))","(* N (- 1 (/ 1 N)))","(/ 1 N)","(/ (+ 1 (/ 1 N)) N)","(/ (- (+ 1 (/ 1 N)) (/ 1 (pow N 3))) N)","(/ (+ 1 (+ (* -1 (/ (+ 1 (/ 1 N)) (pow N 3))) (/ 1 N))) N)","(atan2 1 (- (+ 1 (pow N 2)) (* -1 N)))","(* -1 (* N (- (* -1 (/ (+ 1 (* 2 (/ 1 N))) N)) 1)))","(* -1 (* N (- (* -1 (/ (+ 1 (+ (* 2 (/ 1 N)) (/ 2 (pow N 2)))) N)) 1)))","(atan2 1 (+ 1 (* N (- 1 (* -1 N)))))","(/ (+ 1 (* -1 (/ (- 1 (/ 1 (pow N 2))) N))) (pow N 2))","(/ (+ 1 (* -1 (/ (- (+ 1 (/ 1 (pow N 3))) (/ 1 (pow N 2))) N))) (pow N 2))","(atan2 1 (+ 1 (/ (* N (- 1 (* -1 (pow N 3)))) (+ 1 (+ (* -1 N) (pow N 2))))))","(* -1 (* N (- (/ 1 N) 1)))","(* -1 (/ (- (* -1 (/ (- 1 (/ 1 (pow N 2))) N)) 1) N))","(* -1 (/ (- (* -1 (/ (+ 1 (* -1 (/ (+ 1 (/ 1 N)) (pow N 2)))) N)) 1) N))"]],"series":[[2.25390625,"((+ (* (/ (+ (* N N) 1) (- N 1)) (- N 1)) N) (atan2 1 (+ (* (/ (+ (* N N) 1) (- N 1)) (- N 1)) N)) (/ (+ (* N N) 1) (- N 1)) (+ (* N N) 1) (atan2 1 (/ 1 (pow (+ (* (+ N 1) N) 1) -1))) (/ 1 (pow (+ (* (+ N 1) N) 1) -1)) (- N -1) (atan2 1 (/ 1 (pow (+ (* (+ N 1) N) 1) -1))) (/ 1 (pow (+ (* (+ N 1) N) 1) -1)) (+ (* N N) N) (atan2 1 (/ 1 (pow (+ (* (+ N 1) N) 1) -1))) (/ 1 (pow (+ (* (+ N 1) N) 1) -1)) (pow (+ (* (+ N 1) N) 1) -1) (/ (/ 1 N) N) (+ (* (+ (* (* N N) N) 1) (/ N (+ (* (- N 1) N) 1))) 1) (+ (* (* N N) N) 1) (atan2 1 (+ (* (+ (* (* N N) N) 1) (/ N (+ (* (- N 1) N) 1))) 1)) (* N N) (- N 1) (/ N (+ (* (- N 1) N) 1)))","N","-inf"],[1.5380859375,"((+ (* (/ (+ (* N N) 1) (- N 1)) (- N 1)) N) (atan2 1 (+ (* (/ (+ (* N N) 1) (- N 1)) (- N 1)) N)) (/ (+ (* N N) 1) (- N 1)) (+ (* N N) 1) (atan2 1 (/ 1 (pow (+ (* (+ N 1) N) 1) -1))) (/ 1 (pow (+ (* (+ N 1) N) 1) -1)) (- N -1) (atan2 1 (/ 1 (pow (+ (* (+ N 1) N) 1) -1))) (/ 1 (pow (+ (* (+ N 1) N) 1) -1)) (+ (* N N) N) (atan2 1 (/ 1 (pow (+ (* (+ N 1) N) 1) -1))) (/ 1 (pow (+ (* (+ N 1) N) 1) -1)) (pow (+ (* (+ N 1) N) 1) -1) (/ (/ 1 N) N) (+ (* (+ (* (* N N) N) 1) (/ N (+ (* (- N 1) N) 1))) 1) (+ (* (* N N) N) 1) (atan2 1 (+ (* (+ (* (* N N) N) 1) (/ N (+ (* (- N 1) N) 1))) 1)) (* N N) (- N 1) (/ N (+ (* (- N 1) N) 1)))","N","inf"],[1.261962890625,"((+ (* (/ (+ (* N N) 1) (- N 1)) (- N 1)) N) (atan2 1 (+ (* (/ (+ (* N N) 1) (- N 1)) (- N 1)) N)) (/ (+ (* N N) 1) (- N 1)) (+ (* N N) 1) (atan2 1 (/ 1 (pow (+ (* (+ N 1) N) 1) -1))) (/ 1 (pow (+ (* (+ N 1) N) 1) -1)) (- N -1) (atan2 1 (/ 1 (pow (+ (* (+ N 1) N) 1) -1))) (/ 1 (pow (+ (* (+ N 1) N) 1) -1)) (+ (* N N) N) (atan2 1 (/ 1 (pow (+ (* (+ N 1) N) 1) -1))) (/ 1 (pow (+ (* (+ N 1) N) 1) -1)) (pow (+ (* (+ N 1) N) 1) -1) (/ (/ 1 N) N) (+ (* (+ (* (* N N) N) 1) (/ N (+ (* (- N 1) N) 1))) 1) (+ (* (* N N) N) 1) (atan2 1 (+ (* (+ (* (* N N) N) 1) (/ N (+ (* (- N 1) N) 1))) 1)) (* N N) (- N 1) (/ N (+ (* (- N 1) N) 1)))","N","0"]],"time":6.069091796875,"type":"series"},{"count":[[49,48]],"egraph":[[0,8268,393,0.091163647],[3,4544,417,0.033789589],[2,991,421,0.014671442],[1,422,443,0.003330218],[0,152,465,0.001212943]],"inputs":[["1","(+ 1 N)","(+ 1 (* N (+ 1 N)))","(atan2 1 (+ 1 (+ N (pow N 2))))","-1","(- (* -1 N) 1)","(- (* N (- (* -2 N) 1)) 1)","(- (* N (- (* N (- (* -2 N) 2)) 1)) 1)","(+ 1 (pow N 2))","(atan2 1 (+ 1 (* N (+ 1 N))))","N","(* N (+ 1 N))","(+ 1 (* -1 N))","(+ 1 (* N (- (pow N 2) 1)))","(+ 1 (* N (- (* (pow N 2) (+ 1 (* -1 N))) 1)))","(/ 1 (pow N 2))","(+ 1 (pow N 3))","(atan2 1 (+ 1 (/ (* N (+ 1 (pow N 3))) (+ 1 (* N (- N 1))))))","(pow N 2)","(- N 1)","(* N (+ 1 (* N (+ 1 (* -1 (pow N 2))))))","(* N (+ 1 (* N (+ 1 (* (pow N 2) (- (* -1 N) 1))))))","(* (pow N 2) (+ 1 (/ 1 N)))","(* (pow N 2) (+ 1 (+ (/ 1 N) (/ 1 (pow N 2)))))","(* N (+ 1 (/ 1 N)))","(* N (+ 1 (+ (/ 1 N) (/ 2 (pow N 2)))))","(* N (+ 1 (+ (/ 1 N) (+ (* 2 (/ 1 (pow N 3))) (/ 2 (pow N 2))))))","(* (pow N 2) (+ 1 (/ 1 (pow N 2))))","(/ (- 1 (/ 1 N)) (pow N 2))","(/ (- (+ 1 (/ 1 (pow N 3))) (/ 1 N)) (pow N 2))","(/ (- (+ 1 (/ 1 (pow N 3))) (+ (/ 1 N) (/ 1 (pow N 4)))) (pow N 2))","(pow N 3)","(* (pow N 3) (+ 1 (/ 1 (pow N 3))))","(atan2 1 (+ 1 (+ (/ N (- (+ 1 (pow N 2)) N)) (/ (pow N 4) (- (+ 1 (pow N 2)) N)))))","(* N (- 1 (/ 1 N)))","(/ 1 N)","(/ (+ 1 (/ 1 N)) N)","(/ (- (+ 1 (/ 1 N)) (/ 1 (pow N 3))) N)","(/ (+ 1 (+ (* -1 (/ (+ 1 (/ 1 N)) (pow N 3))) (/ 1 N))) N)","(atan2 1 (- (+ 1 (pow N 2)) (* -1 N)))","(* -1 (* N (- (* -1 (/ (+ 1 (* 2 (/ 1 N))) N)) 1)))","(* -1 (* N (- (* -1 (/ (+ 1 (+ (* 2 (/ 1 N)) (/ 2 (pow N 2)))) N)) 1)))","(atan2 1 (+ 1 (* N (- 1 (* -1 N)))))","(/ (+ 1 (* -1 (/ (- 1 (/ 1 (pow N 2))) N))) (pow N 2))","(/ (+ 1 (* -1 (/ (- (+ 1 (/ 1 (pow N 3))) (/ 1 (pow N 2))) N))) (pow N 2))","(atan2 1 (+ 1 (/ (* N (- 1 (* -1 (pow N 3)))) (+ 1 (+ (* -1 N) (pow N 2))))))","(* -1 (* N (- (/ 1 N) 1)))","(* -1 (/ (- (* -1 (/ (- 1 (/ 1 (pow N 2))) N)) 1) N))","(* -1 (/ (- (* -1 (/ (+ 1 (* -1 (/ (+ 1 (/ 1 N)) (pow N 2)))) N)) 1) N))"]],"memory":[[1196256,41454048]],"method":["egg-herbie"],"outputs":[["1","#s(literal 1 binary64)","(+ 1 N)","(-.f64 N #s(literal -1 binary64))","(+ 1 (* N (+ 1 N)))","(fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64))","(atan2 1 (+ 1 (+ N (pow N 2))))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)))","-1","#s(literal -1 binary64)","(- (* -1 N) 1)","(-.f64 #s(literal -1 binary64) N)","(- (* N (- (* -2 N) 1)) 1)","(fma.f64 (fma.f64 #s(literal -2 binary64) N #s(literal -1 binary64)) N #s(literal -1 binary64))","(- (* N (- (* N (- (* -2 N) 2)) 1)) 1)","(fma.f64 (fma.f64 (fma.f64 #s(literal -2 binary64) N #s(literal -2 binary64)) N #s(literal -1 binary64)) N #s(literal -1 binary64))","(+ 1 (pow N 2))","(fma.f64 N N #s(literal 1 binary64))","(atan2 1 (+ 1 (* N (+ 1 N))))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)))","N","(* N (+ 1 N))","(fma.f64 N N N)","(+ 1 (* -1 N))","(-.f64 #s(literal 1 binary64) N)","(+ 1 (* N (- (pow N 2) 1)))","(fma.f64 (fma.f64 N N #s(literal -1 binary64)) N #s(literal 1 binary64))","(+ 1 (* N (- (* (pow N 2) (+ 1 (* -1 N))) 1)))","(*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) N))","(/ 1 (pow N 2))","(/.f64 #s(literal 1 binary64) (*.f64 N N))","(+ 1 (pow N 3))","(-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64))","(atan2 1 (+ 1 (/ (* N (+ 1 (pow N 3))) (+ 1 (* N (- N 1))))))","(atan2.f64 #s(literal 1 binary64) (+.f64 (/.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) N) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64)))","(pow N 2)","(*.f64 N N)","(- N 1)","(-.f64 N #s(literal 1 binary64))","(* N (+ 1 (* N (+ 1 (* -1 (pow N 2))))))","(fma.f64 (-.f64 N (pow.f64 N #s(literal 3 binary64))) N N)","(* N (+ 1 (* N (+ 1 (* (pow N 2) (- (* -1 N) 1))))))","(fma.f64 (fma.f64 (pow.f64 N #s(literal 3 binary64)) (-.f64 #s(literal -1 binary64) N) N) N N)","(* (pow N 2) (+ 1 (/ 1 N)))","(fma.f64 N N N)","(* (pow N 2) (+ 1 (+ (/ 1 N) (/ 1 (pow N 2)))))","(fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64))","(* N (+ 1 (/ 1 N)))","(-.f64 N #s(literal -1 binary64))","(* N (+ 1 (+ (/ 1 N) (/ 2 (pow N 2)))))","(-.f64 (/.f64 #s(literal 2 binary64) N) (-.f64 #s(literal -1 binary64) N))","(* N (+ 1 (+ (/ 1 N) (+ (* 2 (/ 1 (pow N 3))) (/ 2 (pow N 2))))))","(*.f64 (-.f64 N #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) (/.f64 (/.f64 #s(literal -2 binary64) N) N)))","(* (pow N 2) (+ 1 (/ 1 (pow N 2))))","(fma.f64 N N #s(literal 1 binary64))","(/ (- 1 (/ 1 N)) (pow N 2))","(*.f64 (-.f64 #s(literal 1 binary64) N) (/.f64 #s(literal -1 binary64) (pow.f64 N #s(literal 3 binary64))))","(/ (- (+ 1 (/ 1 (pow N 3))) (/ 1 N)) (pow N 2))","(/.f64 (-.f64 (+.f64 (pow.f64 (/.f64 #s(literal 1 binary64) N) #s(literal 3 binary64)) #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) N)) (*.f64 N N))","(/ (- (+ 1 (/ 1 (pow N 3))) (+ (/ 1 N) (/ 1 (pow N 4)))) (pow N 2))","(/.f64 (-.f64 (-.f64 (+.f64 (pow.f64 (/.f64 #s(literal 1 binary64) N) #s(literal 3 binary64)) #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) N)) (/.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64)))) (*.f64 N N))","(pow N 3)","(pow.f64 N #s(literal 3 binary64))","(* (pow N 3) (+ 1 (/ 1 (pow N 3))))","(-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64))","(atan2 1 (+ 1 (+ (/ N (- (+ 1 (pow N 2)) N)) (/ (pow N 4) (- (+ 1 (pow N 2)) N)))))","(atan2.f64 #s(literal 1 binary64) (+.f64 (/.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) N) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64)))","(* N (- 1 (/ 1 N)))","(-.f64 N #s(literal 1 binary64))","(/ 1 N)","(/.f64 #s(literal 1 binary64) N)","(/ (+ 1 (/ 1 N)) N)","(/.f64 (/.f64 (-.f64 N #s(literal -1 binary64)) N) N)","(/ (- (+ 1 (/ 1 N)) (/ 1 (pow N 3))) N)","(/.f64 (-.f64 (/.f64 (-.f64 #s(literal 1 binary64) (/.f64 #s(literal 1 binary64) (*.f64 N N))) N) #s(literal -1 binary64)) N)","(/ (+ 1 (+ (* -1 (/ (+ 1 (/ 1 N)) (pow N 3))) (/ 1 N))) N)","(/.f64 (-.f64 (/.f64 (-.f64 #s(literal 1 binary64) (/.f64 (/.f64 (/.f64 (-.f64 N #s(literal -1 binary64)) N) N) N)) N) #s(literal -1 binary64)) N)","(atan2 1 (- (+ 1 (pow N 2)) (* -1 N)))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)))","(* -1 (* N (- (* -1 (/ (+ 1 (* 2 (/ 1 N))) N)) 1)))","(-.f64 (/.f64 #s(literal 2 binary64) N) (-.f64 #s(literal -1 binary64) N))","(* -1 (* N (- (* -1 (/ (+ 1 (+ (* 2 (/ 1 N)) (/ 2 (pow N 2)))) N)) 1)))","(fma.f64 (/.f64 (fma.f64 (/.f64 (-.f64 N #s(literal -1 binary64)) N) (/.f64 #s(literal 2 binary64) N) #s(literal 1 binary64)) N) N N)","(atan2 1 (+ 1 (* N (- 1 (* -1 N)))))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)))","(/ (+ 1 (* -1 (/ (- 1 (/ 1 (pow N 2))) N))) (pow N 2))","(/.f64 (-.f64 (+.f64 (pow.f64 (/.f64 #s(literal 1 binary64) N) #s(literal 3 binary64)) #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) N)) (*.f64 N N))","(/ (+ 1 (* -1 (/ (- (+ 1 (/ 1 (pow N 3))) (/ 1 (pow N 2))) N))) (pow N 2))","(/.f64 (+.f64 (/.f64 (fma.f64 (-.f64 #s(literal 1 binary64) N) (/.f64 #s(literal -1 binary64) (pow.f64 N #s(literal 3 binary64))) #s(literal -1 binary64)) N) #s(literal 1 binary64)) (*.f64 N N))","(atan2 1 (+ 1 (/ (* N (- 1 (* -1 (pow N 3)))) (+ 1 (+ (* -1 N) (pow N 2))))))","(atan2.f64 #s(literal 1 binary64) (+.f64 (/.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) N) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64)))","(* -1 (* N (- (/ 1 N) 1)))","(-.f64 N #s(literal 1 binary64))","(* -1 (/ (- (* -1 (/ (- 1 (/ 1 (pow N 2))) N)) 1) N))","(/.f64 (-.f64 (/.f64 (-.f64 #s(literal 1 binary64) (/.f64 #s(literal 1 binary64) (*.f64 N N))) N) #s(literal -1 binary64)) N)","(* -1 (/ (- (* -1 (/ (+ 1 (* -1 (/ (+ 1 (/ 1 N)) (pow N 2)))) N)) 1) N))","(/.f64 (-.f64 (/.f64 (-.f64 #s(literal 1 binary64) (/.f64 (/.f64 (/.f64 (-.f64 N #s(literal -1 binary64)) N) N) N)) N) #s(literal -1 binary64)) N)"]],"stop":[["iter limit",1],["node limit",1]],"time":235.493896484375,"type":"simplify"},{"count":[[20,538]],"egraph":[[0,8237,174,0.076980818],[2,1679,179,0.027598939],[1,212,189,0.006085426],[0,53,205,0.001696283],[0,30,223,0.000329887]],"inputs":[["(fma.f64 (/.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64))) (-.f64 N #s(literal 1 binary64)) N)","(atan2.f64 #s(literal 1 binary64) (fma.f64 (/.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64))) (-.f64 N #s(literal 1 binary64)) N))","(/.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64)))","(fma.f64 N N #s(literal 1 binary64))","(atan2.f64 #s(literal 1 binary64) #s(approx (/ 1 (pow (+ (* (+ N 1) N) 1) -1)) (-.f64 N #s(literal -1 binary64))))","#s(approx (/ 1 (pow (+ (* (+ N 1) N) 1) -1)) (-.f64 N #s(literal -1 binary64)))","(-.f64 N #s(literal -1 binary64))","(atan2.f64 #s(literal 1 binary64) #s(approx (/ 1 (pow (+ (* (+ N 1) N) 1) -1)) (fma.f64 N N N)))","#s(approx (/ 1 (pow (+ (* (+ N 1) N) 1) -1)) (fma.f64 N N N))","(fma.f64 N N N)","(atan2.f64 #s(literal 1 binary64) (/.f64 #s(literal 1 binary64) #s(approx (pow (+ (* (+ N 1) N) 1) -1) (/.f64 (/.f64 #s(literal 1 binary64) N) N))))","(/.f64 #s(literal 1 binary64) #s(approx (pow (+ (* (+ N 1) N) 1) -1) (/.f64 (/.f64 #s(literal 1 binary64) N) N)))","#s(approx (pow (+ (* (+ N 1) N) 1) -1) (/.f64 (/.f64 #s(literal 1 binary64) N) N))","(/.f64 (/.f64 #s(literal 1 binary64) N) N)","(fma.f64 (fma.f64 (*.f64 N N) N #s(literal 1 binary64)) (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64))","(fma.f64 (*.f64 N N) N #s(literal 1 binary64))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (fma.f64 (*.f64 N N) N #s(literal 1 binary64)) (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64)))","(*.f64 N N)","(-.f64 N #s(literal 1 binary64))","(/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))"]],"memory":[[-3328784,56584672]],"outputs":[["(*.f64 (fma.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64)) #s(literal 1 binary64) (*.f64 (neg.f64 N) N)) (pow.f64 (fma.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 1 binary64) (neg.f64 N)) #s(literal -1 binary64)))","(*.f64 (fma.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 3 binary64)) #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64))) (pow.f64 (fma.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64)) #s(literal 1 binary64) (*.f64 N (-.f64 N (*.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 1 binary64))))) #s(literal -1 binary64)))","(pow.f64 (/.f64 (fma.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 1 binary64) (neg.f64 N)) (fma.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64)) #s(literal 1 binary64) (*.f64 (neg.f64 N) N))) #s(literal -1 binary64))","(pow.f64 (/.f64 (fma.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64)) #s(literal 1 binary64) (*.f64 N (-.f64 N (*.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 1 binary64))))) (fma.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 3 binary64)) #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64)))) #s(literal -1 binary64))","(/.f64 (neg.f64 (-.f64 (*.f64 N N) (pow.f64 (*.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 1 binary64)) #s(literal 2 binary64)))) (neg.f64 (-.f64 N (*.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 1 binary64)))))","(/.f64 (neg.f64 (neg.f64 (fma.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64)) #s(literal 1 binary64) (*.f64 (neg.f64 N) N)))) (neg.f64 (neg.f64 (fma.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 1 binary64) (neg.f64 N)))))","(/.f64 (neg.f64 (neg.f64 (fma.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 3 binary64)) #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64))))) (neg.f64 (neg.f64 (fma.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64)) #s(literal 1 binary64) (*.f64 N (-.f64 N (*.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 1 binary64))))))))","(/.f64 (-.f64 (*.f64 (pow.f64 (*.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 1 binary64)) #s(literal 2 binary64)) (fma.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 1 binary64) (neg.f64 N))) (*.f64 (fma.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 1 binary64) (neg.f64 N)) (*.f64 N N))) (*.f64 (fma.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 1 binary64) (neg.f64 N)) (fma.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 1 binary64) (neg.f64 N))))","(/.f64 (fma.f64 (*.f64 (neg.f64 (fma.f64 N N #s(literal 1 binary64))) (-.f64 N #s(literal 1 binary64))) #s(literal -1 binary64) (*.f64 (-.f64 #s(literal 1 binary64) N) (neg.f64 N))) (*.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)))","(/.f64 (fma.f64 (*.f64 (neg.f64 (fma.f64 N N #s(literal 1 binary64))) (-.f64 N #s(literal 1 binary64))) (pow.f64 N #s(literal -1 binary64)) (*.f64 (-.f64 #s(literal 1 binary64) N) #s(literal 1 binary64))) (*.f64 (-.f64 #s(literal 1 binary64) N) (pow.f64 N #s(literal -1 binary64))))","(/.f64 (fma.f64 (*.f64 (neg.f64 (fma.f64 N N #s(literal 1 binary64))) (-.f64 N #s(literal 1 binary64))) #s(literal 1 binary64) (*.f64 (-.f64 #s(literal 1 binary64) N) N)) (*.f64 (-.f64 #s(literal 1 binary64) N) #s(literal 1 binary64)))","(/.f64 (fma.f64 (*.f64 #s(literal 1 binary64) (-.f64 N #s(literal 1 binary64))) #s(literal -1 binary64) (*.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64))) (neg.f64 N))) (*.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64))) #s(literal -1 binary64)))","(/.f64 (fma.f64 (*.f64 #s(literal 1 binary64) (-.f64 N #s(literal 1 binary64))) (pow.f64 N #s(literal -1 binary64)) (*.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64))) #s(literal 1 binary64))) (*.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64))) (pow.f64 N #s(literal -1 binary64))))","(/.f64 (fma.f64 (*.f64 #s(literal 1 binary64) (-.f64 N #s(literal 1 binary64))) #s(literal 1 binary64) (*.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64))) N)) (*.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64))) #s(literal 1 binary64)))","(/.f64 (fma.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) (/.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64)))) #s(literal -1 binary64) (*.f64 (-.f64 N #s(literal -1 binary64)) (neg.f64 N))) (*.f64 (-.f64 N #s(literal -1 binary64)) #s(literal -1 binary64)))","(/.f64 (fma.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) (/.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64)))) (pow.f64 N #s(literal -1 binary64)) (-.f64 N #s(literal -1 binary64))) (*.f64 (-.f64 N #s(literal -1 binary64)) (pow.f64 N #s(literal -1 binary64))))","(/.f64 (fma.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) (/.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64)))) #s(literal 1 binary64) (fma.f64 N N N)) (-.f64 N #s(literal -1 binary64)))","(/.f64 (fma.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (/.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64)))) #s(literal -1 binary64) (*.f64 (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)) (neg.f64 N))) (*.f64 (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)))","(/.f64 (fma.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (/.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64)))) (pow.f64 N #s(literal -1 binary64)) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64))) (*.f64 (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)) (pow.f64 N #s(literal -1 binary64))))","(/.f64 (fma.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (/.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64)))) #s(literal 1 binary64) (*.f64 (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)) N)) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)))","(/.f64 (fma.f64 (*.f64 (/.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64))) (fma.f64 N N #s(literal -1 binary64))) #s(literal -1 binary64) (*.f64 (-.f64 N #s(literal -1 binary64)) (neg.f64 N))) (*.f64 (-.f64 N #s(literal -1 binary64)) #s(literal -1 binary64)))","(/.f64 (fma.f64 (*.f64 (/.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64))) (fma.f64 N N #s(literal -1 binary64))) (pow.f64 N #s(literal -1 binary64)) (-.f64 N #s(literal -1 binary64))) (*.f64 (-.f64 N #s(literal -1 binary64)) (pow.f64 N #s(literal -1 binary64))))","(/.f64 (fma.f64 (*.f64 (/.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64))) (fma.f64 N N #s(literal -1 binary64))) #s(literal 1 binary64) (fma.f64 N N N)) (-.f64 N #s(literal -1 binary64)))","(/.f64 (fma.f64 (*.f64 (/.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64))) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64) (*.f64 (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)) (neg.f64 N))) (*.f64 (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)))","(/.f64 (fma.f64 (*.f64 (/.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64))) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (pow.f64 N #s(literal -1 binary64)) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64))) (*.f64 (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)) (pow.f64 N #s(literal -1 binary64))))","(/.f64 (fma.f64 (*.f64 (/.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64))) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) #s(literal 1 binary64) (*.f64 (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)) N)) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)))","(/.f64 (fma.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) (neg.f64 (fma.f64 N N #s(literal 1 binary64)))) #s(literal -1 binary64) (*.f64 (-.f64 #s(literal 1 binary64) N) (neg.f64 N))) (*.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)))","(/.f64 (fma.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) (neg.f64 (fma.f64 N N #s(literal 1 binary64)))) (pow.f64 N #s(literal -1 binary64)) (*.f64 (-.f64 #s(literal 1 binary64) N) #s(literal 1 binary64))) (*.f64 (-.f64 #s(literal 1 binary64) N) (pow.f64 N #s(literal -1 binary64))))","(/.f64 (fma.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) (neg.f64 (fma.f64 N N #s(literal 1 binary64)))) #s(literal 1 binary64) (*.f64 (-.f64 #s(literal 1 binary64) N) N)) (*.f64 (-.f64 #s(literal 1 binary64) N) #s(literal 1 binary64)))","(/.f64 (fma.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64) (*.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64))) (neg.f64 N))) (*.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64))) #s(literal -1 binary64)))","(/.f64 (fma.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64)) (pow.f64 N #s(literal -1 binary64)) (*.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64))) #s(literal 1 binary64))) (*.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64))) (pow.f64 N #s(literal -1 binary64))))","(/.f64 (fma.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64) (*.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64))) N)) (*.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64))) #s(literal 1 binary64)))","(/.f64 (fma.f64 (neg.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64)))) #s(literal -1 binary64) (*.f64 (-.f64 #s(literal 1 binary64) N) (neg.f64 N))) (*.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)))","(/.f64 (fma.f64 (neg.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64)))) (pow.f64 N #s(literal -1 binary64)) (*.f64 (-.f64 #s(literal 1 binary64) N) #s(literal 1 binary64))) (*.f64 (-.f64 #s(literal 1 binary64) N) (pow.f64 N #s(literal -1 binary64))))","(/.f64 (fma.f64 (neg.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64)))) #s(literal 1 binary64) (*.f64 (-.f64 #s(literal 1 binary64) N) N)) (*.f64 (-.f64 #s(literal 1 binary64) N) #s(literal 1 binary64)))","(/.f64 (fma.f64 (*.f64 (neg.f64 (fma.f64 N N #s(literal 1 binary64))) (fma.f64 N N #s(literal -1 binary64))) #s(literal -1 binary64) (*.f64 (*.f64 (-.f64 #s(literal 1 binary64) N) (-.f64 N #s(literal -1 binary64))) (neg.f64 N))) (*.f64 (*.f64 (-.f64 #s(literal 1 binary64) N) (-.f64 N #s(literal -1 binary64))) #s(literal -1 binary64)))","(/.f64 (fma.f64 (*.f64 (neg.f64 (fma.f64 N N #s(literal 1 binary64))) (fma.f64 N N #s(literal -1 binary64))) (pow.f64 N #s(literal -1 binary64)) (*.f64 (*.f64 (-.f64 #s(literal 1 binary64) N) (-.f64 N #s(literal -1 binary64))) #s(literal 1 binary64))) (*.f64 (*.f64 (-.f64 #s(literal 1 binary64) N) (-.f64 N #s(literal -1 binary64))) (pow.f64 N #s(literal -1 binary64))))","(/.f64 (fma.f64 (*.f64 (neg.f64 (fma.f64 N N #s(literal 1 binary64))) (fma.f64 N N #s(literal -1 binary64))) #s(literal 1 binary64) (*.f64 (*.f64 (-.f64 #s(literal 1 binary64) N) (-.f64 N #s(literal -1 binary64))) N)) (*.f64 (*.f64 (-.f64 #s(literal 1 binary64) N) (-.f64 N #s(literal -1 binary64))) #s(literal 1 binary64)))","(/.f64 (fma.f64 (*.f64 (neg.f64 (fma.f64 N N #s(literal 1 binary64))) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64) (*.f64 (*.f64 (-.f64 #s(literal 1 binary64) N) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64))) (neg.f64 N))) (*.f64 (*.f64 (-.f64 #s(literal 1 binary64) N) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64))) #s(literal -1 binary64)))","(/.f64 (fma.f64 (*.f64 (neg.f64 (fma.f64 N N #s(literal 1 binary64))) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (pow.f64 N #s(literal -1 binary64)) (*.f64 (*.f64 (-.f64 #s(literal 1 binary64) N) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64))) (*.f64 (*.f64 (-.f64 #s(literal 1 binary64) N) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64))) (pow.f64 N #s(literal -1 binary64))))","(/.f64 (fma.f64 (*.f64 (neg.f64 (fma.f64 N N #s(literal 1 binary64))) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) #s(literal 1 binary64) (*.f64 (*.f64 (-.f64 #s(literal 1 binary64) N) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64))) N)) (*.f64 (*.f64 (-.f64 #s(literal 1 binary64) N) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64)))","(/.f64 (fma.f64 (*.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64) (*.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64))) (neg.f64 N))) (*.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64))) #s(literal -1 binary64)))","(/.f64 (fma.f64 (*.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (pow.f64 N #s(literal -1 binary64)) (*.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64))) (*.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64))) (pow.f64 N #s(literal -1 binary64))))","(/.f64 (fma.f64 (*.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) #s(literal 1 binary64) (*.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64))) N)) (*.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64)))","(/.f64 (fma.f64 (*.f64 #s(literal 1 binary64) (fma.f64 N N #s(literal -1 binary64))) #s(literal -1 binary64) (*.f64 (*.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64))) (-.f64 N #s(literal -1 binary64))) (neg.f64 N))) (*.f64 (*.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64))) (-.f64 N #s(literal -1 binary64))) #s(literal -1 binary64)))","(/.f64 (fma.f64 (*.f64 #s(literal 1 binary64) (fma.f64 N N #s(literal -1 binary64))) (pow.f64 N #s(literal -1 binary64)) (*.f64 (*.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64))) (-.f64 N #s(literal -1 binary64))) #s(literal 1 binary64))) (*.f64 (*.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64))) (-.f64 N #s(literal -1 binary64))) (pow.f64 N #s(literal -1 binary64))))","(/.f64 (fma.f64 (*.f64 #s(literal 1 binary64) (fma.f64 N N #s(literal -1 binary64))) #s(literal 1 binary64) (*.f64 (*.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64))) (-.f64 N #s(literal -1 binary64))) N)) (*.f64 (*.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64))) (-.f64 N #s(literal -1 binary64))) #s(literal 1 binary64)))","(/.f64 (fma.f64 (*.f64 #s(literal 1 binary64) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64) (*.f64 (*.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64))) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64))) (neg.f64 N))) (*.f64 (*.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64))) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64))) #s(literal -1 binary64)))","(/.f64 (fma.f64 (*.f64 #s(literal 1 binary64) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (pow.f64 N #s(literal -1 binary64)) (*.f64 (*.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64))) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64))) (*.f64 (*.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64))) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64))) (pow.f64 N #s(literal -1 binary64))))","(/.f64 (fma.f64 (*.f64 #s(literal 1 binary64) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) #s(literal 1 binary64) (*.f64 (*.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64))) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64))) N)) (*.f64 (*.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64))) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64)))","(/.f64 (fma.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) (neg.f64 (fma.f64 N N #s(literal 1 binary64)))) #s(literal -1 binary64) (*.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) N)) (neg.f64 N))) (*.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) N)) #s(literal -1 binary64)))","(/.f64 (fma.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) (neg.f64 (fma.f64 N N #s(literal 1 binary64)))) (pow.f64 N #s(literal -1 binary64)) (*.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) N)) #s(literal 1 binary64))) (*.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) N)) (pow.f64 N #s(literal -1 binary64))))","(/.f64 (fma.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) (neg.f64 (fma.f64 N N #s(literal 1 binary64)))) #s(literal 1 binary64) (*.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) N)) N)) (*.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) N)) #s(literal 1 binary64)))","(/.f64 (fma.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal 1 binary64))) #s(literal -1 binary64) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (neg.f64 N))) (*.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)))","(/.f64 (fma.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal 1 binary64))) (pow.f64 N #s(literal -1 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64))) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (pow.f64 N #s(literal -1 binary64))))","(/.f64 (fma.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal 1 binary64))) #s(literal 1 binary64) (*.f64 (fma.f64 N N #s(literal -1 binary64)) N)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64)))","(/.f64 (fma.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64) (*.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64)))) (neg.f64 N))) (*.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64)))) #s(literal -1 binary64)))","(/.f64 (fma.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64)) (pow.f64 N #s(literal -1 binary64)) (*.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64)))) #s(literal 1 binary64))) (*.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64)))) (pow.f64 N #s(literal -1 binary64))))","(/.f64 (fma.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64) (*.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64)))) N)) (*.f64 (*.f64 (-.f64 N #s(literal -1 binary64)) (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64)))) #s(literal 1 binary64)))","(/.f64 (fma.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (neg.f64 (fma.f64 N N #s(literal 1 binary64)))) #s(literal -1 binary64) (*.f64 (*.f64 (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) N)) (neg.f64 N))) (*.f64 (*.f64 (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) N)) #s(literal -1 binary64)))","(/.f64 (fma.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (neg.f64 (fma.f64 N N #s(literal 1 binary64)))) (pow.f64 N #s(literal -1 binary64)) (*.f64 (*.f64 (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) N)) #s(literal 1 binary64))) (*.f64 (*.f64 (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) N)) (pow.f64 N #s(literal -1 binary64))))","(/.f64 (fma.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (neg.f64 (fma.f64 N N #s(literal 1 binary64)))) #s(literal 1 binary64) (*.f64 (*.f64 (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) N)) N)) (*.f64 (*.f64 (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) N)) #s(literal 1 binary64)))","(/.f64 (fma.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64))) #s(literal -1 binary64) (*.f64 (*.f64 (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64))) (neg.f64 N))) (*.f64 (*.f64 (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64))) #s(literal -1 binary64)))","(/.f64 (fma.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64))) (pow.f64 N #s(literal -1 binary64)) (*.f64 (*.f64 (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64))) #s(literal 1 binary64))) (*.f64 (*.f64 (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64))) (pow.f64 N #s(literal -1 binary64))))","(/.f64 (fma.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64))) #s(literal 1 binary64) (*.f64 (*.f64 (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64))) N)) (*.f64 (*.f64 (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64))) #s(literal 1 binary64)))","(/.f64 (fma.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64) (*.f64 (*.f64 (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)) (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64)))) (neg.f64 N))) (*.f64 (*.f64 (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)) (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64)))) #s(literal -1 binary64)))","(/.f64 (fma.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64)) (pow.f64 N #s(literal -1 binary64)) (*.f64 (*.f64 (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)) (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64)))) #s(literal 1 binary64))) (*.f64 (*.f64 (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)) (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64)))) (pow.f64 N #s(literal -1 binary64))))","(/.f64 (fma.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64) (*.f64 (*.f64 (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)) (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64)))) N)) (*.f64 (*.f64 (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)) (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64)))) #s(literal 1 binary64)))","(/.f64 (fma.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64))) #s(literal -1 binary64) (*.f64 (-.f64 N #s(literal 1 binary64)) (neg.f64 N))) (*.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(/.f64 (fma.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64))) (pow.f64 N #s(literal -1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))) (*.f64 (-.f64 N #s(literal 1 binary64)) (pow.f64 N #s(literal -1 binary64))))","(/.f64 (fma.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64))) #s(literal 1 binary64) (*.f64 (-.f64 N #s(literal 1 binary64)) N)) (*.f64 (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64)))","(/.f64 (fma.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64) (*.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) (-.f64 N #s(literal -1 binary64))) (neg.f64 N))) (*.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) (-.f64 N #s(literal -1 binary64))) #s(literal -1 binary64)))","(/.f64 (fma.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (pow.f64 N #s(literal -1 binary64)) (*.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) (-.f64 N #s(literal -1 binary64))) #s(literal 1 binary64))) (*.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) (-.f64 N #s(literal -1 binary64))) (pow.f64 N #s(literal -1 binary64))))","(/.f64 (fma.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64) (*.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) (-.f64 N #s(literal -1 binary64))) N)) (*.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) (-.f64 N #s(literal -1 binary64))) #s(literal 1 binary64)))","(/.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64) (*.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64))) (neg.f64 N))) (*.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64))) #s(literal -1 binary64)))","(/.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) (pow.f64 N #s(literal -1 binary64)) (*.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64))) #s(literal 1 binary64))) (*.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64))) (pow.f64 N #s(literal -1 binary64))))","(/.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64) (*.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64))) N)) (*.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64))) #s(literal 1 binary64)))","(/.f64 (+.f64 #s(literal -1 binary64) (*.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64)))) (neg.f64 N))) (*.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64)))) #s(literal -1 binary64)))","(/.f64 (+.f64 (pow.f64 N #s(literal -1 binary64)) (*.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64)))) #s(literal 1 binary64))) (*.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64)))) (pow.f64 N #s(literal -1 binary64))))","(/.f64 (+.f64 #s(literal 1 binary64) (*.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64)))) N)) (*.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64)))) #s(literal 1 binary64)))","(/.f64 (fma.f64 (neg.f64 N) (-.f64 #s(literal 1 binary64) N) (*.f64 #s(literal -1 binary64) (*.f64 (neg.f64 (fma.f64 N N #s(literal 1 binary64))) (-.f64 N #s(literal 1 binary64))))) (*.f64 #s(literal -1 binary64) (-.f64 #s(literal 1 binary64) N)))","(/.f64 (fma.f64 (neg.f64 N) (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64))) (*.f64 #s(literal -1 binary64) (*.f64 #s(literal 1 binary64) (-.f64 N #s(literal 1 binary64))))) (*.f64 #s(literal -1 binary64) (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64)))))","(/.f64 (fma.f64 (neg.f64 N) (-.f64 N #s(literal -1 binary64)) (*.f64 #s(literal -1 binary64) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (/.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64)))))) (*.f64 #s(literal -1 binary64) (-.f64 N #s(literal -1 binary64))))","(/.f64 (fma.f64 (neg.f64 N) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)) (*.f64 #s(literal -1 binary64) (*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (/.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64)))))) (*.f64 #s(literal -1 binary64) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64))))","(/.f64 (fma.f64 (neg.f64 N) (-.f64 N #s(literal -1 binary64)) (*.f64 #s(literal -1 binary64) (*.f64 (/.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64))) (fma.f64 N N #s(literal -1 binary64))))) (*.f64 #s(literal -1 binary64) (-.f64 N #s(literal -1 binary64))))","(/.f64 (fma.f64 (neg.f64 N) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)) (*.f64 #s(literal -1 binary64) (*.f64 (/.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64))) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))))) (*.f64 #s(literal -1 binary64) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64))))","(/.f64 (fma.f64 (neg.f64 N) (-.f64 #s(literal 1 binary64) N) (*.f64 #s(literal -1 binary64) (*.f64 (-.f64 N #s(literal 1 binary64)) (neg.f64 (fma.f64 N N #s(literal 1 binary64)))))) (*.f64 #s(literal -1 binary64) (-.f64 #s(literal 1 binary64) N)))","(/.f64 (fma.f64 (neg.f64 N) (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64))) (*.f64 #s(literal -1 binary64) (*.f64 (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64)))) (*.f64 #s(literal -1 binary64) (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64)))))","(/.f64 (fma.f64 (neg.f64 N) (-.f64 #s(literal 1 binary64) N) (*.f64 #s(literal -1 binary64) (neg.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64)))))) (*.f64 #s(literal -1 binary64) (-.f64 #s(literal 1 binary64) N)))","(/.f64 (fma.f64 (neg.f64 N) (*.f64 (-.f64 #s(literal 1 binary64) N) (-.f64 N #s(literal -1 binary64))) (*.f64 #s(literal -1 binary64) (*.f64 (neg.f64 (fma.f64 N N #s(literal 1 binary64))) (fma.f64 N N #s(literal -1 binary64))))) (*.f64 #s(literal -1 binary64) (*.f64 (-.f64 #s(literal 1 binary64) N) (-.f64 N #s(literal -1 binary64)))))","(/.f64 (fma.f64 (neg.f64 N) (*.f64 (-.f64 #s(literal 1 binary64) N) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64))) (*.f64 #s(literal -1 binary64) (*.f64 (neg.f64 (fma.f64 N N #s(literal 1 binary64))) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))))) (*.f64 #s(literal -1 binary64) (*.f64 (-.f64 #s(literal 1 binary64) N) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)))))","(/.f64 (fma.f64 (neg.f64 N) (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64))) (*.f64 #s(literal -1 binary64) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))))) (*.f64 #s(literal -1 binary64) (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)))))","(/.f64 (fma.f64 (neg.f64 N) (*.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64))) (-.f64 N #s(literal -1 binary64))) (*.f64 #s(literal -1 binary64) (*.f64 #s(literal 1 binary64) (fma.f64 N N #s(literal -1 binary64))))) (*.f64 #s(literal -1 binary64) (*.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64))) (-.f64 N #s(literal -1 binary64)))))","(/.f64 (fma.f64 (neg.f64 N) (*.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64))) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64))) (*.f64 #s(literal -1 binary64) (*.f64 #s(literal 1 binary64) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))))) (*.f64 #s(literal -1 binary64) (*.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64))) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)))))","(/.f64 (fma.f64 (neg.f64 N) (*.f64 (-.f64 N #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) N)) (*.f64 #s(literal -1 binary64) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (neg.f64 (fma.f64 N N #s(literal 1 binary64)))))) (*.f64 #s(literal -1 binary64) (*.f64 (-.f64 N #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) N))))","(/.f64 (fma.f64 (neg.f64 N) (fma.f64 N N #s(literal -1 binary64)) (*.f64 #s(literal -1 binary64) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal 1 binary64))))) (*.f64 #s(literal -1 binary64) (fma.f64 N N #s(literal -1 binary64))))","(/.f64 (fma.f64 (neg.f64 N) (*.f64 (-.f64 N #s(literal -1 binary64)) (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64)))) (*.f64 #s(literal -1 binary64) (*.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64)))) (*.f64 #s(literal -1 binary64) (*.f64 (-.f64 N #s(literal -1 binary64)) (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64))))))","(/.f64 (fma.f64 (neg.f64 N) (*.f64 (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) N)) (*.f64 #s(literal -1 binary64) (*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (neg.f64 (fma.f64 N N #s(literal 1 binary64)))))) (*.f64 #s(literal -1 binary64) (*.f64 (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) N))))","(/.f64 (fma.f64 (neg.f64 N) (*.f64 (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64))) (*.f64 #s(literal -1 binary64) (*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64))))) (*.f64 #s(literal -1 binary64) (*.f64 (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64)))))","(/.f64 (fma.f64 (neg.f64 N) (*.f64 (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)) (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64)))) (*.f64 #s(literal -1 binary64) (*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64)))) (*.f64 #s(literal -1 binary64) (*.f64 (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)) (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64))))))","(/.f64 (fma.f64 (neg.f64 N) (-.f64 N #s(literal 1 binary64)) (*.f64 #s(literal -1 binary64) (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64))))) (-.f64 #s(literal 1 binary64) N))","(/.f64 (fma.f64 (neg.f64 N) (*.f64 (-.f64 N #s(literal 1 binary64)) (-.f64 N #s(literal -1 binary64))) (*.f64 #s(literal -1 binary64) (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)))) (*.f64 #s(literal -1 binary64) (*.f64 (-.f64 N #s(literal 1 binary64)) (-.f64 N #s(literal -1 binary64)))))","(/.f64 (fma.f64 (neg.f64 N) (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64))) (-.f64 #s(literal 1 binary64) N)) (*.f64 #s(literal -1 binary64) (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64)))))","(/.f64 (fma.f64 (neg.f64 N) (/.f64 (-.f64 N #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64)))) #s(literal -1 binary64)) (*.f64 #s(literal -1 binary64) (/.f64 (-.f64 N #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64))))))","(/.f64 (fma.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) N) (*.f64 (pow.f64 N #s(literal -1 binary64)) (*.f64 (neg.f64 (fma.f64 N N #s(literal 1 binary64))) (-.f64 N #s(literal 1 binary64))))) (*.f64 (pow.f64 N #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) N)))","(/.f64 (fma.f64 #s(literal 1 binary64) (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64))) (*.f64 (pow.f64 N #s(literal -1 binary64)) (*.f64 #s(literal 1 binary64) (-.f64 N #s(literal 1 binary64))))) (*.f64 (pow.f64 N #s(literal -1 binary64)) (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64)))))","(/.f64 (fma.f64 #s(literal 1 binary64) (-.f64 N #s(literal -1 binary64)) (*.f64 (pow.f64 N #s(literal -1 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (/.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64)))))) (*.f64 (pow.f64 N #s(literal -1 binary64)) (-.f64 N #s(literal -1 binary64))))","(/.f64 (+.f64 (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)) (*.f64 (pow.f64 N #s(literal -1 binary64)) (*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (/.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64)))))) (*.f64 (pow.f64 N #s(literal -1 binary64)) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64))))","(/.f64 (fma.f64 #s(literal 1 binary64) (-.f64 N #s(literal -1 binary64)) (*.f64 (pow.f64 N #s(literal -1 binary64)) (*.f64 (/.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64))) (fma.f64 N N #s(literal -1 binary64))))) (*.f64 (pow.f64 N #s(literal -1 binary64)) (-.f64 N #s(literal -1 binary64))))","(/.f64 (+.f64 (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)) (*.f64 (pow.f64 N #s(literal -1 binary64)) (*.f64 (/.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64))) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))))) (*.f64 (pow.f64 N #s(literal -1 binary64)) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64))))","(/.f64 (fma.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) N) (*.f64 (pow.f64 N #s(literal -1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) (neg.f64 (fma.f64 N N #s(literal 1 binary64)))))) (*.f64 (pow.f64 N #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) N)))","(/.f64 (fma.f64 #s(literal 1 binary64) (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64))) (*.f64 (pow.f64 N #s(literal -1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64)))) (*.f64 (pow.f64 N #s(literal -1 binary64)) (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64)))))","(/.f64 (fma.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) N) (*.f64 (pow.f64 N #s(literal -1 binary64)) (neg.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64)))))) (*.f64 (pow.f64 N #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) N)))","(/.f64 (fma.f64 #s(literal 1 binary64) (*.f64 (-.f64 #s(literal 1 binary64) N) (-.f64 N #s(literal -1 binary64))) (*.f64 (pow.f64 N #s(literal -1 binary64)) (*.f64 (neg.f64 (fma.f64 N N #s(literal 1 binary64))) (fma.f64 N N #s(literal -1 binary64))))) (*.f64 (pow.f64 N #s(literal -1 binary64)) (*.f64 (-.f64 #s(literal 1 binary64) N) (-.f64 N #s(literal -1 binary64)))))","(/.f64 (fma.f64 #s(literal 1 binary64) (*.f64 (-.f64 #s(literal 1 binary64) N) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64))) (*.f64 (pow.f64 N #s(literal -1 binary64)) (*.f64 (neg.f64 (fma.f64 N N #s(literal 1 binary64))) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))))) (*.f64 (pow.f64 N #s(literal -1 binary64)) (*.f64 (-.f64 #s(literal 1 binary64) N) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)))))","(/.f64 (fma.f64 #s(literal 1 binary64) (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64))) (*.f64 (pow.f64 N #s(literal -1 binary64)) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))))) (*.f64 (pow.f64 N #s(literal -1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)))))","(/.f64 (fma.f64 #s(literal 1 binary64) (*.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64))) (-.f64 N #s(literal -1 binary64))) (*.f64 (pow.f64 N #s(literal -1 binary64)) (*.f64 #s(literal 1 binary64) (fma.f64 N N #s(literal -1 binary64))))) (*.f64 (pow.f64 N #s(literal -1 binary64)) (*.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64))) (-.f64 N #s(literal -1 binary64)))))","(/.f64 (fma.f64 #s(literal 1 binary64) (*.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64))) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64))) (*.f64 (pow.f64 N #s(literal -1 binary64)) (*.f64 #s(literal 1 binary64) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))))) (*.f64 (pow.f64 N #s(literal -1 binary64)) (*.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64))) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)))))","(/.f64 (fma.f64 #s(literal 1 binary64) (*.f64 (-.f64 N #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) N)) (*.f64 (pow.f64 N #s(literal -1 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (neg.f64 (fma.f64 N N #s(literal 1 binary64)))))) (*.f64 (pow.f64 N #s(literal -1 binary64)) (*.f64 (-.f64 N #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) N))))","(/.f64 (fma.f64 #s(literal 1 binary64) (fma.f64 N N #s(literal -1 binary64)) (*.f64 (pow.f64 N #s(literal -1 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal 1 binary64))))) (*.f64 (pow.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))))","(/.f64 (fma.f64 #s(literal 1 binary64) (*.f64 (-.f64 N #s(literal -1 binary64)) (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64)))) (*.f64 (pow.f64 N #s(literal -1 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64)))) (*.f64 (pow.f64 N #s(literal -1 binary64)) (*.f64 (-.f64 N #s(literal -1 binary64)) (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64))))))","(/.f64 (fma.f64 #s(literal 1 binary64) (*.f64 (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) N)) (*.f64 (pow.f64 N #s(literal -1 binary64)) (*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (neg.f64 (fma.f64 N N #s(literal 1 binary64)))))) (*.f64 (pow.f64 N #s(literal -1 binary64)) (*.f64 (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) N))))","(/.f64 (fma.f64 #s(literal 1 binary64) (*.f64 (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64))) (*.f64 (pow.f64 N #s(literal -1 binary64)) (*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64))))) (*.f64 (pow.f64 N #s(literal -1 binary64)) (*.f64 (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64)))))","(/.f64 (fma.f64 #s(literal 1 binary64) (*.f64 (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)) (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64)))) (*.f64 (pow.f64 N #s(literal -1 binary64)) (*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64)))) (*.f64 (pow.f64 N #s(literal -1 binary64)) (*.f64 (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)) (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64))))))","(/.f64 (fma.f64 #s(literal 1 binary64) (-.f64 N #s(literal 1 binary64)) (*.f64 (pow.f64 N #s(literal -1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64))))) (*.f64 (pow.f64 N #s(literal -1 binary64)) (-.f64 N #s(literal 1 binary64))))","(/.f64 (fma.f64 #s(literal 1 binary64) (*.f64 (-.f64 N #s(literal 1 binary64)) (-.f64 N #s(literal -1 binary64))) (*.f64 (pow.f64 N #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)))) (*.f64 (pow.f64 N #s(literal -1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) (-.f64 N #s(literal -1 binary64)))))","(/.f64 (fma.f64 #s(literal 1 binary64) (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64))) (*.f64 (pow.f64 N #s(literal -1 binary64)) (-.f64 N #s(literal 1 binary64)))) (*.f64 (pow.f64 N #s(literal -1 binary64)) (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64)))))","(/.f64 (fma.f64 #s(literal 1 binary64) (/.f64 (-.f64 N #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64)))) (pow.f64 N #s(literal -1 binary64))) (*.f64 (pow.f64 N #s(literal -1 binary64)) (/.f64 (-.f64 N #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64))))))","(/.f64 (fma.f64 N (-.f64 #s(literal 1 binary64) N) (*.f64 #s(literal 1 binary64) (*.f64 (neg.f64 (fma.f64 N N #s(literal 1 binary64))) (-.f64 N #s(literal 1 binary64))))) (*.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) N)))","(/.f64 (fma.f64 N (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64))) (*.f64 #s(literal 1 binary64) (*.f64 #s(literal 1 binary64) (-.f64 N #s(literal 1 binary64))))) (*.f64 #s(literal 1 binary64) (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64)))))","(/.f64 (fma.f64 (-.f64 N #s(literal -1 binary64)) N (*.f64 #s(literal 1 binary64) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (/.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64)))))) (*.f64 #s(literal 1 binary64) (-.f64 N #s(literal -1 binary64))))","(/.f64 (fma.f64 N (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)) (*.f64 #s(literal 1 binary64) (*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (/.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64)))))) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)))","(/.f64 (fma.f64 (-.f64 N #s(literal -1 binary64)) N (*.f64 #s(literal 1 binary64) (*.f64 (/.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64))) (fma.f64 N N #s(literal -1 binary64))))) (*.f64 #s(literal 1 binary64) (-.f64 N #s(literal -1 binary64))))","(/.f64 (fma.f64 N (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)) (*.f64 #s(literal 1 binary64) (*.f64 (/.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64))) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))))) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)))","(/.f64 (fma.f64 N (-.f64 #s(literal 1 binary64) N) (*.f64 #s(literal 1 binary64) (*.f64 (-.f64 N #s(literal 1 binary64)) (neg.f64 (fma.f64 N N #s(literal 1 binary64)))))) (*.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) N)))","(/.f64 (fma.f64 N (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64))) (*.f64 #s(literal 1 binary64) (*.f64 (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64)))) (*.f64 #s(literal 1 binary64) (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64)))))","(/.f64 (fma.f64 N (-.f64 #s(literal 1 binary64) N) (*.f64 #s(literal 1 binary64) (neg.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64)))))) (*.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) N)))","(/.f64 (fma.f64 N (*.f64 (-.f64 #s(literal 1 binary64) N) (-.f64 N #s(literal -1 binary64))) (*.f64 #s(literal 1 binary64) (*.f64 (neg.f64 (fma.f64 N N #s(literal 1 binary64))) (fma.f64 N N #s(literal -1 binary64))))) (*.f64 #s(literal 1 binary64) (*.f64 (-.f64 #s(literal 1 binary64) N) (-.f64 N #s(literal -1 binary64)))))","(/.f64 (fma.f64 N (*.f64 (-.f64 #s(literal 1 binary64) N) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64))) (*.f64 #s(literal 1 binary64) (*.f64 (neg.f64 (fma.f64 N N #s(literal 1 binary64))) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))))) (*.f64 #s(literal 1 binary64) (*.f64 (-.f64 #s(literal 1 binary64) N) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)))))","(/.f64 (fma.f64 N (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64))) (*.f64 #s(literal 1 binary64) (*.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))))) (*.f64 #s(literal 1 binary64) (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)))))","(/.f64 (fma.f64 N (*.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64))) (-.f64 N #s(literal -1 binary64))) (*.f64 #s(literal 1 binary64) (*.f64 #s(literal 1 binary64) (fma.f64 N N #s(literal -1 binary64))))) (*.f64 #s(literal 1 binary64) (*.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64))) (-.f64 N #s(literal -1 binary64)))))","(/.f64 (fma.f64 N (*.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64))) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64))) (*.f64 #s(literal 1 binary64) (*.f64 #s(literal 1 binary64) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))))) (*.f64 #s(literal 1 binary64) (*.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64))) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)))))","(/.f64 (fma.f64 N (*.f64 (-.f64 N #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) N)) (*.f64 #s(literal 1 binary64) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (neg.f64 (fma.f64 N N #s(literal 1 binary64)))))) (*.f64 #s(literal 1 binary64) (*.f64 (-.f64 N #s(literal -1 binary64)) (-.f64 #s(literal 1 binary64) N))))","(/.f64 (fma.f64 N (fma.f64 N N #s(literal -1 binary64)) (*.f64 #s(literal 1 binary64) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal 1 binary64))))) (*.f64 #s(literal 1 binary64) (fma.f64 N N #s(literal -1 binary64))))","(/.f64 (fma.f64 N (*.f64 (-.f64 N #s(literal -1 binary64)) (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64)))) (*.f64 #s(literal 1 binary64) (*.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64)))) (*.f64 #s(literal 1 binary64) (*.f64 (-.f64 N #s(literal -1 binary64)) (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64))))))","(/.f64 (fma.f64 N (*.f64 (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) N)) (*.f64 #s(literal 1 binary64) (*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (neg.f64 (fma.f64 N N #s(literal 1 binary64)))))) (*.f64 #s(literal 1 binary64) (*.f64 (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) N))))","(/.f64 (fma.f64 N (*.f64 (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64))) (*.f64 #s(literal 1 binary64) (*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64))))) (*.f64 #s(literal 1 binary64) (*.f64 (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64)))))","(/.f64 (fma.f64 N (*.f64 (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)) (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64)))) (*.f64 #s(literal 1 binary64) (*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64)))) (*.f64 #s(literal 1 binary64) (*.f64 (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)) (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64))))))","(/.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N (*.f64 #s(literal 1 binary64) (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64))))) (*.f64 #s(literal 1 binary64) (-.f64 N #s(literal 1 binary64))))","(/.f64 (fma.f64 N (*.f64 (-.f64 N #s(literal 1 binary64)) (-.f64 N #s(literal -1 binary64))) (*.f64 #s(literal 1 binary64) (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)))) (*.f64 #s(literal 1 binary64) (*.f64 (-.f64 N #s(literal 1 binary64)) (-.f64 N #s(literal -1 binary64)))))","(/.f64 (fma.f64 N (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64))) (*.f64 #s(literal 1 binary64) (-.f64 N #s(literal 1 binary64)))) (*.f64 #s(literal 1 binary64) (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64)))))","(/.f64 (fma.f64 N (/.f64 (-.f64 N #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64)))) #s(literal 1 binary64)) (*.f64 #s(literal 1 binary64) (/.f64 (-.f64 N #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64))))))","(/.f64 (-.f64 (*.f64 N N) (pow.f64 (*.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 1 binary64)) #s(literal 2 binary64))) (-.f64 N (*.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 1 binary64))))","(/.f64 (neg.f64 (fma.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64)) #s(literal 1 binary64) (*.f64 (neg.f64 N) N))) (neg.f64 (fma.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 1 binary64) (neg.f64 N))))","(/.f64 (neg.f64 (fma.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 3 binary64)) #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64)))) (neg.f64 (fma.f64 N N (-.f64 (pow.f64 (*.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 1 binary64)) #s(literal 2 binary64)) (*.f64 (*.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 1 binary64)) N)))))","(/.f64 (neg.f64 (fma.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 3 binary64)) #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64)))) (neg.f64 (fma.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64)) #s(literal 1 binary64) (*.f64 N (-.f64 N (*.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 1 binary64)))))))","(/.f64 (fma.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64)) #s(literal 1 binary64) (*.f64 (neg.f64 N) N)) (fma.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 1 binary64) (neg.f64 N)))","(/.f64 (fma.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 3 binary64)) #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64))) (fma.f64 N N (-.f64 (pow.f64 (*.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 1 binary64)) #s(literal 2 binary64)) (*.f64 (*.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 1 binary64)) N))))","(/.f64 (fma.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 3 binary64)) #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64))) (fma.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64)) #s(literal 1 binary64) (*.f64 N (-.f64 N (*.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 1 binary64))))))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (fma.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 1 binary64) (neg.f64 N)) (fma.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64)) #s(literal 1 binary64) (*.f64 (neg.f64 N) N)))))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (fma.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64)) #s(literal 1 binary64) (*.f64 N (-.f64 N (*.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 1 binary64))))) (fma.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 3 binary64)) #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64))))))","(/.f64 #s(literal 1 binary64) (/.f64 (fma.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 1 binary64) (neg.f64 N)) (fma.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64)) #s(literal 1 binary64) (*.f64 (neg.f64 N) N))))","(/.f64 #s(literal 1 binary64) (/.f64 (fma.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 2 binary64)) #s(literal 1 binary64) (*.f64 N (-.f64 N (*.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 1 binary64))))) (fma.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 3 binary64)) #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64)))))","(fma.f64 (/.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64))) (fma.f64 N N #s(literal -1 binary64))) (-.f64 N #s(literal -1 binary64)) N)","(fma.f64 (/.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64))) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)) N)","(fma.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64))) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) N)","(fma.f64 (/.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64))) (-.f64 N #s(literal 1 binary64)) N)","(fma.f64 (-.f64 N #s(literal 1 binary64)) (/.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64))) N)","(fma.f64 (fma.f64 N N #s(literal 1 binary64)) (/.f64 (-.f64 #s(literal 1 binary64) N) (-.f64 #s(literal 1 binary64) N)) N)","(fma.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 1 binary64) N)","(fma.f64 #s(literal 1 binary64) N (*.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 1 binary64)))","(fma.f64 N #s(literal 1 binary64) (*.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 1 binary64)))","(-.f64 (/.f64 (pow.f64 (*.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 1 binary64)) #s(literal 2 binary64)) (fma.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 1 binary64) (neg.f64 N))) (/.f64 (*.f64 N N) (fma.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 1 binary64) (neg.f64 N))))","(+.f64 (*.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 1 binary64)) N)","(+.f64 N (*.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 1 binary64)))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 1 binary64) N))","(*.f64 (pow.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64)) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64)) (pow.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N N)) #s(literal -1 binary64)))","(*.f64 (/.f64 (fma.f64 N N #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (-.f64 N #s(literal -1 binary64)))","(*.f64 (/.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)))","(*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (pow.f64 (pow.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64)))","(*.f64 (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (fma.f64 N N #s(literal 1 binary64)))","(*.f64 (neg.f64 (fma.f64 N N #s(literal 1 binary64))) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)))","(*.f64 (fma.f64 N N #s(literal 1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(*.f64 #s(literal 1 binary64) (/.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64))))","(pow.f64 (/.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64))) #s(literal 1 binary64)) #s(literal -1 binary64))","(pow.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64))) #s(literal -1 binary64))","(/.f64 (neg.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))) (neg.f64 (fma.f64 N N #s(literal -1 binary64))))","(/.f64 (neg.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))) (neg.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N N))))","(/.f64 (neg.f64 (neg.f64 (neg.f64 (fma.f64 N N #s(literal 1 binary64))))) (neg.f64 (neg.f64 (-.f64 #s(literal 1 binary64) N))))","(/.f64 (neg.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64))) (neg.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 N #s(literal 1 binary64)))))","(/.f64 (neg.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64))) (neg.f64 (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N N)) (-.f64 N #s(literal 1 binary64)))))","(/.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (fma.f64 N N #s(literal -1 binary64)))","(/.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N N)))","(/.f64 (neg.f64 (*.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 1 binary64))) (-.f64 #s(literal 1 binary64) N))","(/.f64 (neg.f64 (neg.f64 (fma.f64 N N #s(literal 1 binary64)))) (neg.f64 (-.f64 #s(literal 1 binary64) N)))","(/.f64 (neg.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) (neg.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64)))))","(/.f64 (neg.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64))) (neg.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N N)))))","(/.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64)) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 N #s(literal 1 binary64))))","(/.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64)) (*.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N N)) (-.f64 N #s(literal 1 binary64))))","(/.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64))))","(/.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N N))))","(/.f64 (neg.f64 (fma.f64 N N #s(literal 1 binary64))) (-.f64 #s(literal 1 binary64) N))","(/.f64 (*.f64 (fma.f64 N N #s(literal 1 binary64)) #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64)))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64))) #s(literal 1 binary64))))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64)))))","(/.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64)))","(/.f64 #s(literal 1 binary64) (neg.f64 (neg.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64))))))","(/.f64 #s(literal 1 binary64) (/.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64))) #s(literal 1 binary64)))","(/.f64 #s(literal 1 binary64) (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64))))","(neg.f64 (/.f64 (neg.f64 (fma.f64 N N #s(literal 1 binary64))) (-.f64 N #s(literal 1 binary64))))","(neg.f64 (/.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) N)))","(exp.f64 (*.f64 (log.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64)))) #s(literal -1 binary64)))","(*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)))","(*.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (pow.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N N)) #s(literal -1 binary64)))","(pow.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64))","(pow.f64 (/.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N N)) (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64))","(/.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64)))) (neg.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N))))","(/.f64 (neg.f64 (neg.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)))) (neg.f64 (neg.f64 (fma.f64 N N #s(literal -1 binary64)))))","(/.f64 (neg.f64 (neg.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)))) (neg.f64 (neg.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N N)))))","(/.f64 (-.f64 (*.f64 (pow.f64 N #s(literal 4 binary64)) (fma.f64 N N #s(literal -1 binary64))) (*.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal 1 binary64))) (*.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))))","(/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64))) (-.f64 #s(literal 1 binary64) (*.f64 N N)))","(/.f64 (neg.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))) (neg.f64 (fma.f64 N N #s(literal -1 binary64))))","(/.f64 (neg.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64))) (neg.f64 (+.f64 #s(literal 1 binary64) (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 N N)))))","(/.f64 (neg.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64))) (neg.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N N))))","(/.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64)))","(/.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (+.f64 #s(literal 1 binary64) (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 N N))))","(/.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N N)))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)))))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N N)) (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)))))","(/.f64 #s(literal 1 binary64) (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64))))","(/.f64 #s(literal 1 binary64) (/.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) #s(literal 1 binary64)) (*.f64 N N)) (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64))))","(fma.f64 (exp.f64 (log.f64 N)) (exp.f64 (log.f64 N)) #s(literal 1 binary64))","(fma.f64 (/.f64 N #s(literal -1 binary64)) (neg.f64 N) #s(literal 1 binary64))","(fma.f64 (neg.f64 N) (neg.f64 N) #s(literal 1 binary64))","(fma.f64 (*.f64 N N) #s(literal 1 binary64) #s(literal 1 binary64))","(fma.f64 #s(literal 1 binary64) (*.f64 N N) #s(literal 1 binary64))","(fma.f64 N N #s(literal 1 binary64))","(-.f64 (/.f64 (pow.f64 N #s(literal 4 binary64)) (fma.f64 N N #s(literal -1 binary64))) (pow.f64 (fma.f64 N N #s(literal -1 binary64)) #s(literal -1 binary64)))","(+.f64 (*.f64 N N) #s(literal 1 binary64))","(+.f64 #s(literal 1 binary64) (*.f64 N N))","(atan2.f64 #s(literal 1 binary64) #s(approx (/ 1 (pow (+ (* (+ N 1) N) 1) -1)) (-.f64 N #s(literal -1 binary64))))","#s(approx (/ 1 (pow (+ (* (+ N 1) N) 1) -1)) (-.f64 N #s(literal -1 binary64)))","(*.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (-.f64 N #s(literal -1 binary64)))","(*.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)))","(*.f64 (fma.f64 N N #s(literal -1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)) (pow.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) #s(literal -1 binary64)))","(*.f64 (-.f64 N #s(literal -1 binary64)) #s(literal 1 binary64))","(pow.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64))) #s(literal -1 binary64))","(pow.f64 (/.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64))) #s(literal -1 binary64))","(/.f64 (neg.f64 (neg.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)))) (neg.f64 (neg.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)))))","(/.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N))) (neg.f64 (-.f64 #s(literal 1 binary64) N)))","(/.f64 (neg.f64 (neg.f64 (fma.f64 N N #s(literal -1 binary64)))) (neg.f64 (-.f64 #s(literal 1 binary64) N)))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (-.f64 #s(literal 1 binary64) N)) (*.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) (*.f64 (-.f64 N #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) N)))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (/.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64))) (*.f64 (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))) (*.f64 (-.f64 N #s(literal 1 binary64)) (/.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64))))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (-.f64 N #s(literal 1 binary64))) (*.f64 (-.f64 N #s(literal 1 binary64)) #s(literal 1 binary64))) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal 2 binary64)))","(/.f64 (-.f64 (*.f64 (pow.f64 N #s(literal 3 binary64)) (fma.f64 N N (-.f64 #s(literal 1 binary64) N))) (*.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) #s(literal -1 binary64))) (*.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) (fma.f64 N N (-.f64 #s(literal 1 binary64) N))))","(/.f64 (neg.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64))) (neg.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N))))","(/.f64 (neg.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64))) (neg.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))","(/.f64 (neg.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64))) (neg.f64 (*.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))))","(/.f64 (neg.f64 (+.f64 (pow.f64 N #s(literal 9 binary64)) #s(literal 1 binary64))) (neg.f64 (*.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) (-.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (pow.f64 N #s(literal 3 binary64))))))","(/.f64 (neg.f64 (fma.f64 N N #s(literal -1 binary64))) (-.f64 #s(literal 1 binary64) N))","(/.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (*.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))))","(/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 N #s(literal 1 binary64)))","(/.f64 (+.f64 (pow.f64 N #s(literal 9 binary64)) #s(literal 1 binary64)) (*.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) (-.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (pow.f64 N #s(literal 3 binary64)))))","(/.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (-.f64 #s(literal 1 binary64) N))","(/.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)) (fma.f64 N N (-.f64 #s(literal 1 binary64) N)))","(/.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64)))))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)))))","(/.f64 #s(literal 1 binary64) (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64))))","(/.f64 #s(literal 1 binary64) (/.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64))))","(fma.f64 #s(literal 1 binary64) N #s(literal 1 binary64))","(fma.f64 N #s(literal 1 binary64) #s(literal 1 binary64))","(-.f64 (/.f64 (*.f64 N N) (-.f64 N #s(literal 1 binary64))) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)))","(-.f64 (/.f64 (pow.f64 N #s(literal 3 binary64)) (fma.f64 N N (-.f64 #s(literal 1 binary64) N))) (/.f64 #s(literal -1 binary64) (fma.f64 N N (-.f64 #s(literal 1 binary64) N))))","(-.f64 N #s(literal -1 binary64))","(+.f64 #s(literal 1 binary64) N)","(+.f64 N #s(literal 1 binary64))","(atan2.f64 #s(literal 1 binary64) #s(approx (/ 1 (pow (+ (* (+ N 1) N) 1) -1)) (fma.f64 N N N)))","#s(approx (/ 1 (pow (+ (* (+ N 1) N) 1) -1)) (fma.f64 N N N))","(*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 N N)) (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal -1 binary64)))","(*.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) (pow.f64 N #s(literal 3 binary64))) (pow.f64 (fma.f64 N (-.f64 N (*.f64 N N)) (pow.f64 N #s(literal 4 binary64))) #s(literal -1 binary64)))","(*.f64 (-.f64 N #s(literal -1 binary64)) N)","(*.f64 (fma.f64 N N N) #s(literal 1 binary64))","(*.f64 #s(literal 1 binary64) (fma.f64 N N N))","(*.f64 N (-.f64 N #s(literal -1 binary64)))","(pow.f64 (/.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 N N))) #s(literal -1 binary64))","(pow.f64 (/.f64 (fma.f64 N (-.f64 N (*.f64 N N)) (pow.f64 N #s(literal 4 binary64))) (+.f64 (pow.f64 N #s(literal 6 binary64)) (pow.f64 N #s(literal 3 binary64)))) #s(literal -1 binary64))","(/.f64 (neg.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 N N)) #s(literal 1 binary64))) (neg.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N)))","(/.f64 (neg.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) (pow.f64 N #s(literal 3 binary64))) #s(literal 1 binary64))) (neg.f64 (fma.f64 N (-.f64 N (*.f64 N N)) (pow.f64 N #s(literal 4 binary64)))))","(/.f64 (neg.f64 (-.f64 (*.f64 N N) (pow.f64 N #s(literal 4 binary64)))) (neg.f64 (-.f64 N (*.f64 N N))))","(/.f64 (neg.f64 (neg.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 N N)))) (neg.f64 (neg.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N))))","(/.f64 (neg.f64 (neg.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) (pow.f64 N #s(literal 3 binary64))))) (neg.f64 (neg.f64 (fma.f64 N (-.f64 N (*.f64 N N)) (pow.f64 N #s(literal 4 binary64))))))","(/.f64 (neg.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) N)) (-.f64 #s(literal 1 binary64) N))","(/.f64 (neg.f64 (*.f64 N (fma.f64 N N #s(literal -1 binary64)))) (-.f64 #s(literal 1 binary64) N))","(/.f64 (-.f64 (*.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) N)) (*.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) (*.f64 N N))) (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 2 binary64)))","(/.f64 (fma.f64 (neg.f64 N) #s(literal -1 binary64) (*.f64 (/.f64 #s(literal -1 binary64) N) (neg.f64 N))) (*.f64 (/.f64 #s(literal -1 binary64) N) #s(literal -1 binary64)))","(/.f64 (fma.f64 (neg.f64 N) (pow.f64 N #s(literal -1 binary64)) (*.f64 (/.f64 #s(literal -1 binary64) N) #s(literal 1 binary64))) (*.f64 (/.f64 #s(literal -1 binary64) N) (pow.f64 N #s(literal -1 binary64))))","(/.f64 (fma.f64 (neg.f64 N) #s(literal 1 binary64) (*.f64 (/.f64 #s(literal -1 binary64) N) N)) (*.f64 (/.f64 #s(literal -1 binary64) N) #s(literal 1 binary64)))","(/.f64 (+.f64 #s(literal -1 binary64) (*.f64 (pow.f64 N #s(literal -2 binary64)) (neg.f64 N))) (*.f64 (pow.f64 N #s(literal -2 binary64)) #s(literal -1 binary64)))","(/.f64 (+.f64 (pow.f64 N #s(literal -1 binary64)) (pow.f64 N #s(literal -2 binary64))) (*.f64 (pow.f64 N #s(literal -2 binary64)) (pow.f64 N #s(literal -1 binary64))))","(/.f64 (+.f64 #s(literal 1 binary64) (*.f64 (pow.f64 N #s(literal -2 binary64)) N)) (pow.f64 N #s(literal -2 binary64)))","(/.f64 (+.f64 (neg.f64 N) (*.f64 (pow.f64 N #s(literal -1 binary64)) (neg.f64 N))) (*.f64 (pow.f64 N #s(literal -1 binary64)) #s(literal -1 binary64)))","(/.f64 (fma.f64 N (pow.f64 N #s(literal -1 binary64)) (pow.f64 N #s(literal -1 binary64))) (pow.f64 N #s(literal -2 binary64)))","(/.f64 (+.f64 N (*.f64 (pow.f64 N #s(literal -1 binary64)) N)) (pow.f64 N #s(literal -1 binary64)))","(/.f64 (fma.f64 (neg.f64 N) (/.f64 #s(literal -1 binary64) N) (*.f64 #s(literal -1 binary64) (neg.f64 N))) (pow.f64 N #s(literal -1 binary64)))","(/.f64 (fma.f64 (neg.f64 N) (pow.f64 N #s(literal -2 binary64)) #s(literal -1 binary64)) (*.f64 #s(literal -1 binary64) (pow.f64 N #s(literal -2 binary64))))","(/.f64 (fma.f64 (neg.f64 N) (pow.f64 N #s(literal -1 binary64)) (neg.f64 N)) (/.f64 #s(literal -1 binary64) N))","(/.f64 (+.f64 (/.f64 #s(literal -1 binary64) N) (*.f64 (pow.f64 N #s(literal -1 binary64)) (neg.f64 N))) (*.f64 (pow.f64 N #s(literal -1 binary64)) (/.f64 #s(literal -1 binary64) N)))","(/.f64 (+.f64 (pow.f64 N #s(literal -2 binary64)) (pow.f64 N #s(literal -1 binary64))) (*.f64 (pow.f64 N #s(literal -1 binary64)) (pow.f64 N #s(literal -2 binary64))))","(/.f64 (+.f64 (pow.f64 N #s(literal -1 binary64)) (*.f64 (pow.f64 N #s(literal -1 binary64)) N)) (pow.f64 N #s(literal -2 binary64)))","(/.f64 (fma.f64 N (/.f64 #s(literal -1 binary64) N) (*.f64 #s(literal 1 binary64) (neg.f64 N))) (/.f64 #s(literal -1 binary64) N))","(/.f64 (fma.f64 N (pow.f64 N #s(literal -2 binary64)) #s(literal 1 binary64)) (pow.f64 N #s(literal -2 binary64)))","(/.f64 (fma.f64 N (pow.f64 N #s(literal -1 binary64)) N) (pow.f64 N #s(literal -1 binary64)))","(/.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 N N)) #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) N))","(/.f64 (*.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) (pow.f64 N #s(literal 3 binary64))) #s(literal 1 binary64)) (fma.f64 N (-.f64 N (*.f64 N N)) (pow.f64 N #s(literal 4 binary64))))","(/.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) N) (-.f64 N #s(literal 1 binary64)))","(/.f64 (*.f64 N (fma.f64 N N #s(literal -1 binary64))) (-.f64 N #s(literal 1 binary64)))","(/.f64 (-.f64 (*.f64 N N) (pow.f64 N #s(literal 4 binary64))) (-.f64 N (*.f64 N N)))","(/.f64 (neg.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)) N)) (neg.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) N))))","(/.f64 (neg.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 N N))) (neg.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N)))","(/.f64 (neg.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) (pow.f64 N #s(literal 3 binary64)))) (neg.f64 (fma.f64 N N (-.f64 (pow.f64 N #s(literal 4 binary64)) (pow.f64 N #s(literal 3 binary64))))))","(/.f64 (neg.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) (pow.f64 N #s(literal 3 binary64)))) (neg.f64 (fma.f64 N (-.f64 N (*.f64 N N)) (pow.f64 N #s(literal 4 binary64)))))","(/.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)) N) (fma.f64 N N (-.f64 #s(literal 1 binary64) N)))","(/.f64 (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 N N)) (*.f64 (-.f64 N #s(literal 1 binary64)) N))","(/.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) (pow.f64 N #s(literal 3 binary64))) (fma.f64 N N (-.f64 (pow.f64 N #s(literal 4 binary64)) (pow.f64 N #s(literal 3 binary64)))))","(/.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) (pow.f64 N #s(literal 3 binary64))) (fma.f64 N (-.f64 N (*.f64 N N)) (pow.f64 N #s(literal 4 binary64))))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 N N)))))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (fma.f64 N (-.f64 N (*.f64 N N)) (pow.f64 N #s(literal 4 binary64))) (+.f64 (pow.f64 N #s(literal 6 binary64)) (pow.f64 N #s(literal 3 binary64))))))","(/.f64 #s(literal 1 binary64) (/.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) (-.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 N N))))","(/.f64 #s(literal 1 binary64) (/.f64 (fma.f64 N (-.f64 N (*.f64 N N)) (pow.f64 N #s(literal 4 binary64))) (+.f64 (pow.f64 N #s(literal 6 binary64)) (pow.f64 N #s(literal 3 binary64)))))","(fma.f64 (exp.f64 (log.f64 N)) (exp.f64 (log.f64 N)) N)","(fma.f64 (/.f64 N #s(literal -1 binary64)) (neg.f64 N) N)","(fma.f64 (neg.f64 N) (neg.f64 N) N)","(fma.f64 (*.f64 N N) #s(literal 1 binary64) N)","(fma.f64 #s(literal 1 binary64) (*.f64 N N) N)","(fma.f64 #s(literal 1 binary64) N (*.f64 N N))","(fma.f64 N #s(literal 1 binary64) (*.f64 N N))","(fma.f64 N N N)","(-.f64 (/.f64 (pow.f64 N #s(literal 4 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) N)) (/.f64 (*.f64 N N) (*.f64 (-.f64 N #s(literal 1 binary64)) N)))","(+.f64 (*.f64 N N) N)","(+.f64 N (*.f64 N N))","(atan2.f64 #s(literal 1 binary64) (pow.f64 #s(approx (pow (+ (* (+ N 1) N) 1) -1) (pow.f64 N #s(literal -2 binary64))) #s(literal -1 binary64)))","(*.f64 (pow.f64 #s(approx (pow (+ (* (+ N 1) N) 1) -1) (pow.f64 N #s(literal -2 binary64))) #s(literal -1/2 binary64)) (pow.f64 #s(approx (pow (+ (* (+ N 1) N) 1) -1) (pow.f64 N #s(literal -2 binary64))) #s(literal -1/2 binary64)))","(*.f64 (pow.f64 #s(approx (pow (+ (* (+ N 1) N) 1) -1) (pow.f64 N #s(literal -2 binary64))) #s(literal -1 binary64)) #s(literal 1 binary64))","(*.f64 #s(literal -1 binary64) (/.f64 #s(literal -1 binary64) #s(approx (pow (+ (* (+ N 1) N) 1) -1) (pow.f64 N #s(literal -2 binary64)))))","(*.f64 #s(literal 1 binary64) (pow.f64 #s(approx (pow (+ (* (+ N 1) N) 1) -1) (pow.f64 N #s(literal -2 binary64))) #s(literal -1 binary64)))","(pow.f64 (exp.f64 (log.f64 #s(approx (pow (+ (* (+ N 1) N) 1) -1) (pow.f64 N #s(literal -2 binary64))))) #s(literal -1 binary64))","(pow.f64 (*.f64 #s(approx (pow (+ (* (+ N 1) N) 1) -1) (pow.f64 N #s(literal -2 binary64))) #s(approx (pow (+ (* (+ N 1) N) 1) -1) (pow.f64 N #s(literal -2 binary64)))) #s(literal -1/2 binary64))","(pow.f64 (pow.f64 #s(approx (pow (+ (* (+ N 1) N) 1) -1) (pow.f64 N #s(literal -2 binary64))) #s(literal -1/2 binary64)) #s(literal 2 binary64))","(pow.f64 (neg.f64 (neg.f64 #s(approx (pow (+ (* (+ N 1) N) 1) -1) (pow.f64 N #s(literal -2 binary64))))) #s(literal -1 binary64))","(pow.f64 #s(approx (pow (+ (* (+ N 1) N) 1) -1) (pow.f64 N #s(literal -2 binary64))) #s(literal -1 binary64))","(/.f64 #s(literal -1 binary64) (neg.f64 (neg.f64 (neg.f64 #s(approx (pow (+ (* (+ N 1) N) 1) -1) (pow.f64 N #s(literal -2 binary64)))))))","(/.f64 #s(literal -1 binary64) (neg.f64 #s(approx (pow (+ (* (+ N 1) N) 1) -1) (pow.f64 N #s(literal -2 binary64)))))","(/.f64 #s(literal 1 binary64) (neg.f64 (neg.f64 #s(approx (pow (+ (* (+ N 1) N) 1) -1) (pow.f64 N #s(literal -2 binary64))))))","(/.f64 #s(literal 1 binary64) #s(approx (pow (+ (* (+ N 1) N) 1) -1) (pow.f64 N #s(literal -2 binary64))))","(neg.f64 (/.f64 #s(literal -1 binary64) #s(approx (pow (+ (* (+ N 1) N) 1) -1) (pow.f64 N #s(literal -2 binary64)))))","(exp.f64 (*.f64 (log.f64 #s(approx (pow (+ (* (+ N 1) N) 1) -1) (pow.f64 N #s(literal -2 binary64)))) #s(literal -1 binary64)))","(*.f64 #s(approx (pow (+ (* (+ N 1) N) 1) -1) (pow.f64 N #s(literal -2 binary64))) #s(literal 1 binary64))","(pow.f64 (pow.f64 #s(approx (pow (+ (* (+ N 1) N) 1) -1) (pow.f64 N #s(literal -2 binary64))) #s(literal -1 binary64)) #s(literal -1 binary64))","(pow.f64 #s(approx (pow (+ (* (+ N 1) N) 1) -1) (pow.f64 N #s(literal -2 binary64))) #s(literal 1 binary64))","#s(approx (pow (+ (* (+ N 1) N) 1) -1) (pow.f64 N #s(literal -2 binary64)))","(/.f64 (neg.f64 (neg.f64 #s(approx (pow (+ (* (+ N 1) N) 1) -1) (pow.f64 N #s(literal -2 binary64))))) #s(literal 1 binary64))","(/.f64 (neg.f64 #s(approx (pow (+ (* (+ N 1) N) 1) -1) (pow.f64 N #s(literal -2 binary64)))) #s(literal -1 binary64))","(/.f64 #s(approx (pow (+ (* (+ N 1) N) 1) -1) (pow.f64 N #s(literal -2 binary64))) #s(literal 1 binary64))","(/.f64 #s(literal -1 binary64) (neg.f64 (pow.f64 #s(approx (pow (+ (* (+ N 1) N) 1) -1) (pow.f64 N #s(literal -2 binary64))) #s(literal -1 binary64))))","(/.f64 #s(literal 1 binary64) (pow.f64 #s(approx (pow (+ (* (+ N 1) N) 1) -1) (pow.f64 N #s(literal -2 binary64))) #s(literal -1 binary64)))","(exp.f64 (neg.f64 (*.f64 (log.f64 #s(approx (pow (+ (* (+ N 1) N) 1) -1) (pow.f64 N #s(literal -2 binary64)))) #s(literal -1 binary64))))","(*.f64 (pow.f64 (/.f64 N #s(literal -1 binary64)) #s(literal -1 binary64)) (/.f64 #s(literal -1 binary64) N))","(*.f64 (/.f64 #s(literal -1 binary64) N) (/.f64 #s(literal -1 binary64) N))","(*.f64 (pow.f64 N #s(literal -2 binary64)) #s(literal 1 binary64))","(*.f64 (pow.f64 N #s(literal -1 binary64)) (pow.f64 N #s(literal -1 binary64)))","(*.f64 #s(literal 1 binary64) (pow.f64 N #s(literal -2 binary64)))","(pow.f64 (/.f64 (*.f64 N N) #s(literal 1 binary64)) #s(literal -1 binary64))","(pow.f64 (/.f64 #s(literal -1 binary64) N) #s(literal 2 binary64))","(pow.f64 (*.f64 N N) #s(literal -1 binary64))","(pow.f64 (pow.f64 N #s(literal -1 binary64)) #s(literal 2 binary64))","(pow.f64 N #s(literal -2 binary64))","(/.f64 (neg.f64 (*.f64 (pow.f64 N #s(literal -1 binary64)) #s(literal -1 binary64))) (neg.f64 (neg.f64 N)))","(/.f64 (*.f64 (pow.f64 N #s(literal -1 binary64)) #s(literal -1 binary64)) (neg.f64 N))","(/.f64 (/.f64 #s(literal -1 binary64) N) (neg.f64 (neg.f64 (neg.f64 N))))","(/.f64 (/.f64 #s(literal -1 binary64) N) (neg.f64 N))","(/.f64 (pow.f64 N #s(literal -1 binary64)) (neg.f64 (neg.f64 N)))","(/.f64 (pow.f64 N #s(literal -1 binary64)) N)","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (*.f64 N N) #s(literal 1 binary64))))","(/.f64 #s(literal -1 binary64) (neg.f64 (*.f64 N N)))","(/.f64 #s(literal -1 binary64) (*.f64 (neg.f64 N) N))","(/.f64 #s(literal -1 binary64) (*.f64 N (neg.f64 N)))","(/.f64 #s(literal 1 binary64) (neg.f64 (neg.f64 (*.f64 N N))))","(/.f64 #s(literal 1 binary64) (neg.f64 (*.f64 (neg.f64 N) N)))","(/.f64 #s(literal 1 binary64) (neg.f64 (*.f64 N (neg.f64 N))))","(/.f64 #s(literal 1 binary64) (/.f64 (*.f64 N N) #s(literal 1 binary64)))","(/.f64 #s(literal 1 binary64) (*.f64 N N))","(neg.f64 (/.f64 (/.f64 #s(literal -1 binary64) N) N))","(exp.f64 (neg.f64 (*.f64 (log.f64 N) #s(literal 2 binary64))))","(exp.f64 (fma.f64 (log.f64 N) #s(literal -1 binary64) (*.f64 (log.f64 N) #s(literal -1 binary64))))","(exp.f64 (*.f64 (*.f64 (log.f64 N) #s(literal 2 binary64)) #s(literal -1 binary64)))","(exp.f64 (*.f64 (*.f64 (log.f64 N) #s(literal -1 binary64)) #s(literal 2 binary64)))","(exp.f64 (*.f64 (log.f64 (pow.f64 N #s(literal -1 binary64))) #s(literal 2 binary64)))","(exp.f64 (*.f64 (log.f64 N) #s(literal -2 binary64)))","(*.f64 (expm1.f64 (*.f64 (-.f64 (log1p.f64 (pow.f64 N #s(literal 3 binary64))) (log.f64 (/.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) N))) #s(literal 2 binary64))) (pow.f64 (fma.f64 (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64)))","(*.f64 (+.f64 (pow.f64 (*.f64 (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64))) #s(literal 3 binary64)) #s(literal 1 binary64)) (pow.f64 (+.f64 (-.f64 #s(literal 1 binary64) (*.f64 (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)))) (pow.f64 (*.f64 (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64))) #s(literal 2 binary64))) #s(literal -1 binary64)))","(pow.f64 (/.f64 (fma.f64 (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64)) (expm1.f64 (*.f64 (-.f64 (log1p.f64 (pow.f64 N #s(literal 3 binary64))) (log.f64 (/.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) N))) #s(literal 2 binary64)))) #s(literal -1 binary64))","(pow.f64 (/.f64 (+.f64 (-.f64 #s(literal 1 binary64) (*.f64 (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)))) (pow.f64 (*.f64 (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64))) #s(literal 2 binary64))) (+.f64 (pow.f64 (*.f64 (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64))) #s(literal 3 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64))","(/.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (*.f64 (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64))) #s(literal 2 binary64)))) (neg.f64 (-.f64 #s(literal 1 binary64) (*.f64 (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64))))))","(/.f64 (neg.f64 (neg.f64 (expm1.f64 (*.f64 (-.f64 (log1p.f64 (pow.f64 N #s(literal 3 binary64))) (log.f64 (/.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) N))) #s(literal 2 binary64))))) (neg.f64 (neg.f64 (fma.f64 (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64)))))","(/.f64 (neg.f64 (neg.f64 (+.f64 (pow.f64 (*.f64 (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64))) #s(literal 3 binary64)) #s(literal 1 binary64)))) (neg.f64 (neg.f64 (+.f64 (-.f64 #s(literal 1 binary64) (*.f64 (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)))) (pow.f64 (*.f64 (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64))) #s(literal 2 binary64))))))","(/.f64 (-.f64 (*.f64 (pow.f64 (*.f64 (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64))) #s(literal 2 binary64)) (fma.f64 (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64))) (*.f64 (fma.f64 (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64))) (*.f64 (fma.f64 (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64)) (fma.f64 (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64))))","(/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 (*.f64 (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64))) #s(literal 2 binary64))) (-.f64 #s(literal 1 binary64) (*.f64 (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)))))","(/.f64 (neg.f64 (expm1.f64 (*.f64 (-.f64 (log1p.f64 (pow.f64 N #s(literal 3 binary64))) (log.f64 (/.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) N))) #s(literal 2 binary64)))) (neg.f64 (fma.f64 (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64))))","(/.f64 (neg.f64 (+.f64 (pow.f64 (*.f64 (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64))) #s(literal 3 binary64)) #s(literal 1 binary64))) (neg.f64 (+.f64 #s(literal 1 binary64) (-.f64 (pow.f64 (*.f64 (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64))) #s(literal 2 binary64)) (*.f64 (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)))))))","(/.f64 (neg.f64 (+.f64 (pow.f64 (*.f64 (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64))) #s(literal 3 binary64)) #s(literal 1 binary64))) (neg.f64 (+.f64 (-.f64 #s(literal 1 binary64) (*.f64 (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)))) (pow.f64 (*.f64 (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64))) #s(literal 2 binary64)))))","(/.f64 (expm1.f64 (*.f64 (-.f64 (log1p.f64 (pow.f64 N #s(literal 3 binary64))) (log.f64 (/.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) N))) #s(literal 2 binary64))) (fma.f64 (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64)))","(/.f64 (+.f64 (pow.f64 (*.f64 (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64))) #s(literal 3 binary64)) #s(literal 1 binary64)) (+.f64 #s(literal 1 binary64) (-.f64 (pow.f64 (*.f64 (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64))) #s(literal 2 binary64)) (*.f64 (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64))))))","(/.f64 (+.f64 (pow.f64 (*.f64 (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64))) #s(literal 3 binary64)) #s(literal 1 binary64)) (+.f64 (-.f64 #s(literal 1 binary64) (*.f64 (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)))) (pow.f64 (*.f64 (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64))) #s(literal 2 binary64))))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (fma.f64 (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64)) (expm1.f64 (*.f64 (-.f64 (log1p.f64 (pow.f64 N #s(literal 3 binary64))) (log.f64 (/.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) N))) #s(literal 2 binary64))))))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (+.f64 (-.f64 #s(literal 1 binary64) (*.f64 (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)))) (pow.f64 (*.f64 (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64))) #s(literal 2 binary64))) (+.f64 (pow.f64 (*.f64 (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64))) #s(literal 3 binary64)) #s(literal 1 binary64)))))","(/.f64 #s(literal 1 binary64) (/.f64 (fma.f64 (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64)) (expm1.f64 (*.f64 (-.f64 (log1p.f64 (pow.f64 N #s(literal 3 binary64))) (log.f64 (/.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) N))) #s(literal 2 binary64)))))","(/.f64 #s(literal 1 binary64) (/.f64 (+.f64 (-.f64 #s(literal 1 binary64) (*.f64 (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)))) (pow.f64 (*.f64 (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64))) #s(literal 2 binary64))) (+.f64 (pow.f64 (*.f64 (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64))) #s(literal 3 binary64)) #s(literal 1 binary64))))","(fma.f64 (/.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)) N) (-.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 2 binary64)) #s(literal 1 binary64))) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 1 binary64))","(fma.f64 (/.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)) N) (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 3 binary64)) #s(literal 1 binary64))) (-.f64 (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 2 binary64)) #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) N)) #s(literal 1 binary64))","(fma.f64 (*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)) N) (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64))","(fma.f64 (*.f64 (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64))) #s(literal 1 binary64) #s(literal 1 binary64))","(fma.f64 (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64))","(fma.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)) (*.f64 (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64)) #s(literal 1 binary64))","(fma.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)) (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64))","(fma.f64 #s(literal 1 binary64) (*.f64 (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64))) #s(literal 1 binary64))","(fma.f64 N (*.f64 (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64))) #s(literal 1 binary64))","(-.f64 (/.f64 (pow.f64 (*.f64 (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64))) #s(literal 2 binary64)) (fma.f64 (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64))) (pow.f64 (fma.f64 (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64)))","(+.f64 (*.f64 (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64))) #s(literal 1 binary64))","(+.f64 #s(literal 1 binary64) (*.f64 (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64))))","(*.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (pow.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)))","(*.f64 (+.f64 (pow.f64 N #s(literal 9 binary64)) #s(literal 1 binary64)) (pow.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (pow.f64 N #s(literal 3 binary64))) #s(literal -1 binary64)))","(pow.f64 (/.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64))","(pow.f64 (/.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (pow.f64 N #s(literal 3 binary64))) (+.f64 (pow.f64 N #s(literal 9 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64))","(/.f64 (neg.f64 (-.f64 (pow.f64 N #s(literal 9 binary64)) #s(literal -1 binary64))) (neg.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (pow.f64 N #s(literal 3 binary64)))))","(/.f64 (neg.f64 (neg.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)))) (neg.f64 (neg.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))))","(/.f64 (neg.f64 (neg.f64 (+.f64 (pow.f64 N #s(literal 9 binary64)) #s(literal 1 binary64)))) (neg.f64 (neg.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (pow.f64 N #s(literal 3 binary64))))))","(/.f64 (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64)))) (neg.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64)))))","(/.f64 (-.f64 (*.f64 (pow.f64 N #s(literal 6 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal 1 binary64))) (*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))))","(/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 6 binary64))) (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64))))","(/.f64 (-.f64 (pow.f64 N #s(literal 9 binary64)) #s(literal -1 binary64)) (-.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (pow.f64 N #s(literal 3 binary64))))","(/.f64 (neg.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64))) (neg.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))))","(/.f64 (neg.f64 (+.f64 (pow.f64 N #s(literal 9 binary64)) #s(literal 1 binary64))) (neg.f64 (+.f64 #s(literal 1 binary64) (-.f64 (pow.f64 N #s(literal 6 binary64)) (pow.f64 N #s(literal 3 binary64))))))","(/.f64 (neg.f64 (+.f64 (pow.f64 N #s(literal 9 binary64)) #s(literal 1 binary64))) (neg.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (pow.f64 N #s(literal 3 binary64)))))","(/.f64 (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))","(/.f64 (+.f64 (pow.f64 N #s(literal 9 binary64)) #s(literal 1 binary64)) (+.f64 #s(literal 1 binary64) (-.f64 (pow.f64 N #s(literal 6 binary64)) (pow.f64 N #s(literal 3 binary64)))))","(/.f64 (+.f64 (pow.f64 N #s(literal 9 binary64)) #s(literal 1 binary64)) (-.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (pow.f64 N #s(literal 3 binary64))))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)))))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (pow.f64 N #s(literal 3 binary64))) (+.f64 (pow.f64 N #s(literal 9 binary64)) #s(literal 1 binary64)))))","(/.f64 #s(literal 1 binary64) (/.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64))))","(/.f64 #s(literal 1 binary64) (/.f64 (-.f64 (+.f64 (pow.f64 N #s(literal 6 binary64)) #s(literal 1 binary64)) (pow.f64 N #s(literal 3 binary64))) (+.f64 (pow.f64 N #s(literal 9 binary64)) #s(literal 1 binary64))))","(fma.f64 (pow.f64 (/.f64 N #s(literal -1 binary64)) #s(literal 3/2 binary64)) (pow.f64 (neg.f64 N) #s(literal 3/2 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 #s(literal 1 binary64) #s(literal 3/2 binary64)) (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 N #s(literal 3/2 binary64)) (pow.f64 N #s(literal 3/2 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 N #s(literal 3 binary64)) (pow.f64 #s(literal 1 binary64) #s(literal 3/2 binary64)) #s(literal 1 binary64))","(fma.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64) #s(literal 1 binary64))","(fma.f64 (*.f64 N N) N #s(literal 1 binary64))","(fma.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))","(fma.f64 N (*.f64 N N) #s(literal 1 binary64))","(-.f64 (/.f64 (pow.f64 N #s(literal 6 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (pow.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) #s(literal -1 binary64)))","(-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64))","(+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))","(+.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64)))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64)))","(*.f64 (exp.f64 (log.f64 N)) (exp.f64 (log.f64 N)))","(*.f64 (/.f64 N #s(literal -1 binary64)) (neg.f64 N))","(*.f64 (neg.f64 N) (neg.f64 N))","(*.f64 (*.f64 N N) #s(literal 1 binary64))","(*.f64 #s(literal 1 binary64) (*.f64 N N))","(*.f64 N N)","(pow.f64 (exp.f64 (log.f64 N)) #s(literal 2 binary64))","(pow.f64 (neg.f64 N) #s(literal 2 binary64))","(pow.f64 (*.f64 N N) #s(literal 1 binary64))","(pow.f64 (pow.f64 N #s(literal -2 binary64)) #s(literal -1 binary64))","(pow.f64 (pow.f64 N #s(literal -1 binary64)) #s(literal -2 binary64))","(pow.f64 N #s(literal 2 binary64))","(/.f64 (neg.f64 (neg.f64 N)) (pow.f64 N #s(literal -1 binary64)))","(/.f64 (neg.f64 N) (/.f64 #s(literal -1 binary64) N))","(/.f64 #s(literal -1 binary64) (neg.f64 (pow.f64 N #s(literal -2 binary64))))","(/.f64 #s(literal 1 binary64) (pow.f64 N #s(literal -2 binary64)))","(/.f64 N (pow.f64 N #s(literal -1 binary64)))","(exp.f64 (*.f64 (log.f64 N) #s(literal 2 binary64)))","(*.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal -1 binary64))) (fma.f64 N N (-.f64 #s(literal 1 binary64) N)))","(*.f64 (/.f64 (fma.f64 N N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) (-.f64 N #s(literal 1 binary64)))","(*.f64 (fma.f64 N N #s(literal -1 binary64)) (pow.f64 (-.f64 N #s(literal -1 binary64)) #s(literal -1 binary64)))","(*.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N)))))","(pow.f64 (/.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))) #s(literal -1 binary64))","(pow.f64 (/.f64 (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) #s(literal -1 binary64))","(/.f64 (neg.f64 (neg.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))) (neg.f64 (neg.f64 (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)))))","(/.f64 (neg.f64 (neg.f64 (fma.f64 N N #s(literal -1 binary64)))) (neg.f64 (neg.f64 (-.f64 N #s(literal -1 binary64)))))","(/.f64 (-.f64 (*.f64 (*.f64 N N) (-.f64 N #s(literal -1 binary64))) (-.f64 N #s(literal -1 binary64))) (pow.f64 (-.f64 N #s(literal -1 binary64)) #s(literal 2 binary64)))","(/.f64 (-.f64 (pow.f64 (neg.f64 N) #s(literal 3 binary64)) (*.f64 (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)) (/.f64 #s(literal -1 binary64) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64))))) (*.f64 (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)))","(/.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) (*.f64 (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N)))))) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)))","(/.f64 (-.f64 (*.f64 (pow.f64 N #s(literal 3 binary64)) (neg.f64 (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)))) (*.f64 (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64))) (*.f64 (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)) (neg.f64 (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)))))","(/.f64 (-.f64 (*.f64 (pow.f64 N #s(literal 3 binary64)) (/.f64 (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)) #s(literal 1 binary64))) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64))) (*.f64 (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)) (/.f64 (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)) #s(literal 1 binary64))))","(/.f64 (-.f64 (*.f64 (pow.f64 N #s(literal 3 binary64)) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64))) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64))) (pow.f64 (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)) #s(literal 2 binary64)))","(/.f64 (neg.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (neg.f64 (fma.f64 N N (-.f64 #s(literal 1 binary64) (neg.f64 N)))))","(/.f64 (neg.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))) (neg.f64 (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64))))","(/.f64 (neg.f64 (fma.f64 N N #s(literal -1 binary64))) (neg.f64 (-.f64 N #s(literal -1 binary64))))","(/.f64 (fma.f64 N N #s(literal -1 binary64)) (-.f64 N #s(literal -1 binary64)))","(/.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (fma.f64 N N (-.f64 #s(literal 1 binary64) (neg.f64 N))))","(/.f64 (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64)))))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)))))","(/.f64 #s(literal 1 binary64) (/.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))))","(/.f64 #s(literal 1 binary64) (/.f64 (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64)) (-.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64))))","(fma.f64 #s(literal 1 binary64) N #s(literal -1 binary64))","(fma.f64 N #s(literal 1 binary64) #s(literal -1 binary64))","(expm1.f64 (neg.f64 (*.f64 (log.f64 N) #s(literal -1 binary64))))","(expm1.f64 (*.f64 (log.f64 N) #s(literal 1 binary64)))","(-.f64 (/.f64 (*.f64 N N) (-.f64 N #s(literal -1 binary64))) (pow.f64 (-.f64 N #s(literal -1 binary64)) #s(literal -1 binary64)))","(-.f64 (/.f64 (pow.f64 N #s(literal 3 binary64)) (fma.f64 (-.f64 N #s(literal -1 binary64)) N #s(literal 1 binary64))) (exp.f64 (neg.f64 (log1p.f64 (fma.f64 N N N)))))","(-.f64 N #s(literal 1 binary64))","(+.f64 #s(literal -1 binary64) N)","(+.f64 N #s(literal -1 binary64))","(*.f64 (/.f64 N (-.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 2 binary64)) #s(literal 1 binary64))) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)))","(*.f64 (/.f64 N (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 3 binary64)) #s(literal 1 binary64))) (-.f64 (+.f64 (pow.f64 (*.f64 (-.f64 N #s(literal 1 binary64)) N) #s(literal 2 binary64)) #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) N)))","(*.f64 (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)) N)","(*.f64 (neg.f64 N) (pow.f64 (neg.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal -1 binary64)))","(*.f64 #s(literal 1 binary64) (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))","(*.f64 N (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)))","(pow.f64 (/.f64 (/.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) N) #s(literal 1 binary64)) #s(literal -1 binary64))","(pow.f64 (/.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) N) #s(literal -1 binary64))","(/.f64 (neg.f64 (neg.f64 (neg.f64 N))) (neg.f64 (neg.f64 (neg.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))))","(/.f64 (neg.f64 (neg.f64 N)) (neg.f64 (neg.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))))","(/.f64 (neg.f64 N) (neg.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (/.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) N) #s(literal 1 binary64))))","(/.f64 #s(literal -1 binary64) (neg.f64 (/.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) N)))","(/.f64 #s(literal 1 binary64) (neg.f64 (neg.f64 (/.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) N))))","(/.f64 #s(literal 1 binary64) (/.f64 (/.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) N) #s(literal 1 binary64)))","(/.f64 #s(literal 1 binary64) (/.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) N))","(/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))","(neg.f64 (/.f64 (neg.f64 N) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))))","(neg.f64 (/.f64 N (neg.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)))))","(exp.f64 (*.f64 (log.f64 (/.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) N)) #s(literal -1 binary64)))"]],"stop":[["iter limit",1],["node limit",1],["iter limit",1]],"time":269.071044921875,"type":"rewrite"},{"compiler":[[17534,2626]],"memory":[[3634480,66524016]],"time":94.27392578125,"type":"eval"},{"alts":[["(atan2.f64 #s(literal 1 binary64) (fma.f64 (fma.f64 (*.f64 N N) N #s(literal 1 binary64)) #s(approx (/ N (+ (* (- N 1) N) 1)) (/.f64 #s(literal 1 binary64) N)) #s(literal 1 binary64)))","fresh",3.5512493362246365,"binary64"],["(atan2.f64 #s(literal 1 binary64) (fma.f64 (/.f64 (fma.f64 N N #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) (/.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))))) (-.f64 N #s(literal 1 binary64)) N))","fresh",0.39099506837909415,"binary64"],["(atan2.f64 #s(literal 1 binary64) (fma.f64 (/.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64))) (-.f64 N #s(literal 1 binary64)) N))","done",0.28419877930532605,"binary64"],["(atan2.f64 #s(literal 1 binary64) (fma.f64 (/.f64 #s(literal 1 binary64) (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) N #s(literal 1 binary64)))","fresh",0.47206884768442026,"binary64"],["(atan2.f64 #s(literal 1 binary64) (fma.f64 (+.f64 #s(literal 1 binary64) N) N #s(literal 1 binary64)))","done",0.265625,"binary64"],["(atan2.f64 #s(literal 1 binary64) (fma.f64 (*.f64 (+.f64 N #s(literal 1 binary64)) (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)))) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 1 binary64)))","fresh",0.39880756837909415,"binary64"],["(atan2.f64 #s(literal 1 binary64) (/.f64 (fma.f64 N (/.f64 (-.f64 N #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64)))) #s(literal 1 binary64)) (*.f64 #s(literal 1 binary64) (/.f64 (-.f64 N #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64)))))))","fresh",0.3685150390737681,"binary64"],["(atan2.f64 #s(literal 1 binary64) (/.f64 #s(literal 1 binary64) #s(approx (pow (+ (* (+ N 1) N) 1) -1) (pow.f64 N #s(literal -2 binary64)))))","fresh",3.3081714974192913,"binary64"],["(atan2.f64 #s(literal 1 binary64) (/.f64 #s(literal 1 binary64) #s(approx (pow (+ (* (+ N 1) N) 1) -1) (/.f64 (/.f64 #s(literal 1 binary64) N) N))))","done",3.460426506233577,"binary64"],["(atan2.f64 #s(literal 1 binary64) #s(approx (/ 1 (pow (+ (* (+ N 1) N) 1) -1)) (fma.f64 N N N)))","done",2.1208237455288637,"binary64"],["(atan2.f64 #s(literal 1 binary64) #s(approx (/ 1 (pow (+ (* (+ N 1) N) 1) -1)) (/.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) N) (-.f64 N #s(literal 1 binary64)))))","fresh",2.1480995966890433,"binary64"],["(atan2.f64 #s(literal 1 binary64) #s(approx (/ 1 (pow (+ (* (+ N 1) N) 1) -1)) (-.f64 N #s(literal -1 binary64))))","done",59.06128682863241,"binary64"],["(atan2.f64 #s(literal 1 binary64) #s(approx (/ 1 (pow (+ (* (+ N 1) N) 1) -1)) (+.f64 (*.f64 N N) N)))","fresh",2.1269471064574854,"binary64"],["(atan2.f64 #s(literal 1 binary64) #s(approx (+ (* (+ 1 N) N) 1) (*.f64 N N)))","fresh",3.42698024626267,"binary64"],["(atan2.f64 #s(literal 1 binary64) #s(approx (+ (* (+ 1 N) N) 1) #s(literal 1 binary64)))","done",60.057922010139634,"binary64"]],"compiler":[[686,182],[23,13],[22,12],[15,7],[15,9],[8,5],[22,10],[32,10],[17,13],[19,13],[18,12],[24,16],[17,13],[19,13],[13,9],[11,8]],"count":[[655,15]],"kept":[{"done":[2,2],"fresh":[7,3],"new":[641,6],"picked":[5,4]}],"memory":[[-6611440,33905472]],"min-error":[[0.1171875,"binary64"]],"time":55.8271484375,"type":"prune"},{"accuracy":[0.26171875],"baseline":[0.26171875],"branch":[["N",0.26171875,1,"binary64"],["(-.f64 (atan.f64 (+.f64 N #s(literal 1 binary64))) (atan.f64 N))",0.26171875,1,"binary64"]],"compiler":[[1,1],[7,6]],"count":[[38,1]],"inputs":[["(atan2.f64 #s(literal 1 binary64) #s(approx (+ (* (+ 1 N) N) 1) #s(literal 1 binary64)))","(atan2.f64 #s(literal 1 binary64) #s(approx (+ (* (+ 1 N) N) 1) (-.f64 N #s(literal -1 binary64))))","(atan2.f64 #s(literal 1 binary64) #s(approx (/ 1 (pow (+ (* (+ N 1) N) 1) -1)) (-.f64 N #s(literal -1 binary64))))","(atan2.f64 #s(literal 1 binary64) #s(approx (+ (* (+ 1 N) N) 1) (*.f64 N N)))","(atan2.f64 #s(literal 1 binary64) #s(approx (+ (* (+ 1 N) N) 1) (fma.f64 N N N)))","(atan2.f64 #s(literal 1 binary64) #s(approx (/ 1 (pow (+ (* (+ N 1) N) 1) -1)) (fma.f64 N N N)))","(atan2.f64 #s(literal 1 binary64) #s(approx (/ 1 (pow (+ (* (+ N 1) N) 1) -1)) (+.f64 (*.f64 N N) N)))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (+.f64 #s(literal 1 binary64) N) N #s(literal 1 binary64)))","(atan2.f64 #s(literal 1 binary64) #s(approx (/ 1 (pow (+ (* (+ N 1) N) 1) -1)) (/.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) N) (-.f64 N #s(literal 1 binary64)))))","(atan2.f64 #s(literal 1 binary64) (fma.f64 #s(approx (- 1 (* N N)) (*.f64 (neg.f64 N) N)) (/.f64 N (-.f64 #s(literal 1 binary64) N)) #s(literal 1 binary64)))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (/.f64 N (-.f64 #s(literal 1 binary64) N)) #s(literal 1 binary64)))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (fma.f64 (*.f64 N N) N #s(literal 1 binary64)) #s(approx (/ N (+ (* (- N 1) N) 1)) (/.f64 #s(literal 1 binary64) N)) #s(literal 1 binary64)))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (/.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64))) (-.f64 N #s(literal 1 binary64)) N))","(atan2.f64 #s(literal 1 binary64) (/.f64 #s(literal 1 binary64) #s(approx (pow (+ (* (+ N 1) N) 1) -1) (/.f64 (/.f64 #s(literal 1 binary64) N) N))))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (/.f64 #s(literal 1 binary64) (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) N #s(literal 1 binary64)))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (fma.f64 (*.f64 N N) N #s(literal 1 binary64)) (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64)))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (/.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) N) (-.f64 #s(literal 1 binary64) (*.f64 N N))) (+.f64 N #s(literal 1 binary64)) #s(literal 1 binary64)))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (*.f64 (+.f64 N #s(literal 1 binary64)) (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)))) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 1 binary64)))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (/.f64 (fma.f64 N N #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) (/.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))))) (-.f64 N #s(literal 1 binary64)) N))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (/.f64 N (/.f64 #s(literal 1 binary64) (/.f64 (+.f64 N #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N))))) #s(literal 1 binary64)))","(atan2.f64 #s(literal 1 binary64) (/.f64 (fma.f64 N (/.f64 (-.f64 N #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64)))) #s(literal 1 binary64)) (*.f64 #s(literal 1 binary64) (/.f64 (-.f64 N #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64)))))))","(-.f64 (atan.f64 (+.f64 N #s(literal 1 binary64))) (atan.f64 N))","(atan2.f64 #s(literal 1 binary64) (/.f64 #s(literal 1 binary64) #s(approx (pow (+ (* (+ N 1) N) 1) -1) (pow.f64 N #s(literal -2 binary64)))))","(atan2.f64 #s(literal 1 binary64) (/.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64))))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (/.f64 #s(literal 1 binary64) (pow.f64 (+.f64 N #s(literal 1 binary64)) #s(literal -1 binary64))) N #s(literal 1 binary64)))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (fma.f64 N N #s(literal -1 binary64)) (pow.f64 (-.f64 N #s(literal 1 binary64)) #s(literal -1 binary64)) (*.f64 N N)))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) N) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) #s(literal 1 binary64)))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (*.f64 (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal -1 binary64)) N) #s(literal 1 binary64)))","#s(approx (atan2 1 (+ (* (+ (pow N 3) 1) (/ N (+ (* (- N 1) N) 1))) 1)) (atan2.f64 #s(literal 1 binary64) (+.f64 (/.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) N) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64))))","(atan2.f64 #s(literal 1 binary64) (/.f64 (-.f64 (pow.f64 (fma.f64 N N N) #s(literal 2 binary64)) #s(literal 1 binary64)) (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64))))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64)))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (/.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) N #s(literal 1 binary64)))","(atan2.f64 #s(literal 1 binary64) (/.f64 #s(literal 1 binary64) #s(approx (pow (+ (* (+ N 1) N) 1) -1) (*.f64 (/.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 3 binary64))) (-.f64 N #s(literal 1 binary64))))))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (/.f64 (-.f64 #s(literal 1 binary64) (pow.f64 N #s(literal 4 binary64))) (*.f64 (-.f64 #s(literal 1 binary64) N) (fma.f64 N N #s(literal 1 binary64)))) N #s(literal 1 binary64)))","(atan2.f64 #s(literal 1 binary64) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) (*.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal -1 binary64)))))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (/.f64 (-.f64 (*.f64 #s(literal 1 binary64) (-.f64 #s(literal 1 binary64) N)) (*.f64 (-.f64 #s(literal 1 binary64) N) (*.f64 N N))) (pow.f64 (-.f64 #s(literal 1 binary64) N) #s(literal 2 binary64))) N #s(literal 1 binary64)))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (+.f64 (pow.f64 N #s(literal 4 binary64)) N) (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal 1 binary64)))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (+.f64 (pow.f64 N #s(literal 3 binary64)) #s(literal 1 binary64)) (*.f64 (pow.f64 (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)) N) #s(literal 1 binary64)))"]],"memory":[[3372208,10869664]],"oracle":[61.07996704147223],"outputs":[["(atan2.f64 #s(literal 1 binary64) (/.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64))))"]],"repr":["binary64"],"time":20.4169921875,"times":[[10.843994140625,"N"],[7.4560546875,"(-.f64 (atan.f64 (+.f64 N #s(literal 1 binary64))) (atan.f64 N))"]],"type":"regimes"},{"accuracy":[0.265625],"baseline":[0.265625],"branch":[["N",0.265625,1,"binary64"],["(-.f64 (atan.f64 (+.f64 N #s(literal 1 binary64))) (atan.f64 N))",0.265625,1,"binary64"]],"compiler":[[1,1],[7,6]],"count":[[23,1]],"inputs":[["(atan2.f64 #s(literal 1 binary64) #s(approx (+ (* (+ 1 N) N) 1) #s(literal 1 binary64)))","(atan2.f64 #s(literal 1 binary64) #s(approx (+ (* (+ 1 N) N) 1) (-.f64 N #s(literal -1 binary64))))","(atan2.f64 #s(literal 1 binary64) #s(approx (/ 1 (pow (+ (* (+ N 1) N) 1) -1)) (-.f64 N #s(literal -1 binary64))))","(atan2.f64 #s(literal 1 binary64) #s(approx (+ (* (+ 1 N) N) 1) (*.f64 N N)))","(atan2.f64 #s(literal 1 binary64) #s(approx (+ (* (+ 1 N) N) 1) (fma.f64 N N N)))","(atan2.f64 #s(literal 1 binary64) #s(approx (/ 1 (pow (+ (* (+ N 1) N) 1) -1)) (fma.f64 N N N)))","(atan2.f64 #s(literal 1 binary64) #s(approx (/ 1 (pow (+ (* (+ N 1) N) 1) -1)) (+.f64 (*.f64 N N) N)))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (+.f64 #s(literal 1 binary64) N) N #s(literal 1 binary64)))","(atan2.f64 #s(literal 1 binary64) #s(approx (/ 1 (pow (+ (* (+ N 1) N) 1) -1)) (/.f64 (*.f64 (fma.f64 N N #s(literal -1 binary64)) N) (-.f64 N #s(literal 1 binary64)))))","(atan2.f64 #s(literal 1 binary64) (fma.f64 #s(approx (- 1 (* N N)) (*.f64 (neg.f64 N) N)) (/.f64 N (-.f64 #s(literal 1 binary64) N)) #s(literal 1 binary64)))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (/.f64 N (-.f64 #s(literal 1 binary64) N)) #s(literal 1 binary64)))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (fma.f64 (*.f64 N N) N #s(literal 1 binary64)) #s(approx (/ N (+ (* (- N 1) N) 1)) (/.f64 #s(literal 1 binary64) N)) #s(literal 1 binary64)))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (/.f64 (fma.f64 N N #s(literal 1 binary64)) (-.f64 N #s(literal 1 binary64))) (-.f64 N #s(literal 1 binary64)) N))","(atan2.f64 #s(literal 1 binary64) (/.f64 #s(literal 1 binary64) #s(approx (pow (+ (* (+ N 1) N) 1) -1) (/.f64 (/.f64 #s(literal 1 binary64) N) N))))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (/.f64 #s(literal 1 binary64) (/.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal -1 binary64)))) N #s(literal 1 binary64)))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (fma.f64 (*.f64 N N) N #s(literal 1 binary64)) (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64))) #s(literal 1 binary64)))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (/.f64 (*.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) N) (-.f64 #s(literal 1 binary64) (*.f64 N N))) (+.f64 N #s(literal 1 binary64)) #s(literal 1 binary64)))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (*.f64 (+.f64 N #s(literal 1 binary64)) (/.f64 N (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)))) (fma.f64 (-.f64 N #s(literal 1 binary64)) N #s(literal -1 binary64)) #s(literal 1 binary64)))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (/.f64 (fma.f64 N N #s(literal 1 binary64)) (/.f64 #s(literal 1 binary64) (/.f64 (-.f64 N #s(literal -1 binary64)) (fma.f64 N N #s(literal -1 binary64))))) (-.f64 N #s(literal 1 binary64)) N))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (-.f64 #s(literal 1 binary64) (*.f64 N N)) (/.f64 N (/.f64 #s(literal 1 binary64) (/.f64 (+.f64 N #s(literal 1 binary64)) (-.f64 #s(literal 1 binary64) (*.f64 N N))))) #s(literal 1 binary64)))","(atan2.f64 #s(literal 1 binary64) (/.f64 (fma.f64 N (/.f64 (-.f64 N #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64)))) #s(literal 1 binary64)) (*.f64 #s(literal 1 binary64) (/.f64 (-.f64 N #s(literal 1 binary64)) (*.f64 (-.f64 N #s(literal 1 binary64)) (fma.f64 N N #s(literal 1 binary64)))))))","(-.f64 (atan.f64 (+.f64 N #s(literal 1 binary64))) (atan.f64 N))","(atan2.f64 #s(literal 1 binary64) (/.f64 #s(literal 1 binary64) #s(approx (pow (+ (* (+ N 1) N) 1) -1) (pow.f64 N #s(literal -2 binary64)))))"]],"memory":[[-381488,7522816]],"oracle":[61.07996704147223],"outputs":[["(atan2.f64 #s(literal 1 binary64) (fma.f64 (+.f64 #s(literal 1 binary64) N) N #s(literal 1 binary64)))"]],"repr":["binary64"],"time":11.718017578125,"times":[[5.7158203125,"N"],[4.5390625,"(-.f64 (atan.f64 (+.f64 N #s(literal 1 binary64))) (atan.f64 N))"]],"type":"regimes"},{"accuracy":[2.120823745528864],"baseline":[2.1208237455288637],"branch":[["N",2.120823745528864,1,"binary64"],["(-.f64 (atan.f64 (+.f64 N #s(literal 1 binary64))) (atan.f64 N))",2.120823745528864,1,"binary64"]],"compiler":[[1,1],[7,6]],"count":[[7,1]],"inputs":[["(atan2.f64 #s(literal 1 binary64) #s(approx (+ (* (+ 1 N) N) 1) #s(literal 1 binary64)))","(atan2.f64 #s(literal 1 binary64) #s(approx (+ (* (+ 1 N) N) 1) (-.f64 N #s(literal -1 binary64))))","(atan2.f64 #s(literal 1 binary64) #s(approx (/ 1 (pow (+ (* (+ N 1) N) 1) -1)) (-.f64 N #s(literal -1 binary64))))","(atan2.f64 #s(literal 1 binary64) #s(approx (+ (* (+ 1 N) N) 1) (*.f64 N N)))","(atan2.f64 #s(literal 1 binary64) #s(approx (+ (* (+ 1 N) N) 1) (fma.f64 N N N)))","(atan2.f64 #s(literal 1 binary64) #s(approx (/ 1 (pow (+ (* (+ N 1) N) 1) -1)) (fma.f64 N N N)))","(atan2.f64 #s(literal 1 binary64) #s(approx (/ 1 (pow (+ (* (+ N 1) N) 1) -1)) (+.f64 (*.f64 N N) N)))"]],"memory":[[3991952,3991952]],"oracle":[60.057922010139634],"outputs":[["(atan2.f64 #s(literal 1 binary64) #s(approx (+ (* (+ 1 N) N) 1) (fma.f64 N N N)))"]],"repr":["binary64"],"time":4.8818359375,"times":[[2.287109375,"N"],[1.93603515625,"(-.f64 (atan.f64 (+.f64 N #s(literal 1 binary64))) (atan.f64 N))"]],"type":"regimes"},{"accuracy":[3.4269802462626697],"baseline":[3.42698024626267],"branch":[["N",3.4269802462626697,1,"binary64"],["(-.f64 (atan.f64 (+.f64 N #s(literal 1 binary64))) (atan.f64 N))",3.4269802462626697,1,"binary64"]],"compiler":[[1,1],[7,6]],"count":[[4,1]],"inputs":[["(atan2.f64 #s(literal 1 binary64) #s(approx (+ (* (+ 1 N) N) 1) #s(literal 1 binary64)))","(atan2.f64 #s(literal 1 binary64) #s(approx (+ (* (+ 1 N) N) 1) (-.f64 N #s(literal -1 binary64))))","(atan2.f64 #s(literal 1 binary64) #s(approx (/ 1 (pow (+ (* (+ N 1) N) 1) -1)) (-.f64 N #s(literal -1 binary64))))","(atan2.f64 #s(literal 1 binary64) #s(approx (+ (* (+ 1 N) N) 1) (*.f64 N N)))"]],"memory":[[-4890288,3369936]],"oracle":[60.057922010139634],"outputs":[["(atan2.f64 #s(literal 1 binary64) #s(approx (+ (* (+ 1 N) N) 1) (*.f64 N N)))"]],"repr":["binary64"],"time":3.80908203125,"times":[[1.87890625,"N"],[1.450927734375,"(-.f64 (atan.f64 (+.f64 N #s(literal 1 binary64))) (atan.f64 N))"]],"type":"regimes"},{"accuracy":[59.06128682863239],"baseline":[59.06128682863241],"branch":[["N",59.06128682863239,1,"binary64"],["(-.f64 (atan.f64 (+.f64 N #s(literal 1 binary64))) (atan.f64 N))",59.061286828632426,1,"binary64"]],"compiler":[[1,1],[7,6]],"count":[[3,1]],"inputs":[["(atan2.f64 #s(literal 1 binary64) #s(approx (+ (* (+ 1 N) N) 1) #s(literal 1 binary64)))","(atan2.f64 #s(literal 1 binary64) #s(approx (+ (* (+ 1 N) N) 1) (-.f64 N #s(literal -1 binary64))))","(atan2.f64 #s(literal 1 binary64) #s(approx (/ 1 (pow (+ (* (+ N 1) N) 1) -1)) (-.f64 N #s(literal -1 binary64))))"]],"memory":[[3201152,3201152]],"oracle":[60.057922010139634],"outputs":[["(atan2.f64 #s(literal 1 binary64) #s(approx (+ (* (+ 1 N) N) 1) (-.f64 N #s(literal -1 binary64))))"]],"repr":["binary64"],"time":3.387939453125,"times":[[1.594970703125,"N"],[1.284912109375,"(-.f64 (atan.f64 (+.f64 N #s(literal 1 binary64))) (atan.f64 N))"]],"type":"regimes"},{"accuracy":[60.05792201013965],"baseline":[60.057922010139634],"branch":[["(-.f64 (atan.f64 (+.f64 N #s(literal 1 binary64))) (atan.f64 N))",60.05792201013965,1,"binary64"],["N",60.05792201013971,1,"binary64"]],"compiler":[[7,6],[1,1]],"count":[[1,1]],"inputs":[["(atan2.f64 #s(literal 1 binary64) #s(approx (+ (* (+ 1 N) N) 1) #s(literal 1 binary64)))"]],"link":["."],"memory":[[2701600,2701600]],"name":["2atan (example 3.5)"],"oracle":[60.057922010139634],"outputs":[["(atan2.f64 #s(literal 1 binary64) #s(approx (+ (* (+ 1 N) N) 1) #s(literal 1 binary64)))"]],"repr":["binary64"],"time":2.85302734375,"times":[[1.2529296875,"(-.f64 (atan.f64 (+.f64 N #s(literal 1 binary64))) (atan.f64 N))"],[1.066162109375,"N"]],"type":"regimes"},{"egraph":[[6,71,71,0.000695856],[5,68,71,0.000713863],[4,65,71,0.000929286],[3,51,71,0.00086496],[2,42,71,0.000600091],[1,33,71,0.000552927],[0,25,71,0.000497891]],"inputs":[["(atan2.f64 #s(literal 1 binary64) (/.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64))))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (+.f64 #s(literal 1 binary64) N) N #s(literal 1 binary64)))","(atan2.f64 #s(literal 1 binary64) #s(approx (+ (* (+ 1 N) N) 1) (fma.f64 N N N)))","(atan2.f64 #s(literal 1 binary64) #s(approx (+ (* (+ 1 N) N) 1) (*.f64 N N)))","(atan2.f64 #s(literal 1 binary64) #s(approx (+ (* (+ 1 N) N) 1) (-.f64 N #s(literal -1 binary64))))","(atan2.f64 #s(literal 1 binary64) #s(approx (+ (* (+ 1 N) N) 1) #s(literal 1 binary64)))"]],"memory":[[-4460960,5544304]],"method":["egg-herbie"],"outputs":[["(atan2.f64 #s(literal 1 binary64) (/.f64 #s(literal 1 binary64) (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64))))","(atan2.f64 #s(literal 1 binary64) (pow.f64 (pow.f64 (fma.f64 (+.f64 N #s(literal 1 binary64)) N #s(literal 1 binary64)) #s(literal -1 binary64)) #s(literal -1 binary64)))","(atan2.f64 #s(literal 1 binary64) (fma.f64 (+.f64 #s(literal 1 binary64) N) N #s(literal 1 binary64)))","(atan2.f64 #s(literal 1 binary64) #s(approx (+ (* (+ 1 N) N) 1) (fma.f64 N N N)))","(atan2.f64 #s(literal 1 binary64) #s(approx (+ (* (+ 1 N) N) 1) (*.f64 N N)))","(atan2.f64 #s(literal 1 binary64) #s(approx (+ (* (+ 1 N) N) 1) (-.f64 N #s(literal -1 binary64))))","(atan2.f64 #s(literal 1 binary64) #s(approx (+ (* (+ 1 N) N) 1) #s(literal 1 binary64)))"]],"stop":[["saturated",1]],"time":15.823974609375,"type":"simplify"},{"compiler":[[71,26]],"memory":[[1331104,1331104]],"stop":[["fuel",1]],"time":2.237060546875,"type":"soundness"},{"compiler":[[71,26],[71,26],[8,5],[8,5],[7,6],[7,6]],"memory":[[3546128,27229504]],"remove-preprocessing":[[],[],[],[],[],[],[]],"time":44.088134765625,"type":"preprocess"},{"memory":[[2000,2000]],"time":0.02099609375,"type":"end"}]